<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="184" passed="183">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="8259" started-at="2018-05-29T07:57:41Z" finished-at="2018-05-29T07:57:50Z">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="8259" started-at="2018-05-29T07:57:41Z" finished-at="2018-05-29T07:57:50Z">
      <class name="io.swagger.parser.FileReferenceTest">
        <test-method status="PASS" signature="testAllOfFlatAndNested()[pri:0, instance:io.swagger.parser.FileReferenceTest@72bdd7c7]" name="testAllOfFlatAndNested" duration-ms="204" started-at="2018-05-29T09:57:42Z" finished-at="2018-05-29T09:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllOfFlatAndNested -->
        <test-method status="PASS" signature="testIssue289()[pri:0, instance:io.swagger.parser.FileReferenceTest@72bdd7c7]" name="testIssue289" duration-ms="52" started-at="2018-05-29T09:57:43Z" finished-at="2018-05-29T09:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue289 -->
        <test-method status="PASS" signature="testIssue304()[pri:0, instance:io.swagger.parser.FileReferenceTest@72bdd7c7]" name="testIssue304" duration-ms="9" started-at="2018-05-29T09:57:43Z" finished-at="2018-05-29T09:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue304 -->
        <test-method status="PASS" signature="testIssue306()[pri:0, instance:io.swagger.parser.FileReferenceTest@72bdd7c7]" name="testIssue306" duration-ms="28" started-at="2018-05-29T09:57:43Z" finished-at="2018-05-29T09:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue306 -->
        <test-method status="PASS" signature="testIssue308()[pri:0, instance:io.swagger.parser.FileReferenceTest@72bdd7c7]" name="testIssue308" duration-ms="12" started-at="2018-05-29T09:57:43Z" finished-at="2018-05-29T09:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue308 -->
        <test-method status="PASS" signature="testIssue310()[pri:0, instance:io.swagger.parser.FileReferenceTest@72bdd7c7]" name="testIssue310" duration-ms="10" started-at="2018-05-29T09:57:43Z" finished-at="2018-05-29T09:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue310 -->
        <test-method status="PASS" signature="testIssue312()[pri:0, instance:io.swagger.parser.FileReferenceTest@72bdd7c7]" name="testIssue312" duration-ms="14" started-at="2018-05-29T09:57:43Z" finished-at="2018-05-29T09:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue312 -->
        <test-method status="PASS" signature="testIssue314()[pri:0, instance:io.swagger.parser.FileReferenceTest@72bdd7c7]" name="testIssue314" duration-ms="11" started-at="2018-05-29T09:57:43Z" finished-at="2018-05-29T09:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue314 -->
        <test-method status="PASS" signature="testIssue316()[pri:0, instance:io.swagger.parser.FileReferenceTest@72bdd7c7]" name="testIssue316" duration-ms="10" started-at="2018-05-29T09:57:43Z" finished-at="2018-05-29T09:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue316 -->
        <test-method status="PASS" signature="testIssue323()[pri:0, instance:io.swagger.parser.FileReferenceTest@72bdd7c7]" name="testIssue323" duration-ms="10" started-at="2018-05-29T09:57:43Z" finished-at="2018-05-29T09:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue323 -->
        <test-method status="PASS" signature="testIssue336()[pri:0, instance:io.swagger.parser.FileReferenceTest@72bdd7c7]" name="testIssue336" duration-ms="37" started-at="2018-05-29T09:57:43Z" finished-at="2018-05-29T09:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue336 -->
        <test-method status="PASS" signature="testIssue340()[pri:0, instance:io.swagger.parser.FileReferenceTest@72bdd7c7]" name="testIssue340" duration-ms="20" started-at="2018-05-29T09:57:43Z" finished-at="2018-05-29T09:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue340 -->
        <test-method status="PASS" signature="testIssue421()[pri:0, instance:io.swagger.parser.FileReferenceTest@72bdd7c7]" name="testIssue421" duration-ms="335" started-at="2018-05-29T09:57:43Z" finished-at="2018-05-29T09:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue421 -->
        <test-method status="PASS" signature="testRelativeRefIssue421()[pri:0, instance:io.swagger.parser.FileReferenceTest@72bdd7c7]" name="testRelativeRefIssue421" duration-ms="6" started-at="2018-05-29T09:57:43Z" finished-at="2018-05-29T09:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRelativeRefIssue421 -->
      </class> <!-- io.swagger.parser.FileReferenceTest -->
      <class name="io.swagger.parser.util.SwaggerDeserializerTest">
        <test-method status="PASS" signature="testArrayModelDefinition()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testArrayModelDefinition" duration-ms="73" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArrayModelDefinition -->
        <test-method status="PASS" signature="testArrayQueryParam()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testArrayQueryParam" duration-ms="2" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArrayQueryParam -->
        <test-method status="PASS" signature="testArraySchema()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testArraySchema" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArraySchema -->
        <test-method status="PASS" signature="testContact()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testContact" duration-ms="0" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContact -->
        <test-method status="PASS" signature="testDefinitions()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testDefinitions" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinitions -->
        <test-method status="PASS" signature="testDeserializeBinaryString()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testDeserializeBinaryString" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeserializeBinaryString -->
        <test-method status="PASS" signature="testDeserializeEnum()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testDeserializeEnum" duration-ms="5" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeserializeEnum -->
        <test-method status="PASS" signature="testDeserializeWithBooleanEnumDiscriminator()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testDeserializeWithBooleanEnumDiscriminator" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeserializeWithBooleanEnumDiscriminator -->
        <test-method status="PASS" signature="testDeserializeWithDiscriminator()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testDeserializeWithDiscriminator" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeserializeWithDiscriminator -->
        <test-method status="PASS" signature="testDeserializeWithEnumDiscriminator()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testDeserializeWithEnumDiscriminator" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeserializeWithEnumDiscriminator -->
        <test-method status="PASS" signature="testDeserializeWithMessages()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testDeserializeWithMessages" duration-ms="0" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeserializeWithMessages -->
        <test-method status="PASS" signature="testDeserializeWithNumericEnumDiscriminator()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testDeserializeWithNumericEnumDiscriminator" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeserializeWithNumericEnumDiscriminator -->
        <test-method status="PASS" signature="testEmpty()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testEmpty" duration-ms="0" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmpty -->
        <test-method status="PASS" signature="testEmptyDefinitions()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testEmptyDefinitions" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyDefinitions -->
        <test-method status="PASS" signature="testIssue151()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testIssue151" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue151 -->
        <test-method status="PASS" signature="testIssue161()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testIssue161" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue161 -->
        <test-method status="PASS" signature="testIssue204_allOf()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testIssue204_allOf" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue204_allOf -->
        <test-method status="PASS" signature="testIssue247()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testIssue247" duration-ms="2" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue247 -->
        <test-method status="PASS" signature="testIssue343Parameter()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testIssue343Parameter" duration-ms="2" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue343Parameter -->
        <test-method status="PASS" signature="testIssue360()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testIssue360" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue360 -->
        <test-method status="PASS" signature="testIssue386()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testIssue386" duration-ms="2" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue386 -->
        <test-method status="PASS" signature="testIssue673ArrayProperties()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testIssue673ArrayProperties" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue673ArrayProperties -->
        <test-method status="PASS" signature="testIssue673NumericProperties()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testIssue673NumericProperties" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue673NumericProperties -->
        <test-method status="PASS" signature="testIssue673StringProperties()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testIssue673StringProperties" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue673StringProperties -->
        <test-method status="PASS" signature="testLicense()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testLicense" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLicense -->
        <test-method status="PASS" signature="testNestedDefinitions()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testNestedDefinitions" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNestedDefinitions -->
        <test-method status="PASS" signature="testPR246()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testPR246" duration-ms="2" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPR246 -->
        <test-method status="PASS" signature="testPaths()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testPaths" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPaths -->
        <test-method status="PASS" signature="testPathsWithRefResponse()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testPathsWithRefResponse" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPathsWithRefResponse -->
        <test-method status="PASS" signature="testResponses()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testResponses" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponses -->
        <test-method status="PASS" signature="testRootInfo()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testRootInfo" duration-ms="0" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRootInfo -->
        <test-method status="PASS" signature="testSchema()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testSchema" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSchema -->
        <test-method status="PASS" signature="testSecurity()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testSecurity" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSecurity -->
        <test-method status="PASS" signature="testSecurityDefinition()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testSecurityDefinition" duration-ms="0" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSecurityDefinition -->
        <test-method status="PASS" signature="testSecurityDefinitionWithMissingAttribute()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testSecurityDefinitionWithMissingAttribute" duration-ms="0" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSecurityDefinitionWithMissingAttribute -->
        <test-method status="PASS" signature="testSecurityDeserialization()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testSecurityDeserialization" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSecurityDeserialization -->
        <test-method status="PASS" signature="testToplevelExtension()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testToplevelExtension" duration-ms="0" started-at="2018-05-29T09:57:48Z" description="it should read a top-level extension per https://github.com/swagger-api/validator-badge/issues/59" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToplevelExtension -->
        <test-method status="PASS" signature="testUntypedAdditionalProperties()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testUntypedAdditionalProperties" duration-ms="1" started-at="2018-05-29T09:57:48Z" description="it should deserialize untyped additionalProperties" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUntypedAdditionalProperties -->
        <test-method status="PASS" signature="testValidatorIssue50()[pri:0, instance:io.swagger.parser.util.SwaggerDeserializerTest@1d858300]" name="testValidatorIssue50" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidatorIssue50 -->
      </class> <!-- io.swagger.parser.util.SwaggerDeserializerTest -->
      <class name="io.swagger.parser.util.ClasspathHelperTest">
        <test-method status="PASS" signature="testLoadFileFromClasspath()[pri:0, instance:io.swagger.parser.util.ClasspathHelperTest@6dd36ab6]" name="testLoadFileFromClasspath" duration-ms="2" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadFileFromClasspath -->
        <test-method status="PASS" signature="testLoadFileFromClasspath_DoesntExist()[pri:0, instance:io.swagger.parser.util.ClasspathHelperTest@6dd36ab6]" name="testLoadFileFromClasspath_DoesntExist" duration-ms="1" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:48Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Could not find nothing.txt on the classpath]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Could not find nothing.txt on the classpath
	at io.swagger.parser.util.ClasspathHelper.loadFileFromClasspath(ClasspathHelper.java:31)
	at io.swagger.parser.util.ClasspathHelperTest.testLoadFileFromClasspath_DoesntExist(ClasspathHelperTest.java:17)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:205)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:108)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadFileFromClasspath_DoesntExist -->
      </class> <!-- io.swagger.parser.util.ClasspathHelperTest -->
      <class name="io.swagger.parser.SwaggerParserTest">
        <test-method status="PASS" signature="checkAllOfAreTaken()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="checkAllOfAreTaken" duration-ms="94" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAllOfAreTaken -->
        <test-method status="PASS" signature="checkAllOfWithRelativeReferencesAreFound()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="checkAllOfWithRelativeReferencesAreFound" duration-ms="4" started-at="2018-05-29T09:57:44Z" description="Issue #616 Relative references inside of &#039;allOf&#039;" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAllOfWithRelativeReferencesAreFound -->
        <test-method status="PASS" signature="checkAllOfWithRelativeReferencesIssue604()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="checkAllOfWithRelativeReferencesIssue604" duration-ms="10" started-at="2018-05-29T09:57:44Z" description="Issue #616 Relative references inside of &#039;allOf&#039;" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAllOfWithRelativeReferencesIssue604 -->
        <test-method status="PASS" signature="readingSpecNodeShouldNotOverQuotingStringExample()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="readingSpecNodeShouldNotOverQuotingStringExample" duration-ms="20" started-at="2018-05-29T09:57:44Z" description="A string example should not be over quoted when parsing a yaml node" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readingSpecNodeShouldNotOverQuotingStringExample -->
        <test-method status="PASS" signature="readingSpecStringShouldNotOverQuotingStringExample()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="readingSpecStringShouldNotOverQuotingStringExample" duration-ms="2" started-at="2018-05-29T09:57:44Z" description="A string example should not be over quoted when parsing a yaml string" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readingSpecStringShouldNotOverQuotingStringExample -->
        <test-method status="PASS" signature="testCodegenIssue4555()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testCodegenIssue4555" duration-ms="2" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCodegenIssue4555 -->
        <test-method status="PASS" signature="testCodegenPetstore()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testCodegenPetstore" duration-ms="101" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCodegenPetstore -->
        <test-method status="PASS" signature="testConsumesAndProduces()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testConsumesAndProduces" duration-ms="1" started-at="2018-05-29T09:57:44Z" description="Test consumes and produces in top level and operation level" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConsumesAndProduces -->
        <test-method status="PASS" signature="testConverterIssue17()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testConverterIssue17" duration-ms="3" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConverterIssue17 -->
        <test-method status="PASS" signature="testDefinitionExample()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testDefinitionExample" duration-ms="7" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinitionExample -->
        <test-method status="PASS" signature="testFileReferenceWithVendorExt()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testFileReferenceWithVendorExt" duration-ms="3" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFileReferenceWithVendorExt -->
        <test-method status="PASS" signature="testIncompatibleRefs()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testIncompatibleRefs" duration-ms="2" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIncompatibleRefs -->
        <test-method status="PASS" signature="testIssue()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testIssue" duration-ms="2" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue -->
        <test-method status="PASS" signature="testIssue108()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testIssue108" duration-ms="2" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue108 -->
        <test-method status="PASS" signature="testIssue146()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testIssue146" duration-ms="4" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue146 -->
        <test-method status="PASS" signature="testIssue243()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testIssue243" duration-ms="2" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue243 -->
        <test-method status="PASS" signature="testIssue286()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testIssue286" duration-ms="15" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue286 -->
        <test-method status="PASS" signature="testIssue286WithModel()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testIssue286WithModel" duration-ms="6" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue286WithModel -->
        <test-method status="PASS" signature="testIssue292WithCSVCollectionFormat()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testIssue292WithCSVCollectionFormat" duration-ms="2" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue292WithCSVCollectionFormat -->
        <test-method status="PASS" signature="testIssue292WithNoCollectionFormat()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testIssue292WithNoCollectionFormat" duration-ms="2" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue292WithNoCollectionFormat -->
        <test-method status="PASS" signature="testIssue339()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testIssue339" duration-ms="68" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue339 -->
        <test-method status="PASS" signature="testIssue357()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testIssue357" duration-ms="2" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue357 -->
        <test-method status="PASS" signature="testIssue358()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testIssue358" duration-ms="2" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue358 -->
        <test-method status="PASS" signature="testIssue360()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testIssue360" duration-ms="4" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue360 -->
        <test-method status="PASS" signature="testIssue393()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testIssue393" duration-ms="2" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue393 -->
        <test-method status="PASS" signature="testIssue450()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testIssue450" duration-ms="2" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue450 -->
        <test-method status="PASS" signature="testIssue480()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testIssue480" duration-ms="7" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue480 -->
        <test-method status="PASS" signature="testIssue594()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testIssue594" duration-ms="1" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue594 -->
        <test-method status="PASS" signature="testIssue643()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testIssue643" duration-ms="4" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue643 -->
        <test-method status="PASS" signature="testIssue697()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testIssue697" duration-ms="4" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue697 -->
        <test-method status="FAIL" signature="testIssue704()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testIssue704" duration-ms="9" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Unable to load RELATIVE ref: ../schemas/schema.json path: /root/workspace/swagger-api/swagger-parser/385070560/modules/swagger-parser/src/test/resources/sample]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Unable to load RELATIVE ref: ../schemas/schema.json path: /root/workspace/swagger-api/swagger-parser/385070560/modules/swagger-parser/src/test/resources/sample
	at io.swagger.parser.util.RefUtils.readExternalRef(RefUtils.java:155)
	at io.swagger.parser.ResolverCache.loadRef(ResolverCache.java:115)
	at io.swagger.parser.processors.ExternalRefProcessor.processRefToExternalDefinition(ExternalRefProcessor.java:40)
	at io.swagger.parser.processors.PropertyProcessor.processRefProperty(PropertyProcessor.java:34)
	at io.swagger.parser.processors.PropertyProcessor.processProperty(PropertyProcessor.java:21)
	at io.swagger.parser.processors.ModelProcessor.processArrayModel(ModelProcessor.java:79)
	at io.swagger.parser.processors.ModelProcessor.processModel(ModelProcessor.java:35)
	at io.swagger.parser.processors.ResponseProcessor.processResponse(ResponseProcessor.java:23)
	at io.swagger.parser.processors.OperationProcessor.processOperation(OperationProcessor.java:45)
	at io.swagger.parser.processors.PathsProcessor.processPaths(PathsProcessor.java:101)
	at io.swagger.parser.SwaggerResolver.resolve(SwaggerResolver.java:50)
	at io.swagger.parser.SwaggerParser.read(SwaggerParser.java:71)
	at io.swagger.parser.SwaggerParser.read(SwaggerParser.java:58)
	at io.swagger.parser.SwaggerParserTest.testIssue704(SwaggerParserTest.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:205)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:108)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: java.lang.RuntimeException: Could not find ../schemas/schema.json on the classpath
	at io.swagger.parser.util.ClasspathHelper.loadFileFromClasspath(ClasspathHelper.java:31)
	at io.swagger.parser.util.RefUtils.readExternalRef(RefUtils.java:149)
	... 22 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue704 -->
        <test-method status="PASS" signature="testIssue75()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testIssue75" duration-ms="2" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue75 -->
        <test-method status="PASS" signature="testIssueGrace()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testIssueGrace" duration-ms="3" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssueGrace -->
        <test-method status="PASS" signature="testLoadExternalNestedDefinitions()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testLoadExternalNestedDefinitions" duration-ms="7" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadExternalNestedDefinitions -->
        <test-method status="PASS" signature="testLoadNestedItemsReferences()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testLoadNestedItemsReferences" duration-ms="7" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadNestedItemsReferences -->
        <test-method status="PASS" signature="testLoadRecursiveExternalDef()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testLoadRecursiveExternalDef" duration-ms="4" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadRecursiveExternalDef -->
        <test-method status="PASS" signature="testLoadRelativeFileTree_Json()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testLoadRelativeFileTree_Json" duration-ms="38" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadRelativeFileTree_Json -->
        <test-method status="PASS" signature="testLoadRelativeFileTree_Yaml()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testLoadRelativeFileTree_Yaml" duration-ms="194" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadRelativeFileTree_Yaml -->
        <test-method status="PASS" signature="testModelParameters()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testModelParameters" duration-ms="2" started-at="2018-05-29T09:57:45Z" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testModelParameters -->
        <test-method status="PASS" signature="testNPEIssue684()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testNPEIssue684" duration-ms="4" started-at="2018-05-29T09:57:45Z" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNPEIssue684 -->
        <test-method status="PASS" signature="testNestedReferences()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testNestedReferences" duration-ms="11" started-at="2018-05-29T09:57:45Z" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNestedReferences -->
        <test-method status="PASS" signature="testParameterRequired()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testParameterRequired" duration-ms="8" started-at="2018-05-29T09:57:45Z" description="Test (path &amp; form) parameter&#039;s required attribute" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParameterRequired -->
        <test-method status="PASS" signature="testParseRefPathParameters()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testParseRefPathParameters" duration-ms="2" started-at="2018-05-29T09:57:45Z" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseRefPathParameters -->
        <test-method status="PASS" signature="testParseSharedPathParameters()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testParseSharedPathParameters" duration-ms="2" started-at="2018-05-29T09:57:45Z" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseSharedPathParameters -->
        <test-method status="PASS" signature="testPetstore()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testPetstore" duration-ms="10" started-at="2018-05-29T09:57:45Z" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPetstore -->
        <test-method status="PASS" signature="testRefAdditionalProperties()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testRefAdditionalProperties" duration-ms="6" started-at="2018-05-29T09:57:45Z" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRefAdditionalProperties -->
        <test-method status="PASS" signature="testRefEnum()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testRefEnum" duration-ms="12" started-at="2018-05-29T09:57:45Z" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRefEnum -->
        <test-method status="PASS" signature="testRefNameConflicts()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testRefNameConflicts" duration-ms="5" started-at="2018-05-29T09:57:45Z" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRefNameConflicts -->
        <test-method status="PASS" signature="testRefPaths()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testRefPaths" duration-ms="1" started-at="2018-05-29T09:57:45Z" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRefPaths -->
        <test-method status="PASS" signature="testTroublesomeFile()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testTroublesomeFile" duration-ms="10" started-at="2018-05-29T09:57:45Z" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTroublesomeFile -->
        <test-method status="PASS" signature="testUniqueParameters()[pri:0, instance:io.swagger.parser.SwaggerParserTest@3878be7b]" name="testUniqueParameters" duration-ms="2" started-at="2018-05-29T09:57:45Z" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUniqueParameters -->
      </class> <!-- io.swagger.parser.SwaggerParserTest -->
      <class name="io.swagger.parser.AnchorTest">
        <test-method status="PASS" signature="testIssue146()[pri:0, instance:io.swagger.parser.AnchorTest@318c68d5]" name="testIssue146" duration-ms="1001" started-at="2018-05-29T09:57:41Z" finished-at="2018-05-29T09:57:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue146 -->
      </class> <!-- io.swagger.parser.AnchorTest -->
      <class name="io.swagger.parser.SwaggerParserExtensionTest">
        <test-method status="PASS" signature="verifyDefaultExtension()[pri:0, instance:io.swagger.parser.SwaggerParserExtensionTest@da28d03]" name="verifyDefaultExtension" duration-ms="1" started-at="2018-05-29T09:57:43Z" finished-at="2018-05-29T09:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDefaultExtension -->
      </class> <!-- io.swagger.parser.SwaggerParserExtensionTest -->
      <class name="io.swagger.parser.SwaggerReaderTest">
        <test-method status="PASS" signature="detectJson()[pri:0, instance:io.swagger.parser.SwaggerReaderTest@4cfa83f9]" name="detectJson" duration-ms="2" started-at="2018-05-29T09:57:45Z" description="it should detect json" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectJson -->
        <test-method status="PASS" signature="detectYaml()[pri:0, instance:io.swagger.parser.SwaggerReaderTest@4cfa83f9]" name="detectYaml" duration-ms="2" started-at="2018-05-29T09:57:45Z" description="it should detect yaml" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectYaml -->
        <test-method status="PASS" signature="readSimpleExampleWithMinimumValues()[pri:0, instance:io.swagger.parser.SwaggerReaderTest@4cfa83f9]" name="readSimpleExampleWithMinimumValues" duration-ms="2" started-at="2018-05-29T09:57:45Z" description="it should read the simple example with minimum values" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readSimpleExampleWithMinimumValues -->
        <test-method status="PASS" signature="readSimpleExampleWithModelExtensions()[pri:0, instance:io.swagger.parser.SwaggerReaderTest@4cfa83f9]" name="readSimpleExampleWithModelExtensions" duration-ms="2" started-at="2018-05-29T09:57:45Z" description="it should read the simple example with model extensions" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readSimpleExampleWithModelExtensions -->
        <test-method status="PASS" signature="readUberApi()[pri:0, instance:io.swagger.parser.SwaggerReaderTest@4cfa83f9]" name="readUberApi" duration-ms="4" started-at="2018-05-29T09:57:45Z" description="it should read the uber api" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readUberApi -->
        <test-method status="PASS" signature="readUberApiFromFile()[pri:0, instance:io.swagger.parser.SwaggerReaderTest@4cfa83f9]" name="readUberApiFromFile" duration-ms="6" started-at="2018-05-29T09:57:45Z" description="it should read the uber api with file scheme" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readUberApiFromFile -->
        <test-method status="PASS" signature="readUberApiFromFileNoScheme()[pri:0, instance:io.swagger.parser.SwaggerReaderTest@4cfa83f9]" name="readUberApiFromFileNoScheme" duration-ms="5" started-at="2018-05-29T09:57:45Z" description="it should read the uber api with url string without file scheme" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readUberApiFromFileNoScheme -->
        <test-method status="PASS" signature="readUberApiFromFileUri()[pri:0, instance:io.swagger.parser.SwaggerReaderTest@4cfa83f9]" name="readUberApiFromFileUri" duration-ms="5" started-at="2018-05-29T09:57:45Z" description="it should read the uber api from File URI" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readUberApiFromFileUri -->
        <test-method status="PASS" signature="readUberApiFromFileWithSpaces()[pri:0, instance:io.swagger.parser.SwaggerReaderTest@4cfa83f9]" name="readUberApiFromFileWithSpaces" duration-ms="4" started-at="2018-05-29T09:57:45Z" description="it should read the uber api with file scheme and spaces" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readUberApiFromFileWithSpaces -->
        <test-method status="PASS" signature="readUberApiFromPathUri()[pri:0, instance:io.swagger.parser.SwaggerReaderTest@4cfa83f9]" name="readUberApiFromPathUri" duration-ms="4" started-at="2018-05-29T09:57:45Z" description="it should read the uber api from Path URI" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readUberApiFromPathUri -->
        <test-method status="PASS" signature="testIssue1261InlineSchemaExample()[pri:0, instance:io.swagger.parser.SwaggerReaderTest@4cfa83f9]" name="testIssue1261InlineSchemaExample" duration-ms="4" started-at="2018-05-29T09:57:45Z" description="it should read an example within an inlined schema" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue1261InlineSchemaExample -->
        <test-method status="PASS" signature="testIssue136()[pri:0, instance:io.swagger.parser.SwaggerReaderTest@4cfa83f9]" name="testIssue136" duration-ms="187" started-at="2018-05-29T09:57:45Z" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue136 -->
        <test-method status="PASS" signature="testIssue16()[pri:0, instance:io.swagger.parser.SwaggerReaderTest@4cfa83f9]" name="testIssue16" duration-ms="3" started-at="2018-05-29T09:57:45Z" description="it should read the issue 16 resource" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue16 -->
        <test-method status="PASS" signature="testIssue192()[pri:0, instance:io.swagger.parser.SwaggerReaderTest@4cfa83f9]" name="testIssue192" duration-ms="2" started-at="2018-05-29T09:57:45Z" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue192 -->
        <test-method status="PASS" signature="testIssue205()[pri:0, instance:io.swagger.parser.SwaggerReaderTest@4cfa83f9]" name="testIssue205" duration-ms="0" started-at="2018-05-29T09:57:45Z" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue205 -->
        <test-method status="PASS" signature="testIssue206()[pri:0, instance:io.swagger.parser.SwaggerReaderTest@4cfa83f9]" name="testIssue206" duration-ms="0" started-at="2018-05-29T09:57:45Z" description="issue 206, not supported yet" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue206 -->
        <test-method status="PASS" signature="testIssue207()[pri:0, instance:io.swagger.parser.SwaggerReaderTest@4cfa83f9]" name="testIssue207" duration-ms="1" started-at="2018-05-29T09:57:45Z" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue207 -->
        <test-method status="PASS" signature="testIssue208()[pri:0, instance:io.swagger.parser.SwaggerReaderTest@4cfa83f9]" name="testIssue208" duration-ms="0" started-at="2018-05-29T09:57:45Z" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue208 -->
        <test-method status="PASS" signature="testIssue277()[pri:0, instance:io.swagger.parser.SwaggerReaderTest@4cfa83f9]" name="testIssue277" duration-ms="3" started-at="2018-05-29T09:57:45Z" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue277 -->
        <test-method status="PASS" signature="testIssue364()[pri:0, instance:io.swagger.parser.SwaggerReaderTest@4cfa83f9]" name="testIssue364" duration-ms="1" started-at="2018-05-29T09:57:45Z" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue364 -->
        <test-method status="PASS" signature="testIssue469()[pri:0, instance:io.swagger.parser.SwaggerReaderTest@4cfa83f9]" name="testIssue469" duration-ms="4" started-at="2018-05-29T09:57:45Z" description="it should test https://github.com/swagger-api/swagger-codegen/issues/469" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue469 -->
        <test-method status="PASS" signature="testIssue59()[pri:0, instance:io.swagger.parser.SwaggerReaderTest@4cfa83f9]" name="testIssue59" duration-ms="9" started-at="2018-05-29T09:57:45Z" description="it should read the issue 59 resource" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue59 -->
        <test-method status="PASS" signature="testIssueSwaggerUi1792()[pri:0, instance:io.swagger.parser.SwaggerReaderTest@4cfa83f9]" name="testIssueSwaggerUi1792" duration-ms="2" started-at="2018-05-29T09:57:45Z" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssueSwaggerUi1792 -->
      </class> <!-- io.swagger.parser.SwaggerReaderTest -->
      <class name="io.swagger.parser.util.PathUtilTest">
        <test-method status="PASS" signature="testGetParentDirectoryOfFile()[pri:0, instance:io.swagger.parser.util.PathUtilTest@5be052ca]" name="testGetParentDirectoryOfFile" duration-ms="0" started-at="2018-05-29T09:57:50Z" finished-at="2018-05-29T09:57:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetParentDirectoryOfFile -->
      </class> <!-- io.swagger.parser.util.PathUtilTest -->
      <class name="io.swagger.parser.processors.ModelProcessorTest">
        <test-method status="PASS" signature="testProcessArrayModel(io.swagger.models.properties.Property)[pri:0, instance:io.swagger.parser.processors.ModelProcessorTest@294f9d50]" name="testProcessArrayModel" duration-ms="217" started-at="2018-05-29T09:57:46Z" finished-at="2018-05-29T09:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessArrayModel -->
        <test-method status="PASS" signature="testProcessComposedModel()[pri:0, instance:io.swagger.parser.processors.ModelProcessorTest@294f9d50]" name="testProcessComposedModel" duration-ms="9" started-at="2018-05-29T09:57:46Z" finished-at="2018-05-29T09:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessComposedModel -->
        <test-method status="PASS" signature="testProcessModelImpl(io.swagger.models.properties.Property, io.swagger.models.properties.Property)[pri:0, instance:io.swagger.parser.processors.ModelProcessorTest@294f9d50]" name="testProcessModelImpl" duration-ms="4" started-at="2018-05-29T09:57:46Z" finished-at="2018-05-29T09:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessModelImpl -->
        <test-method status="PASS" signature="testProcessRefModel_ExternalRef()[pri:0, instance:io.swagger.parser.processors.ModelProcessorTest@294f9d50]" name="testProcessRefModel_ExternalRef" duration-ms="3" started-at="2018-05-29T09:57:46Z" finished-at="2018-05-29T09:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessRefModel_ExternalRef -->
        <test-method status="PASS" signature="testProcessRefModel_InternalRef()[pri:0, instance:io.swagger.parser.processors.ModelProcessorTest@294f9d50]" name="testProcessRefModel_InternalRef" duration-ms="1" started-at="2018-05-29T09:57:46Z" finished-at="2018-05-29T09:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessRefModel_InternalRef -->
      </class> <!-- io.swagger.parser.processors.ModelProcessorTest -->
      <class name="io.swagger.parser.ResponseResolverTest">
        <test-method status="PASS" signature="testIssue211()[pri:0, instance:io.swagger.parser.ResponseResolverTest@321ca237]" name="testIssue211" duration-ms="26" started-at="2018-05-29T09:57:46Z" finished-at="2018-05-29T09:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue211 -->
      </class> <!-- io.swagger.parser.ResponseResolverTest -->
      <class name="io.swagger.parser.util.HostAuthorizationValueTest">
        <test-method status="PASS" signature="testExactMatcher()[pri:0, instance:io.swagger.parser.util.HostAuthorizationValueTest@2007435e]" name="testExactMatcher" duration-ms="0" started-at="2018-05-29T09:57:50Z" finished-at="2018-05-29T09:57:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExactMatcher -->
        <test-method status="PASS" signature="testPatternMatcher()[pri:0, instance:io.swagger.parser.util.HostAuthorizationValueTest@2007435e]" name="testPatternMatcher" duration-ms="1" started-at="2018-05-29T09:57:50Z" finished-at="2018-05-29T09:57:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPatternMatcher -->
      </class> <!-- io.swagger.parser.util.HostAuthorizationValueTest -->
      <class name="io.swagger.parser.processors.ParameterProcessorTest">
        <test-method status="PASS" signature="testProcessParameters_BodyParameter(io.swagger.models.Model)[pri:0, instance:io.swagger.parser.processors.ParameterProcessorTest@682abca7]" name="testProcessParameters_BodyParameter" duration-ms="131" started-at="2018-05-29T09:57:47Z" finished-at="2018-05-29T09:57:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessParameters_BodyParameter -->
        <test-method status="PASS" signature="testProcessParameters_RefToBodyParam(io.swagger.models.Model)[pri:0, instance:io.swagger.parser.processors.ParameterProcessorTest@682abca7]" name="testProcessParameters_RefToBodyParam" duration-ms="4" started-at="2018-05-29T09:57:47Z" finished-at="2018-05-29T09:57:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessParameters_RefToBodyParam -->
        <test-method status="PASS" signature="testProcessParameters_RefToHeader(io.swagger.models.parameters.HeaderParameter)[pri:0, instance:io.swagger.parser.processors.ParameterProcessorTest@682abca7]" name="testProcessParameters_RefToHeader" duration-ms="186" started-at="2018-05-29T09:57:47Z" finished-at="2018-05-29T09:57:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessParameters_RefToHeader -->
        <test-method status="PASS" signature="testProcessParameters_TypesThatAreNotRefOrBody(io.swagger.models.parameters.HeaderParameter, io.swagger.models.parameters.QueryParameter, io.swagger.models.parameters.CookieParameter, io.swagger.models.parameters.PathParameter, io.swagger.models.parameters.FormParameter)[pri:0, instance:io.swagger.parser.processors.ParameterProcessorTest@682abca7]" name="testProcessParameters_TypesThatAreNotRefOrBody" duration-ms="432" started-at="2018-05-29T09:57:47Z" finished-at="2018-05-29T09:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessParameters_TypesThatAreNotRefOrBody -->
      </class> <!-- io.swagger.parser.processors.ParameterProcessorTest -->
      <class name="io.swagger.parser.processors.OperationProcessorTest">
        <test-method status="PASS" signature="testProcessOperation(java.util.List, java.util.List, io.swagger.models.Response, io.swagger.models.Response)[pri:0, instance:io.swagger.parser.processors.OperationProcessorTest@759de304]" name="testProcessOperation" duration-ms="409" started-at="2018-05-29T09:57:45Z" finished-at="2018-05-29T09:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessOperation -->
      </class> <!-- io.swagger.parser.processors.OperationProcessorTest -->
      <class name="io.swagger.parser.util.RemoteUrlTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="setUp" is-config="true" duration-ms="782" started-at="2018-05-29T09:57:48Z" finished-at="2018-05-29T09:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAppendQueryParam()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="testAppendQueryParam" duration-ms="513" started-at="2018-05-29T09:57:49Z" finished-at="2018-05-29T09:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppendQueryParam -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="tearDown" is-config="true" duration-ms="14" started-at="2018-05-29T09:57:49Z" finished-at="2018-05-29T09:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="setUp" is-config="true" duration-ms="19" started-at="2018-05-29T09:57:49Z" finished-at="2018-05-29T09:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAuthorizationHeader()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="testAuthorizationHeader" duration-ms="57" started-at="2018-05-29T09:57:49Z" finished-at="2018-05-29T09:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAuthorizationHeader -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="tearDown" is-config="true" duration-ms="5" started-at="2018-05-29T09:57:49Z" finished-at="2018-05-29T09:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="setUp" is-config="true" duration-ms="17" started-at="2018-05-29T09:57:49Z" finished-at="2018-05-29T09:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAuthorizationQueryParam()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="testAuthorizationQueryParam" duration-ms="47" started-at="2018-05-29T09:57:49Z" finished-at="2018-05-29T09:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAuthorizationQueryParam -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="tearDown" is-config="true" duration-ms="6" started-at="2018-05-29T09:57:49Z" finished-at="2018-05-29T09:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="setUp" is-config="true" duration-ms="18" started-at="2018-05-29T09:57:49Z" finished-at="2018-05-29T09:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="tearDown" is-config="true" duration-ms="5" started-at="2018-05-29T09:57:49Z" finished-at="2018-05-29T09:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testCleanUrl()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="testCleanUrl" duration-ms="0" started-at="2018-05-29T09:57:49Z" finished-at="2018-05-29T09:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCleanUrl -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="setUp" is-config="true" duration-ms="17" started-at="2018-05-29T09:57:49Z" finished-at="2018-05-29T09:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testHostHeader()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="testHostHeader" duration-ms="57" started-at="2018-05-29T09:57:49Z" finished-at="2018-05-29T09:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHostHeader -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="tearDown" is-config="true" duration-ms="4" started-at="2018-05-29T09:57:49Z" finished-at="2018-05-29T09:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="setUp" is-config="true" duration-ms="10" started-at="2018-05-29T09:57:49Z" finished-at="2018-05-29T09:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testHostQueryParam()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="testHostQueryParam" duration-ms="43" started-at="2018-05-29T09:57:49Z" finished-at="2018-05-29T09:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHostQueryParam -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="tearDown" is-config="true" duration-ms="3" started-at="2018-05-29T09:57:49Z" finished-at="2018-05-29T09:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="setUp" is-config="true" duration-ms="13" started-at="2018-05-29T09:57:49Z" finished-at="2018-05-29T09:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testReadARemoteUrl()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="testReadARemoteUrl" duration-ms="53" started-at="2018-05-29T09:57:49Z" finished-at="2018-05-29T09:57:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadARemoteUrl -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="tearDown" is-config="true" duration-ms="4" started-at="2018-05-29T09:57:50Z" finished-at="2018-05-29T09:57:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="setUp" is-config="true" duration-ms="17" started-at="2018-05-29T09:57:50Z" finished-at="2018-05-29T09:57:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSkippedHeader()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="testSkippedHeader" duration-ms="46" started-at="2018-05-29T09:57:50Z" finished-at="2018-05-29T09:57:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSkippedHeader -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="tearDown" is-config="true" duration-ms="6" started-at="2018-05-29T09:57:50Z" finished-at="2018-05-29T09:57:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="setUp" is-config="true" duration-ms="11" started-at="2018-05-29T09:57:50Z" finished-at="2018-05-29T09:57:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSkippedQueryParam()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="testSkippedQueryParam" duration-ms="43" started-at="2018-05-29T09:57:50Z" finished-at="2018-05-29T09:57:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSkippedQueryParam -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:io.swagger.parser.util.RemoteUrlTest@7c20cdd0]" name="tearDown" is-config="true" duration-ms="3" started-at="2018-05-29T09:57:50Z" finished-at="2018-05-29T09:57:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- io.swagger.parser.util.RemoteUrlTest -->
      <class name="io.swagger.parser.processors.DefinitionsProcessorTest">
        <test-method status="PASS" signature="testDefinitionsProcessor(io.swagger.models.Model, io.swagger.models.Model, io.swagger.parser.ResolverCache)[pri:0, instance:io.swagger.parser.processors.DefinitionsProcessorTest@3ddb774f]" name="testDefinitionsProcessor" duration-ms="96" started-at="2018-05-29T09:57:46Z" finished-at="2018-05-29T09:57:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinitionsProcessor -->
        <test-method status="PASS" signature="testDefinitionsProcessor_RefModelInDefinitionsMap(io.swagger.models.Model)[pri:0, instance:io.swagger.parser.processors.DefinitionsProcessorTest@3ddb774f]" name="testDefinitionsProcessor_RefModelInDefinitionsMap" duration-ms="54" started-at="2018-05-29T09:57:47Z" finished-at="2018-05-29T09:57:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinitionsProcessor_RefModelInDefinitionsMap -->
        <test-method status="PASS" signature="testNoDefinitionsDefined(io.swagger.models.Swagger, io.swagger.parser.ResolverCache)[pri:0, instance:io.swagger.parser.processors.DefinitionsProcessorTest@3ddb774f]" name="testNoDefinitionsDefined" duration-ms="55" started-at="2018-05-29T09:57:47Z" finished-at="2018-05-29T09:57:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoDefinitionsDefined -->
      </class> <!-- io.swagger.parser.processors.DefinitionsProcessorTest -->
      <class name="io.swagger.parser.RelativeReferenceTest">
        <test-method status="PASS" signature="testIssue213()[pri:0, instance:io.swagger.parser.RelativeReferenceTest@7df28f1]" name="testIssue213" duration-ms="140" started-at="2018-05-29T09:57:46Z" finished-at="2018-05-29T09:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue213 -->
        <test-method status="PASS" signature="testIssue409()[pri:0, instance:io.swagger.parser.RelativeReferenceTest@7df28f1]" name="testIssue409" duration-ms="4" started-at="2018-05-29T09:57:46Z" finished-at="2018-05-29T09:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue409 -->
      </class> <!-- io.swagger.parser.RelativeReferenceTest -->
      <class name="io.swagger.parser.NetworkReferenceTest">
        <test-method status="PASS" signature="testIssue323()[pri:0, instance:io.swagger.parser.NetworkReferenceTest@4087c7fc]" name="testIssue323" duration-ms="58" started-at="2018-05-29T09:57:46Z" finished-at="2018-05-29T09:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue323 -->
        <test-method status="PASS" signature="testIssue328()[pri:0, instance:io.swagger.parser.NetworkReferenceTest@4087c7fc]" name="testIssue328" duration-ms="7" started-at="2018-05-29T09:57:46Z" finished-at="2018-05-29T09:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue328 -->
        <test-method status="PASS" signature="testIssue330()[pri:0, instance:io.swagger.parser.NetworkReferenceTest@4087c7fc]" name="testIssue330" duration-ms="10" started-at="2018-05-29T09:57:46Z" finished-at="2018-05-29T09:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue330 -->
        <test-method status="PASS" signature="testIssue335()[pri:0, instance:io.swagger.parser.NetworkReferenceTest@4087c7fc]" name="testIssue335" duration-ms="6" started-at="2018-05-29T09:57:46Z" finished-at="2018-05-29T09:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue335 -->
        <test-method status="PASS" signature="testIssue411()[pri:0, instance:io.swagger.parser.NetworkReferenceTest@4087c7fc]" name="testIssue411" duration-ms="52" started-at="2018-05-29T09:57:46Z" finished-at="2018-05-29T09:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue411 -->
        <test-method status="PASS" signature="testPathReference()[pri:0, instance:io.swagger.parser.NetworkReferenceTest@4087c7fc]" name="testPathReference" duration-ms="8" started-at="2018-05-29T09:57:46Z" finished-at="2018-05-29T09:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPathReference -->
      </class> <!-- io.swagger.parser.NetworkReferenceTest -->
      <class name="io.swagger.parser.processors.PropertyProcessorTest">
        <test-method status="PASS" signature="testProcessArrayProperty_ItemsIsRefProperty()[pri:0, instance:io.swagger.parser.processors.PropertyProcessorTest@405b6d75]" name="testProcessArrayProperty_ItemsIsRefProperty" duration-ms="89" started-at="2018-05-29T09:57:47Z" finished-at="2018-05-29T09:57:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessArrayProperty_ItemsIsRefProperty -->
        <test-method status="PASS" signature="testProcessMapProperty_AdditionalPropertiesIsRefProperty()[pri:0, instance:io.swagger.parser.processors.PropertyProcessorTest@405b6d75]" name="testProcessMapProperty_AdditionalPropertiesIsRefProperty" duration-ms="2" started-at="2018-05-29T09:57:47Z" finished-at="2018-05-29T09:57:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessMapProperty_AdditionalPropertiesIsRefProperty -->
        <test-method status="PASS" signature="testProcessRefProperty_ExternalRef()[pri:0, instance:io.swagger.parser.processors.PropertyProcessorTest@405b6d75]" name="testProcessRefProperty_ExternalRef" duration-ms="2" started-at="2018-05-29T09:57:47Z" finished-at="2018-05-29T09:57:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessRefProperty_ExternalRef -->
        <test-method status="PASS" signature="testProcessRefProperty_InternalRef()[pri:0, instance:io.swagger.parser.processors.PropertyProcessorTest@405b6d75]" name="testProcessRefProperty_InternalRef" duration-ms="1" started-at="2018-05-29T09:57:47Z" finished-at="2018-05-29T09:57:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessRefProperty_InternalRef -->
      </class> <!-- io.swagger.parser.processors.PropertyProcessorTest -->
      <class name="io.swagger.parser.processors.ResponseProcessorTest">
        <test-method status="PASS" signature="testProcessResponse(io.swagger.models.Model, io.swagger.models.properties.Property)[pri:0, instance:io.swagger.parser.processors.ResponseProcessorTest@5649d11a]" name="testProcessResponse" duration-ms="164" started-at="2018-05-29T09:57:46Z" finished-at="2018-05-29T09:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessResponse -->
      </class> <!-- io.swagger.parser.processors.ResponseProcessorTest -->
      <class name="io.swagger.parser.LocalReferenceTest">
        <test-method status="PASS" signature="testAuth()[pri:0, instance:io.swagger.parser.LocalReferenceTest@4c5a2baf]" name="testAuth" duration-ms="40" started-at="2018-05-29T09:57:46Z" finished-at="2018-05-29T09:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAuth -->
      </class> <!-- io.swagger.parser.LocalReferenceTest -->
      <class name="io.swagger.parser.processors.ExternalRefProcessorTest">
        <test-method status="PASS" signature="testNestedExternalRefs(io.swagger.models.Model)[pri:0, instance:io.swagger.parser.processors.ExternalRefProcessorTest@27443560]" name="testNestedExternalRefs" duration-ms="148" started-at="2018-05-29T09:57:46Z" finished-at="2018-05-29T09:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNestedExternalRefs -->
        <test-method status="PASS" signature="testProcessRefToExternalDefinition_NoNameConflict(io.swagger.models.Model)[pri:0, instance:io.swagger.parser.processors.ExternalRefProcessorTest@27443560]" name="testProcessRefToExternalDefinition_NoNameConflict" duration-ms="3" started-at="2018-05-29T09:57:46Z" finished-at="2018-05-29T09:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessRefToExternalDefinition_NoNameConflict -->
      </class> <!-- io.swagger.parser.processors.ExternalRefProcessorTest -->
      <class name="io.swagger.parser.ResolverCacheTest">
        <test-method status="PASS" signature="testLoadExternalRefWithEscapedCharacters()[pri:0, instance:io.swagger.parser.ResolverCacheTest@f0020b1]" name="testLoadExternalRefWithEscapedCharacters" duration-ms="480" started-at="2018-05-29T09:57:43Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadExternalRefWithEscapedCharacters -->
        <test-method status="PASS" signature="testLoadExternalRef_NoDefinitionPath(io.swagger.models.Model)[pri:0, instance:io.swagger.parser.ResolverCacheTest@f0020b1]" name="testLoadExternalRef_NoDefinitionPath" duration-ms="29" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadExternalRef_NoDefinitionPath -->
        <test-method status="PASS" signature="testLoadInternalDefinitionRef(io.swagger.models.Model)[pri:0, instance:io.swagger.parser.ResolverCacheTest@f0020b1]" name="testLoadInternalDefinitionRef" duration-ms="1" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadInternalDefinitionRef -->
        <test-method status="PASS" signature="testLoadInternalDefinitionRefWithEscapedCharacters(io.swagger.models.Model)[pri:0, instance:io.swagger.parser.ResolverCacheTest@f0020b1]" name="testLoadInternalDefinitionRefWithEscapedCharacters" duration-ms="1" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadInternalDefinitionRefWithEscapedCharacters -->
        <test-method status="PASS" signature="testLoadInternalDefinitionRefWithSpaces(io.swagger.models.Model)[pri:0, instance:io.swagger.parser.ResolverCacheTest@f0020b1]" name="testLoadInternalDefinitionRefWithSpaces" duration-ms="1" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadInternalDefinitionRefWithSpaces -->
        <test-method status="PASS" signature="testLoadInternalParameterRef(io.swagger.models.parameters.Parameter)[pri:0, instance:io.swagger.parser.ResolverCacheTest@f0020b1]" name="testLoadInternalParameterRef" duration-ms="20" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadInternalParameterRef -->
        <test-method status="PASS" signature="testLoadInternalParameterRefWithSpaces(io.swagger.models.parameters.Parameter)[pri:0, instance:io.swagger.parser.ResolverCacheTest@f0020b1]" name="testLoadInternalParameterRefWithSpaces" duration-ms="1" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadInternalParameterRefWithSpaces -->
        <test-method status="PASS" signature="testLoadInternalResponseRef(io.swagger.models.Response)[pri:0, instance:io.swagger.parser.ResolverCacheTest@f0020b1]" name="testLoadInternalResponseRef" duration-ms="39" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadInternalResponseRef -->
        <test-method status="PASS" signature="testLoadInternalResponseRefWithSpaces(io.swagger.models.Response)[pri:0, instance:io.swagger.parser.ResolverCacheTest@f0020b1]" name="testLoadInternalResponseRefWithSpaces" duration-ms="18" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadInternalResponseRefWithSpaces -->
        <test-method status="PASS" signature="testMock(io.swagger.models.Model)[pri:0, instance:io.swagger.parser.ResolverCacheTest@f0020b1]" name="testMock" duration-ms="8" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMock -->
        <test-method status="PASS" signature="testRenameCache()[pri:0, instance:io.swagger.parser.ResolverCacheTest@f0020b1]" name="testRenameCache" duration-ms="1" started-at="2018-05-29T09:57:44Z" finished-at="2018-05-29T09:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRenameCache -->
      </class> <!-- io.swagger.parser.ResolverCacheTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
