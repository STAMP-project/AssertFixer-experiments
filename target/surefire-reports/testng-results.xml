<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="82" ignored="0" total="2727" passed="2645">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="1434720" started-at="2018-05-26T18:46:38Z" finished-at="2018-05-26T19:10:33Z">
    <groups>
      <group name="ignored">
        <method signature="RealTest.testRoberto4()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testRoberto4" class="org.chocosolver.solver.constraints.real.RealTest"/>
      </group> <!-- ignored -->
      <group name="1s">
        <method signature="AbstractVariableTest.testCancel1()[pri:0, instance:org.chocosolver.solver.variables.impl.AbstractVariableTest@71b7e9c8]" name="testCancel1" class="org.chocosolver.solver.variables.impl.AbstractVariableTest"/>
        <method signature="AbstractVariableTest.testSubscribe1()[pri:0, instance:org.chocosolver.solver.variables.impl.AbstractVariableTest@71b7e9c8]" name="testSubscribe1" class="org.chocosolver.solver.variables.impl.AbstractVariableTest"/>
        <method signature="AbstractVariableTest.testSubscribe2()[pri:0, instance:org.chocosolver.solver.variables.impl.AbstractVariableTest@71b7e9c8]" name="testSubscribe2" class="org.chocosolver.solver.variables.impl.AbstractVariableTest"/>
        <method signature="AllDifferentTest.alreadyDifferent()[pri:0, instance:org.chocosolver.solver.constraints.set.AllDifferentTest@5020e5ab]" name="alreadyDifferent" class="org.chocosolver.solver.constraints.set.AllDifferentTest"/>
        <method signature="AllDifferentTest.oneElement()[pri:0, instance:org.chocosolver.solver.constraints.set.AllDifferentTest@5020e5ab]" name="oneElement" class="org.chocosolver.solver.constraints.set.AllDifferentTest"/>
        <method signature="AllDifferentTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.AllDifferentTest@1cdad619]" name="test1" class="org.chocosolver.solver.constraints.nary.AllDifferentTest"/>
        <method signature="AllDifferentTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.AllDifferentTest@1cdad619]" name="test2" class="org.chocosolver.solver.constraints.nary.AllDifferentTest"/>
        <method signature="AllDifferentTest.test3()[pri:0, instance:org.chocosolver.solver.constraints.nary.AllDifferentTest@1cdad619]" name="test3" class="org.chocosolver.solver.constraints.nary.AllDifferentTest"/>
        <method signature="AllDifferentTest.test4()[pri:0, instance:org.chocosolver.solver.constraints.nary.AllDifferentTest@1cdad619]" name="test4" class="org.chocosolver.solver.constraints.nary.AllDifferentTest"/>
        <method signature="AllDifferentTest.testB()[pri:0, instance:org.chocosolver.solver.constraints.nary.AllDifferentTest@1cdad619]" name="testB" class="org.chocosolver.solver.constraints.nary.AllDifferentTest"/>
        <method signature="AllDifferentTest.testB1()[pri:0, instance:org.chocosolver.solver.constraints.nary.AllDifferentTest@1cdad619]" name="testB1" class="org.chocosolver.solver.constraints.nary.AllDifferentTest"/>
        <method signature="AllDifferentTest.testE()[pri:0, instance:org.chocosolver.solver.constraints.nary.AllDifferentTest@1cdad619]" name="testE" class="org.chocosolver.solver.constraints.nary.AllDifferentTest"/>
        <method signature="AllDifferentTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.AllDifferentTest@5020e5ab]" name="testNominal" class="org.chocosolver.solver.constraints.set.AllDifferentTest"/>
        <method signature="AllDifferentTest.testXX()[pri:0, instance:org.chocosolver.solver.constraints.nary.AllDifferentTest@1cdad619]" name="testXX" class="org.chocosolver.solver.constraints.nary.AllDifferentTest"/>
        <method signature="AllDifferentTest.testXXX()[pri:0, instance:org.chocosolver.solver.constraints.nary.AllDifferentTest@1cdad619]" name="testXXX" class="org.chocosolver.solver.constraints.nary.AllDifferentTest"/>
        <method signature="AllDisjointTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.AllDisjointTest@5b324447]" name="testNominal" class="org.chocosolver.solver.constraints.set.AllDisjointTest"/>
        <method signature="AllDisjointTest.testTrivialFalse()[pri:0, instance:org.chocosolver.solver.constraints.set.AllDisjointTest@5b324447]" name="testTrivialFalse" class="org.chocosolver.solver.constraints.set.AllDisjointTest"/>
        <method signature="AllDisjointTest.testTrivialTrue()[pri:0, instance:org.chocosolver.solver.constraints.set.AllDisjointTest@5b324447]" name="testTrivialTrue" class="org.chocosolver.solver.constraints.set.AllDisjointTest"/>
        <method signature="AmongTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.AmongTest@8091d80]" name="test2" class="org.chocosolver.solver.constraints.nary.AmongTest"/>
        <method signature="AmongTest.test3()[pri:0, instance:org.chocosolver.solver.constraints.nary.AmongTest@8091d80]" name="test3" class="org.chocosolver.solver.constraints.nary.AmongTest"/>
        <method signature="AmongTest.test4()[pri:0, instance:org.chocosolver.solver.constraints.nary.AmongTest@8091d80]" name="test4" class="org.chocosolver.solver.constraints.nary.AmongTest"/>
        <method signature="ArrayUtilsTest.testAppend()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testAppend" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testAppend1()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testAppend1" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testAppend3()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testAppend3" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testAppend4()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testAppend4" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testArray()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testArray" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testArray2()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testArray2" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testArray3()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testArray3" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testBinarySearchInc1()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testBinarySearchInc1" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testContains()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testContains" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testCreateNonRedundantSortedValues()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testCreateNonRedundantSortedValues" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testFlatten()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testFlatten" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testFlatten1()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testFlatten1" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testFlatten2()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testFlatten2" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testFlattenSubMatrix()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testFlattenSubMatrix" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testGet()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testGet" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testGet1()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testGet1" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testGetColumn()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testGetColumn" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testGetColumn1()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testGetColumn1" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testGetColumn3()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testGetColumn3" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testGetColumn4()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testGetColumn4" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testGetColumn5()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testGetColumn5" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testGetColumn6()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testGetColumn6" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testInverseSign()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testInverseSign" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testLength()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testLength" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testLinspace()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testLinspace" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testLinspace2()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testLinspace2" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testOneToN()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testOneToN" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testOneToN2()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testOneToN2" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testPermutation()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testPermutation" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testReverse()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testReverse" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testReverse1()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testReverse1" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testReverse2()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testReverse2" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testSort()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testSort" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testSwallowCopy()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testSwallowCopy" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testSwallowCopy1()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testSwallowCopy1" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testTranspose()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testTranspose" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testTranspose1()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testTranspose1" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testZeroToN()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testZeroToN" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.testZeroToN2()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testZeroToN2" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="ArrayUtilsTest.toArray()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="toArray" class="org.chocosolver.util.tools.ArrayUtilsTest"/>
        <method signature="AtMost1EmptyTest.testNoEmptySet()[pri:0, instance:org.chocosolver.solver.constraints.set.AtMost1EmptyTest@19f99aaf]" name="testNoEmptySet" class="org.chocosolver.solver.constraints.set.AtMost1EmptyTest"/>
        <method signature="AtMost1EmptyTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.AtMost1EmptyTest@19f99aaf]" name="testNominal" class="org.chocosolver.solver.constraints.set.AtMost1EmptyTest"/>
        <method signature="AtMost1EmptyTest.testOneEmptySet()[pri:0, instance:org.chocosolver.solver.constraints.set.AtMost1EmptyTest@19f99aaf]" name="testOneEmptySet" class="org.chocosolver.solver.constraints.set.AtMost1EmptyTest"/>
        <method signature="AtMost1EmptyTest.twoEmptySets()[pri:0, instance:org.chocosolver.solver.constraints.set.AtMost1EmptyTest@19f99aaf]" name="twoEmptySets" class="org.chocosolver.solver.constraints.set.AtMost1EmptyTest"/>
        <method signature="BacktrackableSetTest.testAddRemoveReturnValue(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testAddRemoveReturnValue" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testAddRemoveReturnValue(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testAddRemoveReturnValue" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testAddRemoveReturnValue(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testAddRemoveReturnValue" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testAddRemoveReturnValue(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testAddRemoveReturnValue" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testNominal(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testNominal" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testNominal(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testNominal" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testNominal(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testNominal" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testNominal(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testNominal" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testPopUntilZero(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testPopUntilZero" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testPopUntilZero(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testPopUntilZero" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testPopUntilZero(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testPopUntilZero" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testPopUntilZero(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testPopUntilZero" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testRemoveInLoop(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testRemoveInLoop" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testRemoveInLoop(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testRemoveInLoop" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testRemoveInLoop(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testRemoveInLoop" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testRemoveInLoop(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testRemoveInLoop" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testSeveralPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testSeveralPushes" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testSeveralPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testSeveralPushes" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testSeveralPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testSeveralPushes" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testSeveralPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testSeveralPushes" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testTwoPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testTwoPushes" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testTwoPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testTwoPushes" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testTwoPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testTwoPushes" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testTwoPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testTwoPushes" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testTwoSets(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testTwoSets" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testTwoSets(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testTwoSets" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testTwoSets(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testTwoSets" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testTwoSets(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testTwoSets" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testVoidPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testVoidPushes" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testVoidPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testVoidPushes" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testVoidPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testVoidPushes" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.testVoidPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testVoidPushes" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BasicIndexBipartiteSetTest.testBasicIndexedBipartiteSet(org.chocosolver.memory.trailing.EnvironmentTrailing)[pri:0, instance:org.chocosolver.memory.BasicIndexBipartiteSetTest@2911db81]" name="testBasicIndexedBipartiteSet" class="org.chocosolver.memory.BasicIndexBipartiteSetTest"/>
        <method signature="BinPackingTest.test2(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.BinPackingTest@319058ce]" name="test2" class="org.chocosolver.solver.constraints.nary.BinPackingTest"/>
        <method signature="BinPackingTest.test3(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.BinPackingTest@319058ce]" name="test3" class="org.chocosolver.solver.constraints.nary.BinPackingTest"/>
        <method signature="BinPackingTest.testFixedLoadBackPropag()[pri:0, instance:org.chocosolver.solver.constraints.nary.BinPackingTest@319058ce]" name="testFixedLoadBackPropag" class="org.chocosolver.solver.constraints.nary.BinPackingTest"/>
        <method signature="BinTableTest.test2(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.BinTableTest@74919649]" name="test2" class="org.chocosolver.solver.constraints.binary.BinTableTest"/>
        <method signature="BinTableTest.test3(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.BinTableTest@74919649]" name="test3" class="org.chocosolver.solver.constraints.binary.BinTableTest"/>
        <method signature="BinTableTest.testAbsolute(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.BinTableTest@74919649]" name="testAbsolute" class="org.chocosolver.solver.constraints.binary.BinTableTest"/>
        <method signature="BinTableTest.testArithmLT(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.BinTableTest@74919649]" name="testArithmLT" class="org.chocosolver.solver.constraints.binary.BinTableTest"/>
        <method signature="BinTableTest.testArithmNQ(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.BinTableTest@74919649]" name="testArithmNQ" class="org.chocosolver.solver.constraints.binary.BinTableTest"/>
        <method signature="BinTableTest.testFeas1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.BinTableTest@74919649]" name="testFeas1" class="org.chocosolver.solver.constraints.binary.BinTableTest"/>
        <method signature="BinTableTest.testInfeas1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.BinTableTest@74919649]" name="testInfeas1" class="org.chocosolver.solver.constraints.binary.BinTableTest"/>
        <method signature="BitsIntChannelingTest.testEmptyArray()[pri:0, instance:org.chocosolver.solver.constraints.nary.BitsIntChannelingTest@3909308c]" name="testEmptyArray" class="org.chocosolver.solver.constraints.nary.BitsIntChannelingTest"/>
        <method signature="BitsIntChannelingTest.testFree()[pri:0, instance:org.chocosolver.solver.constraints.nary.BitsIntChannelingTest@3909308c]" name="testFree" class="org.chocosolver.solver.constraints.nary.BitsIntChannelingTest"/>
        <method signature="BitsIntChannelingTest.testNegativeValue()[pri:0, instance:org.chocosolver.solver.constraints.nary.BitsIntChannelingTest@3909308c]" name="testNegativeValue" class="org.chocosolver.solver.constraints.nary.BitsIntChannelingTest"/>
        <method signature="BitsIntChannelingTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.nary.BitsIntChannelingTest@3909308c]" name="testNominal" class="org.chocosolver.solver.constraints.nary.BitsIntChannelingTest"/>
        <method signature="BitsIntChannelingTest.testNominalReverse()[pri:0, instance:org.chocosolver.solver.constraints.nary.BitsIntChannelingTest@3909308c]" name="testNominalReverse" class="org.chocosolver.solver.constraints.nary.BitsIntChannelingTest"/>
        <method signature="BitsIntChannelingTest.testNotEnoughDigits()[pri:0, instance:org.chocosolver.solver.constraints.nary.BitsIntChannelingTest@3909308c]" name="testNotEnoughDigits" class="org.chocosolver.solver.constraints.nary.BitsIntChannelingTest"/>
        <method signature="BitsIntChannelingTest.testOneUnknownBit()[pri:0, instance:org.chocosolver.solver.constraints.nary.BitsIntChannelingTest@3909308c]" name="testOneUnknownBit" class="org.chocosolver.solver.constraints.nary.BitsIntChannelingTest"/>
        <method signature="BitsIntChannelingTest.testTooSmallBound()[pri:0, instance:org.chocosolver.solver.constraints.nary.BitsIntChannelingTest@3909308c]" name="testTooSmallBound" class="org.chocosolver.solver.constraints.nary.BitsIntChannelingTest"/>
        <method signature="BitsetArrayIntVarImplTest.testGetDomainSize()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testGetDomainSize" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testGetLB()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testGetLB" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testGetRangeIterator()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testGetRangeIterator" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testGetTypeAndKind()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testGetTypeAndKind" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testGetUB()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testGetUB" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testGetValueIterator()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testGetValueIterator" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testHasEnumeratedDomain()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testHasEnumeratedDomain" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testJL01()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testJL01" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testJL02()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testJL02" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testJL03()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testJL03" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testJL04()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testJL04" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testNextOut1()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testNextOut1" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testNextOut2()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testNextOut2" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testNextOut3()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testNextOut3" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testNextValue()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testNextValue" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testPreviousOut1()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testPreviousOut1" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testPreviousOut2()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testPreviousOut2" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testPreviousOut3()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testPreviousOut3" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testPreviousValue()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testPreviousValue" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemVals0()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals0" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemVals1()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals1" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemVals11()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals11" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemVals12()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals12" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemVals13()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals13" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemVals14()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals14" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemVals15()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals15" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemVals21()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals21" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemVals22()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals22" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemVals3()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals3" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemVals31()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals31" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemVals41()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals41" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemVals42()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals42" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemVals5()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals5" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemVals6()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals6" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemVals7()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals7" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemVals81()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals81" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemVals82()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals82" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemValsBut0()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut0" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemValsBut1()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut1" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemValsBut11()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut11" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemValsBut12()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut12" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemValsBut13()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut13" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemValsBut14()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut14" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemValsBut15()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut15" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemValsBut21()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut21" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemValsBut22()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut22" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemValsBut3()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut3" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemValsBut41()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut41" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemValsBut42()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut42" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemValsBut5()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut5" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemValsBut6()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut6" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemValsBut7()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut7" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemValsBut8()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut8" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemValsBut9()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut9" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemoveInterval()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemoveInterval" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testRemoveValue()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemoveValue" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testUpdBounds1()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdBounds1" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testUpdBounds10()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdBounds10" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testUpdBounds11()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdBounds11" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testUpdBounds2()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdBounds2" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testUpdBounds3()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdBounds3" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testUpdBounds4()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdBounds4" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testUpdBounds5()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdBounds5" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testUpdBounds6()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdBounds6" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testUpdBounds7()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdBounds7" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testUpdBounds8()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdBounds8" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testUpdBounds9()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdBounds9" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testUpdateLowerBound()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdateLowerBound" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetArrayIntVarImplTest.testUpdateUpperBound()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdateUpperBound" class="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testGetDomainSize()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testGetDomainSize" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testGetLB()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testGetLB" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testGetRangeIterator()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testGetRangeIterator" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testGetTypeAndKind()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testGetTypeAndKind" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testGetUB()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testGetUB" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testGetValueIterator()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testGetValueIterator" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testHasEnumeratedDomain()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testHasEnumeratedDomain" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testJL1()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testJL1" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testJL2()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testJL2" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testJL3()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testJL3" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testNextOut1()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testNextOut1" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testNextOut2()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testNextOut2" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testNextOut3()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testNextOut3" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testNextValue()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testNextValue" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testPreviousOut1()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testPreviousOut1" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testPreviousOut2()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testPreviousOut2" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testPreviousOut3()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testPreviousOut3" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testPreviousValue()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testPreviousValue" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemVals0()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals0" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemVals1()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals1" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemVals11()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals11" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemVals12()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals12" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemVals13()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals13" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemVals14()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals14" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemVals15()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals15" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemVals21()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals21" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemVals22()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals22" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemVals3()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals3" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemVals31()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals31" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemVals41()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals41" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemVals42()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals42" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemVals5()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals5" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemVals6()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals6" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemVals7()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals7" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemValsBut0()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut0" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemValsBut1()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut1" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemValsBut11()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut11" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemValsBut12()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut12" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemValsBut13()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut13" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemValsBut14()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut14" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemValsBut15()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut15" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemValsBut21()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut21" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemValsBut22()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut22" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemValsBut3()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut3" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemValsBut41()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut41" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemValsBut42()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut42" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemValsBut5()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut5" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemValsBut6()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut6" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemValsBut7()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut7" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemValsBut8()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut8" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemValsBut9()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut9" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemoveInterval()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemoveInterval" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testRemoveValue()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemoveValue" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testUpdBounds1()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdBounds1" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testUpdBounds10()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdBounds10" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testUpdBounds11()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdBounds11" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testUpdBounds2()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdBounds2" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testUpdBounds3()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdBounds3" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testUpdBounds4()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdBounds4" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testUpdBounds5()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdBounds5" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testUpdBounds6()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdBounds6" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testUpdBounds7()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdBounds7" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testUpdBounds8()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdBounds8" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testUpdBounds9()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdBounds9" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testUpdateLowerBound()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdateLowerBound" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BitsetIntVarImplTest.testUpdateUpperBound()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdateUpperBound" class="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest"/>
        <method signature="BoolChannelTest.testBooleansFixed()[pri:0, instance:org.chocosolver.solver.constraints.set.BoolChannelTest@629de8]" name="testBooleansFixed" class="org.chocosolver.solver.constraints.set.BoolChannelTest"/>
        <method signature="BoolChannelTest.testNoChannelingPossible()[pri:0, instance:org.chocosolver.solver.constraints.set.BoolChannelTest@629de8]" name="testNoChannelingPossible" class="org.chocosolver.solver.constraints.set.BoolChannelTest"/>
        <method signature="BoolChannelTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.BoolChannelTest@629de8]" name="testNominal" class="org.chocosolver.solver.constraints.set.BoolChannelTest"/>
        <method signature="BoolChannelTest.testNominalMZN()[pri:0, instance:org.chocosolver.solver.constraints.set.BoolChannelTest@629de8]" name="testNominalMZN" class="org.chocosolver.solver.constraints.set.BoolChannelTest"/>
        <method signature="BoolChannelTest.testSetFixed()[pri:0, instance:org.chocosolver.solver.constraints.set.BoolChannelTest@629de8]" name="testSetFixed" class="org.chocosolver.solver.constraints.set.BoolChannelTest"/>
        <method signature="BoolNotViewTest.test1()[pri:0, instance:org.chocosolver.solver.variables.BoolNotViewTest@5008559a]" name="test1" class="org.chocosolver.solver.variables.BoolNotViewTest"/>
        <method signature="BoolNotViewTest.testIt()[pri:0, instance:org.chocosolver.solver.variables.BoolNotViewTest@5008559a]" name="testIt" class="org.chocosolver.solver.variables.BoolNotViewTest"/>
        <method signature="BoolNotViewTest.testPrevNext()[pri:0, instance:org.chocosolver.solver.variables.BoolNotViewTest@5008559a]" name="testPrevNext" class="org.chocosolver.solver.variables.BoolNotViewTest"/>
        <method signature="BoolVarImplTest.testGetDomainSize()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testGetDomainSize" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testGetLB()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testGetLB" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testGetRangeIterator()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testGetRangeIterator" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testGetTypeAndKind()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testGetTypeAndKind" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testGetUB()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testGetUB" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testGetValueIterator()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testGetValueIterator" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testHasEnumeratedDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testHasEnumeratedDomain" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testNextOut1()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testNextOut1" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testNextOut2()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testNextOut2" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testNextValue()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testNextValue" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testPreviousOut1()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testPreviousOut1" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testPreviousOut2()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testPreviousOut2" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testPreviousValue()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testPreviousValue" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testRemVals1()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemVals1" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testRemVals21()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemVals21" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testRemVals22()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemVals22" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testRemVals3()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemVals3" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testRemVals31()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemVals31" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testRemVals41()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemVals41" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testRemVals42()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemVals42" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testRemVals5()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemVals5" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testRemValsBut1()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemValsBut1" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testRemValsBut21()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemValsBut21" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testRemValsBut22()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemValsBut22" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testRemValsBut3()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemValsBut3" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testRemValsBut31()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemValsBut31" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testRemValsBut41()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemValsBut41" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testRemValsBut42()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemValsBut42" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testRemoveInterval()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemoveInterval" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testRemoveValue()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemoveValue" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testUpdBounds1()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testUpdBounds1" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testUpdBounds2()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testUpdBounds2" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testUpdBounds3()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testUpdBounds3" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testUpdBounds4()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testUpdBounds4" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testUpdBounds5()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testUpdBounds5" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testUpdateLowerBound()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testUpdateLowerBound" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolVarImplTest.testUpdateUpperBound()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testUpdateUpperBound" class="org.chocosolver.solver.variables.impl.BoolVarImplTest"/>
        <method signature="BoolsIntChannelingTest.testAllFalse(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testAllFalse" class="org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest"/>
        <method signature="BoolsIntChannelingTest.testDifferentDomains(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testDifferentDomains" class="org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest"/>
        <method signature="BoolsIntChannelingTest.testEmptyArray(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testEmptyArray" class="org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest"/>
        <method signature="BoolsIntChannelingTest.testInstantiatedIndex(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testInstantiatedIndex" class="org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest"/>
        <method signature="BoolsIntChannelingTest.testNominal(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testNominal" class="org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest"/>
        <method signature="BoolsIntChannelingTest.testOutOfBoundsKO(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testOutOfBoundsKO" class="org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest"/>
        <method signature="BoolsIntChannelingTest.testOutOfBoundsOK(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testOutOfBoundsOK" class="org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest"/>
        <method signature="BoolsIntChannelingTest.testTwoTrue(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testTwoTrue" class="org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest"/>
        <method signature="BoundGlobalCardinalityTest.test0()[pri:0, instance:org.chocosolver.solver.constraints.nary.BoundGlobalCardinalityTest@1238a074]" name="test0" class="org.chocosolver.solver.constraints.nary.BoundGlobalCardinalityTest"/>
        <method signature="CNFTest.testJGF()[pri:0, instance:org.chocosolver.solver.constraints.nary.CNFTest@3b6c740b]" name="testJGF" class="org.chocosolver.solver.constraints.nary.CNFTest"/>
        <method signature="CPProfilerTest.test1()[pri:0, instance:org.chocosolver.solver.search.loop.monitors.CPProfilerTest@6a0ee80]" name="test1" class="org.chocosolver.solver.search.loop.monitors.CPProfilerTest"/>
        <method signature="CPProfilerTest.test2()[pri:0, instance:org.chocosolver.solver.search.loop.monitors.CPProfilerTest@6a0ee80]" name="test2" class="org.chocosolver.solver.search.loop.monitors.CPProfilerTest"/>
        <method signature="CPProfilerTest.test3()[pri:0, instance:org.chocosolver.solver.search.loop.monitors.CPProfilerTest@6a0ee80]" name="test3" class="org.chocosolver.solver.search.loop.monitors.CPProfilerTest"/>
        <method signature="CardinalityTest.testEmpty()[pri:0, instance:org.chocosolver.solver.constraints.set.CardinalityTest@19f1f330]" name="testEmpty" class="org.chocosolver.solver.constraints.set.CardinalityTest"/>
        <method signature="CardinalityTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.CardinalityTest@19f1f330]" name="testNominal" class="org.chocosolver.solver.constraints.set.CardinalityTest"/>
        <method signature="CardinalityTest.testTwoVariables()[pri:0, instance:org.chocosolver.solver.constraints.set.CardinalityTest@19f1f330]" name="testTwoVariables" class="org.chocosolver.solver.constraints.set.CardinalityTest"/>
        <method signature="CardinalityTest.testUnfeasibleLB()[pri:0, instance:org.chocosolver.solver.constraints.set.CardinalityTest@19f1f330]" name="testUnfeasibleLB" class="org.chocosolver.solver.constraints.set.CardinalityTest"/>
        <method signature="CardinalityTest.testUnfeasibleUB()[pri:0, instance:org.chocosolver.solver.constraints.set.CardinalityTest@19f1f330]" name="testUnfeasibleUB" class="org.chocosolver.solver.constraints.set.CardinalityTest"/>
        <method signature="CircuitTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.CircuitTest@78f4d15d]" name="test1" class="org.chocosolver.solver.constraints.nary.CircuitTest"/>
        <method signature="CircuitTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.CircuitTest@78f4d15d]" name="test2" class="org.chocosolver.solver.constraints.nary.CircuitTest"/>
        <method signature="CircuitTest.test3()[pri:0, instance:org.chocosolver.solver.constraints.nary.CircuitTest@78f4d15d]" name="test3" class="org.chocosolver.solver.constraints.nary.CircuitTest"/>
        <method signature="CircuitTest.test4()[pri:0, instance:org.chocosolver.solver.constraints.nary.CircuitTest@78f4d15d]" name="test4" class="org.chocosolver.solver.constraints.nary.CircuitTest"/>
        <method signature="CircularQueueTest.testClear()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testClear" class="org.chocosolver.util.objects.queues.CircularQueueTest"/>
        <method signature="CircularQueueTest.testCover()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testCover" class="org.chocosolver.util.objects.queues.CircularQueueTest"/>
        <method signature="CircularQueueTest.testEquals()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testEquals" class="org.chocosolver.util.objects.queues.CircularQueueTest"/>
        <method signature="CircularQueueTest.testGet()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testGet" class="org.chocosolver.util.objects.queues.CircularQueueTest"/>
        <method signature="CircularQueueTest.testIndexOf()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testIndexOf" class="org.chocosolver.util.objects.queues.CircularQueueTest"/>
        <method signature="CircularQueueTest.testNoElement()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testNoElement" class="org.chocosolver.util.objects.queues.CircularQueueTest"/>
        <method signature="CircularQueueTest.testNominal()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testNominal" class="org.chocosolver.util.objects.queues.CircularQueueTest"/>
        <method signature="CircularQueueTest.testRemove()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testRemove" class="org.chocosolver.util.objects.queues.CircularQueueTest"/>
        <method signature="CircularQueueTest.testRemoveElement()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testRemoveElement" class="org.chocosolver.util.objects.queues.CircularQueueTest"/>
        <method signature="CircularQueueTest.testRemoveNoSuchElement()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testRemoveNoSuchElement" class="org.chocosolver.util.objects.queues.CircularQueueTest"/>
        <method signature="CircularQueueTest.testSameElement()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testSameElement" class="org.chocosolver.util.objects.queues.CircularQueueTest"/>
        <method signature="CircularQueueTest.testSeveralIterationsMultipleElements()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testSeveralIterationsMultipleElements" class="org.chocosolver.util.objects.queues.CircularQueueTest"/>
        <method signature="CircularQueueTest.testSeveralIterationsOneElement()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testSeveralIterationsOneElement" class="org.chocosolver.util.objects.queues.CircularQueueTest"/>
        <method signature="ClauseTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test2" class="org.chocosolver.solver.constraints.ClauseTest"/>
        <method signature="ClauseTest.test30()[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test30" class="org.chocosolver.solver.constraints.ClauseTest"/>
        <method signature="ClauseTest.test31()[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test31" class="org.chocosolver.solver.constraints.ClauseTest"/>
        <method signature="ClauseTest.test32()[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test32" class="org.chocosolver.solver.constraints.ClauseTest"/>
        <method signature="ClauseTest.test33()[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test33" class="org.chocosolver.solver.constraints.ClauseTest"/>
        <method signature="ClauseTest.test4()[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test4" class="org.chocosolver.solver.constraints.ClauseTest"/>
        <method signature="ClauseTest.test6()[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test6" class="org.chocosolver.solver.constraints.ClauseTest"/>
        <method signature="ClauseTest.testBothAnd()[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="testBothAnd" class="org.chocosolver.solver.constraints.ClauseTest"/>
        <method signature="ClauseTest.testBothOr()[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="testBothOr" class="org.chocosolver.solver.constraints.ClauseTest"/>
        <method signature="ConflictOrderingSearchTest.cosTest()[pri:0, instance:org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest@50b4e7b2]" name="cosTest" class="org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest"/>
        <method signature="ConflictOrderingSearchTest.testM1()[pri:0, instance:org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest@50b4e7b2]" name="testM1" class="org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest"/>
        <method signature="ConflictOrderingSearchTest.testM2()[pri:0, instance:org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest@50b4e7b2]" name="testM2" class="org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest"/>
        <method signature="ConflictOrderingSearchTest.testStampIt1()[pri:0, instance:org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest@50b4e7b2]" name="testStampIt1" class="org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest"/>
        <method signature="ConflictOrderingSearchTest.testStampIt2()[pri:0, instance:org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest@50b4e7b2]" name="testStampIt2" class="org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest"/>
        <method signature="ConflictOrderingSearchTest.testStampIt3()[pri:0, instance:org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest@50b4e7b2]" name="testStampIt3" class="org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest"/>
        <method signature="ConflictOrderingSearchTest.testfirstNotInst()[pri:0, instance:org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest@50b4e7b2]" name="testfirstNotInst" class="org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest"/>
        <method signature="ConstantSetTest.testAdd()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.ConstantSetTest@28515443]" name="testAdd" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.ConstantSetTest"/>
        <method signature="ConstantSetTest.testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.ConstantSetTest@28515443]" name="testClear" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.ConstantSetTest"/>
        <method signature="ConstantSetTest.testDuplicates()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.ConstantSetTest@28515443]" name="testDuplicates" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.ConstantSetTest"/>
        <method signature="ConstantSetTest.testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.ConstantSetTest@28515443]" name="testIterator" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.ConstantSetTest"/>
        <method signature="ConstantSetTest.testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.ConstantSetTest@28515443]" name="testRemove" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.ConstantSetTest"/>
        <method signature="ConstantSetTest.testSize()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.ConstantSetTest@28515443]" name="testSize" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.ConstantSetTest"/>
        <method signature="ConstantSetsTest.testCstArraySet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.ConstantSetsTest@61b76a7d]" name="testCstArraySet" class="org.chocosolver.util.objects.setDataStructures.backtrackable.ConstantSetsTest"/>
        <method signature="ConstantSetsTest.testCstIntervalSet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.ConstantSetsTest@61b76a7d]" name="testCstIntervalSet" class="org.chocosolver.util.objects.setDataStructures.backtrackable.ConstantSetsTest"/>
        <method signature="ConstraintTest.testAmIMeYet()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testAmIMeYet" class="org.chocosolver.solver.constraints.ConstraintTest"/>
        <method signature="ConstraintTest.testBooleanChannelingJL()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testBooleanChannelingJL" class="org.chocosolver.solver.constraints.ConstraintTest"/>
        <method signature="ConstraintTest.testDependencyConditions()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testDependencyConditions" class="org.chocosolver.solver.constraints.ConstraintTest"/>
        <method signature="ConstraintTest.testDependencyConditions2()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testDependencyConditions2" class="org.chocosolver.solver.constraints.ConstraintTest"/>
        <method signature="ConstraintTest.testJiTee1()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testJiTee1" class="org.chocosolver.solver.constraints.ConstraintTest"/>
        <method signature="ConstraintTest.testJiTee2()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testJiTee2" class="org.chocosolver.solver.constraints.ConstraintTest"/>
        <method signature="ConstraintTest.testOpposite1()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testOpposite1" class="org.chocosolver.solver.constraints.ConstraintTest"/>
        <method signature="ConstraintTest.testOpposite2()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testOpposite2" class="org.chocosolver.solver.constraints.ConstraintTest"/>
        <method signature="ConstraintTest.testOpposite3()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testOpposite3" class="org.chocosolver.solver.constraints.ConstraintTest"/>
        <method signature="ConstraintTest.testPostAndReif1()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testPostAndReif1" class="org.chocosolver.solver.constraints.ConstraintTest"/>
        <method signature="ConstraintTest.testPostAndReif2()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testPostAndReif2" class="org.chocosolver.solver.constraints.ConstraintTest"/>
        <method signature="ConstraintTest.testPostRemove1()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testPostRemove1" class="org.chocosolver.solver.constraints.ConstraintTest"/>
        <method signature="ConstraintTest.testPostRemove2()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testPostRemove2" class="org.chocosolver.solver.constraints.ConstraintTest"/>
        <method signature="ConstraintTest.testPostRemove3()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testPostRemove3" class="org.chocosolver.solver.constraints.ConstraintTest"/>
        <method signature="ConstraintTest.testPostRemove4()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testPostRemove4" class="org.chocosolver.solver.constraints.ConstraintTest"/>
        <method signature="ConstraintTest.testPostTwice1()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testPostTwice1" class="org.chocosolver.solver.constraints.ConstraintTest"/>
        <method signature="ConstraintTest.testPostTwice2()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testPostTwice2" class="org.chocosolver.solver.constraints.ConstraintTest"/>
        <method signature="ConstraintTest.testPostUnpostPost1()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testPostUnpostPost1" class="org.chocosolver.solver.constraints.ConstraintTest"/>
        <method signature="ConstraintTest.testUnlink1()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testUnlink1" class="org.chocosolver.solver.constraints.ConstraintTest"/>
        <method signature="ConstraintTest.testUnpost(java.lang.String)[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testUnpost" class="org.chocosolver.solver.constraints.ConstraintTest"/>
        <method signature="CostRegularTest.testJM1()[pri:0, instance:org.chocosolver.solver.constraints.nary.CostRegularTest@7169d668]" name="testJM1" class="org.chocosolver.solver.constraints.nary.CostRegularTest"/>
        <method signature="CostRegularTest.testSimpleAuto()[pri:0, instance:org.chocosolver.solver.constraints.nary.CostRegularTest@7169d668]" name="testSimpleAuto" class="org.chocosolver.solver.constraints.nary.CostRegularTest"/>
        <method signature="CostRegularTest.testSimpleAutoCostAutomaton()[pri:0, instance:org.chocosolver.solver.constraints.nary.CostRegularTest@7169d668]" name="testSimpleAutoCostAutomaton" class="org.chocosolver.solver.constraints.nary.CostRegularTest"/>
        <method signature="CountTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.CountTest@7bd1098]" name="test2" class="org.chocosolver.solver.constraints.nary.CountTest"/>
        <method signature="CountTest.test2VB()[pri:0, instance:org.chocosolver.solver.constraints.nary.CountTest@7bd1098]" name="test2VB" class="org.chocosolver.solver.constraints.nary.CountTest"/>
        <method signature="CountTest.test2VE()[pri:0, instance:org.chocosolver.solver.constraints.nary.CountTest@7bd1098]" name="test2VE" class="org.chocosolver.solver.constraints.nary.CountTest"/>
        <method signature="CountTest.testMS4()[pri:0, instance:org.chocosolver.solver.constraints.nary.CountTest@7bd1098]" name="testMS4" class="org.chocosolver.solver.constraints.nary.CountTest"/>
        <method signature="CountTest.testMS8()[pri:0, instance:org.chocosolver.solver.constraints.nary.CountTest@7bd1098]" name="testMS8" class="org.chocosolver.solver.constraints.nary.CountTest"/>
        <method signature="CryptoTest.testCS71234(java.lang.String)[pri:0, instance:org.chocosolver.solver.constraints.nary.CryptoTest@640a6d4b]" name="testCS71234" class="org.chocosolver.solver.constraints.nary.CryptoTest"/>
        <method signature="CumulativeTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.CumulativeTest@259c6ab8]" name="test1" class="org.chocosolver.solver.constraints.nary.CumulativeTest"/>
        <method signature="CumulativeTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.CumulativeTest@259c6ab8]" name="test2" class="org.chocosolver.solver.constraints.nary.CumulativeTest"/>
        <method signature="CumulativeTest.test3()[pri:0, instance:org.chocosolver.solver.constraints.nary.CumulativeTest@259c6ab8]" name="test3" class="org.chocosolver.solver.constraints.nary.CumulativeTest"/>
        <method signature="CumulativeTest.test4()[pri:0, instance:org.chocosolver.solver.constraints.nary.CumulativeTest@259c6ab8]" name="test4" class="org.chocosolver.solver.constraints.nary.CumulativeTest"/>
        <method signature="CumulativeTest.test5()[pri:0, instance:org.chocosolver.solver.constraints.nary.CumulativeTest@259c6ab8]" name="test5" class="org.chocosolver.solver.constraints.nary.CumulativeTest"/>
        <method signature="CumulativeTest.testDur0()[pri:0, instance:org.chocosolver.solver.constraints.nary.CumulativeTest@259c6ab8]" name="testDur0" class="org.chocosolver.solver.constraints.nary.CumulativeTest"/>
        <method signature="DecisionMakerTest.testMakeIntDecision()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionMakerTest@1642968c]" name="testMakeIntDecision" class="org.chocosolver.solver.search.strategy.decision.DecisionMakerTest"/>
        <method signature="DecisionMakerTest.testMakeRealDecision()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionMakerTest@1642968c]" name="testMakeRealDecision" class="org.chocosolver.solver.search.strategy.decision.DecisionMakerTest"/>
        <method signature="DecisionMakerTest.testMakeSetDecision()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionMakerTest@1642968c]" name="testMakeSetDecision" class="org.chocosolver.solver.search.strategy.decision.DecisionMakerTest"/>
        <method signature="DecisionMakerTest.testSerializeIntDecision()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionMakerTest@1642968c]" name="testSerializeIntDecision" class="org.chocosolver.solver.search.strategy.decision.DecisionMakerTest"/>
        <method signature="DecisionMakerTest.testSerializeSetDecision()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionMakerTest@1642968c]" name="testSerializeSetDecision" class="org.chocosolver.solver.search.strategy.decision.DecisionMakerTest"/>
        <method signature="DecisionPathTest.testApply()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="testApply" class="org.chocosolver.solver.search.strategy.decision.DecisionPathTest"/>
        <method signature="DecisionPathTest.testGetDecision1()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="testGetDecision1" class="org.chocosolver.solver.search.strategy.decision.DecisionPathTest"/>
        <method signature="DecisionPathTest.testGetDecision2()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="testGetDecision2" class="org.chocosolver.solver.search.strategy.decision.DecisionPathTest"/>
        <method signature="DecisionPathTest.testGetDecision3()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="testGetDecision3" class="org.chocosolver.solver.search.strategy.decision.DecisionPathTest"/>
        <method signature="DecisionPathTest.testGetLastDecision()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="testGetLastDecision" class="org.chocosolver.solver.search.strategy.decision.DecisionPathTest"/>
        <method signature="DecisionPathTest.testPushDecision()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="testPushDecision" class="org.chocosolver.solver.search.strategy.decision.DecisionPathTest"/>
        <method signature="DecisionPathTest.testRemoveLast()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="testRemoveLast" class="org.chocosolver.solver.search.strategy.decision.DecisionPathTest"/>
        <method signature="DecisionPathTest.testSize()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="testSize" class="org.chocosolver.solver.search.strategy.decision.DecisionPathTest"/>
        <method signature="DecisionPathTest.testTransferInto()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="testTransferInto" class="org.chocosolver.solver.search.strategy.decision.DecisionPathTest"/>
        <method signature="DeltaTest.testAdd()[pri:0, instance:org.chocosolver.solver.propagation.DeltaTest@2ba08f26]" name="testAdd" class="org.chocosolver.solver.propagation.DeltaTest"/>
        <method signature="DeltaTest.testEq()[pri:0, instance:org.chocosolver.solver.propagation.DeltaTest@2ba08f26]" name="testEq" class="org.chocosolver.solver.propagation.DeltaTest"/>
        <method signature="DeltaTest.testJL()[pri:0, instance:org.chocosolver.solver.propagation.DeltaTest@2ba08f26]" name="testJL" class="org.chocosolver.solver.propagation.DeltaTest"/>
        <method signature="DeltaTest.testJL2()[pri:0, instance:org.chocosolver.solver.propagation.DeltaTest@2ba08f26]" name="testJL2" class="org.chocosolver.solver.propagation.DeltaTest"/>
        <method signature="DeltaTest.testJL3()[pri:0, instance:org.chocosolver.solver.propagation.DeltaTest@2ba08f26]" name="testJL3" class="org.chocosolver.solver.propagation.DeltaTest"/>
        <method signature="DeltaTest.testJL4()[pri:0, instance:org.chocosolver.solver.propagation.DeltaTest@2ba08f26]" name="testJL4" class="org.chocosolver.solver.propagation.DeltaTest"/>
        <method signature="DistanceEQTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DistanceEQTest@7db2b614]" name="test2" class="org.chocosolver.solver.constraints.ternary.DistanceEQTest"/>
        <method signature="DistanceGETest.test2()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DistanceGETest@5b430541]" name="test2" class="org.chocosolver.solver.constraints.ternary.DistanceGETest"/>
        <method signature="DistanceGTTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DistanceGTTest@1adf387e]" name="test2" class="org.chocosolver.solver.constraints.ternary.DistanceGTTest"/>
        <method signature="DistanceLETest.test2()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DistanceLETest@72b53f27]" name="test2" class="org.chocosolver.solver.constraints.ternary.DistanceLETest"/>
        <method signature="DistanceLTTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DistanceLTTest@544e6b]" name="test2" class="org.chocosolver.solver.constraints.ternary.DistanceLTTest"/>
        <method signature="DistanceTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.binary.DistanceTest@2ea4e762]" name="test1" class="org.chocosolver.solver.constraints.binary.DistanceTest"/>
        <method signature="DistanceTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.binary.DistanceTest@2ea4e762]" name="test2" class="org.chocosolver.solver.constraints.binary.DistanceTest"/>
        <method signature="DistanceTest.test3()[pri:0, instance:org.chocosolver.solver.constraints.binary.DistanceTest@2ea4e762]" name="test3" class="org.chocosolver.solver.constraints.binary.DistanceTest"/>
        <method signature="DivTest.testJL()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DivTest@1be4a7e3]" name="testJL" class="org.chocosolver.solver.constraints.ternary.DivTest"/>
        <method signature="DynamicAdditionTest.test1(org.chocosolver.memory.trailing.EnvironmentTrailing)[pri:0, instance:org.chocosolver.memory.DynamicAdditionTest@4edde05c]" name="test1" class="org.chocosolver.memory.DynamicAdditionTest"/>
        <method signature="DynamicAdditionTest.test2(org.chocosolver.memory.trailing.EnvironmentTrailing)[pri:0, instance:org.chocosolver.memory.DynamicAdditionTest@4edde05c]" name="test2" class="org.chocosolver.memory.DynamicAdditionTest"/>
        <method signature="DynamicPostTest.test0()[pri:0, instance:org.chocosolver.solver.constraints.DynamicPostTest@1e2b37cd]" name="test0" class="org.chocosolver.solver.constraints.DynamicPostTest"/>
        <method signature="DynamicPostTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.DynamicPostTest@1e2b37cd]" name="test1" class="org.chocosolver.solver.constraints.DynamicPostTest"/>
        <method signature="DynamicPostTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.DynamicPostTest@1e2b37cd]" name="test2" class="org.chocosolver.solver.constraints.DynamicPostTest"/>
        <method signature="DynamicPostTest.test3()[pri:0, instance:org.chocosolver.solver.constraints.DynamicPostTest@1e2b37cd]" name="test3" class="org.chocosolver.solver.constraints.DynamicPostTest"/>
        <method signature="DynamicPostTest.test4()[pri:0, instance:org.chocosolver.solver.constraints.DynamicPostTest@1e2b37cd]" name="test4" class="org.chocosolver.solver.constraints.DynamicPostTest"/>
        <method signature="DynamicPostTest.testIssue214()[pri:0, instance:org.chocosolver.solver.constraints.DynamicPostTest@1e2b37cd]" name="testIssue214" class="org.chocosolver.solver.constraints.DynamicPostTest"/>
        <method signature="DynamicPostTest.testJLpareto()[pri:0, instance:org.chocosolver.solver.constraints.DynamicPostTest@1e2b37cd]" name="testJLpareto" class="org.chocosolver.solver.constraints.DynamicPostTest"/>
        <method signature="ELNSTest.test1()[pri:0, instance:org.chocosolver.solver.search.loop.ELNSTest@25c16cf7]" name="test1" class="org.chocosolver.solver.search.loop.ELNSTest"/>
        <method signature="ESatTest.testESat()[pri:0, instance:org.chocosolver.util.ESatTest@52c27d53]" name="testESat" class="org.chocosolver.util.ESatTest"/>
        <method signature="ElementTest.test1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="test1" class="org.chocosolver.solver.constraints.binary.ElementTest"/>
        <method signature="ElementTest.test2(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="test2" class="org.chocosolver.solver.constraints.binary.ElementTest"/>
        <method signature="ElementTest.test3(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="test3" class="org.chocosolver.solver.constraints.binary.ElementTest"/>
        <method signature="ElementTest.test4(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="test4" class="org.chocosolver.solver.constraints.binary.ElementTest"/>
        <method signature="ElementTest.test5(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="test5" class="org.chocosolver.solver.constraints.binary.ElementTest"/>
        <method signature="ElementTest.testBUG(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testBUG" class="org.chocosolver.solver.constraints.binary.ElementTest"/>
        <method signature="ElementTest.testDec1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testDec1" class="org.chocosolver.solver.constraints.binary.ElementTest"/>
        <method signature="ElementTest.testFixedValues()[pri:0, instance:org.chocosolver.solver.constraints.set.ElementTest@744f0e0b]" name="testFixedValues" class="org.chocosolver.solver.constraints.set.ElementTest"/>
        <method signature="ElementTest.testInc1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testInc1" class="org.chocosolver.solver.constraints.binary.ElementTest"/>
        <method signature="ElementTest.testMemberReasoning()[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testMemberReasoning" class="org.chocosolver.solver.constraints.binary.ElementTest"/>
        <method signature="ElementTest.testModelOrFull(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testModelOrFull" class="org.chocosolver.solver.constraints.binary.ElementTest"/>
        <method signature="ElementTest.testModelOrMin(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testModelOrMin" class="org.chocosolver.solver.constraints.binary.ElementTest"/>
        <method signature="ElementTest.testNeg(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testNeg" class="org.chocosolver.solver.constraints.binary.ElementTest"/>
        <method signature="ElementTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.ElementTest@744f0e0b]" name="testNominal" class="org.chocosolver.solver.constraints.set.ElementTest"/>
        <method signature="ElementTest.testProp1()[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testProp1" class="org.chocosolver.solver.constraints.binary.ElementTest"/>
        <method signature="ElementTest.testProp2()[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testProp2" class="org.chocosolver.solver.constraints.binary.ElementTest"/>
        <method signature="ElementTest.testProp3()[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testProp3" class="org.chocosolver.solver.constraints.binary.ElementTest"/>
        <method signature="ElementTest.testProp4()[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testProp4" class="org.chocosolver.solver.constraints.binary.ElementTest"/>
        <method signature="ElementTest.testProp5()[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testProp5" class="org.chocosolver.solver.constraints.binary.ElementTest"/>
        <method signature="ElementTest.testProp6()[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testProp6" class="org.chocosolver.solver.constraints.binary.ElementTest"/>
        <method signature="ElementTest.testProp7()[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testProp7" class="org.chocosolver.solver.constraints.binary.ElementTest"/>
        <method signature="ElementTest.testProp8()[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testProp8" class="org.chocosolver.solver.constraints.binary.ElementTest"/>
        <method signature="ElementTest.testReg1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testReg1" class="org.chocosolver.solver.constraints.binary.ElementTest"/>
        <method signature="ElementTest.testTAR1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testTAR1" class="org.chocosolver.solver.constraints.binary.ElementTest"/>
        <method signature="EnumIntVarTest.testRemoveIntervalInner()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveIntervalInner" class="org.chocosolver.solver.variables.impl.EnumIntVarTest"/>
        <method signature="EnumIntVarTest.testRemoveValueInner()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValueInner" class="org.chocosolver.solver.variables.impl.EnumIntVarTest"/>
        <method signature="EnumIntVarTest.testRemoveValuesButInner()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValuesButInner" class="org.chocosolver.solver.variables.impl.EnumIntVarTest"/>
        <method signature="EnumIntVarTest.testRemoveValuesInner()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValuesInner" class="org.chocosolver.solver.variables.impl.EnumIntVarTest"/>
        <method signature="EnvironmentTest.testBitset1(org.chocosolver.memory.IEnvironment)[pri:0, instance:org.chocosolver.memory.EnvironmentTest@fb42c1c]" name="testBitset1" class="org.chocosolver.memory.EnvironmentTest"/>
        <method signature="EnvironmentTest.testBool(org.chocosolver.memory.IEnvironment)[pri:0, instance:org.chocosolver.memory.EnvironmentTest@fb42c1c]" name="testBool" class="org.chocosolver.memory.EnvironmentTest"/>
        <method signature="EnvironmentTest.testBuilder()[pri:0, instance:org.chocosolver.solver.EnvironmentTest@39c1e7b7]" name="testBuilder" class="org.chocosolver.solver.EnvironmentTest"/>
        <method signature="EnvironmentTest.testFloat(org.chocosolver.memory.IEnvironment)[pri:0, instance:org.chocosolver.memory.EnvironmentTest@fb42c1c]" name="testFloat" class="org.chocosolver.memory.EnvironmentTest"/>
        <method signature="EnvironmentTest.testInt(org.chocosolver.memory.IEnvironment)[pri:0, instance:org.chocosolver.memory.EnvironmentTest@fb42c1c]" name="testInt" class="org.chocosolver.memory.EnvironmentTest"/>
        <method signature="EnvironmentTest.testJL01()[pri:0, instance:org.chocosolver.solver.EnvironmentTest@39c1e7b7]" name="testJL01" class="org.chocosolver.solver.EnvironmentTest"/>
        <method signature="EnvironmentTest.testJL02()[pri:0, instance:org.chocosolver.solver.EnvironmentTest@39c1e7b7]" name="testJL02" class="org.chocosolver.solver.EnvironmentTest"/>
        <method signature="EnvironmentTest.testLong(org.chocosolver.memory.IEnvironment)[pri:0, instance:org.chocosolver.memory.EnvironmentTest@fb42c1c]" name="testLong" class="org.chocosolver.memory.EnvironmentTest"/>
        <method signature="EqTest.test1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.EqTest@1e466d]" name="test1" class="org.chocosolver.solver.constraints.binary.EqTest"/>
        <method signature="EqTest.test2(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.EqTest@1e466d]" name="test2" class="org.chocosolver.solver.constraints.binary.EqTest"/>
        <method signature="EqTest.test3(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.EqTest@1e466d]" name="test3" class="org.chocosolver.solver.constraints.binary.EqTest"/>
        <method signature="EqualXYCExplTest.test1()[pri:0, instance:org.chocosolver.solver.explanations.EqualXYCExplTest@276aa33f]" name="test1" class="org.chocosolver.solver.explanations.EqualXYCExplTest"/>
        <method signature="ExplainingObjectiveTest.testRemovedValues1()[pri:0, instance:org.chocosolver.solver.search.loop.lns.neighbors.ExplainingObjectiveTest@53dbe7b2]" name="testRemovedValues1" class="org.chocosolver.solver.search.loop.lns.neighbors.ExplainingObjectiveTest"/>
        <method signature="ExplanationEngineTest.aTest()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="aTest" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.test01()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test01" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.test1()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test1" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.test111()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test111" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.test2()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test2" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.test4()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test4" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.testClauses()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testClauses" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.testClauses2()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testClauses2" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.testClauses3()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testClauses3" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.testClauses4()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testClauses4" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.testIntSat()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testIntSat" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.testMSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testMSsmall" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.testOnce1()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testOnce1" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.testPAsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testPAsmall" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.testReif()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testReif" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.testReif2()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testReif2" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.testReif3()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testReif3" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.testsmallGR(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallGR" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.testsmallLN(int, int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallLN" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationTest.testLazy()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testLazy" class="org.chocosolver.solver.explanations.ExplanationTest"/>
        <method signature="ExplanationTest.testReif()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testReif" class="org.chocosolver.solver.explanations.ExplanationTest"/>
        <method signature="ExplanationTest.testReif2()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testReif2" class="org.chocosolver.solver.explanations.ExplanationTest"/>
        <method signature="ExplanationTest.testReif3()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testReif3" class="org.chocosolver.solver.explanations.ExplanationTest"/>
        <method signature="ExplanationTest.testUserExpl()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testUserExpl" class="org.chocosolver.solver.explanations.ExplanationTest"/>
        <method signature="ExplanationTest.testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" class="org.chocosolver.solver.explanations.ExplanationTest"/>
        <method signature="ExpressionTest.test(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test1(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test1" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test10(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test10" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test11(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test11" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test112(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test112" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test12(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test12" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test13(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test13" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test14(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test14" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test15(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test15" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test16(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test16" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test17(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test17" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test18(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test18" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test19(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test19" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test20(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test20" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test21(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test21" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test22(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test22" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test23(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test23" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test24(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test24" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test25(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test25" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test26(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test26" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test27(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test27" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test28(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test28" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test29(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test29" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test3(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test3" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test30(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test30" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test31(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test31" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test32(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test32" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test33(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test33" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test34(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test34" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test35(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test35" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test36(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test36" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test37(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test37" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test38(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test38" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test39(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test39" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test4(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test4" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test40(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test40" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test41(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test41" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test42(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test42" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test43(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test43" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test44(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test44" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test45(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test45" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test5(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test5" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test6(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test6" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test7(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test7" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test8(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test8" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ExpressionTest.test9(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test9" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="IntBoundedMemberTest.testDifferentDomains()[pri:0, instance:org.chocosolver.solver.constraints.set.IntBoundedMemberTest@570127fa]" name="testDifferentDomains" class="org.chocosolver.solver.constraints.set.IntBoundedMemberTest"/>
        <method signature="IntBoundedMemberTest.testEmptySet()[pri:0, instance:org.chocosolver.solver.constraints.set.IntBoundedMemberTest@570127fa]" name="testEmptySet" class="org.chocosolver.solver.constraints.set.IntBoundedMemberTest"/>
        <method signature="IntBoundedMemberTest.testIncompatibleDomains()[pri:0, instance:org.chocosolver.solver.constraints.set.IntBoundedMemberTest@570127fa]" name="testIncompatibleDomains" class="org.chocosolver.solver.constraints.set.IntBoundedMemberTest"/>
        <method signature="IntBoundedMemberTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.IntBoundedMemberTest@570127fa]" name="testNominal" class="org.chocosolver.solver.constraints.set.IntBoundedMemberTest"/>
        <method signature="IntChannelTest.testNoChannelingPossible()[pri:0, instance:org.chocosolver.solver.constraints.set.IntChannelTest@50caeb4b]" name="testNoChannelingPossible" class="org.chocosolver.solver.constraints.set.IntChannelTest"/>
        <method signature="IntChannelTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.IntChannelTest@50caeb4b]" name="testNominal" class="org.chocosolver.solver.constraints.set.IntChannelTest"/>
        <method signature="IntChannelTest.testNominalMZN()[pri:0, instance:org.chocosolver.solver.constraints.set.IntChannelTest@50caeb4b]" name="testNominalMZN" class="org.chocosolver.solver.constraints.set.IntChannelTest"/>
        <method signature="IntCstMemberTest.testFalse()[pri:0, instance:org.chocosolver.solver.constraints.set.IntCstMemberTest@161c9468]" name="testFalse" class="org.chocosolver.solver.constraints.set.IntCstMemberTest"/>
        <method signature="IntCstMemberTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.IntCstMemberTest@161c9468]" name="testNominal" class="org.chocosolver.solver.constraints.set.IntCstMemberTest"/>
        <method signature="IntCstMemberTest.testTrue()[pri:0, instance:org.chocosolver.solver.constraints.set.IntCstMemberTest@161c9468]" name="testTrue" class="org.chocosolver.solver.constraints.set.IntCstMemberTest"/>
        <method signature="IntIterableRangeSetTest.testAdd()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testAdd" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntIterableRangeSetTest.testAdd2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testAdd2" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntIterableRangeSetTest.testComplement()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testComplement" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntIterableRangeSetTest.testMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testMax" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntIterableRangeSetTest.testMin()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testMin" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntIterableRangeSetTest.testNextValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testNextValue" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntIterableRangeSetTest.testNextValue2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testNextValue2" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntIterableRangeSetTest.testNextValue3()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testNextValue3" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntIterableRangeSetTest.testPrevValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testPrevValue" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntIterableRangeSetTest.testPrevValue2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testPrevValue2" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntIterableRangeSetTest.testPrevValue3()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testPrevValue3" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntIterableRangeSetTest.testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testRemove" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntIterableRangeSetTest.testRemove2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testRemove2" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntIterableRangeSetTest.testRemoveBetween1()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testRemoveBetween1" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntIterableRangeSetTest.testRemoveBetween2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testRemoveBetween2" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntIterableRangeSetTest.testRemoveBetween3()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testRemoveBetween3" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntIterableRangeSetTest.testRemoveBetween4()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testRemoveBetween4" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntIterableRangeSetTest.testrangeOf1()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testrangeOf1" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntIterableRangeSetTest.testrangeOf2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testrangeOf2" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntLinCombTest.testB2()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testB2" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testB3()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testB3" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testB4()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testB4" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testB5()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testB5" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testB6()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testB6" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testB61()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testB61" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testB7()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testB7" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testB71()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testB71" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testD1()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD1" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testD10()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD10" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testD11()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD11" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testD12()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD12" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testD13()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD13" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testD14()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD14" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testD15()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD15" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testD16()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD16" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testD2()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD2" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testD20()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD20" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testD3()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD3" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testD4()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD4" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testD5()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD5" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testD6()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD6" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testD7()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD7" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testD8()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD8" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testD9()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD9" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testDec1(boolean, int)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testDec1" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testDec2(boolean, int)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testDec2" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testEQ()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testEQ" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testEq()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testEq" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testExt1()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testExt1" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testExt2()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testExt2" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testExt3()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testExt3" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testGE()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testGE" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testGT()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testGT" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testGeq()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testGeq" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testIss237_1()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testIss237_1" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testJG1()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testJG1" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testJG2()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testJG2" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testJL082016()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testJL082016" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testJL1()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testJL1" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testJL2()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testJL2" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testJL3()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testJL3" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testJL4()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testJL4" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testLE()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testLE" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testLT()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testLT" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testLeq()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testLeq" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testNE()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testNE" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testNeq()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testNeq" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testOpp1()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testOpp1" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testOpp1strict()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testOpp1strict" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testOpp2()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testOpp2" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testOpp3()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testOpp3" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testOpp4()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testOpp4" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testOpp4strict()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testOpp4strict" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testRFP1()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testRFP1" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testRFP2()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testRFP2" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testRFP3()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testRFP3" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testS1_coeff_null()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testS1_coeff_null" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testS2_coeff_null()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testS2_coeff_null" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testSmallSumsEQ()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSmallSumsEQ" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testSmallSumsGE()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSmallSumsGE" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testSmallSumsGT()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSmallSumsGT" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testSmallSumsLE()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSmallSumsLE" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testSmallSumsLT()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSmallSumsLT" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testSmallSumsNE()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSmallSumsNE" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testSumvsIntLinCombTest2(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSumvsIntLinCombTest2" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testSumvsIntLinCombTest3(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSumvsIntLinCombTest3" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testSumvsIntLinCombTest4(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSumvsIntLinCombTest4" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testUSum1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testUSum1" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testUSum2(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testUSum2" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntVarTest.removeAllValuesButCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="removeAllValuesButCoverBound" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.removeAllValuesButCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="removeAllValuesButCoverBound" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.removeAllValuesButCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="removeAllValuesButCoverBound" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.removeAllValuesButCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="removeAllValuesButCoverBound" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.removeAllValuesButWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="removeAllValuesButWrongDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.removeAllValuesButWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="removeAllValuesButWrongDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.removeAllValuesButWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="removeAllValuesButWrongDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.removeAllValuesButWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="removeAllValuesButWrongDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveAllValuesButCoverDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveAllValuesButCoverDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveAllValuesButCoverDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveAllValuesButCoverDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveAllValuesButCoverDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveAllValuesButCoverDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveAllValuesButCoverDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveAllValuesButCoverDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveIntervalCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveIntervalCoverBound" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveIntervalCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveIntervalCoverBound" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveIntervalCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveIntervalCoverBound" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveIntervalCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveIntervalCoverBound" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveIntervalCoverDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveIntervalCoverDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveIntervalCoverDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveIntervalCoverDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveIntervalCoverDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveIntervalCoverDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveIntervalCoverDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveIntervalCoverDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveIntervalEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveIntervalEmptyDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveIntervalEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveIntervalEmptyDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveIntervalEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveIntervalEmptyDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveIntervalEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveIntervalEmptyDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveIntervalOK()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveIntervalOK" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveIntervalOK()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveIntervalOK" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveIntervalOK()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveIntervalOK" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveIntervalOK()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveIntervalOK" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveIntervalWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveIntervalWrongDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveIntervalWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveIntervalWrongDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveIntervalWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveIntervalWrongDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveIntervalWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveIntervalWrongDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValueEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveValueEmptyDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValueEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValueEmptyDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValueEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveValueEmptyDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValueEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveValueEmptyDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValueOK()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveValueOK" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValueOK()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValueOK" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValueOK()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveValueOK" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValueOK()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveValueOK" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValueWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveValueWrongDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValueWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValueWrongDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValueWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveValueWrongDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValueWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveValueWrongDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesButOK()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveValuesButOK" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesButOK()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValuesButOK" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesButOK()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveValuesButOK" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesButOK()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveValuesButOK" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveValuesCoverBound" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValuesCoverBound" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveValuesCoverBound" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveValuesCoverBound" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveValuesEmptyDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValuesEmptyDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveValuesEmptyDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveValuesEmptyDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesOK()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveValuesOK" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesOK()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValuesOK" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesOK()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveValuesOK" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesOK()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveValuesOK" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesTwoSides()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveValuesTwoSides" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesTwoSides()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValuesTwoSides" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesTwoSides()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveValuesTwoSides" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesTwoSides()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveValuesTwoSides" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveValuesWrongDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValuesWrongDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveValuesWrongDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntVarTest.testRemoveValuesWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveValuesWrongDomain" class="org.chocosolver.solver.variables.impl.IntVarTest"/>
        <method signature="IntersectionTest.testDifferentDomains()[pri:0, instance:org.chocosolver.solver.constraints.set.IntersectionTest@4136b193]" name="testDifferentDomains" class="org.chocosolver.solver.constraints.set.IntersectionTest"/>
        <method signature="IntersectionTest.testFuzzIdempotent()[pri:0, instance:org.chocosolver.solver.constraints.set.IntersectionTest@4136b193]" name="testFuzzIdempotent" class="org.chocosolver.solver.constraints.set.IntersectionTest"/>
        <method signature="IntersectionTest.testFuzzIdempotentAndBoundConsistent()[pri:0, instance:org.chocosolver.solver.constraints.set.IntersectionTest@4136b193]" name="testFuzzIdempotentAndBoundConsistent" class="org.chocosolver.solver.constraints.set.IntersectionTest"/>
        <method signature="IntersectionTest.testIntersectToVars()[pri:0, instance:org.chocosolver.solver.constraints.set.IntersectionTest@4136b193]" name="testIntersectToVars" class="org.chocosolver.solver.constraints.set.IntersectionTest"/>
        <method signature="IntersectionTest.testIntersectToVarsBoundConsistent()[pri:0, instance:org.chocosolver.solver.constraints.set.IntersectionTest@4136b193]" name="testIntersectToVarsBoundConsistent" class="org.chocosolver.solver.constraints.set.IntersectionTest"/>
        <method signature="IntersectionTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.IntersectionTest@4136b193]" name="testNominal" class="org.chocosolver.solver.constraints.set.IntersectionTest"/>
        <method signature="IntersectionTest.testNominalBoundConsistent()[pri:0, instance:org.chocosolver.solver.constraints.set.IntersectionTest@4136b193]" name="testNominalBoundConsistent" class="org.chocosolver.solver.constraints.set.IntersectionTest"/>
        <method signature="IntersectionTest.testVarsToIntersect()[pri:0, instance:org.chocosolver.solver.constraints.set.IntersectionTest@4136b193]" name="testVarsToIntersect" class="org.chocosolver.solver.constraints.set.IntersectionTest"/>
        <method signature="IntersectionTest.testVarsToIntersectBoundConsistent()[pri:0, instance:org.chocosolver.solver.constraints.set.IntersectionTest@4136b193]" name="testVarsToIntersectBoundConsistent" class="org.chocosolver.solver.constraints.set.IntersectionTest"/>
        <method signature="IntervalIntVarImplTest.testGetDomainSize()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testGetDomainSize" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testGetLB()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testGetLB" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testGetRangeIterator()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testGetRangeIterator" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testGetTypeAndKind()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testGetTypeAndKind" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testGetUB()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testGetUB" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testGetValueIterator()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testGetValueIterator" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testHasEnumeratedDomain()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testHasEnumeratedDomain" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testNextOut1()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testNextOut1" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testNextOut2()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testNextOut2" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testNextValue()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testNextValue" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testPreviousOut1()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testPreviousOut1" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testPreviousOut2()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testPreviousOut2" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testPreviousValue()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testPreviousValue" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testRemVals1()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemVals1" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testRemVals21()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemVals21" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testRemVals22()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemVals22" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testRemVals3()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemVals3" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testRemVals31()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemVals31" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testRemVals41()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemVals41" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testRemVals42()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemVals42" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testRemVals5()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemVals5" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testRemValsBut1()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemValsBut1" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testRemValsBut21()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemValsBut21" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testRemValsBut22()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemValsBut22" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testRemValsBut3()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemValsBut3" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testRemValsBut31()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemValsBut31" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testRemValsBut41()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemValsBut41" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testRemValsBut42()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemValsBut42" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testRemValsBut8()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemValsBut8" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testRemValsBut9()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemValsBut9" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testRemoveInterval()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemoveInterval" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testRemoveValue()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemoveValue" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testUpdBounds1()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testUpdBounds1" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testUpdBounds2()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testUpdBounds2" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testUpdBounds3()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testUpdBounds3" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testUpdBounds4()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testUpdBounds4" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testUpdBounds5()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testUpdBounds5" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testUpdateLowerBound()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testUpdateLowerBound" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalIntVarImplTest.testUpdateUpperBound()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testUpdateUpperBound" class="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest"/>
        <method signature="IntervalSetTest.testAdd()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.IntervalSetTest@221cdd87]" name="testAdd" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.IntervalSetTest"/>
        <method signature="IntervalSetTest.testAddFalse()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.IntervalSetTest@221cdd87]" name="testAddFalse" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.IntervalSetTest"/>
        <method signature="IntervalSetTest.testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.IntervalSetTest@221cdd87]" name="testClear" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.IntervalSetTest"/>
        <method signature="IntervalSetTest.testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.IntervalSetTest@221cdd87]" name="testIterator" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.IntervalSetTest"/>
        <method signature="IntervalSetTest.testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.IntervalSetTest@221cdd87]" name="testRemove" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.IntervalSetTest"/>
        <method signature="IntervalSetTest.testSize()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.IntervalSetTest@221cdd87]" name="testSize" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.IntervalSetTest"/>
        <method signature="InverseChannelingTest.test00()[pri:0, instance:org.chocosolver.solver.constraints.nary.InverseChannelingTest@49c4118b]" name="test00" class="org.chocosolver.solver.constraints.nary.InverseChannelingTest"/>
        <method signature="InverseChannelingTest.testDomainsFiltering(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.InverseChannelingTest@49c4118b]" name="testDomainsFiltering" class="org.chocosolver.solver.constraints.nary.InverseChannelingTest"/>
        <method signature="InverseChannelingTest.testLengthsDiffer(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.InverseChannelingTest@49c4118b]" name="testLengthsDiffer" class="org.chocosolver.solver.constraints.nary.InverseChannelingTest"/>
        <method signature="InverseChannelingTest.testNoSolution(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.InverseChannelingTest@49c4118b]" name="testNoSolution" class="org.chocosolver.solver.constraints.nary.InverseChannelingTest"/>
        <method signature="InverseChannelingTest.testNominal(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.InverseChannelingTest@49c4118b]" name="testNominal" class="org.chocosolver.solver.constraints.nary.InverseChannelingTest"/>
        <method signature="InverseTest.testBuildInverse()[pri:0, instance:org.chocosolver.solver.constraints.set.InverseTest@d271d6c]" name="testBuildInverse" class="org.chocosolver.solver.constraints.set.InverseTest"/>
        <method signature="InverseTest.testEnumerateLength1()[pri:0, instance:org.chocosolver.solver.constraints.set.InverseTest@d271d6c]" name="testEnumerateLength1" class="org.chocosolver.solver.constraints.set.InverseTest"/>
        <method signature="InverseTest.testEnumerateLength2()[pri:0, instance:org.chocosolver.solver.constraints.set.InverseTest@d271d6c]" name="testEnumerateLength2" class="org.chocosolver.solver.constraints.set.InverseTest"/>
        <method signature="InverseTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.InverseTest@d271d6c]" name="testNominal" class="org.chocosolver.solver.constraints.set.InverseTest"/>
        <method signature="IteratorTest.JLiangWaterlooTest()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="JLiangWaterlooTest" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testAbs1()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testAbs1" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testAbs2()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testAbs2" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testAbs3()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testAbs3" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testAbs4()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testAbs4" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testBool1()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testBool1" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testBool2()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testBool2" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testBool3()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testBool3" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testBool4()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testBool4" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testBound1()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testBound1" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testBound2()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testBound2" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testBound3()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testBound3" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testBound4()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testBound4" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testCste1()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testCste1" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testCste2()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testCste2" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testCste3()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testCste3" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testCste4()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testCste4" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testEnum1()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testEnum1" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testEnum2()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testEnum2" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testEnum3()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testEnum3" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testEnum4()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testEnum4" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testMax1()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testMax1" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testMax2()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testMax2" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testMax3()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testMax3" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testMax4()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testMax4" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testMinus1()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testMinus1" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testMinus2()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testMinus2" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testMinus3()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testMinus3" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testMinus4()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testMinus4" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testOffset1()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testOffset1" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testOffset2()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testOffset2" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testOffset3()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testOffset3" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testOffset4()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testOffset4" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testScale1()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testScale1" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testScale2()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testScale2" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testScale3()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testScale3" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="IteratorTest.testScale4()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testScale4" class="org.chocosolver.solver.variables.IteratorTest"/>
        <method signature="KeysortingTest.test01()[pri:0, instance:org.chocosolver.solver.constraints.nary.KeysortingTest@1f365a26]" name="test01" class="org.chocosolver.solver.constraints.nary.KeysortingTest"/>
        <method signature="KeysortingTest.test02()[pri:0, instance:org.chocosolver.solver.constraints.nary.KeysortingTest@1f365a26]" name="test02" class="org.chocosolver.solver.constraints.nary.KeysortingTest"/>
        <method signature="KeysortingTest.test03()[pri:0, instance:org.chocosolver.solver.constraints.nary.KeysortingTest@1f365a26]" name="test03" class="org.chocosolver.solver.constraints.nary.KeysortingTest"/>
        <method signature="KeysortingTest.test04()[pri:0, instance:org.chocosolver.solver.constraints.nary.KeysortingTest@1f365a26]" name="test04" class="org.chocosolver.solver.constraints.nary.KeysortingTest"/>
        <method signature="KeysortingTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.KeysortingTest@1f365a26]" name="test1" class="org.chocosolver.solver.constraints.nary.KeysortingTest"/>
        <method signature="KeysortingTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.KeysortingTest@1f365a26]" name="test2" class="org.chocosolver.solver.constraints.nary.KeysortingTest"/>
        <method signature="KeysortingTest.test3()[pri:0, instance:org.chocosolver.solver.constraints.nary.KeysortingTest@1f365a26]" name="test3" class="org.chocosolver.solver.constraints.nary.KeysortingTest"/>
        <method signature="KeysortingTest.test4()[pri:0, instance:org.chocosolver.solver.constraints.nary.KeysortingTest@1f365a26]" name="test4" class="org.chocosolver.solver.constraints.nary.KeysortingTest"/>
        <method signature="KeysortingTest.test5()[pri:0, instance:org.chocosolver.solver.constraints.nary.KeysortingTest@1f365a26]" name="test5" class="org.chocosolver.solver.constraints.nary.KeysortingTest"/>
        <method signature="KeysortingTest.test6()[pri:0, instance:org.chocosolver.solver.constraints.nary.KeysortingTest@1f365a26]" name="test6" class="org.chocosolver.solver.constraints.nary.KeysortingTest"/>
        <method signature="LNSTest.testPN1()[pri:0, instance:org.chocosolver.solver.search.loop.LNSTest@5274830e]" name="testPN1" class="org.chocosolver.solver.search.loop.LNSTest"/>
        <method signature="LexChainTest.testB1()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexChainTest@35b58254]" name="testB1" class="org.chocosolver.solver.constraints.nary.LexChainTest"/>
        <method signature="LexChainTest.testB2()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexChainTest@35b58254]" name="testB2" class="org.chocosolver.solver.constraints.nary.LexChainTest"/>
        <method signature="LexTest.testAshish()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexTest@7ef7f414]" name="testAshish" class="org.chocosolver.solver.constraints.nary.LexTest"/>
        <method signature="LexTest.testBug1()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexTest@7ef7f414]" name="testBug1" class="org.chocosolver.solver.constraints.nary.LexTest"/>
        <method signature="LexTest.testBug2()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexTest@7ef7f414]" name="testBug2" class="org.chocosolver.solver.constraints.nary.LexTest"/>
        <method signature="LexTest.testBug3()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexTest@7ef7f414]" name="testBug3" class="org.chocosolver.solver.constraints.nary.LexTest"/>
        <method signature="LexTest.testBug4()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexTest@7ef7f414]" name="testBug4" class="org.chocosolver.solver.constraints.nary.LexTest"/>
        <method signature="LexTest.testBug5()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexTest@7ef7f414]" name="testBug5" class="org.chocosolver.solver.constraints.nary.LexTest"/>
        <method signature="LexTest.testLessLexq()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexTest@7ef7f414]" name="testLessLexq" class="org.chocosolver.solver.constraints.nary.LexTest"/>
        <method signature="LexTest.testLex()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexTest@7ef7f414]" name="testLex" class="org.chocosolver.solver.constraints.nary.LexTest"/>
        <method signature="LexTest.testLexiSatisfied()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexTest@7ef7f414]" name="testLexiSatisfied" class="org.chocosolver.solver.constraints.nary.LexTest"/>
        <method signature="LimitsTest.durationTest()[pri:0, instance:org.chocosolver.solver.LimitsTest@677c2820]" name="durationTest" class="org.chocosolver.solver.LimitsTest"/>
        <method signature="LimitsTest.testBacktrack()[pri:0, instance:org.chocosolver.solver.LimitsTest@677c2820]" name="testBacktrack" class="org.chocosolver.solver.LimitsTest"/>
        <method signature="LimitsTest.testFail()[pri:0, instance:org.chocosolver.solver.LimitsTest@677c2820]" name="testFail" class="org.chocosolver.solver.LimitsTest"/>
        <method signature="LimitsTest.testNode()[pri:0, instance:org.chocosolver.solver.LimitsTest@677c2820]" name="testNode" class="org.chocosolver.solver.LimitsTest"/>
        <method signature="LimitsTest.testSolution()[pri:0, instance:org.chocosolver.solver.LimitsTest@677c2820]" name="testSolution" class="org.chocosolver.solver.LimitsTest"/>
        <method signature="LimitsTest.testTime()[pri:0, instance:org.chocosolver.solver.LimitsTest@677c2820]" name="testTime" class="org.chocosolver.solver.LimitsTest"/>
        <method signature="LinkedListTest.testAddNegativeKO()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testAddNegativeKO" class="org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest"/>
        <method signature="LinkedListTest.testAddNegativeKO()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testAddNegativeKO" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest"/>
        <method signature="LinkedListTest.testMaxSpan()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testMaxSpan" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest"/>
        <method signature="LogicTreeTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test1" class="org.chocosolver.solver.constraints.LogicTreeTest"/>
        <method signature="LogicTreeTest.test10()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test10" class="org.chocosolver.solver.constraints.LogicTreeTest"/>
        <method signature="LogicTreeTest.test11()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test11" class="org.chocosolver.solver.constraints.LogicTreeTest"/>
        <method signature="LogicTreeTest.test12()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test12" class="org.chocosolver.solver.constraints.LogicTreeTest"/>
        <method signature="LogicTreeTest.test13()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test13" class="org.chocosolver.solver.constraints.LogicTreeTest"/>
        <method signature="LogicTreeTest.test14()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test14" class="org.chocosolver.solver.constraints.LogicTreeTest"/>
        <method signature="LogicTreeTest.test15()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test15" class="org.chocosolver.solver.constraints.LogicTreeTest"/>
        <method signature="LogicTreeTest.test16()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test16" class="org.chocosolver.solver.constraints.LogicTreeTest"/>
        <method signature="LogicTreeTest.test17()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test17" class="org.chocosolver.solver.constraints.LogicTreeTest"/>
        <method signature="LogicTreeTest.test18()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test18" class="org.chocosolver.solver.constraints.LogicTreeTest"/>
        <method signature="LogicTreeTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test2" class="org.chocosolver.solver.constraints.LogicTreeTest"/>
        <method signature="LogicTreeTest.test3()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test3" class="org.chocosolver.solver.constraints.LogicTreeTest"/>
        <method signature="LogicTreeTest.test4()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test4" class="org.chocosolver.solver.constraints.LogicTreeTest"/>
        <method signature="LogicTreeTest.test5()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test5" class="org.chocosolver.solver.constraints.LogicTreeTest"/>
        <method signature="LogicTreeTest.test6()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test6" class="org.chocosolver.solver.constraints.LogicTreeTest"/>
        <method signature="LogicTreeTest.test7()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test7" class="org.chocosolver.solver.constraints.LogicTreeTest"/>
        <method signature="LogicTreeTest.test8()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test8" class="org.chocosolver.solver.constraints.LogicTreeTest"/>
        <method signature="LogicTreeTest.test9()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test9" class="org.chocosolver.solver.constraints.LogicTreeTest"/>
        <method signature="MDDTest.test0()[pri:0, instance:org.chocosolver.util.MDDTest@5ca7619f]" name="test0" class="org.chocosolver.util.MDDTest"/>
        <method signature="MDDTest.test1()[pri:0, instance:org.chocosolver.util.MDDTest@5ca7619f]" name="test1" class="org.chocosolver.util.MDDTest"/>
        <method signature="MDDTest.test2()[pri:0, instance:org.chocosolver.util.MDDTest@5ca7619f]" name="test2" class="org.chocosolver.util.MDDTest"/>
        <method signature="MDDTest.test3()[pri:0, instance:org.chocosolver.util.MDDTest@5ca7619f]" name="test3" class="org.chocosolver.util.MDDTest"/>
        <method signature="MDDTest.test4()[pri:0, instance:org.chocosolver.util.MDDTest@5ca7619f]" name="test4" class="org.chocosolver.util.MDDTest"/>
        <method signature="MDDTest.test5()[pri:0, instance:org.chocosolver.util.MDDTest@5ca7619f]" name="test5" class="org.chocosolver.util.MDDTest"/>
        <method signature="MDDTest.test6()[pri:0, instance:org.chocosolver.util.MDDTest@5ca7619f]" name="test6" class="org.chocosolver.util.MDDTest"/>
        <method signature="MDDTest.test7()[pri:0, instance:org.chocosolver.util.MDDTest@5ca7619f]" name="test7" class="org.chocosolver.util.MDDTest"/>
        <method signature="MathUtilsTest.testDivCeil()[pri:0, instance:org.chocosolver.util.tools.MathUtilsTest@bf18412]" name="testDivCeil" class="org.chocosolver.util.tools.MathUtilsTest"/>
        <method signature="MathUtilsTest.testDivFloor()[pri:0, instance:org.chocosolver.util.tools.MathUtilsTest@bf18412]" name="testDivFloor" class="org.chocosolver.util.tools.MathUtilsTest"/>
        <method signature="MathUtilsTest.testMinMax()[pri:0, instance:org.chocosolver.util.tools.MathUtilsTest@bf18412]" name="testMinMax" class="org.chocosolver.util.tools.MathUtilsTest"/>
        <method signature="MathUtilsTest.testSafeAdd()[pri:0, instance:org.chocosolver.util.tools.MathUtilsTest@bf18412]" name="testSafeAdd" class="org.chocosolver.util.tools.MathUtilsTest"/>
        <method signature="MathUtilsTest.testSafeMultiply()[pri:0, instance:org.chocosolver.util.tools.MathUtilsTest@bf18412]" name="testSafeMultiply" class="org.chocosolver.util.tools.MathUtilsTest"/>
        <method signature="MathUtilsTest.testSafeSubstract()[pri:0, instance:org.chocosolver.util.tools.MathUtilsTest@bf18412]" name="testSafeSubstract" class="org.chocosolver.util.tools.MathUtilsTest"/>
        <method signature="MaxElementTest.testEmptySetKO()[pri:0, instance:org.chocosolver.solver.constraints.set.MaxElementTest@2f498f21]" name="testEmptySetKO" class="org.chocosolver.solver.constraints.set.MaxElementTest"/>
        <method signature="MaxElementTest.testEmptySetOK()[pri:0, instance:org.chocosolver.solver.constraints.set.MaxElementTest@2f498f21]" name="testEmptySetOK" class="org.chocosolver.solver.constraints.set.MaxElementTest"/>
        <method signature="MaxElementTest.testImpossible()[pri:0, instance:org.chocosolver.solver.constraints.set.MaxElementTest@2f498f21]" name="testImpossible" class="org.chocosolver.solver.constraints.set.MaxElementTest"/>
        <method signature="MaxElementTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.MaxElementTest@2f498f21]" name="testNominal" class="org.chocosolver.solver.constraints.set.MaxElementTest"/>
        <method signature="MaxElementTest.testTrivialFalse()[pri:0, instance:org.chocosolver.solver.constraints.set.MaxElementTest@2f498f21]" name="testTrivialFalse" class="org.chocosolver.solver.constraints.set.MaxElementTest"/>
        <method signature="MaxElementTest.testTrivialTrue()[pri:0, instance:org.chocosolver.solver.constraints.set.MaxElementTest@2f498f21]" name="testTrivialTrue" class="org.chocosolver.solver.constraints.set.MaxElementTest"/>
        <method signature="MeasuresTest.measExceptionTest()[pri:0, instance:org.chocosolver.solver.search.MeasuresTest@520ec7a7]" name="measExceptionTest" class="org.chocosolver.solver.search.MeasuresTest"/>
        <method signature="MeasuresTest.measRecTest()[pri:0, instance:org.chocosolver.solver.search.MeasuresTest@520ec7a7]" name="measRecTest" class="org.chocosolver.solver.search.MeasuresTest"/>
        <method signature="MeasuresTest.measSerializeTest()[pri:0, instance:org.chocosolver.solver.search.MeasuresTest@520ec7a7]" name="measSerializeTest" class="org.chocosolver.solver.search.MeasuresTest"/>
        <method signature="MeasuresTest.measuresTest()[pri:0, instance:org.chocosolver.solver.search.MeasuresTest@520ec7a7]" name="measuresTest" class="org.chocosolver.solver.search.MeasuresTest"/>
        <method signature="MeasuresTest.testReading()[pri:0, instance:org.chocosolver.solver.search.MeasuresTest@520ec7a7]" name="testReading" class="org.chocosolver.solver.search.MeasuresTest"/>
        <method signature="MemberSetTest.testJL253_enum()[pri:0, instance:org.chocosolver.solver.constraints.set.MemberSetTest@143fe09c]" name="testJL253_enum" class="org.chocosolver.solver.constraints.set.MemberSetTest"/>
        <method signature="MemberTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.unary.MemberTest@2c92f094]" name="test1" class="org.chocosolver.solver.constraints.unary.MemberTest"/>
        <method signature="MemberTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.unary.MemberTest@2c92f094]" name="test2" class="org.chocosolver.solver.constraints.unary.MemberTest"/>
        <method signature="MemberTest.test_alxpgr()[pri:0, instance:org.chocosolver.solver.constraints.unary.MemberTest@2c92f094]" name="test_alxpgr" class="org.chocosolver.solver.constraints.unary.MemberTest"/>
        <method signature="MinElementTest.testEmptySetKO()[pri:0, instance:org.chocosolver.solver.constraints.set.MinElementTest@c7c07ff]" name="testEmptySetKO" class="org.chocosolver.solver.constraints.set.MinElementTest"/>
        <method signature="MinElementTest.testEmptySetOK()[pri:0, instance:org.chocosolver.solver.constraints.set.MinElementTest@c7c07ff]" name="testEmptySetOK" class="org.chocosolver.solver.constraints.set.MinElementTest"/>
        <method signature="MinElementTest.testImpossible()[pri:0, instance:org.chocosolver.solver.constraints.set.MinElementTest@c7c07ff]" name="testImpossible" class="org.chocosolver.solver.constraints.set.MinElementTest"/>
        <method signature="MinElementTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.MinElementTest@c7c07ff]" name="testNominal" class="org.chocosolver.solver.constraints.set.MinElementTest"/>
        <method signature="MinElementTest.testTrivialFalse()[pri:0, instance:org.chocosolver.solver.constraints.set.MinElementTest@c7c07ff]" name="testTrivialFalse" class="org.chocosolver.solver.constraints.set.MinElementTest"/>
        <method signature="MinElementTest.testTrivialTrue()[pri:0, instance:org.chocosolver.solver.constraints.set.MinElementTest@c7c07ff]" name="testTrivialTrue" class="org.chocosolver.solver.constraints.set.MinElementTest"/>
        <method signature="MinMaxTest.testBools(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testBools" class="org.chocosolver.solver.constraints.nary.MinMaxTest"/>
        <method signature="MinMaxTest.testBoolsGG(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testBoolsGG" class="org.chocosolver.solver.constraints.nary.MinMaxTest"/>
        <method signature="MinMaxTest.testMax1()[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testMax1" class="org.chocosolver.solver.constraints.nary.MinMaxTest"/>
        <method signature="MinMaxTest.testMax2()[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testMax2" class="org.chocosolver.solver.constraints.nary.MinMaxTest"/>
        <method signature="MinMaxTest.testMax3()[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testMax3" class="org.chocosolver.solver.constraints.nary.MinMaxTest"/>
        <method signature="MinMaxTest.testMax30()[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testMax30" class="org.chocosolver.solver.constraints.nary.MinMaxTest"/>
        <method signature="MinMaxTest.testMin1()[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testMin1" class="org.chocosolver.solver.constraints.nary.MinMaxTest"/>
        <method signature="MinMaxTest.testMin2()[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testMin2" class="org.chocosolver.solver.constraints.nary.MinMaxTest"/>
        <method signature="MinMaxTest.testMin3()[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testMin3" class="org.chocosolver.solver.constraints.nary.MinMaxTest"/>
        <method signature="MinMaxTest.testMin30()[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testMin30" class="org.chocosolver.solver.constraints.nary.MinMaxTest"/>
        <method signature="MinMaxTest.testNoSolution(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testNoSolution" class="org.chocosolver.solver.constraints.nary.MinMaxTest"/>
        <method signature="MinMaxTest.testNoSolution2(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testNoSolution2" class="org.chocosolver.solver.constraints.nary.MinMaxTest"/>
        <method signature="MinMaxTest.testNominal(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testNominal" class="org.chocosolver.solver.constraints.nary.MinMaxTest"/>
        <method signature="MinMaxTest.testSameVariableNoSolution(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testSameVariableNoSolution" class="org.chocosolver.solver.constraints.nary.MinMaxTest"/>
        <method signature="MinMaxTest.testSameVariableSolution(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testSameVariableSolution" class="org.chocosolver.solver.constraints.nary.MinMaxTest"/>
        <method signature="MinMaxTest.testZero(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testZero" class="org.chocosolver.solver.constraints.nary.MinMaxTest"/>
        <method signature="MinMaxTest.testZeroElements(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testZeroElements" class="org.chocosolver.solver.constraints.nary.MinMaxTest"/>
        <method signature="MinTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.ternary.MinTest@70eb94d7]" name="test2" class="org.chocosolver.solver.constraints.ternary.MinTest"/>
        <method signature="MixedScalarTest.testCoeffAtZeroNoSolutions()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testCoeffAtZeroNoSolutions" class="org.chocosolver.solver.constraints.nary.MixedScalarTest"/>
        <method signature="MixedScalarTest.testCoeffAtZeroSolutions()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testCoeffAtZeroSolutions" class="org.chocosolver.solver.constraints.nary.MixedScalarTest"/>
        <method signature="MixedScalarTest.testCoeffAtZeroSolutions2()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testCoeffAtZeroSolutions2" class="org.chocosolver.solver.constraints.nary.MixedScalarTest"/>
        <method signature="MixedScalarTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testNominal" class="org.chocosolver.solver.constraints.nary.MixedScalarTest"/>
        <method signature="MixedScalarTest.testNominalBounded()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testNominalBounded" class="org.chocosolver.solver.constraints.nary.MixedScalarTest"/>
        <method signature="MixedScalarTest.testNominalBounded2()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testNominalBounded2" class="org.chocosolver.solver.constraints.nary.MixedScalarTest"/>
        <method signature="MixedScalarTest.testNominalBounded3()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testNominalBounded3" class="org.chocosolver.solver.constraints.nary.MixedScalarTest"/>
        <method signature="MixedScalarTest.testNominalBoundedWithNegatives()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testNominalBoundedWithNegatives" class="org.chocosolver.solver.constraints.nary.MixedScalarTest"/>
        <method signature="MixedScalarTest.testNominalBoundedWithNegatives2()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testNominalBoundedWithNegatives2" class="org.chocosolver.solver.constraints.nary.MixedScalarTest"/>
        <method signature="MixedScalarTest.testSameVariableNoSolution()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testSameVariableNoSolution" class="org.chocosolver.solver.constraints.nary.MixedScalarTest"/>
        <method signature="MixedScalarTest.testSameVariableSolution()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testSameVariableSolution" class="org.chocosolver.solver.constraints.nary.MixedScalarTest"/>
        <method signature="MixedScalarTest.testSameVariableSolution2()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testSameVariableSolution2" class="org.chocosolver.solver.constraints.nary.MixedScalarTest"/>
        <method signature="ModTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.ternary.ModTest@632b96b8]" name="test2" class="org.chocosolver.solver.constraints.ternary.ModTest"/>
        <method signature="ModTest.testJL()[pri:0, instance:org.chocosolver.solver.constraints.ternary.ModTest@632b96b8]" name="testJL" class="org.chocosolver.solver.constraints.ternary.ModTest"/>
        <method signature="ModelTest.testAssociates()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testAssociates" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testCompSearch()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testCompSearch" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testCriteria()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testCriteria" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testFH1()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFH1" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testFH2()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFH2" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testFind()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFind" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testFindAfterReset()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFindAfterReset" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testFindAllOptimalSolutions()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFindAllOptimalSolutions" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testFindAllOptimalSolutions2()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFindAllOptimalSolutions2" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testFindAllSolutions()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFindAllSolutions" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testFindAllSolutions2()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFindAllSolutions2" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testFindAllSolutions3()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFindAllSolutions3" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testFindAllSolutionsAfterReset()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFindAllSolutionsAfterReset" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testFindOptimalSolution()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFindOptimalSolution" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testFindOptimalSolutionWithSearch()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFindOptimalSolutionWithSearch" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testFindSolution()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFindSolution" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testHook()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testHook" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testJL1()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testJL1" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testJL300()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testJL300" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testJuTii1()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testJuTii1" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testMonitors()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testMonitors" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testName()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testName" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testNextSolution()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testNextSolution" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testParBug2()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testParBug2" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testParBug3()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testParBug3" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testRecord()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testRecord" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testRecord2()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testRecord2" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testRecord3()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testRecord3" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testRestore()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testRestore" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testRetrieveBool()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testRetrieveBool" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testRetrieveInt()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testRetrieveInt" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testRight()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testRight" class="org.chocosolver.solver.ModelTest"/>
        <method signature="ModelTest.testSwapOnPassivate()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testSwapOnPassivate" class="org.chocosolver.solver.ModelTest"/>
        <method signature="NValueTest.testAtLeast()[pri:0, instance:org.chocosolver.solver.constraints.nary.NValueTest@71cc0e35]" name="testAtLeast" class="org.chocosolver.solver.constraints.nary.NValueTest"/>
        <method signature="NValueTest.testAtLeastFixed()[pri:0, instance:org.chocosolver.solver.constraints.nary.NValueTest@71cc0e35]" name="testAtLeastFixed" class="org.chocosolver.solver.constraints.nary.NValueTest"/>
        <method signature="NValueTest.testAtLeastFixed2()[pri:0, instance:org.chocosolver.solver.constraints.nary.NValueTest@71cc0e35]" name="testAtLeastFixed2" class="org.chocosolver.solver.constraints.nary.NValueTest"/>
        <method signature="NValueTest.testAtMost()[pri:0, instance:org.chocosolver.solver.constraints.nary.NValueTest@71cc0e35]" name="testAtMost" class="org.chocosolver.solver.constraints.nary.NValueTest"/>
        <method signature="NValueTest.testAtMostFixed()[pri:0, instance:org.chocosolver.solver.constraints.nary.NValueTest@71cc0e35]" name="testAtMostFixed" class="org.chocosolver.solver.constraints.nary.NValueTest"/>
        <method signature="NValueTest.testNValuesFixed()[pri:0, instance:org.chocosolver.solver.constraints.nary.NValueTest@71cc0e35]" name="testNValuesFixed" class="org.chocosolver.solver.constraints.nary.NValueTest"/>
        <method signature="NbEmptyTest.testEmptyUnfeasible()[pri:0, instance:org.chocosolver.solver.constraints.set.NbEmptyTest@4af44f2a]" name="testEmptyUnfeasible" class="org.chocosolver.solver.constraints.set.NbEmptyTest"/>
        <method signature="NbEmptyTest.testMoreEmptyThanSetVar()[pri:0, instance:org.chocosolver.solver.constraints.set.NbEmptyTest@4af44f2a]" name="testMoreEmptyThanSetVar" class="org.chocosolver.solver.constraints.set.NbEmptyTest"/>
        <method signature="NbEmptyTest.testNoEmpty()[pri:0, instance:org.chocosolver.solver.constraints.set.NbEmptyTest@4af44f2a]" name="testNoEmpty" class="org.chocosolver.solver.constraints.set.NbEmptyTest"/>
        <method signature="NbEmptyTest.testNoEmptyUnfeasible()[pri:0, instance:org.chocosolver.solver.constraints.set.NbEmptyTest@4af44f2a]" name="testNoEmptyUnfeasible" class="org.chocosolver.solver.constraints.set.NbEmptyTest"/>
        <method signature="NbEmptyTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.NbEmptyTest@4af44f2a]" name="testNominal" class="org.chocosolver.solver.constraints.set.NbEmptyTest"/>
        <method signature="NbEmptyTest.testWithIntVar()[pri:0, instance:org.chocosolver.solver.constraints.set.NbEmptyTest@4af44f2a]" name="testWithIntVar" class="org.chocosolver.solver.constraints.set.NbEmptyTest"/>
        <method signature="NoGoodOnSolutionTest.testA()[pri:0, instance:org.chocosolver.solver.search.restart.NoGoodOnSolutionTest@1764e45e]" name="testA" class="org.chocosolver.solver.search.restart.NoGoodOnSolutionTest"/>
        <method signature="NoGoodOnSolutionTest.testNQ()[pri:0, instance:org.chocosolver.solver.search.restart.NoGoodOnSolutionTest@1764e45e]" name="testNQ" class="org.chocosolver.solver.search.restart.NoGoodOnSolutionTest"/>
        <method signature="NoGoodOnSolutionTest.testNQ2()[pri:0, instance:org.chocosolver.solver.search.restart.NoGoodOnSolutionTest@1764e45e]" name="testNQ2" class="org.chocosolver.solver.search.restart.NoGoodOnSolutionTest"/>
        <method signature="NoGoodOnSolutionTest.testNQ3()[pri:0, instance:org.chocosolver.solver.search.restart.NoGoodOnSolutionTest@1764e45e]" name="testNQ3" class="org.chocosolver.solver.search.restart.NoGoodOnSolutionTest"/>
        <method signature="NoGoodOnSolutionTest.testNQ4()[pri:0, instance:org.chocosolver.solver.search.restart.NoGoodOnSolutionTest@1764e45e]" name="testNQ4" class="org.chocosolver.solver.search.restart.NoGoodOnSolutionTest"/>
        <method signature="NoGoodOnSolutionTest.testNormal()[pri:0, instance:org.chocosolver.solver.search.restart.NoGoodOnSolutionTest@1764e45e]" name="testNormal" class="org.chocosolver.solver.search.restart.NoGoodOnSolutionTest"/>
        <method signature="NoGoodOnSolutionTest.testRoS()[pri:0, instance:org.chocosolver.solver.search.restart.NoGoodOnSolutionTest@1764e45e]" name="testRoS" class="org.chocosolver.solver.search.restart.NoGoodOnSolutionTest"/>
        <method signature="NoGoodOnSolutionTest.testRoSNG()[pri:0, instance:org.chocosolver.solver.search.restart.NoGoodOnSolutionTest@1764e45e]" name="testRoSNG" class="org.chocosolver.solver.search.restart.NoGoodOnSolutionTest"/>
        <method signature="NogoodTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.NogoodTest@6a562255]" name="test1" class="org.chocosolver.solver.constraints.nary.NogoodTest"/>
        <method signature="NogoodTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.NogoodTest@6a562255]" name="test2" class="org.chocosolver.solver.constraints.nary.NogoodTest"/>
        <method signature="NogoodTest.test3()[pri:0, instance:org.chocosolver.solver.constraints.nary.NogoodTest@6a562255]" name="test3" class="org.chocosolver.solver.constraints.nary.NogoodTest"/>
        <method signature="NogoodTest.test4()[pri:0, instance:org.chocosolver.solver.constraints.nary.NogoodTest@6a562255]" name="test4" class="org.chocosolver.solver.constraints.nary.NogoodTest"/>
        <method signature="NotEmptyTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.NotEmptyTest@47994b51]" name="testNominal" class="org.chocosolver.solver.constraints.set.NotEmptyTest"/>
        <method signature="NotEmptyTest.testTrivialFalse()[pri:0, instance:org.chocosolver.solver.constraints.set.NotEmptyTest@47994b51]" name="testTrivialFalse" class="org.chocosolver.solver.constraints.set.NotEmptyTest"/>
        <method signature="NotEmptyTest.testTrivialTrue()[pri:0, instance:org.chocosolver.solver.constraints.set.NotEmptyTest@47994b51]" name="testTrivialTrue" class="org.chocosolver.solver.constraints.set.NotEmptyTest"/>
        <method signature="NotEqualX_YCTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.binary.NotEqualX_YCTest@63243c8f]" name="test1" class="org.chocosolver.solver.constraints.binary.NotEqualX_YCTest"/>
        <method signature="NotEqualX_YCTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.binary.NotEqualX_YCTest@63243c8f]" name="test2" class="org.chocosolver.solver.constraints.binary.NotEqualX_YCTest"/>
        <method signature="NotEqualX_YCTest.test3()[pri:0, instance:org.chocosolver.solver.constraints.binary.NotEqualX_YCTest@63243c8f]" name="test3" class="org.chocosolver.solver.constraints.binary.NotEqualX_YCTest"/>
        <method signature="NotMemberTest.emptySet()[pri:0, instance:org.chocosolver.solver.constraints.set.NotMemberTest@2ffcdc9b]" name="emptySet" class="org.chocosolver.solver.constraints.set.NotMemberTest"/>
        <method signature="NotMemberTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.unary.NotMemberTest@5bf1b528]" name="test1" class="org.chocosolver.solver.constraints.unary.NotMemberTest"/>
        <method signature="NotMemberTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.unary.NotMemberTest@5bf1b528]" name="test2" class="org.chocosolver.solver.constraints.unary.NotMemberTest"/>
        <method signature="NotMemberTest.testFixedValue()[pri:0, instance:org.chocosolver.solver.constraints.set.NotMemberTest@2ffcdc9b]" name="testFixedValue" class="org.chocosolver.solver.constraints.set.NotMemberTest"/>
        <method signature="NotMemberTest.testFixedValueSure()[pri:0, instance:org.chocosolver.solver.constraints.set.NotMemberTest@2ffcdc9b]" name="testFixedValueSure" class="org.chocosolver.solver.constraints.set.NotMemberTest"/>
        <method signature="NotMemberTest.testFixedValueWrong()[pri:0, instance:org.chocosolver.solver.constraints.set.NotMemberTest@2ffcdc9b]" name="testFixedValueWrong" class="org.chocosolver.solver.constraints.set.NotMemberTest"/>
        <method signature="NotMemberTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.NotMemberTest@2ffcdc9b]" name="testNominal" class="org.chocosolver.solver.constraints.set.NotMemberTest"/>
        <method signature="NotMemberTest.testTrivialTrue()[pri:0, instance:org.chocosolver.solver.constraints.set.NotMemberTest@2ffcdc9b]" name="testTrivialTrue" class="org.chocosolver.solver.constraints.set.NotMemberTest"/>
        <method signature="NotMemberTest.test_alxpgr()[pri:0, instance:org.chocosolver.solver.constraints.unary.NotMemberTest@5bf1b528]" name="test_alxpgr" class="org.chocosolver.solver.constraints.unary.NotMemberTest"/>
        <method signature="NotMemberTest.trivialFalse()[pri:0, instance:org.chocosolver.solver.constraints.set.NotMemberTest@2ffcdc9b]" name="trivialFalse" class="org.chocosolver.solver.constraints.set.NotMemberTest"/>
        <method signature="ObjectiveTest.test1()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="test1" class="org.chocosolver.solver.search.ObjectiveTest"/>
        <method signature="ObjectiveTest.test2()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="test2" class="org.chocosolver.solver.search.ObjectiveTest"/>
        <method signature="ObjectiveTest.test3()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="test3" class="org.chocosolver.solver.search.ObjectiveTest"/>
        <method signature="ObjectiveTest.test4()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="test4" class="org.chocosolver.solver.search.ObjectiveTest"/>
        <method signature="ObjectiveTest.testAdaptiveCut1()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="testAdaptiveCut1" class="org.chocosolver.solver.search.ObjectiveTest"/>
        <method signature="ObjectiveTest.testAdaptiveCut2()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="testAdaptiveCut2" class="org.chocosolver.solver.search.ObjectiveTest"/>
        <method signature="ObjectiveTest.testAdaptiveCut3()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="testAdaptiveCut3" class="org.chocosolver.solver.search.ObjectiveTest"/>
        <method signature="ObjectiveTest.testJL1()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="testJL1" class="org.chocosolver.solver.search.ObjectiveTest"/>
        <method signature="ObjectiveTest.testJL2()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="testJL2" class="org.chocosolver.solver.search.ObjectiveTest"/>
        <method signature="ObjectiveTest.testMaxIntObj()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="testMaxIntObj" class="org.chocosolver.solver.search.ObjectiveTest"/>
        <method signature="ObjectiveTest.testMaxRealObj()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="testMaxRealObj" class="org.chocosolver.solver.search.ObjectiveTest"/>
        <method signature="ObjectiveTest.testMinIntObjCopy()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="testMinIntObjCopy" class="org.chocosolver.solver.search.ObjectiveTest"/>
        <method signature="ObjectiveTest.testMinRealObj()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="testMinRealObj" class="org.chocosolver.solver.search.ObjectiveTest"/>
        <method signature="ObjectiveTest.testSatObj()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="testSatObj" class="org.chocosolver.solver.search.ObjectiveTest"/>
        <method signature="ObjectiveTest.testSerializeObjMan()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="testSerializeObjMan" class="org.chocosolver.solver.search.ObjectiveTest"/>
        <method signature="OffsetTest.testEqualityFalse()[pri:0, instance:org.chocosolver.solver.constraints.set.OffsetTest@1860b107]" name="testEqualityFalse" class="org.chocosolver.solver.constraints.set.OffsetTest"/>
        <method signature="OffsetTest.testEqualityTrue()[pri:0, instance:org.chocosolver.solver.constraints.set.OffsetTest@1860b107]" name="testEqualityTrue" class="org.chocosolver.solver.constraints.set.OffsetTest"/>
        <method signature="OffsetTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.OffsetTest@1860b107]" name="testNominal" class="org.chocosolver.solver.constraints.set.OffsetTest"/>
        <method signature="OffsetTest.testNominalInverse()[pri:0, instance:org.chocosolver.solver.constraints.set.OffsetTest@1860b107]" name="testNominalInverse" class="org.chocosolver.solver.constraints.set.OffsetTest"/>
        <method signature="OffsetTest.testNominalNegative()[pri:0, instance:org.chocosolver.solver.constraints.set.OffsetTest@1860b107]" name="testNominalNegative" class="org.chocosolver.solver.constraints.set.OffsetTest"/>
        <method signature="OffsetTest.wrongLowerBound()[pri:0, instance:org.chocosolver.solver.constraints.set.OffsetTest@1860b107]" name="wrongLowerBound" class="org.chocosolver.solver.constraints.set.OffsetTest"/>
        <method signature="OffsetTest.wrongUpperBound()[pri:0, instance:org.chocosolver.solver.constraints.set.OffsetTest@1860b107]" name="wrongUpperBound" class="org.chocosolver.solver.constraints.set.OffsetTest"/>
        <method signature="OffsetViewTest.test1()[pri:0, instance:org.chocosolver.solver.variables.OffsetViewTest@1e288c76]" name="test1" class="org.chocosolver.solver.variables.OffsetViewTest"/>
        <method signature="OffsetViewTest.test2()[pri:0, instance:org.chocosolver.solver.variables.OffsetViewTest@1e288c76]" name="test2" class="org.chocosolver.solver.variables.OffsetViewTest"/>
        <method signature="OffsetViewTest.testIt1()[pri:0, instance:org.chocosolver.solver.variables.OffsetViewTest@1e288c76]" name="testIt1" class="org.chocosolver.solver.variables.OffsetViewTest"/>
        <method signature="OffsetViewTest.testIt2()[pri:0, instance:org.chocosolver.solver.variables.OffsetViewTest@1e288c76]" name="testIt2" class="org.chocosolver.solver.variables.OffsetViewTest"/>
        <method signature="ParetoTest.testPareto()[pri:0, instance:org.chocosolver.solver.search.ParetoTest@4745bcc6]" name="testPareto" class="org.chocosolver.solver.search.ParetoTest"/>
        <method signature="PathTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.PathTest@581d5b33]" name="test1" class="org.chocosolver.solver.constraints.nary.PathTest"/>
        <method signature="PathTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.PathTest@581d5b33]" name="test2" class="org.chocosolver.solver.constraints.nary.PathTest"/>
        <method signature="PathTest.test2wrong()[pri:0, instance:org.chocosolver.solver.constraints.nary.PathTest@581d5b33]" name="test2wrong" class="org.chocosolver.solver.constraints.nary.PathTest"/>
        <method signature="PathTest.test3()[pri:0, instance:org.chocosolver.solver.constraints.nary.PathTest@581d5b33]" name="test3" class="org.chocosolver.solver.constraints.nary.PathTest"/>
        <method signature="PathTest.test4()[pri:0, instance:org.chocosolver.solver.constraints.nary.PathTest@581d5b33]" name="test4" class="org.chocosolver.solver.constraints.nary.PathTest"/>
        <method signature="PathTest.test4sub()[pri:0, instance:org.chocosolver.solver.constraints.nary.PathTest@581d5b33]" name="test4sub" class="org.chocosolver.solver.constraints.nary.PathTest"/>
        <method signature="PathTest.test4sub2()[pri:0, instance:org.chocosolver.solver.constraints.nary.PathTest@581d5b33]" name="test4sub2" class="org.chocosolver.solver.constraints.nary.PathTest"/>
        <method signature="PathTest.test5()[pri:0, instance:org.chocosolver.solver.constraints.nary.PathTest@581d5b33]" name="test5" class="org.chocosolver.solver.constraints.nary.PathTest"/>
        <method signature="PopTest.testEnvPushPop(org.chocosolver.memory.trailing.EnvironmentTrailing)[pri:0, instance:org.chocosolver.memory.PopTest@7fce1069]" name="testEnvPushPop" class="org.chocosolver.memory.PopTest"/>
        <method signature="PopTest.testEnvTPop(org.chocosolver.memory.trailing.EnvironmentTrailing)[pri:0, instance:org.chocosolver.memory.PopTest@7fce1069]" name="testEnvTPop" class="org.chocosolver.memory.PopTest"/>
        <method signature="PortFolioTest.testP1()[pri:0, instance:org.chocosolver.solver.PortFolioTest@1c14d24d]" name="testP1" class="org.chocosolver.solver.PortFolioTest"/>
        <method signature="PortFolioTest.testParWait()[pri:0, instance:org.chocosolver.solver.PortFolioTest@1c14d24d]" name="testParWait" class="org.chocosolver.solver.PortFolioTest"/>
        <method signature="PropConDisTest.testCD1()[pri:0, instance:org.chocosolver.solver.constraints.reification.PropConDisTest@4d90d91f]" name="testCD1" class="org.chocosolver.solver.constraints.reification.PropConDisTest"/>
        <method signature="PropConDisTest.testCD2()[pri:0, instance:org.chocosolver.solver.constraints.reification.PropConDisTest@4d90d91f]" name="testCD2" class="org.chocosolver.solver.constraints.reification.PropConDisTest"/>
        <method signature="PropCondAllDiffTest.noVariable()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="noVariable" class="org.chocosolver.solver.constraints.nary.PropCondAllDiffTest"/>
        <method signature="PropCondAllDiffTest.singleVariable()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="singleVariable" class="org.chocosolver.solver.constraints.nary.PropCondAllDiffTest"/>
        <method signature="PropCondAllDiffTest.testDynamicCondition()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="testDynamicCondition" class="org.chocosolver.solver.constraints.nary.PropCondAllDiffTest"/>
        <method signature="PropCondAllDiffTest.testEnumeratedValues()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="testEnumeratedValues" class="org.chocosolver.solver.constraints.nary.PropCondAllDiffTest"/>
        <method signature="PropCondAllDiffTest.testExceptZero()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="testExceptZero" class="org.chocosolver.solver.constraints.nary.PropCondAllDiffTest"/>
        <method signature="PropCondAllDiffTest.testFreeVariables()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="testFreeVariables" class="org.chocosolver.solver.constraints.nary.PropCondAllDiffTest"/>
        <method signature="PropCondAllDiffTest.testImpossible()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="testImpossible" class="org.chocosolver.solver.constraints.nary.PropCondAllDiffTest"/>
        <method signature="PropCondAllDiffTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="testNominal" class="org.chocosolver.solver.constraints.nary.PropCondAllDiffTest"/>
        <method signature="PropCondAllDiffTest.testNominalNegative()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="testNominalNegative" class="org.chocosolver.solver.constraints.nary.PropCondAllDiffTest"/>
        <method signature="PropCondAllDiffTest.testPropagation()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="testPropagation" class="org.chocosolver.solver.constraints.nary.PropCondAllDiffTest"/>
        <method signature="PropCondAllDiffTest.testTrivialFalse()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="testTrivialFalse" class="org.chocosolver.solver.constraints.nary.PropCondAllDiffTest"/>
        <method signature="PropCondAllDiffTest.testTrivialTrue()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="testTrivialTrue" class="org.chocosolver.solver.constraints.nary.PropCondAllDiffTest"/>
        <method signature="PropCondAllDiffTest.testTrueCondition()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="testTrueCondition" class="org.chocosolver.solver.constraints.nary.PropCondAllDiffTest"/>
        <method signature="PropEngineTest.test1()[pri:0, instance:org.chocosolver.solver.propagation.PropEngineTest@6033f36c]" name="test1" class="org.chocosolver.solver.propagation.PropEngineTest"/>
        <method signature="PropEngineTest.test2a()[pri:0, instance:org.chocosolver.solver.propagation.PropEngineTest@6033f36c]" name="test2a" class="org.chocosolver.solver.propagation.PropEngineTest"/>
        <method signature="PropEngineTest.test2b()[pri:0, instance:org.chocosolver.solver.propagation.PropEngineTest@6033f36c]" name="test2b" class="org.chocosolver.solver.propagation.PropEngineTest"/>
        <method signature="PropEngineTest.test2c()[pri:0, instance:org.chocosolver.solver.propagation.PropEngineTest@6033f36c]" name="test2c" class="org.chocosolver.solver.propagation.PropEngineTest"/>
        <method signature="PropEngineTest.test3()[pri:0, instance:org.chocosolver.solver.propagation.PropEngineTest@6033f36c]" name="test3" class="org.chocosolver.solver.propagation.PropEngineTest"/>
        <method signature="PropEngineTest.testClone()[pri:0, instance:org.chocosolver.solver.propagation.PropEngineTest@6033f36c]" name="testClone" class="org.chocosolver.solver.propagation.PropEngineTest"/>
        <method signature="PropEngineTest.testGregy41()[pri:0, instance:org.chocosolver.solver.propagation.PropEngineTest@6033f36c]" name="testGregy41" class="org.chocosolver.solver.propagation.PropEngineTest"/>
        <method signature="PropEngineTest.testJG1()[pri:0, instance:org.chocosolver.solver.propagation.PropEngineTest@6033f36c]" name="testJG1" class="org.chocosolver.solver.propagation.PropEngineTest"/>
        <method signature="PropEngineTest.testJG2()[pri:0, instance:org.chocosolver.solver.propagation.PropEngineTest@6033f36c]" name="testJG2" class="org.chocosolver.solver.propagation.PropEngineTest"/>
        <method signature="PropEngineTest.testJG3()[pri:0, instance:org.chocosolver.solver.propagation.PropEngineTest@6033f36c]" name="testJG3" class="org.chocosolver.solver.propagation.PropEngineTest"/>
        <method signature="PropNogoodsTest.testApplyEarlyDeductions()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testApplyEarlyDeductions" class="org.chocosolver.sat.PropNogoodsTest"/>
        <method signature="PropNogoodsTest.testDeclareDomainNogood()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testDeclareDomainNogood" class="org.chocosolver.sat.PropNogoodsTest"/>
        <method signature="PropNogoodsTest.testDoReduce1()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testDoReduce1" class="org.chocosolver.sat.PropNogoodsTest"/>
        <method signature="PropNogoodsTest.testDoReduce2()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testDoReduce2" class="org.chocosolver.sat.PropNogoodsTest"/>
        <method signature="PropNogoodsTest.testDoReduce3()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testDoReduce3" class="org.chocosolver.sat.PropNogoodsTest"/>
        <method signature="PropNogoodsTest.testDoReduce4()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testDoReduce4" class="org.chocosolver.sat.PropNogoodsTest"/>
        <method signature="PropNogoodsTest.testIsEntailed1()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testIsEntailed1" class="org.chocosolver.sat.PropNogoodsTest"/>
        <method signature="PropNogoodsTest.testIsEntailed2()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testIsEntailed2" class="org.chocosolver.sat.PropNogoodsTest"/>
        <method signature="PropNogoodsTest.testIseq()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testIseq" class="org.chocosolver.sat.PropNogoodsTest"/>
        <method signature="PropNogoodsTest.testIvalue()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testIvalue" class="org.chocosolver.sat.PropNogoodsTest"/>
        <method signature="PropNogoodsTest.testLiteral1()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testLiteral1" class="org.chocosolver.sat.PropNogoodsTest"/>
        <method signature="PropNogoodsTest.testLiteral2()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testLiteral2" class="org.chocosolver.sat.PropNogoodsTest"/>
        <method signature="PropNogoodsTest.testPropagate()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testPropagate" class="org.chocosolver.sat.PropNogoodsTest"/>
        <method signature="PropNogoodsTest.testPropagate1()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testPropagate1" class="org.chocosolver.sat.PropNogoodsTest"/>
        <method signature="PropNogoodsTest.testVariableBound1()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testVariableBound1" class="org.chocosolver.sat.PropNogoodsTest"/>
        <method signature="PropNogoodsTest.testVariableBound2()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testVariableBound2" class="org.chocosolver.sat.PropNogoodsTest"/>
        <method signature="PropNogoodsTest.testVariableBound3()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testVariableBound3" class="org.chocosolver.sat.PropNogoodsTest"/>
        <method signature="PropNogoodsTest.testVariableBound4()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testVariableBound4" class="org.chocosolver.sat.PropNogoodsTest"/>
        <method signature="PropNogoodsTest.testWhy()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testWhy" class="org.chocosolver.sat.PropNogoodsTest"/>
        <method signature="RangeSetTest.testAddNegativeKO()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testAddNegativeKO" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest"/>
        <method signature="RealTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="test1" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="test2" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.test4()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="test4" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testDetec()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testDetec" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testFN1()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testFN1" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testFN2()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testFN2" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testFreemajb1()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testFreemajb1" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testFreemajb2()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testFreemajb2" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testFreemajb3()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testFreemajb3" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testHM1(java.lang.String)[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testHM1" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testHM2()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testHM2" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testHM21()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testHM21" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testJJ1()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJJ1" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testJJ2()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJJ2" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testJJ3()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJJ3" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testJJ34()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJJ34" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testJJ35()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJJ35" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testJiiTee1()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJiiTee1" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testJuha1()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha1" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testJuha2()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha2" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testJuha3()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha3" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testJuha4()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha4" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testMove1()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testMove1" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testMove2()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testMove2" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testMove3()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testMove3" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testMove4()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testMove4" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testMove5()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testMove5" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testPG1()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testPG1" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testPeter()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testPeter" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testPostUnpost()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testPostUnpost" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testRoberto1()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testRoberto1" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RealTest.testRoberto3()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testRoberto3" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RegularTest.ccostregular2()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="ccostregular2" class="org.chocosolver.solver.constraints.nary.RegularTest"/>
        <method signature="RegularTest.compareVersionSpeedNew2()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="compareVersionSpeedNew2" class="org.chocosolver.solver.constraints.nary.RegularTest"/>
        <method signature="RegularTest.testNeg()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testNeg" class="org.chocosolver.solver.constraints.nary.RegularTest"/>
        <method signature="RegularTest.testSimpleAuto()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testSimpleAuto" class="org.chocosolver.solver.constraints.nary.RegularTest"/>
        <method signature="RegularTest.testregExp1()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp1" class="org.chocosolver.solver.constraints.nary.RegularTest"/>
        <method signature="RegularTest.testregExp10()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp10" class="org.chocosolver.solver.constraints.nary.RegularTest"/>
        <method signature="RegularTest.testregExp11()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp11" class="org.chocosolver.solver.constraints.nary.RegularTest"/>
        <method signature="RegularTest.testregExp12()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp12" class="org.chocosolver.solver.constraints.nary.RegularTest"/>
        <method signature="RegularTest.testregExp2()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp2" class="org.chocosolver.solver.constraints.nary.RegularTest"/>
        <method signature="RegularTest.testregExp3()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp3" class="org.chocosolver.solver.constraints.nary.RegularTest"/>
        <method signature="RegularTest.testregExp4()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp4" class="org.chocosolver.solver.constraints.nary.RegularTest"/>
        <method signature="RegularTest.testregExp5()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp5" class="org.chocosolver.solver.constraints.nary.RegularTest"/>
        <method signature="RegularTest.testregExp6()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp6" class="org.chocosolver.solver.constraints.nary.RegularTest"/>
        <method signature="RegularTest.testregExp7()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp7" class="org.chocosolver.solver.constraints.nary.RegularTest"/>
        <method signature="RegularTest.testregExp8()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp8" class="org.chocosolver.solver.constraints.nary.RegularTest"/>
        <method signature="RegularTest.testregExp9()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp9" class="org.chocosolver.solver.constraints.nary.RegularTest"/>
        <method signature="ReifiedTest.testAllDifferentDecompSpe1()[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="testAllDifferentDecompSpe1" class="org.chocosolver.solver.constraints.reification.ReifiedTest"/>
        <method signature="ReifiedTest.testBACP()[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="testBACP" class="org.chocosolver.solver.constraints.reification.ReifiedTest"/>
        <method signature="ReifiedTest.testRandomEq()[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="testRandomEq" class="org.chocosolver.solver.constraints.reification.ReifiedTest"/>
        <method signature="ReifiedTest.testRandomMember()[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="testRandomMember" class="org.chocosolver.solver.constraints.reification.ReifiedTest"/>
        <method signature="ReifiedTest.testRandomNeq()[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="testRandomNeq" class="org.chocosolver.solver.constraints.reification.ReifiedTest"/>
        <method signature="ReifiedTest.test_reif(int, int)[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_reif" class="org.chocosolver.solver.constraints.reification.ReifiedTest"/>
        <method signature="ReifiedTest.test_reif2(int, int)[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_reif2" class="org.chocosolver.solver.constraints.reification.ReifiedTest"/>
        <method signature="ReifiedTest.test_wellaweg1()[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_wellaweg1" class="org.chocosolver.solver.constraints.reification.ReifiedTest"/>
        <method signature="ReifiedTest.test_wellaweg3()[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_wellaweg3" class="org.chocosolver.solver.constraints.reification.ReifiedTest"/>
        <method signature="ReifiedTest.test_wellaweg4()[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_wellaweg4" class="org.chocosolver.solver.constraints.reification.ReifiedTest"/>
        <method signature="ReifiedTest.test_wellaweg5()[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_wellaweg5" class="org.chocosolver.solver.constraints.reification.ReifiedTest"/>
        <method signature="RestartTest.testGeometricalRestart1()[pri:0, instance:org.chocosolver.solver.search.restart.RestartTest@50b624da]" name="testGeometricalRestart1" class="org.chocosolver.solver.search.restart.RestartTest"/>
        <method signature="RestartTest.testGeometricalRestart2()[pri:0, instance:org.chocosolver.solver.search.restart.RestartTest@50b624da]" name="testGeometricalRestart2" class="org.chocosolver.solver.search.restart.RestartTest"/>
        <method signature="RestartTest.testLubyRestart1()[pri:0, instance:org.chocosolver.solver.search.restart.RestartTest@50b624da]" name="testLubyRestart1" class="org.chocosolver.solver.search.restart.RestartTest"/>
        <method signature="RuleStoreTest.testBoolFullDom()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testBoolFullDom" class="org.chocosolver.solver.explanations.RuleStoreTest"/>
        <method signature="RuleStoreTest.testBoundBound()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testBoundBound" class="org.chocosolver.solver.explanations.RuleStoreTest"/>
        <method signature="RuleStoreTest.testBoundFullDom()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testBoundFullDom" class="org.chocosolver.solver.explanations.RuleStoreTest"/>
        <method signature="RuleStoreTest.testBoundLow()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testBoundLow" class="org.chocosolver.solver.explanations.RuleStoreTest"/>
        <method signature="RuleStoreTest.testBoundRem()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testBoundRem" class="org.chocosolver.solver.explanations.RuleStoreTest"/>
        <method signature="RuleStoreTest.testBoundRem2()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testBoundRem2" class="org.chocosolver.solver.explanations.RuleStoreTest"/>
        <method signature="RuleStoreTest.testBoundUpp()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testBoundUpp" class="org.chocosolver.solver.explanations.RuleStoreTest"/>
        <method signature="RuleStoreTest.testDecRefutation()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testDecRefutation" class="org.chocosolver.solver.explanations.RuleStoreTest"/>
        <method signature="RuleStoreTest.testEnumBound()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testEnumBound" class="org.chocosolver.solver.explanations.RuleStoreTest"/>
        <method signature="RuleStoreTest.testEnumFullDom()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testEnumFullDom" class="org.chocosolver.solver.explanations.RuleStoreTest"/>
        <method signature="RuleStoreTest.testEnumLow()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testEnumLow" class="org.chocosolver.solver.explanations.RuleStoreTest"/>
        <method signature="RuleStoreTest.testEnumRem()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testEnumRem" class="org.chocosolver.solver.explanations.RuleStoreTest"/>
        <method signature="RuleStoreTest.testEnumUpp()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testEnumUpp" class="org.chocosolver.solver.explanations.RuleStoreTest"/>
        <method signature="SatTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test1" class="org.chocosolver.solver.constraints.nary.SatTest"/>
        <method signature="SatTest.test10()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test10" class="org.chocosolver.solver.constraints.nary.SatTest"/>
        <method signature="SatTest.test11()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test11" class="org.chocosolver.solver.constraints.nary.SatTest"/>
        <method signature="SatTest.test12()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test12" class="org.chocosolver.solver.constraints.nary.SatTest"/>
        <method signature="SatTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test2" class="org.chocosolver.solver.constraints.nary.SatTest"/>
        <method signature="SatTest.test3()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test3" class="org.chocosolver.solver.constraints.nary.SatTest"/>
        <method signature="SatTest.test4()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test4" class="org.chocosolver.solver.constraints.nary.SatTest"/>
        <method signature="SatTest.test5()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test5" class="org.chocosolver.solver.constraints.nary.SatTest"/>
        <method signature="SatTest.test6()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test6" class="org.chocosolver.solver.constraints.nary.SatTest"/>
        <method signature="SatTest.test7()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test7" class="org.chocosolver.solver.constraints.nary.SatTest"/>
        <method signature="SatTest.test8()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test8" class="org.chocosolver.solver.constraints.nary.SatTest"/>
        <method signature="SatTest.test9()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test9" class="org.chocosolver.solver.constraints.nary.SatTest"/>
        <method signature="SatTest.testAlexLoboda()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="testAlexLoboda" class="org.chocosolver.solver.constraints.nary.SatTest"/>
        <method signature="ScalarTest.testCoeffAtZeroNoSolutions()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="testCoeffAtZeroNoSolutions" class="org.chocosolver.solver.constraints.nary.ScalarTest"/>
        <method signature="ScalarTest.testCoeffAtZeroSolutions()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="testCoeffAtZeroSolutions" class="org.chocosolver.solver.constraints.nary.ScalarTest"/>
        <method signature="ScalarTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="testNominal" class="org.chocosolver.solver.constraints.nary.ScalarTest"/>
        <method signature="ScalarTest.testNominalBounded()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="testNominalBounded" class="org.chocosolver.solver.constraints.nary.ScalarTest"/>
        <method signature="ScalarTest.testNominalBoundedWithNegatives()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="testNominalBoundedWithNegatives" class="org.chocosolver.solver.constraints.nary.ScalarTest"/>
        <method signature="ScalarTest.testSameVariableNoSolution()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="testSameVariableNoSolution" class="org.chocosolver.solver.constraints.nary.ScalarTest"/>
        <method signature="ScalarTest.testSameVariableSolution()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="testSameVariableSolution" class="org.chocosolver.solver.constraints.nary.ScalarTest"/>
        <method signature="ScalarTest.testWithSumVariable()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="testWithSumVariable" class="org.chocosolver.solver.constraints.nary.ScalarTest"/>
        <method signature="ScaleViewTest.test1()[pri:0, instance:org.chocosolver.solver.variables.ScaleViewTest@77988c45]" name="test1" class="org.chocosolver.solver.variables.ScaleViewTest"/>
        <method signature="ScaleViewTest.test2()[pri:0, instance:org.chocosolver.solver.variables.ScaleViewTest@77988c45]" name="test2" class="org.chocosolver.solver.variables.ScaleViewTest"/>
        <method signature="ScaleViewTest.testCP01()[pri:0, instance:org.chocosolver.solver.variables.ScaleViewTest@77988c45]" name="testCP01" class="org.chocosolver.solver.variables.ScaleViewTest"/>
        <method signature="ScaleViewTest.testDec1()[pri:0, instance:org.chocosolver.solver.variables.ScaleViewTest@77988c45]" name="testDec1" class="org.chocosolver.solver.variables.ScaleViewTest"/>
        <method signature="ScaleViewTest.testIt1()[pri:0, instance:org.chocosolver.solver.variables.ScaleViewTest@77988c45]" name="testIt1" class="org.chocosolver.solver.variables.ScaleViewTest"/>
        <method signature="ScaleViewTest.testIt2()[pri:0, instance:org.chocosolver.solver.variables.ScaleViewTest@77988c45]" name="testIt2" class="org.chocosolver.solver.variables.ScaleViewTest"/>
        <method signature="ScaleViewTest.testJL01()[pri:0, instance:org.chocosolver.solver.variables.ScaleViewTest@77988c45]" name="testJL01" class="org.chocosolver.solver.variables.ScaleViewTest"/>
        <method signature="SetCstrsTest.testEq()[pri:0, instance:org.chocosolver.solver.constraints.set.SetCstrsTest@1b6683c4]" name="testEq" class="org.chocosolver.solver.constraints.set.SetCstrsTest"/>
        <method signature="SetTest.testAddAlreadyExists()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testAddAlreadyExists" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddAlreadyExists()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testAddAlreadyExists" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddAlreadyExists()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testAddAlreadyExists" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddAlreadyExists()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testAddAlreadyExists" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddAlreadyExists()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testAddAlreadyExists" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddAlreadyExists()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testAddAlreadyExists" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddAlreadyExists()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testAddAlreadyExists" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddAlreadyExists()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testAddAlreadyExists" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddAlreadyExists()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testAddAlreadyExists" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddAlreadyExists()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testAddAlreadyExists" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddMaxValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testAddMaxValue" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddMaxValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testAddMaxValue" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddMaxValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testAddMaxValue" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddMaxValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testAddMaxValue" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddMaxValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testAddMaxValue" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddMaxValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testAddMaxValue" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddMaxValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testAddMaxValue" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddMaxValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testAddMaxValue" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddMaxValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testAddMaxValue" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddMaxValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testAddMaxValue" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNegativeKO()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testAddNegativeKO" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNegativeKO()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testAddNegativeKO" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNegativeKO()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testAddNegativeKO" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNegativeKO()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testAddNegativeKO" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNegativeKO()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testAddNegativeKO" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNegativeOK()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testAddNegativeOK" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNegativeOK()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testAddNegativeOK" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNegativeOK()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testAddNegativeOK" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNegativeOK()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testAddNegativeOK" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNegativeOK()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testAddNegativeOK" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNegativeOK()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testAddNegativeOK" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNegativeOK()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testAddNegativeOK" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNegativeOK()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testAddNegativeOK" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNegativeOK()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testAddNegativeOK" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNegativeOK()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testAddNegativeOK" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNominal()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testAddNominal" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNominal()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testAddNominal" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNominal()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testAddNominal" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNominal()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testAddNominal" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNominal()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testAddNominal" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNominal()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testAddNominal" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNominal()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testAddNominal" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNominal()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testAddNominal" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNominal()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testAddNominal" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNominal()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testAddNominal" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNominal2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testAddNominal2" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNominal2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testAddNominal2" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNominal2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testAddNominal2" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNominal2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testAddNominal2" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNominal2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testAddNominal2" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNominal2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testAddNominal2" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNominal2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testAddNominal2" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNominal2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testAddNominal2" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNominal2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testAddNominal2" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddNominal2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testAddNominal2" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddRemoveReturnValueNB()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testAddRemoveReturnValueNB" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddRemoveReturnValueNB()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testAddRemoveReturnValueNB" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddRemoveReturnValueNB()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testAddRemoveReturnValueNB" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddRemoveReturnValueNB()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testAddRemoveReturnValueNB" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddRemoveReturnValueNB()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testAddRemoveReturnValueNB" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddRemoveReturnValueNB()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testAddRemoveReturnValueNB" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddRemoveReturnValueNB()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testAddRemoveReturnValueNB" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddRemoveReturnValueNB()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testAddRemoveReturnValueNB" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddRemoveReturnValueNB()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testAddRemoveReturnValueNB" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testAddRemoveReturnValueNB()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testAddRemoveReturnValueNB" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testClear" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testClear" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testClear" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testClear" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testClear" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testClear" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testClear" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testClear" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testClear" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testClear" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEmptyMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testEmptyMax" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEmptyMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testEmptyMax" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEmptyMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testEmptyMax" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEmptyMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testEmptyMax" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEmptyMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testEmptyMax" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEmptyMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testEmptyMax" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEmptyMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testEmptyMax" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEmptyMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testEmptyMax" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEmptyMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testEmptyMax" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEmptyMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testEmptyMax" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEmptyMin()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testEmptyMin" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEmptyMin()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testEmptyMin" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEmptyMin()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testEmptyMin" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEmptyMin()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testEmptyMin" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEmptyMin()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testEmptyMin" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEmptyMin()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testEmptyMin" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEmptyMin()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testEmptyMin" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEmptyMin()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testEmptyMin" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEmptyMin()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testEmptyMin" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEmptyMin()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testEmptyMin" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEquals()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testEquals" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEquals()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testEquals" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEquals()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testEquals" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEquals()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testEquals" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEquals()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testEquals" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEquals()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testEquals" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEquals()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testEquals" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEquals()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testEquals" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEquals()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testEquals" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testEquals()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testEquals" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testIterator" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testIterator" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testIterator" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testIterator" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testIterator" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testIterator" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testIterator" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testIterator" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testIterator" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testIterator" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testIteratorLength()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testIteratorLength" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testIteratorLength()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testIteratorLength" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testIteratorLength()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testIteratorLength" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testIteratorLength()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testIteratorLength" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testIteratorLength()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testIteratorLength" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testIteratorLength()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testIteratorLength" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testIteratorLength()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testIteratorLength" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testIteratorLength()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testIteratorLength" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testIteratorLength()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testIteratorLength" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testIteratorLength()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testIteratorLength" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testMinMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testMinMax" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testMinMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testMinMax" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testMinMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testMinMax" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testMinMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testMinMax" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testMinMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testMinMax" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testMinMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testMinMax" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testMinMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testMinMax" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testMinMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testMinMax" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testMinMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testMinMax" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testMinMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testMinMax" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testMultipleLoops()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testMultipleLoops" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testMultipleLoops()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testMultipleLoops" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testMultipleLoops()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testMultipleLoops" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testMultipleLoops()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testMultipleLoops" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testMultipleLoops()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testMultipleLoops" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testMultipleLoops()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testMultipleLoops" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testMultipleLoops()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testMultipleLoops" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testMultipleLoops()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testMultipleLoops" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testMultipleLoops()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testMultipleLoops" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testMultipleLoops()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testMultipleLoops" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testNewIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testNewIterator" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testNewIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testNewIterator" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testNewIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testNewIterator" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testNewIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testNewIterator" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testNewIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testNewIterator" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testNewIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testNewIterator" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testNewIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testNewIterator" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testNewIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testNewIterator" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testNewIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testNewIterator" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testNewIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testNewIterator" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testReadOnlySet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testReadOnlySet" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testReadOnlySet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testReadOnlySet" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testReadOnlySet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testReadOnlySet" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testReadOnlySet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testReadOnlySet" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testReadOnlySet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testReadOnlySet" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testReadOnlySet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testReadOnlySet" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testReadOnlySet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testReadOnlySet" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testReadOnlySet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testReadOnlySet" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testReadOnlySet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testReadOnlySet" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testReadOnlySet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testReadOnlySet" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testRemove" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testRemove" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testRemove" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testRemove" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testRemove" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testRemove" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testRemove" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testRemove" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testRemove" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testRemove" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testRemoveInLoop()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testRemoveInLoop" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testRemoveInLoop()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testRemoveInLoop" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testRemoveInLoop()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testRemoveInLoop" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testRemoveInLoop()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testRemoveInLoop" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testRemoveInLoop()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testRemoveInLoop" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testRemoveInLoop()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testRemoveInLoop" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testRemoveInLoop()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testRemoveInLoop" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testRemoveInLoop()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testRemoveInLoop" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testRemoveInLoop()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testRemoveInLoop" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetTest.testRemoveInLoop()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testRemoveInLoop" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest"/>
        <method signature="SetVarImplTest.testPropagate()[pri:0, instance:org.chocosolver.solver.variables.impl.SetVarImplTest@76b019c4]" name="testPropagate" class="org.chocosolver.solver.variables.impl.SetVarImplTest"/>
        <method signature="SetVarImplTest.testPropagate2()[pri:0, instance:org.chocosolver.solver.variables.impl.SetVarImplTest@76b019c4]" name="testPropagate2" class="org.chocosolver.solver.variables.impl.SetVarImplTest"/>
        <method signature="SetVarImplTest.testSetVarInstantiated()[pri:0, instance:org.chocosolver.solver.variables.impl.SetVarImplTest@76b019c4]" name="testSetVarInstantiated" class="org.chocosolver.solver.variables.impl.SetVarImplTest"/>
        <method signature="SetVarImplTest.testSetVarInstantiated2()[pri:0, instance:org.chocosolver.solver.variables.impl.SetVarImplTest@76b019c4]" name="testSetVarInstantiated2" class="org.chocosolver.solver.variables.impl.SetVarImplTest"/>
        <method signature="SetVarImplTest.testStructures()[pri:0, instance:org.chocosolver.solver.variables.impl.SetVarImplTest@76b019c4]" name="testStructures" class="org.chocosolver.solver.variables.impl.SetVarImplTest"/>
        <method signature="SimpleExplanationTest.test1()[pri:0, instance:org.chocosolver.solver.explanations.SimpleExplanationTest@51e1e058]" name="test1" class="org.chocosolver.solver.explanations.SimpleExplanationTest"/>
        <method signature="SimpleExplanationTest.test2()[pri:0, instance:org.chocosolver.solver.explanations.SimpleExplanationTest@51e1e058]" name="test2" class="org.chocosolver.solver.explanations.SimpleExplanationTest"/>
        <method signature="SmallBipartiteTest.testAddNegativeKO()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testAddNegativeKO" class="org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest"/>
        <method signature="SmallBipartiteTest.testAddNegativeKO()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testAddNegativeKO" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest"/>
        <method signature="SmallBipartiteTest.testMaxSpan()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testMaxSpan" class="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest"/>
        <method signature="SolverTest.test1DDS()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test1DDS" class="org.chocosolver.solver.search.loop.SolverTest"/>
        <method signature="SolverTest.test1DFS()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test1DFS" class="org.chocosolver.solver.search.loop.SolverTest"/>
        <method signature="SolverTest.test1LDS()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test1LDS" class="org.chocosolver.solver.search.loop.SolverTest"/>
        <method signature="SolverTest.test2DDS()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test2DDS" class="org.chocosolver.solver.search.loop.SolverTest"/>
        <method signature="SolverTest.test2DDS2()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test2DDS2" class="org.chocosolver.solver.search.loop.SolverTest"/>
        <method signature="SolverTest.test2DFS()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test2DFS" class="org.chocosolver.solver.search.loop.SolverTest"/>
        <method signature="SolverTest.test2LDS()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test2LDS" class="org.chocosolver.solver.search.loop.SolverTest"/>
        <method signature="SolverTest.test3()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test3" class="org.chocosolver.solver.search.loop.SolverTest"/>
        <method signature="SolverTest.test4()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test4" class="org.chocosolver.solver.search.loop.SolverTest"/>
        <method signature="SolverTest.test5()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test5" class="org.chocosolver.solver.search.loop.SolverTest"/>
        <method signature="SolverTest.test6()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test6" class="org.chocosolver.solver.search.loop.SolverTest"/>
        <method signature="SolverTest.test7()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test7" class="org.chocosolver.solver.search.loop.SolverTest"/>
        <method signature="SolverTest.test8()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test8" class="org.chocosolver.solver.search.loop.SolverTest"/>
        <method signature="SolverTest.test9()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test9" class="org.chocosolver.solver.search.loop.SolverTest"/>
        <method signature="SolverTest.testReset()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="testReset" class="org.chocosolver.solver.search.loop.SolverTest"/>
        <method signature="SortTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.SortTest@314c28dc]" name="test1" class="org.chocosolver.solver.constraints.nary.SortTest"/>
        <method signature="SortTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.SortTest@314c28dc]" name="test2" class="org.chocosolver.solver.constraints.nary.SortTest"/>
        <method signature="SortTest.test3()[pri:0, instance:org.chocosolver.solver.constraints.nary.SortTest@314c28dc]" name="test3" class="org.chocosolver.solver.constraints.nary.SortTest"/>
        <method signature="SortTest.test4()[pri:0, instance:org.chocosolver.solver.constraints.nary.SortTest@314c28dc]" name="test4" class="org.chocosolver.solver.constraints.nary.SortTest"/>
        <method signature="SquareTest.test()[pri:0, instance:org.chocosolver.solver.constraints.binary.SquareTest@7e43b342]" name="test" class="org.chocosolver.solver.constraints.binary.SquareTest"/>
        <method signature="SquareTest.testCst()[pri:0, instance:org.chocosolver.solver.constraints.binary.SquareTest@7e43b342]" name="testCst" class="org.chocosolver.solver.constraints.binary.SquareTest"/>
        <method signature="SquareTest.testCstFail()[pri:0, instance:org.chocosolver.solver.constraints.binary.SquareTest@7e43b342]" name="testCstFail" class="org.chocosolver.solver.constraints.binary.SquareTest"/>
        <method signature="SquareTest.testCstNeg()[pri:0, instance:org.chocosolver.solver.constraints.binary.SquareTest@7e43b342]" name="testCstNeg" class="org.chocosolver.solver.constraints.binary.SquareTest"/>
        <method signature="SquareTest.testSimple()[pri:0, instance:org.chocosolver.solver.constraints.binary.SquareTest@7e43b342]" name="testSimple" class="org.chocosolver.solver.constraints.binary.SquareTest"/>
        <method signature="StoredIntLinkedListTest.test1()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.StoredIntLinkedListTest@57f89680]" name="test1" class="org.chocosolver.util.objects.setDataStructures.backtrackable.StoredIntLinkedListTest"/>
        <method signature="StoredIntLinkedListTest.test2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.StoredIntLinkedListTest@57f89680]" name="test2" class="org.chocosolver.util.objects.setDataStructures.backtrackable.StoredIntLinkedListTest"/>
        <method signature="StrategyTest.AssignmentTest()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="AssignmentTest" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.AssignmentTest2()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="AssignmentTest2" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testAntiFirstFail1()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testAntiFirstFail1" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testAntiFirstFail2()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testAntiFirstFail2" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testBound()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testBound" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testFH3321()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testFH3321" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testFH3322()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testFH3322" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testFH33232()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testFH33232" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testFH3324()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testFH3324" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testFirstFail1()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testFirstFail1" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testFirstFail2()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testFirstFail2" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testInputOrder()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testInputOrder" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testLargest1()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testLargest1" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testLargest2()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testLargest2" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testMaxDelta1()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testMaxDelta1" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testMaxDelta2()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testMaxDelta2" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testMaxRegret1()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testMaxRegret1" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testMaxRegret2()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testMaxRegret2" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testMinDelta1()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testMinDelta1" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testMinDelta2()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testMinDelta2" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testNoScope()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testNoScope" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testOccurrence1()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testOccurrence1" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testOccurrence2()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testOccurrence2" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testOnce()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testOnce" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testSmallest1()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testSmallest1" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="StrategyTest.testSmallest2()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testSmallest2" class="org.chocosolver.solver.search.StrategyTest"/>
        <method signature="SubcircuitTest.test()[pri:0, instance:org.chocosolver.solver.constraints.nary.SubcircuitTest@185bf6e0]" name="test" class="org.chocosolver.solver.constraints.nary.SubcircuitTest"/>
        <method signature="SubcircuitTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.SubcircuitTest@185bf6e0]" name="test1" class="org.chocosolver.solver.constraints.nary.SubcircuitTest"/>
        <method signature="SubcircuitTest.test11()[pri:0, instance:org.chocosolver.solver.constraints.nary.SubcircuitTest@185bf6e0]" name="test11" class="org.chocosolver.solver.constraints.nary.SubcircuitTest"/>
        <method signature="SubcircuitTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.SubcircuitTest@185bf6e0]" name="test2" class="org.chocosolver.solver.constraints.nary.SubcircuitTest"/>
        <method signature="SubcircuitTest.test3()[pri:0, instance:org.chocosolver.solver.constraints.nary.SubcircuitTest@185bf6e0]" name="test3" class="org.chocosolver.solver.constraints.nary.SubcircuitTest"/>
        <method signature="SubcircuitTest.test4()[pri:0, instance:org.chocosolver.solver.constraints.nary.SubcircuitTest@185bf6e0]" name="test4" class="org.chocosolver.solver.constraints.nary.SubcircuitTest"/>
        <method signature="SubsetEqTest.testNoSolution()[pri:0, instance:org.chocosolver.solver.constraints.set.SubsetEqTest@a302f30]" name="testNoSolution" class="org.chocosolver.solver.constraints.set.SubsetEqTest"/>
        <method signature="SubsetEqTest.testNoSolutionBadData()[pri:0, instance:org.chocosolver.solver.constraints.set.SubsetEqTest@a302f30]" name="testNoSolutionBadData" class="org.chocosolver.solver.constraints.set.SubsetEqTest"/>
        <method signature="SubsetEqTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.SubsetEqTest@a302f30]" name="testNominal" class="org.chocosolver.solver.constraints.set.SubsetEqTest"/>
        <method signature="SubsetEqTest.testOneToFill()[pri:0, instance:org.chocosolver.solver.constraints.set.SubsetEqTest@a302f30]" name="testOneToFill" class="org.chocosolver.solver.constraints.set.SubsetEqTest"/>
        <method signature="SumOfElementsTest.testEmptySetKo()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testEmptySetKo" class="org.chocosolver.solver.constraints.set.SumOfElementsTest"/>
        <method signature="SumOfElementsTest.testEmptySetKo3()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testEmptySetKo3" class="org.chocosolver.solver.constraints.set.SumOfElementsTest"/>
        <method signature="SumOfElementsTest.testEmptySetOk()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testEmptySetOk" class="org.chocosolver.solver.constraints.set.SumOfElementsTest"/>
        <method signature="SumOfElementsTest.testEmptySetOk2()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testEmptySetOk2" class="org.chocosolver.solver.constraints.set.SumOfElementsTest"/>
        <method signature="SumOfElementsTest.testEmptySetOk3()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testEmptySetOk3" class="org.chocosolver.solver.constraints.set.SumOfElementsTest"/>
        <method signature="SumOfElementsTest.testFixedSum()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testFixedSum" class="org.chocosolver.solver.constraints.set.SumOfElementsTest"/>
        <method signature="SumOfElementsTest.testFixedSumNeg()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testFixedSumNeg" class="org.chocosolver.solver.constraints.set.SumOfElementsTest"/>
        <method signature="SumOfElementsTest.testFixedSumNegWrong()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testFixedSumNegWrong" class="org.chocosolver.solver.constraints.set.SumOfElementsTest"/>
        <method signature="SumOfElementsTest.testFixedSumOffset()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testFixedSumOffset" class="org.chocosolver.solver.constraints.set.SumOfElementsTest"/>
        <method signature="SumOfElementsTest.testFixedSumOffsetKo()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testFixedSumOffsetKo" class="org.chocosolver.solver.constraints.set.SumOfElementsTest"/>
        <method signature="SumOfElementsTest.testFixedSumOffsetKo2()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testFixedSumOffsetKo2" class="org.chocosolver.solver.constraints.set.SumOfElementsTest"/>
        <method signature="SumOfElementsTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testNominal" class="org.chocosolver.solver.constraints.set.SumOfElementsTest"/>
        <method signature="SumOfElementsTest.testWrongBounds()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testWrongBounds" class="org.chocosolver.solver.constraints.set.SumOfElementsTest"/>
        <method signature="SumTest.justBelow()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="justBelow" class="org.chocosolver.solver.constraints.nary.SumTest"/>
        <method signature="SumTest.testEmptySetKo()[pri:0, instance:org.chocosolver.solver.constraints.set.SumTest@90394d]" name="testEmptySetKo" class="org.chocosolver.solver.constraints.set.SumTest"/>
        <method signature="SumTest.testEmptySetOk()[pri:0, instance:org.chocosolver.solver.constraints.set.SumTest@90394d]" name="testEmptySetOk" class="org.chocosolver.solver.constraints.set.SumTest"/>
        <method signature="SumTest.testFH01()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="testFH01" class="org.chocosolver.solver.constraints.nary.SumTest"/>
        <method signature="SumTest.testFixedSum()[pri:0, instance:org.chocosolver.solver.constraints.set.SumTest@90394d]" name="testFixedSum" class="org.chocosolver.solver.constraints.set.SumTest"/>
        <method signature="SumTest.testFixedSumNeg()[pri:0, instance:org.chocosolver.solver.constraints.set.SumTest@90394d]" name="testFixedSumNeg" class="org.chocosolver.solver.constraints.set.SumTest"/>
        <method signature="SumTest.testFixedSumNeg2()[pri:0, instance:org.chocosolver.solver.constraints.set.SumTest@90394d]" name="testFixedSumNeg2" class="org.chocosolver.solver.constraints.set.SumTest"/>
        <method signature="SumTest.testFixedSumNegWrong()[pri:0, instance:org.chocosolver.solver.constraints.set.SumTest@90394d]" name="testFixedSumNegWrong" class="org.chocosolver.solver.constraints.set.SumTest"/>
        <method signature="SumTest.testJL01()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="testJL01" class="org.chocosolver.solver.constraints.nary.SumTest"/>
        <method signature="SumTest.testJustAbove()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="testJustAbove" class="org.chocosolver.solver.constraints.nary.SumTest"/>
        <method signature="SumTest.testNoExactSolution()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="testNoExactSolution" class="org.chocosolver.solver.constraints.nary.SumTest"/>
        <method signature="SumTest.testNoSolution()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="testNoSolution" class="org.chocosolver.solver.constraints.nary.SumTest"/>
        <method signature="SumTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="testNominal" class="org.chocosolver.solver.constraints.nary.SumTest"/>
        <method signature="SumTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.SumTest@90394d]" name="testNominal" class="org.chocosolver.solver.constraints.set.SumTest"/>
        <method signature="SumTest.testSameVariableNoSolution()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="testSameVariableNoSolution" class="org.chocosolver.solver.constraints.nary.SumTest"/>
        <method signature="SumTest.testSameVariableSolution()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="testSameVariableSolution" class="org.chocosolver.solver.constraints.nary.SumTest"/>
        <method signature="SumTest.testSimpleSum()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="testSimpleSum" class="org.chocosolver.solver.constraints.nary.SumTest"/>
        <method signature="SumTest.testWrongBounds()[pri:0, instance:org.chocosolver.solver.constraints.set.SumTest@90394d]" name="testWrongBounds" class="org.chocosolver.solver.constraints.set.SumTest"/>
        <method signature="SumTest.testZero()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="testZero" class="org.chocosolver.solver.constraints.nary.SumTest"/>
        <method signature="SumTest.testZeroElements()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="testZeroElements" class="org.chocosolver.solver.constraints.nary.SumTest"/>
        <method signature="SuspiciousTest.testBacktrack()[pri:0, instance:org.chocosolver.SuspiciousTest@5b71af0d]" name="testBacktrack" class="org.chocosolver.SuspiciousTest"/>
        <method signature="SuspiciousTest.testGregy4()[pri:0, instance:org.chocosolver.SuspiciousTest@5b71af0d]" name="testGregy4" class="org.chocosolver.SuspiciousTest"/>
        <method signature="SymmetricTest.testHeadOnly()[pri:0, instance:org.chocosolver.solver.constraints.set.SymmetricTest@6fafbdac]" name="testHeadOnly" class="org.chocosolver.solver.constraints.set.SymmetricTest"/>
        <method signature="SymmetricTest.testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.SymmetricTest@6fafbdac]" name="testNominal" class="org.chocosolver.solver.constraints.set.SymmetricTest"/>
        <method signature="TableTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="test1" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TableTest.test329()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="test329" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TableTest.testJuha1()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testJuha1" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TableTest.testJuha2()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testJuha2" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TableTest.testMDD1()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testMDD1" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TableTest.testMDD2()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testMDD2" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TableTest.testPDav()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testPDav" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TableTest.testPosFalse()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testPosFalse" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TableTest.testPosFalse2()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testPosFalse2" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TableTest.testPosTrue()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testPosTrue" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TableTest.testPosUndef()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testPosUndef" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TableTest.testST1()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testST1" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TableTest.testST2()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testST2" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TableTest.testThierry1()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testThierry1" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TableTest.testTuples()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testTuples" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TableTest.testTuplesLargeTable1()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testTuplesLargeTable1" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TableTest.testTuplesLargeTable2()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testTuplesLargeTable2" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TableTest.testTuplesTable1()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testTuplesTable1" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TableTest.testTuplesTable2()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testTuplesTable2" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TableTest.testTuplesVeryLargeTable1()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testTuplesVeryLargeTable1" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TableTest.testTuplesVeryLargeTable2()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testTuplesVeryLargeTable2" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TableTest.testtpetit()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testtpetit" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TaskTest.testBadDomainFilteringKO()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="testBadDomainFilteringKO" class="org.chocosolver.solver.variables.TaskTest"/>
        <method signature="TaskTest.testBadDomainFilteringOK()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="testBadDomainFilteringOK" class="org.chocosolver.solver.variables.TaskTest"/>
        <method signature="TaskTest.testCumulativeConstraint()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="testCumulativeConstraint" class="org.chocosolver.solver.variables.TaskTest"/>
        <method signature="TaskTest.testCumulativeConstraintKO()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="testCumulativeConstraintKO" class="org.chocosolver.solver.variables.TaskTest"/>
        <method signature="TaskTest.testDecreaseDuration()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="testDecreaseDuration" class="org.chocosolver.solver.variables.TaskTest"/>
        <method signature="TaskTest.testIncreaseDuration()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="testIncreaseDuration" class="org.chocosolver.solver.variables.TaskTest"/>
        <method signature="TaskTest.testNegativeDuration()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="testNegativeDuration" class="org.chocosolver.solver.variables.TaskTest"/>
        <method signature="TaskTest.testRemoveValueSameVariable()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="testRemoveValueSameVariable" class="org.chocosolver.solver.variables.TaskTest"/>
        <method signature="TaskTest.testUpdateStart()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="testUpdateStart" class="org.chocosolver.solver.variables.TaskTest"/>
        <method signature="TestMultiSequentialObjectives.simpleLexTest1()[pri:0, instance:org.chocosolver.solver.search.TestMultiSequentialObjectives@50008974]" name="simpleLexTest1" class="org.chocosolver.solver.search.TestMultiSequentialObjectives"/>
        <method signature="TestMultiSequentialObjectives.simpleLexTest2()[pri:0, instance:org.chocosolver.solver.search.TestMultiSequentialObjectives@50008974]" name="simpleLexTest2" class="org.chocosolver.solver.search.TestMultiSequentialObjectives"/>
        <method signature="TestMultiSequentialObjectives.simpleLexTest3()[pri:0, instance:org.chocosolver.solver.search.TestMultiSequentialObjectives@50008974]" name="simpleLexTest3" class="org.chocosolver.solver.search.TestMultiSequentialObjectives"/>
        <method signature="TestMultiSequentialObjectives.simpleLexTest4()[pri:0, instance:org.chocosolver.solver.search.TestMultiSequentialObjectives@50008974]" name="simpleLexTest4" class="org.chocosolver.solver.search.TestMultiSequentialObjectives"/>
        <method signature="TestSolveur.fakePigeonHolesTest()[pri:0, instance:org.chocosolver.solver.TestSolveur@25d23478]" name="fakePigeonHolesTest" class="org.chocosolver.solver.TestSolveur"/>
        <method signature="TestSolveur.testBinaryCliqueNeq()[pri:0, instance:org.chocosolver.solver.TestSolveur@25d23478]" name="testBinaryCliqueNeq" class="org.chocosolver.solver.TestSolveur"/>
        <method signature="TestSolveur.testCycleLt()[pri:0, instance:org.chocosolver.solver.TestSolveur@25d23478]" name="testCycleLt" class="org.chocosolver.solver.TestSolveur"/>
        <method signature="TestSolveur.testOneAllDiff()[pri:0, instance:org.chocosolver.solver.TestSolveur@25d23478]" name="testOneAllDiff" class="org.chocosolver.solver.TestSolveur"/>
        <method signature="Test_Bools_Sets.setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" class="org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets"/>
        <method signature="Test_Bools_Sets.setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" class="org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets"/>
        <method signature="Test_Bools_Sets.setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" class="org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets"/>
        <method signature="Test_Bools_Sets.testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" class="org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets"/>
        <method signature="TimesTest.testJL()[pri:0, instance:org.chocosolver.solver.constraints.ternary.TimesTest@2c1a95a2]" name="testJL" class="org.chocosolver.solver.constraints.ternary.TimesTest"/>
        <method signature="TimesTest.testJL3()[pri:0, instance:org.chocosolver.solver.constraints.ternary.TimesTest@2c1a95a2]" name="testJL3" class="org.chocosolver.solver.constraints.ternary.TimesTest"/>
        <method signature="TimesTest.testJL5()[pri:0, instance:org.chocosolver.solver.constraints.ternary.TimesTest@2c1a95a2]" name="testJL5" class="org.chocosolver.solver.constraints.ternary.TimesTest"/>
        <method signature="TimesTest.testJL6()[pri:0, instance:org.chocosolver.solver.constraints.ternary.TimesTest@2c1a95a2]" name="testJL6" class="org.chocosolver.solver.constraints.ternary.TimesTest"/>
        <method signature="TimesTest.testJL7()[pri:0, instance:org.chocosolver.solver.constraints.ternary.TimesTest@2c1a95a2]" name="testJL7" class="org.chocosolver.solver.constraints.ternary.TimesTest"/>
        <method signature="UnionTest.testImpossible()[pri:0, instance:org.chocosolver.solver.constraints.set.UnionTest@6b32b678]" name="testImpossible" class="org.chocosolver.solver.constraints.set.UnionTest"/>
        <method signature="UnionTest.testSetVarsFixed()[pri:0, instance:org.chocosolver.solver.constraints.set.UnionTest@6b32b678]" name="testSetVarsFixed" class="org.chocosolver.solver.constraints.set.UnionTest"/>
        <method signature="UnionTest.testUnionFixed()[pri:0, instance:org.chocosolver.solver.constraints.set.UnionTest@6b32b678]" name="testUnionFixed" class="org.chocosolver.solver.constraints.set.UnionTest"/>
        <method signature="VariableUtilsTest.testBoundsForAddition()[pri:0, instance:org.chocosolver.util.tools.VariableUtilsTest@2fc435e9]" name="testBoundsForAddition" class="org.chocosolver.util.tools.VariableUtilsTest"/>
        <method signature="VariableUtilsTest.testBoundsForDivision()[pri:0, instance:org.chocosolver.util.tools.VariableUtilsTest@2fc435e9]" name="testBoundsForDivision" class="org.chocosolver.util.tools.VariableUtilsTest"/>
        <method signature="VariableUtilsTest.testBoundsForMultiplication()[pri:0, instance:org.chocosolver.util.tools.VariableUtilsTest@2fc435e9]" name="testBoundsForMultiplication" class="org.chocosolver.util.tools.VariableUtilsTest"/>
        <method signature="VariableUtilsTest.testBoundsForSubstraction()[pri:0, instance:org.chocosolver.util.tools.VariableUtilsTest@2fc435e9]" name="testBoundsForSubstraction" class="org.chocosolver.util.tools.VariableUtilsTest"/>
        <method signature="ViewMinusTest.test1()[pri:0, instance:org.chocosolver.solver.variables.ViewMinusTest@1ddc8fc]" name="test1" class="org.chocosolver.solver.variables.ViewMinusTest"/>
        <method signature="ViewMinusTest.testB1()[pri:0, instance:org.chocosolver.solver.variables.ViewMinusTest@1ddc8fc]" name="testB1" class="org.chocosolver.solver.variables.ViewMinusTest"/>
        <method signature="ViewMinusTest.testIt1()[pri:0, instance:org.chocosolver.solver.variables.ViewMinusTest@1ddc8fc]" name="testIt1" class="org.chocosolver.solver.variables.ViewMinusTest"/>
        <method signature="ViewMinusTest.testIt2()[pri:0, instance:org.chocosolver.solver.variables.ViewMinusTest@1ddc8fc]" name="testIt2" class="org.chocosolver.solver.variables.ViewMinusTest"/>
        <method signature="ViewSumXYTest.test1()[pri:0, instance:org.chocosolver.solver.variables.ViewSumXYTest@77d58f3a]" name="test1" class="org.chocosolver.solver.variables.ViewSumXYTest"/>
        <method signature="ViewsTest.test1f()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test1f" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.testBoolNot()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testBoolNot" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.testBoolNotNot()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testBoolNotNot" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.testCP01()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testCP01" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.testJG()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testJG" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.testJG2()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testJG2" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.testJG3()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testJG3" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.testJG4()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testJG4" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.testJL1()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testJL1" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.testJL2()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testJL2" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.testJL3()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testJL3" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.testJL4()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testJL4" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.testMinus()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testMinus" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.testOffset()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testOffset" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.testScale()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testScale" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.testTernArithmAC()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testTernArithmAC" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.testTernArithmBC()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testTernArithmBC" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.testa()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testa" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.testvanH()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testvanH" class="org.chocosolver.solver.variables.ViewsTest"/>
      </group> <!-- 1s -->
      <group name="10s">
        <method signature="AbstractBinaryTest.test1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.DistanceEQTest@7d07e04e]" name="test1" class="org.chocosolver.solver.constraints.binary.AbstractBinaryTest"/>
        <method signature="AbstractBinaryTest.test1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.DistanceGTTest@dbcf7c3]" name="test1" class="org.chocosolver.solver.constraints.binary.AbstractBinaryTest"/>
        <method signature="AbstractBinaryTest.test1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.DistanceLTTest@36931450]" name="test1" class="org.chocosolver.solver.constraints.binary.AbstractBinaryTest"/>
        <method signature="AbstractBinaryTest.test1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.DistanceNQTest@21dd9203]" name="test1" class="org.chocosolver.solver.constraints.binary.AbstractBinaryTest"/>
        <method signature="AbstractTernaryTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DistanceEQTest@7db2b614]" name="test1" class="org.chocosolver.solver.constraints.ternary.AbstractTernaryTest"/>
        <method signature="AbstractTernaryTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DistanceGETest@5b430541]" name="test1" class="org.chocosolver.solver.constraints.ternary.AbstractTernaryTest"/>
        <method signature="AbstractTernaryTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DistanceGTTest@1adf387e]" name="test1" class="org.chocosolver.solver.constraints.ternary.AbstractTernaryTest"/>
        <method signature="AbstractTernaryTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DistanceLETest@72b53f27]" name="test1" class="org.chocosolver.solver.constraints.ternary.AbstractTernaryTest"/>
        <method signature="AbstractTernaryTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DistanceLTTest@544e6b]" name="test1" class="org.chocosolver.solver.constraints.ternary.AbstractTernaryTest"/>
        <method signature="AbstractTernaryTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DivTest@1be4a7e3]" name="test1" class="org.chocosolver.solver.constraints.ternary.AbstractTernaryTest"/>
        <method signature="AbstractTernaryTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.ternary.MaxTest@34d5eac]" name="test1" class="org.chocosolver.solver.constraints.ternary.AbstractTernaryTest"/>
        <method signature="AbstractTernaryTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.ternary.MinTest@70eb94d7]" name="test1" class="org.chocosolver.solver.constraints.ternary.AbstractTernaryTest"/>
        <method signature="AbstractTernaryTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.ternary.ModTest@632b96b8]" name="test1" class="org.chocosolver.solver.constraints.ternary.AbstractTernaryTest"/>
        <method signature="AbstractTernaryTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.ternary.TimesTest@2c1a95a2]" name="test1" class="org.chocosolver.solver.constraints.ternary.AbstractTernaryTest"/>
        <method signature="ActivityTest.testCostas()[pri:0, instance:org.chocosolver.solver.search.ActivityTest@2634d000]" name="testCostas" class="org.chocosolver.solver.search.ActivityTest"/>
        <method signature="AllDifferentTest.test6()[pri:0, instance:org.chocosolver.solver.constraints.nary.AllDifferentTest@1cdad619]" name="test6" class="org.chocosolver.solver.constraints.nary.AllDifferentTest"/>
        <method signature="AmongTest.testRandomProblems()[pri:0, instance:org.chocosolver.solver.constraints.nary.AmongTest@8091d80]" name="testRandomProblems" class="org.chocosolver.solver.constraints.nary.AmongTest"/>
        <method signature="AmongTest.testRandomProblems2()[pri:0, instance:org.chocosolver.solver.constraints.nary.AmongTest@8091d80]" name="testRandomProblems2" class="org.chocosolver.solver.constraints.nary.AmongTest"/>
        <method signature="BacktrackableSetTest.memoryCrashTest()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="memoryCrashTest" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.memoryCrashTest()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="memoryCrashTest" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.memoryCrashTest()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="memoryCrashTest" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BacktrackableSetTest.memoryCrashTest()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="memoryCrashTest" class="org.chocosolver.util.objects.setDataStructures.backtrackable.BacktrackableSetTest"/>
        <method signature="BottleneckTest.testStynes1()[pri:0, instance:org.chocosolver.solver.constraints.nary.BottleneckTest@4c3d72fd]" name="testStynes1" class="org.chocosolver.solver.constraints.nary.BottleneckTest"/>
        <method signature="BottleneckTest.testStynes2()[pri:0, instance:org.chocosolver.solver.constraints.nary.BottleneckTest@4c3d72fd]" name="testStynes2" class="org.chocosolver.solver.constraints.nary.BottleneckTest"/>
        <method signature="BoundGlobalCardinalityTest.testRandom()[pri:0, instance:org.chocosolver.solver.constraints.nary.BoundGlobalCardinalityTest@1238a074]" name="testRandom" class="org.chocosolver.solver.constraints.nary.BoundGlobalCardinalityTest"/>
        <method signature="BoundGlobalCardinalityTest.testRandom2()[pri:0, instance:org.chocosolver.solver.constraints.nary.BoundGlobalCardinalityTest@1238a074]" name="testRandom2" class="org.chocosolver.solver.constraints.nary.BoundGlobalCardinalityTest"/>
        <method signature="ClauseChannelingTest.test1B()[pri:0, instance:org.chocosolver.solver.constraints.nary.ClauseChannelingTest@abf1816]" name="test1B" class="org.chocosolver.solver.constraints.nary.ClauseChannelingTest"/>
        <method signature="ClauseChannelingTest.test1E()[pri:0, instance:org.chocosolver.solver.constraints.nary.ClauseChannelingTest@abf1816]" name="test1E" class="org.chocosolver.solver.constraints.nary.ClauseChannelingTest"/>
        <method signature="ClauseChannelingTest.test2B()[pri:0, instance:org.chocosolver.solver.constraints.nary.ClauseChannelingTest@abf1816]" name="test2B" class="org.chocosolver.solver.constraints.nary.ClauseChannelingTest"/>
        <method signature="ClauseChannelingTest.test2E()[pri:0, instance:org.chocosolver.solver.constraints.nary.ClauseChannelingTest@abf1816]" name="test2E" class="org.chocosolver.solver.constraints.nary.ClauseChannelingTest"/>
        <method signature="ClauseTest.test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" class="org.chocosolver.solver.constraints.ClauseTest"/>
        <method signature="ClauseTest.test5()[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test5" class="org.chocosolver.solver.constraints.ClauseTest"/>
        <method signature="ConstraintTest.testJitee2()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testJitee2" class="org.chocosolver.solver.constraints.ConstraintTest"/>
        <method signature="CostRegularTest.ccostregular2()[pri:0, instance:org.chocosolver.solver.constraints.nary.CostRegularTest@7169d668]" name="ccostregular2" class="org.chocosolver.solver.constraints.nary.CostRegularTest"/>
        <method signature="CostRegularTest.ccostregular2WithCostAutomaton()[pri:0, instance:org.chocosolver.solver.constraints.nary.CostRegularTest@7169d668]" name="ccostregular2WithCostAutomaton" class="org.chocosolver.solver.constraints.nary.CostRegularTest"/>
        <method signature="CostRegularTest.compareVersionSpeedNew()[pri:0, instance:org.chocosolver.solver.constraints.nary.CostRegularTest@7169d668]" name="compareVersionSpeedNew" class="org.chocosolver.solver.constraints.nary.CostRegularTest"/>
        <method signature="CostRegularTest.isCorrect()[pri:0, instance:org.chocosolver.solver.constraints.nary.CostRegularTest@7169d668]" name="isCorrect" class="org.chocosolver.solver.constraints.nary.CostRegularTest"/>
        <method signature="CostRegularTest.isCorrect2()[pri:0, instance:org.chocosolver.solver.constraints.nary.CostRegularTest@7169d668]" name="isCorrect2" class="org.chocosolver.solver.constraints.nary.CostRegularTest"/>
        <method signature="CostRegularTest.isCorrect2WithCostAutomaton()[pri:0, instance:org.chocosolver.solver.constraints.nary.CostRegularTest@7169d668]" name="isCorrect2WithCostAutomaton" class="org.chocosolver.solver.constraints.nary.CostRegularTest"/>
        <method signature="CostRegularTest.isCorrectWithCostAutomaton()[pri:0, instance:org.chocosolver.solver.constraints.nary.CostRegularTest@7169d668]" name="isCorrectWithCostAutomaton" class="org.chocosolver.solver.constraints.nary.CostRegularTest"/>
        <method signature="CountTest.testRandomProblems()[pri:0, instance:org.chocosolver.solver.constraints.nary.CountTest@7bd1098]" name="testRandomProblems" class="org.chocosolver.solver.constraints.nary.CountTest"/>
        <method signature="CumulativeTest.test6()[pri:0, instance:org.chocosolver.solver.constraints.nary.CumulativeTest@259c6ab8]" name="test6" class="org.chocosolver.solver.constraints.nary.CumulativeTest"/>
        <method signature="CumulativeTest.testMed()[pri:0, instance:org.chocosolver.solver.constraints.nary.CumulativeTest@259c6ab8]" name="testMed" class="org.chocosolver.solver.constraints.nary.CumulativeTest"/>
        <method signature="DivTest.testJL2()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DivTest@1be4a7e3]" name="testJL2" class="org.chocosolver.solver.constraints.ternary.DivTest"/>
        <method signature="DivTest.testTP1()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DivTest@1be4a7e3]" name="testTP1" class="org.chocosolver.solver.constraints.ternary.DivTest"/>
        <method signature="DynamicAdditionTest.test3(org.chocosolver.memory.trailing.EnvironmentTrailing)[pri:0, instance:org.chocosolver.memory.DynamicAdditionTest@4edde05c]" name="test3" class="org.chocosolver.memory.DynamicAdditionTest"/>
        <method signature="DynamicPostTest.testCostas()[pri:0, instance:org.chocosolver.solver.constraints.DynamicPostTest@1e2b37cd]" name="testCostas" class="org.chocosolver.solver.constraints.DynamicPostTest"/>
        <method signature="EnvironmentTest.testSize(org.chocosolver.memory.trailing.EnvironmentTrailing)[pri:0, instance:org.chocosolver.solver.EnvironmentTest@39c1e7b7]" name="testSize" class="org.chocosolver.solver.EnvironmentTest"/>
        <method signature="ExplanationEngineTest.test3(int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test3" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.testNosol0B()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testNosol0B" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.testNosol0E()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testNosol0E" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.testNosol1B()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testNosol1B" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationEngineTest.testNosol1E()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testNosol1E" class="org.chocosolver.solver.explanations.ExplanationEngineTest"/>
        <method signature="ExplanationTest.testMS()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testMS" class="org.chocosolver.solver.explanations.ExplanationTest"/>
        <method signature="ExplanationTest.testNosol0()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testNosol0" class="org.chocosolver.solver.explanations.ExplanationTest"/>
        <method signature="ExplanationTest.testNosolBut0()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testNosolBut0" class="org.chocosolver.solver.explanations.ExplanationTest"/>
        <method signature="ExplanationTest.testPigeons()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testPigeons" class="org.chocosolver.solver.explanations.ExplanationTest"/>
        <method signature="ExpressionTest.testLongExpression(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="testLongExpression" class="org.chocosolver.solver.expression.discrete.ExpressionTest"/>
        <method signature="ImpactTest.testCostas()[pri:0, instance:org.chocosolver.solver.search.ImpactTest@53551fef]" name="testCostas" class="org.chocosolver.solver.search.ImpactTest"/>
        <method signature="IntIterableRangeSetTest.testIntersect()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testIntersect" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntIterableRangeSetTest.testIntersect2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testIntersect2" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntIterableRangeSetTest.testMinus()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testMinus" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntIterableRangeSetTest.testPlus()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testPlus" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntIterableRangeSetTest.testUnion()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testUnion" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntIterableRangeSetTest.testUnion2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testUnion2" class="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest"/>
        <method signature="IntLinCombTest.testB1()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testB1" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntLinCombTest.testSumvsIntLinCombTest(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSumvsIntLinCombTest" class="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest"/>
        <method signature="IntValuePrecedeChainTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.IntValuePrecedeChainTest@2e2cd42c]" name="test1" class="org.chocosolver.solver.constraints.nary.IntValuePrecedeChainTest"/>
        <method signature="KnapsackTest.knapsackTest()[pri:0, instance:org.chocosolver.solver.constraints.nary.KnapsackTest@2e1e7bc6]" name="knapsackTest" class="org.chocosolver.solver.constraints.nary.KnapsackTest"/>
        <method signature="KnapsackTest.knapsackTestBestValue()[pri:0, instance:org.chocosolver.solver.constraints.nary.KnapsackTest@2e1e7bc6]" name="knapsackTestBestValue" class="org.chocosolver.solver.constraints.nary.KnapsackTest"/>
        <method signature="LNSTest.test1(int)[pri:0, instance:org.chocosolver.solver.search.loop.LNSTest@5274830e]" name="test1" class="org.chocosolver.solver.search.loop.LNSTest"/>
        <method signature="LexChainTest.lexChainTest1()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexChainTest@35b58254]" name="lexChainTest1" class="org.chocosolver.solver.constraints.nary.LexChainTest"/>
        <method signature="LexChainTest.testB()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexChainTest@35b58254]" name="testB" class="org.chocosolver.solver.constraints.nary.LexChainTest"/>
        <method signature="LexChainTest.testE()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexChainTest@35b58254]" name="testE" class="org.chocosolver.solver.constraints.nary.LexChainTest"/>
        <method signature="MaxViewTest.testMax1()[pri:0, instance:org.chocosolver.solver.variables.MaxViewTest@6baee63b]" name="testMax1" class="org.chocosolver.solver.variables.MaxViewTest"/>
        <method signature="MaxViewTest.testMax2()[pri:0, instance:org.chocosolver.solver.variables.MaxViewTest@6baee63b]" name="testMax2" class="org.chocosolver.solver.variables.MaxViewTest"/>
        <method signature="MemberSetTest.testJL253_bound()[pri:0, instance:org.chocosolver.solver.constraints.set.MemberSetTest@143fe09c]" name="testJL253_bound" class="org.chocosolver.solver.constraints.set.MemberSetTest"/>
        <method signature="MultiCostRegularTest.test0()[pri:0, instance:org.chocosolver.solver.constraints.nary.MultiCostRegularTest@182fd26b]" name="test0" class="org.chocosolver.solver.constraints.nary.MultiCostRegularTest"/>
        <method signature="MultiCostRegularTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.MultiCostRegularTest@182fd26b]" name="test1" class="org.chocosolver.solver.constraints.nary.MultiCostRegularTest"/>
        <method signature="MultiCostRegularTest.test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.MultiCostRegularTest@182fd26b]" name="test2" class="org.chocosolver.solver.constraints.nary.MultiCostRegularTest"/>
        <method signature="MultiCostRegularTest.test3()[pri:0, instance:org.chocosolver.solver.constraints.nary.MultiCostRegularTest@182fd26b]" name="test3" class="org.chocosolver.solver.constraints.nary.MultiCostRegularTest"/>
        <method signature="MultiCostRegularTest.test4()[pri:0, instance:org.chocosolver.solver.constraints.nary.MultiCostRegularTest@182fd26b]" name="test4" class="org.chocosolver.solver.constraints.nary.MultiCostRegularTest"/>
        <method signature="NoGoodOnSolutionTest.testANG()[pri:0, instance:org.chocosolver.solver.search.restart.NoGoodOnSolutionTest@1764e45e]" name="testANG" class="org.chocosolver.solver.search.restart.NoGoodOnSolutionTest"/>
        <method signature="NotEmptyTest.testComparedToNbEmpty()[pri:0, instance:org.chocosolver.solver.constraints.set.NotEmptyTest@47994b51]" name="testComparedToNbEmpty" class="org.chocosolver.solver.constraints.set.NotEmptyTest"/>
        <method signature="OffsetViewTest.testRandom1()[pri:0, instance:org.chocosolver.solver.variables.OffsetViewTest@1e288c76]" name="testRandom1" class="org.chocosolver.solver.variables.OffsetViewTest"/>
        <method signature="OffsetViewTest.testRandom2()[pri:0, instance:org.chocosolver.solver.variables.OffsetViewTest@1e288c76]" name="testRandom2" class="org.chocosolver.solver.variables.OffsetViewTest"/>
        <method signature="OffsetViewTest.testRandom3()[pri:0, instance:org.chocosolver.solver.variables.OffsetViewTest@1e288c76]" name="testRandom3" class="org.chocosolver.solver.variables.OffsetViewTest"/>
        <method signature="PortFolioTest.testP2()[pri:0, instance:org.chocosolver.solver.PortFolioTest@1c14d24d]" name="testP2" class="org.chocosolver.solver.PortFolioTest"/>
        <method signature="PortFolioTest.testP3()[pri:0, instance:org.chocosolver.solver.PortFolioTest@1c14d24d]" name="testP3" class="org.chocosolver.solver.PortFolioTest"/>
        <method signature="PortFolioTest.testP3bug()[pri:0, instance:org.chocosolver.solver.PortFolioTest@1c14d24d]" name="testP3bug" class="org.chocosolver.solver.PortFolioTest"/>
        <method signature="PortFolioTest.testP3bug2()[pri:0, instance:org.chocosolver.solver.PortFolioTest@1c14d24d]" name="testP3bug2" class="org.chocosolver.solver.PortFolioTest"/>
        <method signature="PortFolioTest.testP3bug3()[pri:0, instance:org.chocosolver.solver.PortFolioTest@1c14d24d]" name="testP3bug3" class="org.chocosolver.solver.PortFolioTest"/>
        <method signature="PortFolioTest.testP4()[pri:0, instance:org.chocosolver.solver.PortFolioTest@1c14d24d]" name="testP4" class="org.chocosolver.solver.PortFolioTest"/>
        <method signature="PortFolioTest.testP5()[pri:0, instance:org.chocosolver.solver.PortFolioTest@1c14d24d]" name="testP5" class="org.chocosolver.solver.PortFolioTest"/>
        <method signature="PortFolioTest.testParBug()[pri:0, instance:org.chocosolver.solver.PortFolioTest@1c14d24d]" name="testParBug" class="org.chocosolver.solver.PortFolioTest"/>
        <method signature="PropConDisTest.test3()[pri:0, instance:org.chocosolver.solver.constraints.reification.PropConDisTest@4d90d91f]" name="test3" class="org.chocosolver.solver.constraints.reification.PropConDisTest"/>
        <method signature="PropConDisTest.test4()[pri:0, instance:org.chocosolver.solver.constraints.reification.PropConDisTest@4d90d91f]" name="test4" class="org.chocosolver.solver.constraints.reification.PropConDisTest"/>
        <method signature="PropEngineTest.test5()[pri:0, instance:org.chocosolver.solver.propagation.PropEngineTest@6033f36c]" name="test5" class="org.chocosolver.solver.propagation.PropEngineTest"/>
        <method signature="RealTest.testJiTee1()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJiTee1" class="org.chocosolver.solver.constraints.real.RealTest"/>
        <method signature="RegularTest.compareVersionSpeedNew()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="compareVersionSpeedNew" class="org.chocosolver.solver.constraints.nary.RegularTest"/>
        <method signature="RegularTest.isCorrect()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="isCorrect" class="org.chocosolver.solver.constraints.nary.RegularTest"/>
        <method signature="RegularTest.isCorrect2()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="isCorrect2" class="org.chocosolver.solver.constraints.nary.RegularTest"/>
        <method signature="RegularTest.testRG11(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testRG11" class="org.chocosolver.solver.constraints.nary.RegularTest"/>
        <method signature="ReifiedTest.testAllDifferentDecomp()[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="testAllDifferentDecomp" class="org.chocosolver.solver.constraints.reification.ReifiedTest"/>
        <method signature="RestartTest.test1()[pri:0, instance:org.chocosolver.solver.search.restart.RestartTest@50b624da]" name="test1" class="org.chocosolver.solver.search.restart.RestartTest"/>
        <method signature="ScaleViewTest.testRandom1()[pri:0, instance:org.chocosolver.solver.variables.ScaleViewTest@77988c45]" name="testRandom1" class="org.chocosolver.solver.variables.ScaleViewTest"/>
        <method signature="ScaleViewTest.testRandom2()[pri:0, instance:org.chocosolver.solver.variables.ScaleViewTest@77988c45]" name="testRandom2" class="org.chocosolver.solver.variables.ScaleViewTest"/>
        <method signature="SolverTest.test1HBFS()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test1HBFS" class="org.chocosolver.solver.search.loop.SolverTest"/>
        <method signature="StoredIntLinkedListTest.test3()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.StoredIntLinkedListTest@57f89680]" name="test3" class="org.chocosolver.util.objects.setDataStructures.backtrackable.StoredIntLinkedListTest"/>
        <method signature="TableTest.testAllDifferent()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testAllDifferent" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TableTest.testAllEquals()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testAllEquals" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TableTest.testRandom()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testRandom" class="org.chocosolver.solver.constraints.nary.TableTest"/>
        <method signature="TestConsistency.testABSOLUTE()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testABSOLUTE" class="org.chocosolver.solver.constraints.checker.consistency.TestConsistency"/>
        <method signature="TestConsistency.testALLDIFFERENT()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testALLDIFFERENT" class="org.chocosolver.solver.constraints.checker.consistency.TestConsistency"/>
        <method signature="TestConsistency.testALLDIFFERENTBC()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testALLDIFFERENTBC" class="org.chocosolver.solver.constraints.checker.consistency.TestConsistency"/>
        <method signature="TestConsistency.testAMONG()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testAMONG" class="org.chocosolver.solver.constraints.checker.consistency.TestConsistency"/>
        <method signature="TestConsistency.testCOUNT()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testCOUNT" class="org.chocosolver.solver.constraints.checker.consistency.TestConsistency"/>
        <method signature="TestConsistency.testELEMENT()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testELEMENT" class="org.chocosolver.solver.constraints.checker.consistency.TestConsistency"/>
        <method signature="TestConsistency.testEQ()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testEQ" class="org.chocosolver.solver.constraints.checker.consistency.TestConsistency"/>
        <method signature="TestConsistency.testIVPC()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testIVPC" class="org.chocosolver.solver.constraints.checker.consistency.TestConsistency"/>
        <method signature="TestConsistency.testLEX()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testLEX" class="org.chocosolver.solver.constraints.checker.consistency.TestConsistency"/>
        <method signature="TestConsistency.testLEXCHAIN()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testLEXCHAIN" class="org.chocosolver.solver.constraints.checker.consistency.TestConsistency"/>
        <method signature="TestConsistency.testMAX()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testMAX" class="org.chocosolver.solver.constraints.checker.consistency.TestConsistency"/>
        <method signature="TestConsistency.testMDD()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testMDD" class="org.chocosolver.solver.constraints.checker.consistency.TestConsistency"/>
        <method signature="TestConsistency.testMIN()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testMIN" class="org.chocosolver.solver.constraints.checker.consistency.TestConsistency"/>
        <method signature="TestConsistency.testNEQ()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testNEQ" class="org.chocosolver.solver.constraints.checker.consistency.TestConsistency"/>
        <method signature="TestConsistency.testPLUSAC()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testPLUSAC" class="org.chocosolver.solver.constraints.checker.consistency.TestConsistency"/>
        <method signature="TestConsistency.testPLUSBC()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testPLUSBC" class="org.chocosolver.solver.constraints.checker.consistency.TestConsistency"/>
        <method signature="TestConsistency.testSORT()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testSORT" class="org.chocosolver.solver.constraints.checker.consistency.TestConsistency"/>
        <method signature="TestCorrectness.testABSOLUTE()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testABSOLUTE" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testALLDIFFERENT()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testALLDIFFERENT" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testAMONG()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testAMONG" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testCOUNT()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testCOUNT" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testCircuit()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testCircuit" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testCumulative()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testCumulative" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testDiffn()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testDiffn" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testELEMENT()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testELEMENT" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testEQ()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testEQ" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testGCC()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testGCC" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testINVERSECHANNELING()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testINVERSECHANNELING" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testIncrementalCumulative()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testIncrementalCumulative" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testIntValuePrecedeChain()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testIntValuePrecedeChain" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testLEX()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testLEX" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testLEXCH()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testLEXCH" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testMAX()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testMAX" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testMDD()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testMDD" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testMIN()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testMIN" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testNEQ()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testNEQ" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testNVALUES()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testNVALUES" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testPLUSAC()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testPLUSAC" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testPLUSBC()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testPLUSBC" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testPath()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testPath" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testSORT()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testSORT" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testSubcircuit()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testSubcircuit" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testTIMES()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testTIMES" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestCorrectness.testTree()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testTree" class="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness"/>
        <method signature="TestSolveur.testCN3to8()[pri:0, instance:org.chocosolver.solver.TestSolveur@25d23478]" name="testCN3to8" class="org.chocosolver.solver.TestSolveur"/>
        <method signature="TestSolveur.testD3to6()[pri:0, instance:org.chocosolver.solver.TestSolveur@25d23478]" name="testD3to6" class="org.chocosolver.solver.TestSolveur"/>
        <method signature="TestSolveur.testDO3to6()[pri:0, instance:org.chocosolver.solver.TestSolveur@25d23478]" name="testDO3to6" class="org.chocosolver.solver.TestSolveur"/>
        <method signature="Test_Bools_Sets.setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" class="org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets"/>
        <method signature="Test_Bools_Sets.setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" class="org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets"/>
        <method signature="Test_Bools_Sets.setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" class="org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets"/>
        <method signature="TimesTest.testJL2()[pri:0, instance:org.chocosolver.solver.constraints.ternary.TimesTest@2c1a95a2]" name="testJL2" class="org.chocosolver.solver.constraints.ternary.TimesTest"/>
        <method signature="TimesTest.testJL4()[pri:0, instance:org.chocosolver.solver.constraints.ternary.TimesTest@2c1a95a2]" name="testJL4" class="org.chocosolver.solver.constraints.ternary.TimesTest"/>
        <method signature="TreeTest.test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.TreeTest@182dcd2b]" name="test1" class="org.chocosolver.solver.constraints.nary.TreeTest"/>
        <method signature="ViewMinusTest.test2()[pri:0, instance:org.chocosolver.solver.variables.ViewMinusTest@1ddc8fc]" name="test2" class="org.chocosolver.solver.variables.ViewMinusTest"/>
        <method signature="ViewMinusTest.test3()[pri:0, instance:org.chocosolver.solver.variables.ViewMinusTest@1ddc8fc]" name="test3" class="org.chocosolver.solver.variables.ViewMinusTest"/>
        <method signature="ViewSumXYTest.test2()[pri:0, instance:org.chocosolver.solver.variables.ViewSumXYTest@77d58f3a]" name="test2" class="org.chocosolver.solver.variables.ViewSumXYTest"/>
        <method signature="ViewSumXYTest.test3()[pri:0, instance:org.chocosolver.solver.variables.ViewSumXYTest@77d58f3a]" name="test3" class="org.chocosolver.solver.variables.ViewSumXYTest"/>
        <method signature="ViewsTest.test1()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test1" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.test1a()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test1a" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.test1b()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test1b" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.test1bb()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test1bb" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.test1bbb()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test1bbb" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.test1c()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test1c" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.test1d(int)[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test1d" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.test2()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test2" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.test3()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test3" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.test4()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test4" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.test5()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test5" class="org.chocosolver.solver.variables.ViewsTest"/>
        <method signature="ViewsTest.test6()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test6" class="org.chocosolver.solver.variables.ViewsTest"/>
      </group> <!-- 10s -->
      <group name="5m">
        <method signature="TestSolveur.testCN9()[pri:0, instance:org.chocosolver.solver.TestSolveur@25d23478]" name="testCN9" class="org.chocosolver.solver.TestSolveur"/>
      </group> <!-- 5m -->
      <group name="ibex">
        <method signature="ExpressionTest.test1(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test1" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test10(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test10" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test12(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test12" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test13(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test13" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test14(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test14" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test15(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test15" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test16(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test16" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test17(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test17" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test18(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test18" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test19(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test19" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test20(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test20" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test21(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test21" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test22(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test22" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test23(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test23" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test24(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test24" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test25(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test25" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test26(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test26" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test27(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test27" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test28(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test28" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test29(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test29" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test3(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test3" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test30(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test30" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test31(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test31" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test32(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test32" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test4(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test4" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test5(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test5" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test6(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test6" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test7(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test7" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test8(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test8" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
        <method signature="ExpressionTest.test9(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test9" class="org.chocosolver.solver.expression.continuous.ExpressionTest"/>
      </group> <!-- ibex -->
    </groups>
    <test name="Surefire test" duration-ms="1434720" started-at="2018-05-26T18:46:38Z" finished-at="2018-05-26T19:10:33Z">
      <class name="org.chocosolver.solver.constraints.set.MaxElementTest">
        <test-method status="PASS" signature="testEmptySetKO()[pri:0, instance:org.chocosolver.solver.constraints.set.MaxElementTest@2f498f21]" name="testEmptySetKO" duration-ms="2" started-at="2018-05-26T21:09:08Z" finished-at="2018-05-26T21:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptySetKO -->
        <test-method status="PASS" signature="testEmptySetOK()[pri:0, instance:org.chocosolver.solver.constraints.set.MaxElementTest@2f498f21]" name="testEmptySetOK" duration-ms="1" started-at="2018-05-26T21:09:08Z" finished-at="2018-05-26T21:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptySetOK -->
        <test-method status="PASS" signature="testImpossible()[pri:0, instance:org.chocosolver.solver.constraints.set.MaxElementTest@2f498f21]" name="testImpossible" duration-ms="1" started-at="2018-05-26T21:09:08Z" finished-at="2018-05-26T21:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImpossible -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.MaxElementTest@2f498f21]" name="testNominal" duration-ms="2" started-at="2018-05-26T21:09:08Z" finished-at="2018-05-26T21:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testTrivialFalse()[pri:0, instance:org.chocosolver.solver.constraints.set.MaxElementTest@2f498f21]" name="testTrivialFalse" duration-ms="0" started-at="2018-05-26T21:09:08Z" finished-at="2018-05-26T21:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrivialFalse -->
        <test-method status="PASS" signature="testTrivialTrue()[pri:0, instance:org.chocosolver.solver.constraints.set.MaxElementTest@2f498f21]" name="testTrivialTrue" duration-ms="0" started-at="2018-05-26T21:09:08Z" finished-at="2018-05-26T21:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrivialTrue -->
      </class> <!-- org.chocosolver.solver.constraints.set.MaxElementTest -->
      <class name="org.chocosolver.memory.PopTest">
        <test-method status="PASS" signature="testEnvPushPop(org.chocosolver.memory.trailing.EnvironmentTrailing)[pri:0, instance:org.chocosolver.memory.PopTest@7fce1069]" name="testEnvPushPop" duration-ms="1" started-at="2018-05-26T21:03:12Z" data-provider="env" finished-at="2018-05-26T21:03:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@134a27c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnvPushPop -->
        <test-method status="PASS" signature="testEnvPushPop(org.chocosolver.memory.trailing.EnvironmentTrailing)[pri:0, instance:org.chocosolver.memory.PopTest@7fce1069]" name="testEnvPushPop" duration-ms="1" started-at="2018-05-26T21:03:12Z" data-provider="env" finished-at="2018-05-26T21:03:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@6015326]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnvPushPop -->
        <test-method status="PASS" signature="testEnvTPop(org.chocosolver.memory.trailing.EnvironmentTrailing)[pri:0, instance:org.chocosolver.memory.PopTest@7fce1069]" name="testEnvTPop" duration-ms="0" started-at="2018-05-26T21:03:12Z" data-provider="env" finished-at="2018-05-26T21:03:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@6d36529a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnvTPop -->
        <test-method status="PASS" signature="testEnvTPop(org.chocosolver.memory.trailing.EnvironmentTrailing)[pri:0, instance:org.chocosolver.memory.PopTest@7fce1069]" name="testEnvTPop" duration-ms="0" started-at="2018-05-26T21:03:12Z" data-provider="env" finished-at="2018-05-26T21:03:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@2653b95f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnvTPop -->
      </class> <!-- org.chocosolver.memory.PopTest -->
      <class name="org.chocosolver.solver.constraints.reification.PropConDisTest">
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.solver.constraints.reification.PropConDisTest@4d90d91f]" name="test3" duration-ms="7060" started-at="2018-05-26T21:00:32Z" finished-at="2018-05-26T21:00:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test4()[pri:0, instance:org.chocosolver.solver.constraints.reification.PropConDisTest@4d90d91f]" name="test4" duration-ms="507" started-at="2018-05-26T21:00:39Z" finished-at="2018-05-26T21:00:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="testCD1()[pri:0, instance:org.chocosolver.solver.constraints.reification.PropConDisTest@4d90d91f]" name="testCD1" duration-ms="1" started-at="2018-05-26T21:00:39Z" finished-at="2018-05-26T21:00:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCD1 -->
        <test-method status="PASS" signature="testCD2()[pri:0, instance:org.chocosolver.solver.constraints.reification.PropConDisTest@4d90d91f]" name="testCD2" duration-ms="0" started-at="2018-05-26T21:00:39Z" finished-at="2018-05-26T21:00:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCD2 -->
      </class> <!-- org.chocosolver.solver.constraints.reification.PropConDisTest -->
      <class name="org.chocosolver.solver.constraints.set.SymmetricTest">
        <test-method status="PASS" signature="testHeadOnly()[pri:0, instance:org.chocosolver.solver.constraints.set.SymmetricTest@6fafbdac]" name="testHeadOnly" duration-ms="3" started-at="2018-05-26T21:09:41Z" finished-at="2018-05-26T21:09:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeadOnly -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.SymmetricTest@6fafbdac]" name="testNominal" duration-ms="1" started-at="2018-05-26T21:09:41Z" finished-at="2018-05-26T21:09:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
      </class> <!-- org.chocosolver.solver.constraints.set.SymmetricTest -->
      <class name="org.chocosolver.solver.LimitsTest">
        <test-method status="PASS" signature="durationTest()[pri:0, instance:org.chocosolver.solver.LimitsTest@677c2820]" name="durationTest" duration-ms="1" started-at="2018-05-26T21:08:53Z" finished-at="2018-05-26T21:08:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- durationTest -->
        <test-method status="PASS" signature="testBacktrack()[pri:0, instance:org.chocosolver.solver.LimitsTest@677c2820]" name="testBacktrack" duration-ms="42" started-at="2018-05-26T21:08:53Z" finished-at="2018-05-26T21:08:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBacktrack -->
        <test-method status="PASS" signature="testFail()[pri:0, instance:org.chocosolver.solver.LimitsTest@677c2820]" name="testFail" duration-ms="3" started-at="2018-05-26T21:08:53Z" finished-at="2018-05-26T21:08:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFail -->
        <test-method status="PASS" signature="testNode()[pri:0, instance:org.chocosolver.solver.LimitsTest@677c2820]" name="testNode" duration-ms="3" started-at="2018-05-26T21:08:53Z" finished-at="2018-05-26T21:08:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNode -->
        <test-method status="PASS" signature="testSolution()[pri:0, instance:org.chocosolver.solver.LimitsTest@677c2820]" name="testSolution" duration-ms="42" started-at="2018-05-26T21:08:53Z" finished-at="2018-05-26T21:08:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSolution -->
        <test-method status="PASS" signature="testTime()[pri:0, instance:org.chocosolver.solver.LimitsTest@677c2820]" name="testTime" duration-ms="501" started-at="2018-05-26T21:08:53Z" finished-at="2018-05-26T21:08:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTime -->
      </class> <!-- org.chocosolver.solver.LimitsTest -->
      <class name="org.chocosolver.solver.constraints.nary.BitsIntChannelingTest">
        <test-method status="PASS" signature="testEmptyArray()[pri:0, instance:org.chocosolver.solver.constraints.nary.BitsIntChannelingTest@3909308c]" name="testEmptyArray" duration-ms="2" started-at="2018-05-26T21:04:33Z" finished-at="2018-05-26T21:04:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyArray -->
        <test-method status="PASS" signature="testFree()[pri:0, instance:org.chocosolver.solver.constraints.nary.BitsIntChannelingTest@3909308c]" name="testFree" duration-ms="17" started-at="2018-05-26T21:04:33Z" finished-at="2018-05-26T21:04:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFree -->
        <test-method status="PASS" signature="testNegativeValue()[pri:0, instance:org.chocosolver.solver.constraints.nary.BitsIntChannelingTest@3909308c]" name="testNegativeValue" duration-ms="1" started-at="2018-05-26T21:04:33Z" finished-at="2018-05-26T21:04:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeValue -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.nary.BitsIntChannelingTest@3909308c]" name="testNominal" duration-ms="1" started-at="2018-05-26T21:04:33Z" finished-at="2018-05-26T21:04:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testNominalReverse()[pri:0, instance:org.chocosolver.solver.constraints.nary.BitsIntChannelingTest@3909308c]" name="testNominalReverse" duration-ms="1" started-at="2018-05-26T21:04:33Z" finished-at="2018-05-26T21:04:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominalReverse -->
        <test-method status="PASS" signature="testNotEnoughDigits()[pri:0, instance:org.chocosolver.solver.constraints.nary.BitsIntChannelingTest@3909308c]" name="testNotEnoughDigits" duration-ms="1" started-at="2018-05-26T21:04:33Z" finished-at="2018-05-26T21:04:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNotEnoughDigits -->
        <test-method status="PASS" signature="testOneUnknownBit()[pri:0, instance:org.chocosolver.solver.constraints.nary.BitsIntChannelingTest@3909308c]" name="testOneUnknownBit" duration-ms="1" started-at="2018-05-26T21:04:33Z" finished-at="2018-05-26T21:04:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneUnknownBit -->
        <test-method status="PASS" signature="testTooSmallBound()[pri:0, instance:org.chocosolver.solver.constraints.nary.BitsIntChannelingTest@3909308c]" name="testTooSmallBound" duration-ms="0" started-at="2018-05-26T21:04:33Z" finished-at="2018-05-26T21:04:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTooSmallBound -->
      </class> <!-- org.chocosolver.solver.constraints.nary.BitsIntChannelingTest -->
      <class name="org.chocosolver.solver.constraints.set.SetCstrsTest">
        <test-method status="PASS" signature="testEq()[pri:0, instance:org.chocosolver.solver.constraints.set.SetCstrsTest@1b6683c4]" name="testEq" duration-ms="6" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEq -->
      </class> <!-- org.chocosolver.solver.constraints.set.SetCstrsTest -->
      <class name="org.chocosolver.solver.constraints.nary.IntValuePrecedeChainTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.IntValuePrecedeChainTest@2e2cd42c]" name="test1" duration-ms="12289" started-at="2018-05-26T21:02:57Z" finished-at="2018-05-26T21:03:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
      </class> <!-- org.chocosolver.solver.constraints.nary.IntValuePrecedeChainTest -->
      <class name="org.chocosolver.solver.constraints.nary.LexChainTest">
        <test-method status="PASS" signature="lexChainTest1()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexChainTest@35b58254]" name="lexChainTest1" duration-ms="3853" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lexChainTest1 -->
        <test-method status="PASS" signature="testB()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexChainTest@35b58254]" name="testB" duration-ms="2228" started-at="2018-05-26T20:55:37Z" finished-at="2018-05-26T20:55:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB -->
        <test-method status="PASS" signature="testB1()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexChainTest@35b58254]" name="testB1" duration-ms="2" started-at="2018-05-26T20:55:39Z" finished-at="2018-05-26T20:55:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB1 -->
        <test-method status="PASS" signature="testE()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexChainTest@35b58254]" name="testE" duration-ms="2079" started-at="2018-05-26T20:55:39Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testE -->
        <test-method status="PASS" signature="testB2()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexChainTest@35b58254]" name="testB2" duration-ms="0" started-at="2018-05-26T20:55:39Z" finished-at="2018-05-26T20:55:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB2 -->
      </class> <!-- org.chocosolver.solver.constraints.nary.LexChainTest -->
      <class name="org.chocosolver.solver.constraints.set.NotMemberTest">
        <test-method status="PASS" signature="emptySet()[pri:0, instance:org.chocosolver.solver.constraints.set.NotMemberTest@2ffcdc9b]" name="emptySet" duration-ms="0" started-at="2018-05-26T21:09:53Z" finished-at="2018-05-26T21:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptySet -->
        <test-method status="PASS" signature="testFixedValue()[pri:0, instance:org.chocosolver.solver.constraints.set.NotMemberTest@2ffcdc9b]" name="testFixedValue" duration-ms="4" started-at="2018-05-26T21:09:53Z" finished-at="2018-05-26T21:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFixedValue -->
        <test-method status="PASS" signature="testFixedValueSure()[pri:0, instance:org.chocosolver.solver.constraints.set.NotMemberTest@2ffcdc9b]" name="testFixedValueSure" duration-ms="4" started-at="2018-05-26T21:09:53Z" finished-at="2018-05-26T21:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFixedValueSure -->
        <test-method status="PASS" signature="testFixedValueWrong()[pri:0, instance:org.chocosolver.solver.constraints.set.NotMemberTest@2ffcdc9b]" name="testFixedValueWrong" duration-ms="0" started-at="2018-05-26T21:09:53Z" finished-at="2018-05-26T21:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFixedValueWrong -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.NotMemberTest@2ffcdc9b]" name="testNominal" duration-ms="2" started-at="2018-05-26T21:09:53Z" finished-at="2018-05-26T21:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testTrivialTrue()[pri:0, instance:org.chocosolver.solver.constraints.set.NotMemberTest@2ffcdc9b]" name="testTrivialTrue" duration-ms="1" started-at="2018-05-26T21:09:53Z" finished-at="2018-05-26T21:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrivialTrue -->
        <test-method status="PASS" signature="trivialFalse()[pri:0, instance:org.chocosolver.solver.constraints.set.NotMemberTest@2ffcdc9b]" name="trivialFalse" duration-ms="1" started-at="2018-05-26T21:09:53Z" finished-at="2018-05-26T21:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trivialFalse -->
      </class> <!-- org.chocosolver.solver.constraints.set.NotMemberTest -->
      <class name="org.chocosolver.solver.explanations.SimpleExplanationTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.explanations.SimpleExplanationTest@51e1e058]" name="test1" duration-ms="1" started-at="2018-05-26T21:05:50Z" finished-at="2018-05-26T21:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.explanations.SimpleExplanationTest@51e1e058]" name="test2" duration-ms="1" started-at="2018-05-26T21:05:50Z" finished-at="2018-05-26T21:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
      </class> <!-- org.chocosolver.solver.explanations.SimpleExplanationTest -->
      <class name="org.chocosolver.solver.constraints.ternary.DistanceGTTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DistanceGTTest@1adf387e]" name="test1" duration-ms="1528" started-at="2018-05-26T20:54:48Z" finished-at="2018-05-26T20:54:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DistanceGTTest@1adf387e]" name="test2" duration-ms="0" started-at="2018-05-26T20:54:54Z" finished-at="2018-05-26T20:54:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
      </class> <!-- org.chocosolver.solver.constraints.ternary.DistanceGTTest -->
      <class name="org.chocosolver.solver.constraints.nary.InverseChannelingTest">
        <test-method status="PASS" signature="test00()[pri:0, instance:org.chocosolver.solver.constraints.nary.InverseChannelingTest@49c4118b]" name="test00" duration-ms="3" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test00 -->
        <test-method status="PASS" signature="testDomainsFiltering(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.InverseChannelingTest@49c4118b]" name="testDomainsFiltering" duration-ms="2" started-at="2018-05-26T21:00:17Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@265b52b7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDomainsFiltering -->
        <test-method status="PASS" signature="testDomainsFiltering(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.InverseChannelingTest@49c4118b]" name="testDomainsFiltering" duration-ms="0" started-at="2018-05-26T21:00:17Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@7e58471]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDomainsFiltering -->
        <test-method status="PASS" signature="testDomainsFiltering(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.InverseChannelingTest@49c4118b]" name="testDomainsFiltering" duration-ms="2" started-at="2018-05-26T21:00:17Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@265b52b7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDomainsFiltering -->
        <test-method status="PASS" signature="testDomainsFiltering(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.InverseChannelingTest@49c4118b]" name="testDomainsFiltering" duration-ms="1" started-at="2018-05-26T21:00:17Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@7e58471]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDomainsFiltering -->
        <test-method status="PASS" signature="testLengthsDiffer(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.InverseChannelingTest@49c4118b]" name="testLengthsDiffer" duration-ms="1" started-at="2018-05-26T21:00:17Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@5163ba42]]>
              </value>
            </param>
          </params>
          <exception class="org.chocosolver.solver.exception.SolverException">
            <message>
              <![CDATA[[((IV_1[0] = [0,4] + 1) = [1,5] - 1) = [0,4], ((IV_1[1] = [0,4] + 1) = [1,5] - 1) = [0,4], ((IV_1[2] = [0,4] + 1) = [1,5] - 1) = [0,4]] and [((IV_2[0] = [0,4] + 1) = [1,5] - 1) = [0,4], ((IV_2[1] = [0,4] + 1) = [1,5] - 1) = [0,4], ((IV_2[2] = [0,4] + 1) = [1,5] - 1) = [0,4], ((IV_2[3] = [0,4] + 1) = [1,5] - 1) = [0,4]] should have same size]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.chocosolver.solver.exception.SolverException: [((IV_1[0] = [0,4] + 1) = [1,5] - 1) = [0,4], ((IV_1[1] = [0,4] + 1) = [1,5] - 1) = [0,4], ((IV_1[2] = [0,4] + 1) = [1,5] - 1) = [0,4]] and [((IV_2[0] = [0,4] + 1) = [1,5] - 1) = [0,4], ((IV_2[1] = [0,4] + 1) = [1,5] - 1) = [0,4], ((IV_2[2] = [0,4] + 1) = [1,5] - 1) = [0,4], ((IV_2[3] = [0,4] + 1) = [1,5] - 1) = [0,4]] should have same size
	at org.chocosolver.solver.constraints.IIntConstraintFactory.inverseChanneling(IIntConstraintFactory.java:1283)
	at org.chocosolver.solver.constraints.IIntConstraintFactory.inverseChanneling(IIntConstraintFactory.java:1264)
	at org.chocosolver.solver.constraints.nary.InverseChannelingTest.testLengthsDiffer(InverseChannelingTest.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.SolverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLengthsDiffer -->
        <test-method status="PASS" signature="testLengthsDiffer(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.InverseChannelingTest@49c4118b]" name="testLengthsDiffer" duration-ms="1" started-at="2018-05-26T21:00:17Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@7cff8996]]>
              </value>
            </param>
          </params>
          <exception class="org.chocosolver.solver.exception.SolverException">
            <message>
              <![CDATA[[IV_1[0] = [0,4], IV_1[1] = [0,4], IV_1[2] = [0,4]] and [IV_2[0] = [0,4], IV_2[1] = [0,4], IV_2[2] = [0,4], IV_2[3] = [0,4]] should have same size]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.chocosolver.solver.exception.SolverException: [IV_1[0] = [0,4], IV_1[1] = [0,4], IV_1[2] = [0,4]] and [IV_2[0] = [0,4], IV_2[1] = [0,4], IV_2[2] = [0,4], IV_2[3] = [0,4]] should have same size
	at org.chocosolver.solver.constraints.IIntConstraintFactory.inverseChanneling(IIntConstraintFactory.java:1283)
	at org.chocosolver.solver.constraints.IIntConstraintFactory.inverseChanneling(IIntConstraintFactory.java:1264)
	at org.chocosolver.solver.constraints.nary.InverseChannelingTest.testLengthsDiffer(InverseChannelingTest.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.SolverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLengthsDiffer -->
        <test-method status="PASS" signature="testLengthsDiffer(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.InverseChannelingTest@49c4118b]" name="testLengthsDiffer" duration-ms="1" started-at="2018-05-26T21:00:17Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@5163ba42]]>
              </value>
            </param>
          </params>
          <exception class="org.chocosolver.solver.exception.SolverException">
            <message>
              <![CDATA[[((IV_1[0] = {0..4} + 1) = [1,5] - 1) = [0,4], ((IV_1[1] = {0..4} + 1) = [1,5] - 1) = [0,4], ((IV_1[2] = {0..4} + 1) = [1,5] - 1) = [0,4]] and [((IV_2[0] = {0..4} + 1) = [1,5] - 1) = [0,4], ((IV_2[1] = {0..4} + 1) = [1,5] - 1) = [0,4], ((IV_2[2] = {0..4} + 1) = [1,5] - 1) = [0,4], ((IV_2[3] = {0..4} + 1) = [1,5] - 1) = [0,4]] should have same size]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.chocosolver.solver.exception.SolverException: [((IV_1[0] = {0..4} + 1) = [1,5] - 1) = [0,4], ((IV_1[1] = {0..4} + 1) = [1,5] - 1) = [0,4], ((IV_1[2] = {0..4} + 1) = [1,5] - 1) = [0,4]] and [((IV_2[0] = {0..4} + 1) = [1,5] - 1) = [0,4], ((IV_2[1] = {0..4} + 1) = [1,5] - 1) = [0,4], ((IV_2[2] = {0..4} + 1) = [1,5] - 1) = [0,4], ((IV_2[3] = {0..4} + 1) = [1,5] - 1) = [0,4]] should have same size
	at org.chocosolver.solver.constraints.IIntConstraintFactory.inverseChanneling(IIntConstraintFactory.java:1283)
	at org.chocosolver.solver.constraints.IIntConstraintFactory.inverseChanneling(IIntConstraintFactory.java:1264)
	at org.chocosolver.solver.constraints.nary.InverseChannelingTest.testLengthsDiffer(InverseChannelingTest.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.SolverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLengthsDiffer -->
        <test-method status="PASS" signature="testLengthsDiffer(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.InverseChannelingTest@49c4118b]" name="testLengthsDiffer" duration-ms="0" started-at="2018-05-26T21:00:17Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@7cff8996]]>
              </value>
            </param>
          </params>
          <exception class="org.chocosolver.solver.exception.SolverException">
            <message>
              <![CDATA[[IV_1[0] = {0..4}, IV_1[1] = {0..4}, IV_1[2] = {0..4}] and [IV_2[0] = {0..4}, IV_2[1] = {0..4}, IV_2[2] = {0..4}, IV_2[3] = {0..4}] should have same size]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.chocosolver.solver.exception.SolverException: [IV_1[0] = {0..4}, IV_1[1] = {0..4}, IV_1[2] = {0..4}] and [IV_2[0] = {0..4}, IV_2[1] = {0..4}, IV_2[2] = {0..4}, IV_2[3] = {0..4}] should have same size
	at org.chocosolver.solver.constraints.IIntConstraintFactory.inverseChanneling(IIntConstraintFactory.java:1283)
	at org.chocosolver.solver.constraints.IIntConstraintFactory.inverseChanneling(IIntConstraintFactory.java:1264)
	at org.chocosolver.solver.constraints.nary.InverseChannelingTest.testLengthsDiffer(InverseChannelingTest.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.SolverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLengthsDiffer -->
        <test-method status="PASS" signature="testNoSolution(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.InverseChannelingTest@49c4118b]" name="testNoSolution" duration-ms="0" started-at="2018-05-26T21:00:17Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@2081b4a8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoSolution -->
        <test-method status="PASS" signature="testNoSolution(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.InverseChannelingTest@49c4118b]" name="testNoSolution" duration-ms="1" started-at="2018-05-26T21:00:17Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@72602969]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoSolution -->
        <test-method status="PASS" signature="testNoSolution(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.InverseChannelingTest@49c4118b]" name="testNoSolution" duration-ms="1" started-at="2018-05-26T21:00:17Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@72602969]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoSolution -->
        <test-method status="PASS" signature="testNoSolution(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.InverseChannelingTest@49c4118b]" name="testNoSolution" duration-ms="0" started-at="2018-05-26T21:00:17Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@2081b4a8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoSolution -->
        <test-method status="PASS" signature="testNominal(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.InverseChannelingTest@49c4118b]" name="testNominal" duration-ms="32" started-at="2018-05-26T21:00:17Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@53e432d6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testNominal(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.InverseChannelingTest@49c4118b]" name="testNominal" duration-ms="12" started-at="2018-05-26T21:00:17Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@30decae]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testNominal(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.InverseChannelingTest@49c4118b]" name="testNominal" duration-ms="14" started-at="2018-05-26T21:00:17Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@53e432d6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testNominal(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.InverseChannelingTest@49c4118b]" name="testNominal" duration-ms="7" started-at="2018-05-26T21:00:17Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@30decae]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
      </class> <!-- org.chocosolver.solver.constraints.nary.InverseChannelingTest -->
      <class name="org.chocosolver.solver.constraints.ternary.TimesTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.ternary.TimesTest@2c1a95a2]" name="test1" duration-ms="411" started-at="2018-05-26T20:51:06Z" finished-at="2018-05-26T20:51:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="testJL()[pri:0, instance:org.chocosolver.solver.constraints.ternary.TimesTest@2c1a95a2]" name="testJL" duration-ms="1" started-at="2018-05-26T20:54:42Z" finished-at="2018-05-26T20:54:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL -->
        <test-method status="PASS" signature="testJL2()[pri:0, instance:org.chocosolver.solver.constraints.ternary.TimesTest@2c1a95a2]" name="testJL2" duration-ms="4423" started-at="2018-05-26T20:54:42Z" finished-at="2018-05-26T20:54:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL2 -->
        <test-method status="PASS" signature="testJL3()[pri:0, instance:org.chocosolver.solver.constraints.ternary.TimesTest@2c1a95a2]" name="testJL3" duration-ms="6" started-at="2018-05-26T20:54:47Z" finished-at="2018-05-26T20:54:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL3 -->
        <test-method status="PASS" signature="testJL4()[pri:0, instance:org.chocosolver.solver.constraints.ternary.TimesTest@2c1a95a2]" name="testJL4" duration-ms="825" started-at="2018-05-26T20:54:47Z" finished-at="2018-05-26T20:54:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL4 -->
        <test-method status="PASS" signature="testJL5()[pri:0, instance:org.chocosolver.solver.constraints.ternary.TimesTest@2c1a95a2]" name="testJL5" duration-ms="326" started-at="2018-05-26T20:54:47Z" finished-at="2018-05-26T20:54:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL5 -->
        <test-method status="PASS" signature="testJL6()[pri:0, instance:org.chocosolver.solver.constraints.ternary.TimesTest@2c1a95a2]" name="testJL6" duration-ms="0" started-at="2018-05-26T20:54:48Z" finished-at="2018-05-26T20:54:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL6 -->
        <test-method status="PASS" signature="testJL7()[pri:0, instance:org.chocosolver.solver.constraints.ternary.TimesTest@2c1a95a2]" name="testJL7" duration-ms="0" started-at="2018-05-26T20:54:48Z" finished-at="2018-05-26T20:54:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL7 -->
      </class> <!-- org.chocosolver.solver.constraints.ternary.TimesTest -->
      <class name="org.chocosolver.solver.search.loop.lns.neighbors.ExplainingObjectiveTest">
        <test-method status="PASS" signature="testRemovedValues1()[pri:0, instance:org.chocosolver.solver.search.loop.lns.neighbors.ExplainingObjectiveTest@53dbe7b2]" name="testRemovedValues1" duration-ms="4" started-at="2018-05-26T21:09:40Z" finished-at="2018-05-26T21:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemovedValues1 -->
      </class> <!-- org.chocosolver.solver.search.loop.lns.neighbors.ExplainingObjectiveTest -->
      <class name="org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest">
        <test-method status="PASS" signature="before()[pri:0, instance:org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest@50b4e7b2]" name="before" is-config="true" duration-ms="1" started-at="2018-05-26T21:05:50Z" finished-at="2018-05-26T21:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="cosTest()[pri:0, instance:org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest@50b4e7b2]" name="cosTest" duration-ms="111" started-at="2018-05-26T21:05:50Z" finished-at="2018-05-26T21:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cosTest -->
        <test-method status="PASS" signature="testM1()[pri:0, instance:org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest@50b4e7b2]" name="testM1" duration-ms="2" started-at="2018-05-26T21:05:50Z" finished-at="2018-05-26T21:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testM1 -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest@50b4e7b2]" name="before" is-config="true" duration-ms="0" started-at="2018-05-26T21:05:50Z" finished-at="2018-05-26T21:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testM2()[pri:0, instance:org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest@50b4e7b2]" name="testM2" duration-ms="1" started-at="2018-05-26T21:05:50Z" finished-at="2018-05-26T21:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testM2 -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest@50b4e7b2]" name="before" is-config="true" duration-ms="0" started-at="2018-05-26T21:05:50Z" finished-at="2018-05-26T21:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest@50b4e7b2]" name="before" is-config="true" duration-ms="0" started-at="2018-05-26T21:05:50Z" finished-at="2018-05-26T21:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testStampIt1()[pri:0, instance:org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest@50b4e7b2]" name="testStampIt1" duration-ms="0" started-at="2018-05-26T21:05:50Z" finished-at="2018-05-26T21:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStampIt1 -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest@50b4e7b2]" name="before" is-config="true" duration-ms="0" started-at="2018-05-26T21:05:50Z" finished-at="2018-05-26T21:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testStampIt2()[pri:0, instance:org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest@50b4e7b2]" name="testStampIt2" duration-ms="0" started-at="2018-05-26T21:05:50Z" finished-at="2018-05-26T21:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStampIt2 -->
        <test-method status="PASS" signature="testStampIt3()[pri:0, instance:org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest@50b4e7b2]" name="testStampIt3" duration-ms="93" started-at="2018-05-26T21:05:50Z" finished-at="2018-05-26T21:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStampIt3 -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest@50b4e7b2]" name="before" is-config="true" duration-ms="0" started-at="2018-05-26T21:05:50Z" finished-at="2018-05-26T21:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest@50b4e7b2]" name="before" is-config="true" duration-ms="1" started-at="2018-05-26T21:05:50Z" finished-at="2018-05-26T21:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testfirstNotInst()[pri:0, instance:org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest@50b4e7b2]" name="testfirstNotInst" duration-ms="0" started-at="2018-05-26T21:05:50Z" finished-at="2018-05-26T21:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testfirstNotInst -->
      </class> <!-- org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearchTest -->
      <class name="org.chocosolver.solver.constraints.set.IntCstMemberTest">
        <test-method status="PASS" signature="testFalse()[pri:0, instance:org.chocosolver.solver.constraints.set.IntCstMemberTest@161c9468]" name="testFalse" duration-ms="1" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFalse -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.IntCstMemberTest@161c9468]" name="testNominal" duration-ms="3" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testTrue()[pri:0, instance:org.chocosolver.solver.constraints.set.IntCstMemberTest@161c9468]" name="testTrue" duration-ms="3" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrue -->
      </class> <!-- org.chocosolver.solver.constraints.set.IntCstMemberTest -->
      <class name="org.chocosolver.solver.expression.continuous.ExpressionTest">
        <test-method status="FAIL" signature="test1(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test1" duration-ms="33" started-at="2018-05-26T21:02:56Z" data-provider="post" finished-at="2018-05-26T21:02:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsatisfiedLinkError">
            <message>
              <![CDATA[no ibex-java in java.library.path]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.UnsatisfiedLinkError: no ibex-java in java.library.path
	at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1867)
	at java.lang.Runtime.loadLibrary0(Runtime.java:870)
	at java.lang.System.loadLibrary(System.java:1122)
	at org.chocosolver.solver.constraints.real.Ibex.<clinit>(Ibex.java:61)
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test1(ExpressionTest.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsatisfiedLinkError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="FAIL" signature="test10(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test10" duration-ms="15" started-at="2018-05-26T21:02:56Z" data-provider="post" finished-at="2018-05-26T21:02:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test10(ExpressionTest.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test10 -->
        <test-method status="FAIL" signature="test12(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test12" duration-ms="2" started-at="2018-05-26T21:02:56Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test12(ExpressionTest.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test12 -->
        <test-method status="FAIL" signature="test13(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test13" duration-ms="1" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test13(ExpressionTest.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test13 -->
        <test-method status="FAIL" signature="test14(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test14" duration-ms="4" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test14(ExpressionTest.java:133)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test14 -->
        <test-method status="FAIL" signature="test15(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test15" duration-ms="1" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test15(ExpressionTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test15 -->
        <test-method status="FAIL" signature="test16(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test16" duration-ms="1" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test16(ExpressionTest.java:149)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test16 -->
        <test-method status="FAIL" signature="test17(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test17" duration-ms="1" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test17(ExpressionTest.java:157)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test17 -->
        <test-method status="FAIL" signature="test18(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test18" duration-ms="1" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test18(ExpressionTest.java:165)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test18 -->
        <test-method status="FAIL" signature="test19(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test19" duration-ms="1" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test19(ExpressionTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test19 -->
        <test-method status="FAIL" signature="test20(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test20" duration-ms="1" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test20(ExpressionTest.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test20 -->
        <test-method status="FAIL" signature="test21(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test21" duration-ms="1" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test21(ExpressionTest.java:190)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test21 -->
        <test-method status="FAIL" signature="test22(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test22" duration-ms="1" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test22(ExpressionTest.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test22 -->
        <test-method status="FAIL" signature="test23(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test23" duration-ms="1" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test23(ExpressionTest.java:206)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test23 -->
        <test-method status="FAIL" signature="test24(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test24" duration-ms="1" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test24(ExpressionTest.java:214)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test24 -->
        <test-method status="FAIL" signature="test25(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test25" duration-ms="2" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test25(ExpressionTest.java:222)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test25 -->
        <test-method status="FAIL" signature="test26(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test26" duration-ms="2" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test26(ExpressionTest.java:230)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test26 -->
        <test-method status="FAIL" signature="test27(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test27" duration-ms="2" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test27(ExpressionTest.java:238)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test27 -->
        <test-method status="FAIL" signature="test28(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test28" duration-ms="2" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test28(ExpressionTest.java:246)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test28 -->
        <test-method status="FAIL" signature="test29(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test29" duration-ms="1" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test29(ExpressionTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test29 -->
        <test-method status="FAIL" signature="test3(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test3" duration-ms="1" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test3(ExpressionTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="FAIL" signature="test30(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test30" duration-ms="2" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test30(ExpressionTest.java:262)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test30 -->
        <test-method status="FAIL" signature="test31(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test31" duration-ms="1" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test31(ExpressionTest.java:270)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test31 -->
        <test-method status="FAIL" signature="test32(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test32" duration-ms="1" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test32(ExpressionTest.java:278)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test32 -->
        <test-method status="FAIL" signature="test4(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test4" duration-ms="1" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test4(ExpressionTest.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="FAIL" signature="test5(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test5" duration-ms="1" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test5(ExpressionTest.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="FAIL" signature="test6(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test6" duration-ms="1" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test6(ExpressionTest.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method status="FAIL" signature="test7(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test7" duration-ms="1" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test7(ExpressionTest.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test7 -->
        <test-method status="FAIL" signature="test8(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test8" duration-ms="2" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test8(ExpressionTest.java:92)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test8 -->
        <test-method status="FAIL" signature="test9(int)[pri:0, instance:org.chocosolver.solver.expression.continuous.ExpressionTest@4c0bfe9e]" name="test9" duration-ms="1" started-at="2018-05-26T21:02:57Z" data-provider="post" finished-at="2018-05-26T21:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper$1.tryAdvance(IResolutionHelper.java:186)
	at java.util.Spliterator.forEachRemaining(Spliterator.java:326)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)
	at java.util.stream.LongPipeline.sum(LongPipeline.java:396)
	at java.util.stream.ReferencePipeline.count(ReferencePipeline.java:526)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.eval(ExpressionTest.java:40)
	at org.chocosolver.solver.expression.continuous.ExpressionTest.test9(ExpressionTest.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test9 -->
      </class> <!-- org.chocosolver.solver.expression.continuous.ExpressionTest -->
      <class name="org.chocosolver.solver.constraints.nary.SortTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.SortTest@314c28dc]" name="test1" duration-ms="23" started-at="2018-05-26T21:08:53Z" finished-at="2018-05-26T21:08:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.SortTest@314c28dc]" name="test2" duration-ms="1" started-at="2018-05-26T21:08:53Z" finished-at="2018-05-26T21:08:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.solver.constraints.nary.SortTest@314c28dc]" name="test3" duration-ms="0" started-at="2018-05-26T21:08:53Z" finished-at="2018-05-26T21:08:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test4()[pri:0, instance:org.chocosolver.solver.constraints.nary.SortTest@314c28dc]" name="test4" duration-ms="1" started-at="2018-05-26T21:08:53Z" finished-at="2018-05-26T21:08:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
      </class> <!-- org.chocosolver.solver.constraints.nary.SortTest -->
      <class name="org.chocosolver.solver.constraints.set.ElementTest">
        <test-method status="PASS" signature="testFixedValues()[pri:0, instance:org.chocosolver.solver.constraints.set.ElementTest@744f0e0b]" name="testFixedValues" duration-ms="3" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFixedValues -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.ElementTest@744f0e0b]" name="testNominal" duration-ms="12" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
      </class> <!-- org.chocosolver.solver.constraints.set.ElementTest -->
      <class name="org.chocosolver.solver.constraints.ternary.DistanceGETest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DistanceGETest@5b430541]" name="test1" duration-ms="1830" started-at="2018-05-26T20:57:53Z" finished-at="2018-05-26T20:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DistanceGETest@5b430541]" name="test2" duration-ms="1" started-at="2018-05-26T20:57:55Z" finished-at="2018-05-26T20:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
      </class> <!-- org.chocosolver.solver.constraints.ternary.DistanceGETest -->
      <class name="org.chocosolver.solver.constraints.reification.ReifiedTest">
        <test-method status="PASS" signature="testAllDifferentDecomp()[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="testAllDifferentDecomp" duration-ms="5876" started-at="2018-05-26T21:00:26Z" finished-at="2018-05-26T21:00:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllDifferentDecomp -->
        <test-method status="PASS" signature="testAllDifferentDecompSpe1()[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="testAllDifferentDecompSpe1" duration-ms="1" started-at="2018-05-26T21:00:31Z" finished-at="2018-05-26T21:00:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllDifferentDecompSpe1 -->
        <test-method status="PASS" signature="testBACP()[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="testBACP" duration-ms="1" started-at="2018-05-26T21:00:31Z" finished-at="2018-05-26T21:00:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBACP -->
        <test-method status="PASS" signature="testRandomEq()[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="testRandomEq" duration-ms="64" started-at="2018-05-26T21:00:31Z" finished-at="2018-05-26T21:00:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRandomEq -->
        <test-method status="PASS" signature="testRandomMember()[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="testRandomMember" duration-ms="1" started-at="2018-05-26T21:00:31Z" finished-at="2018-05-26T21:00:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRandomMember -->
        <test-method status="PASS" signature="testRandomNeq()[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="testRandomNeq" duration-ms="70" started-at="2018-05-26T21:00:31Z" finished-at="2018-05-26T21:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRandomNeq -->
        <test-method status="PASS" signature="test_reif(int, int)[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_reif" duration-ms="1" started-at="2018-05-26T21:00:32Z" data-provider="reif" finished-at="2018-05-26T21:00:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_reif -->
        <test-method status="PASS" signature="test_reif(int, int)[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_reif" duration-ms="0" started-at="2018-05-26T21:00:32Z" data-provider="reif" finished-at="2018-05-26T21:00:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_reif -->
        <test-method status="PASS" signature="test_reif(int, int)[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_reif" duration-ms="1" started-at="2018-05-26T21:00:32Z" data-provider="reif" finished-at="2018-05-26T21:00:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_reif -->
        <test-method status="PASS" signature="test_reif(int, int)[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_reif" duration-ms="0" started-at="2018-05-26T21:00:32Z" data-provider="reif" finished-at="2018-05-26T21:00:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_reif -->
        <test-method status="PASS" signature="test_reif(int, int)[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_reif" duration-ms="1" started-at="2018-05-26T21:00:32Z" data-provider="reif" finished-at="2018-05-26T21:00:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_reif -->
        <test-method status="PASS" signature="test_reif(int, int)[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_reif" duration-ms="1" started-at="2018-05-26T21:00:32Z" data-provider="reif" finished-at="2018-05-26T21:00:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_reif -->
        <test-method status="PASS" signature="test_reif(int, int)[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_reif" duration-ms="0" started-at="2018-05-26T21:00:32Z" data-provider="reif" finished-at="2018-05-26T21:00:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_reif -->
        <test-method status="PASS" signature="test_reif(int, int)[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_reif" duration-ms="0" started-at="2018-05-26T21:00:32Z" data-provider="reif" finished-at="2018-05-26T21:00:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_reif -->
        <test-method status="PASS" signature="test_reif(int, int)[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_reif" duration-ms="0" started-at="2018-05-26T21:00:32Z" data-provider="reif" finished-at="2018-05-26T21:00:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_reif -->
        <test-method status="PASS" signature="test_reif2(int, int)[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_reif2" duration-ms="1" started-at="2018-05-26T21:00:32Z" data-provider="reif" finished-at="2018-05-26T21:00:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_reif2 -->
        <test-method status="PASS" signature="test_reif2(int, int)[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_reif2" duration-ms="0" started-at="2018-05-26T21:00:32Z" data-provider="reif" finished-at="2018-05-26T21:00:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_reif2 -->
        <test-method status="PASS" signature="test_reif2(int, int)[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_reif2" duration-ms="1" started-at="2018-05-26T21:00:32Z" data-provider="reif" finished-at="2018-05-26T21:00:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_reif2 -->
        <test-method status="PASS" signature="test_reif2(int, int)[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_reif2" duration-ms="0" started-at="2018-05-26T21:00:32Z" data-provider="reif" finished-at="2018-05-26T21:00:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_reif2 -->
        <test-method status="PASS" signature="test_reif2(int, int)[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_reif2" duration-ms="1" started-at="2018-05-26T21:00:32Z" data-provider="reif" finished-at="2018-05-26T21:00:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_reif2 -->
        <test-method status="PASS" signature="test_reif2(int, int)[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_reif2" duration-ms="0" started-at="2018-05-26T21:00:32Z" data-provider="reif" finished-at="2018-05-26T21:00:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_reif2 -->
        <test-method status="PASS" signature="test_reif2(int, int)[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_reif2" duration-ms="1" started-at="2018-05-26T21:00:32Z" data-provider="reif" finished-at="2018-05-26T21:00:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_reif2 -->
        <test-method status="PASS" signature="test_reif2(int, int)[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_reif2" duration-ms="0" started-at="2018-05-26T21:00:32Z" data-provider="reif" finished-at="2018-05-26T21:00:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_reif2 -->
        <test-method status="PASS" signature="test_reif2(int, int)[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_reif2" duration-ms="0" started-at="2018-05-26T21:00:32Z" data-provider="reif" finished-at="2018-05-26T21:00:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_reif2 -->
        <test-method status="PASS" signature="test_wellaweg1()[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_wellaweg1" duration-ms="1" started-at="2018-05-26T21:00:32Z" finished-at="2018-05-26T21:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_wellaweg1 -->
        <test-method status="PASS" signature="test_wellaweg3()[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_wellaweg3" duration-ms="0" started-at="2018-05-26T21:00:32Z" finished-at="2018-05-26T21:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_wellaweg3 -->
        <test-method status="PASS" signature="test_wellaweg4()[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_wellaweg4" duration-ms="1" started-at="2018-05-26T21:00:32Z" finished-at="2018-05-26T21:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_wellaweg4 -->
        <test-method status="PASS" signature="test_wellaweg5()[pri:0, instance:org.chocosolver.solver.constraints.reification.ReifiedTest@f575d2b]" name="test_wellaweg5" duration-ms="1" started-at="2018-05-26T21:00:32Z" finished-at="2018-05-26T21:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_wellaweg5 -->
      </class> <!-- org.chocosolver.solver.constraints.reification.ReifiedTest -->
      <class name="org.chocosolver.solver.ModelTest">
        <test-method status="PASS" signature="testAssociates()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testAssociates" duration-ms="1" started-at="2018-05-26T21:05:50Z" finished-at="2018-05-26T21:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAssociates -->
        <test-method status="PASS" signature="testCompSearch()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testCompSearch" duration-ms="0" started-at="2018-05-26T21:05:50Z" finished-at="2018-05-26T21:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompSearch -->
        <test-method status="PASS" signature="testCriteria()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testCriteria" duration-ms="1" started-at="2018-05-26T21:05:50Z" finished-at="2018-05-26T21:05:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCriteria -->
        <test-method status="PASS" signature="testFH1()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFH1" duration-ms="1" started-at="2018-05-26T21:05:51Z" finished-at="2018-05-26T21:05:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFH1 -->
        <test-method status="PASS" signature="testFH2()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFH2" duration-ms="0" started-at="2018-05-26T21:05:51Z" finished-at="2018-05-26T21:05:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFH2 -->
        <test-method status="PASS" signature="testFind()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFind" duration-ms="43" started-at="2018-05-26T21:05:51Z" finished-at="2018-05-26T21:05:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFind -->
        <test-method status="PASS" signature="testFindAfterReset()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFindAfterReset" duration-ms="1" started-at="2018-05-26T21:05:51Z" finished-at="2018-05-26T21:05:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAfterReset -->
        <test-method status="PASS" signature="testFindAllOptimalSolutions()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFindAllOptimalSolutions" duration-ms="23" started-at="2018-05-26T21:05:51Z" finished-at="2018-05-26T21:05:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAllOptimalSolutions -->
        <test-method status="PASS" signature="testFindAllOptimalSolutions2()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFindAllOptimalSolutions2" duration-ms="14" started-at="2018-05-26T21:05:51Z" finished-at="2018-05-26T21:05:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAllOptimalSolutions2 -->
        <test-method status="PASS" signature="testFindAllSolutions()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFindAllSolutions" duration-ms="1" started-at="2018-05-26T21:05:51Z" finished-at="2018-05-26T21:05:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAllSolutions -->
        <test-method status="PASS" signature="testFindAllSolutions2()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFindAllSolutions2" duration-ms="1" started-at="2018-05-26T21:05:51Z" finished-at="2018-05-26T21:05:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAllSolutions2 -->
        <test-method status="PASS" signature="testFindAllSolutions3()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFindAllSolutions3" duration-ms="2" started-at="2018-05-26T21:05:51Z" finished-at="2018-05-26T21:05:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAllSolutions3 -->
        <test-method status="PASS" signature="testFindAllSolutionsAfterReset()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFindAllSolutionsAfterReset" duration-ms="1" started-at="2018-05-26T21:05:51Z" finished-at="2018-05-26T21:05:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAllSolutionsAfterReset -->
        <test-method status="PASS" signature="testFindOptimalSolution()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFindOptimalSolution" duration-ms="1627" started-at="2018-05-26T21:05:51Z" finished-at="2018-05-26T21:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindOptimalSolution -->
        <test-method status="PASS" signature="testFindOptimalSolutionWithSearch()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFindOptimalSolutionWithSearch" duration-ms="8" started-at="2018-05-26T21:05:52Z" finished-at="2018-05-26T21:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindOptimalSolutionWithSearch -->
        <test-method status="PASS" signature="testFindSolution()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testFindSolution" duration-ms="1" started-at="2018-05-26T21:05:52Z" finished-at="2018-05-26T21:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindSolution -->
        <test-method status="PASS" signature="testHook()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testHook" duration-ms="1" started-at="2018-05-26T21:05:52Z" finished-at="2018-05-26T21:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHook -->
        <test-method status="PASS" signature="testJL300()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testJL300" duration-ms="1" started-at="2018-05-26T21:05:52Z" finished-at="2018-05-26T21:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL300 -->
        <test-method status="PASS" signature="testJL1()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testJL1" duration-ms="0" started-at="2018-05-26T21:05:52Z" finished-at="2018-05-26T21:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL1 -->
        <test-method status="PASS" signature="testJuTii1()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testJuTii1" duration-ms="1" started-at="2018-05-26T21:05:52Z" finished-at="2018-05-26T21:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuTii1 -->
        <test-method status="PASS" signature="testMonitors()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testMonitors" duration-ms="2" started-at="2018-05-26T21:05:52Z" finished-at="2018-05-26T21:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMonitors -->
        <test-method status="PASS" signature="testName()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testName" duration-ms="1" started-at="2018-05-26T21:05:52Z" finished-at="2018-05-26T21:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testName -->
        <test-method status="PASS" signature="testNextSolution()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testNextSolution" duration-ms="0" started-at="2018-05-26T21:05:52Z" finished-at="2018-05-26T21:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNextSolution -->
        <test-method status="PASS" signature="testParBug2()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testParBug2" duration-ms="127" started-at="2018-05-26T21:05:52Z" finished-at="2018-05-26T21:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParBug2 -->
        <test-method status="PASS" signature="testParBug3()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testParBug3" duration-ms="106" started-at="2018-05-26T21:05:52Z" finished-at="2018-05-26T21:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParBug3 -->
        <test-method status="PASS" signature="testRecord()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testRecord" duration-ms="2" started-at="2018-05-26T21:05:52Z" finished-at="2018-05-26T21:05:52Z">
          <exception class="org.chocosolver.solver.exception.SolverException">
            <message>
              <![CDATA[Cannot access value of a[0] = 0: No solution has been recorded yet (empty solution). Make sure this.record() has been called.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.chocosolver.solver.exception.SolverException: Cannot access value of a[0] = 0: No solution has been recorded yet (empty solution). Make sure this.record() has been called.
	at org.chocosolver.solver.Solution.getIntVal(Solution.java:196)
	at org.chocosolver.solver.ModelTest.testRecord(ModelTest.java:497)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.SolverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecord -->
        <test-method status="PASS" signature="testRecord2()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testRecord2" duration-ms="2" started-at="2018-05-26T21:05:52Z" finished-at="2018-05-26T21:05:52Z">
          <exception class="org.chocosolver.solver.exception.SolverException">
            <message>
              <![CDATA[Cannot access value of BV_1 = 0: This variable has not been declared to be recorded in the Solution object (see Solution constructor).]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.chocosolver.solver.exception.SolverException: Cannot access value of BV_1 = 0: This variable has not been declared to be recorded in the Solution object (see Solution constructor).
	at org.chocosolver.solver.Solution.getIntVal(Solution.java:204)
	at org.chocosolver.solver.ModelTest.testRecord2(ModelTest.java:510)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.SolverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecord2 -->
        <test-method status="PASS" signature="testRecord3()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testRecord3" duration-ms="2" started-at="2018-05-26T21:05:52Z" finished-at="2018-05-26T21:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecord3 -->
        <test-method status="PASS" signature="testRestore()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testRestore" duration-ms="0" started-at="2018-05-26T21:05:52Z" finished-at="2018-05-26T21:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRestore -->
        <test-method status="PASS" signature="testRetrieveInt()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testRetrieveInt" duration-ms="1" started-at="2018-05-26T21:05:52Z" finished-at="2018-05-26T21:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetrieveInt -->
        <test-method status="PASS" signature="testRetrieveBool()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testRetrieveBool" duration-ms="0" started-at="2018-05-26T21:05:52Z" finished-at="2018-05-26T21:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetrieveBool -->
        <test-method status="PASS" signature="testRight()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testRight" duration-ms="3" started-at="2018-05-26T21:05:52Z" finished-at="2018-05-26T21:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRight -->
        <test-method status="PASS" signature="testSwapOnPassivate()[pri:0, instance:org.chocosolver.solver.ModelTest@23e0c200]" name="testSwapOnPassivate" duration-ms="998" started-at="2018-05-26T21:05:52Z" finished-at="2018-05-26T21:05:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwapOnPassivate -->
      </class> <!-- org.chocosolver.solver.ModelTest -->
      <class name="org.chocosolver.solver.search.loop.ELNSTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.search.loop.ELNSTest@25c16cf7]" name="test1" duration-ms="3" started-at="2018-05-26T21:09:08Z" finished-at="2018-05-26T21:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
      </class> <!-- org.chocosolver.solver.search.loop.ELNSTest -->
      <class name="org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest">
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:49Z" finished-at="2018-05-26T20:54:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="memoryCrashTest()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="memoryCrashTest" duration-ms="75" started-at="2018-05-26T20:54:49Z" finished-at="2018-05-26T20:54:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memoryCrashTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:50Z" finished-at="2018-05-26T20:54:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddRemoveReturnValue(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testAddRemoveReturnValue" duration-ms="1" started-at="2018-05-26T20:54:50Z" data-provider="params" finished-at="2018-05-26T20:54:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddRemoveReturnValue -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:50Z" finished-at="2018-05-26T20:54:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddRemoveReturnValue(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testAddRemoveReturnValue" duration-ms="1" started-at="2018-05-26T20:54:50Z" data-provider="params" finished-at="2018-05-26T20:54:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddRemoveReturnValue -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:50Z" finished-at="2018-05-26T20:54:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testNominal(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testNominal" duration-ms="1" started-at="2018-05-26T20:54:50Z" data-provider="params" finished-at="2018-05-26T20:54:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="1" started-at="2018-05-26T20:54:50Z" finished-at="2018-05-26T20:54:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testNominal(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testNominal" duration-ms="0" started-at="2018-05-26T20:54:50Z" data-provider="params" finished-at="2018-05-26T20:54:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testPopUntilZero(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testPopUntilZero" duration-ms="0" started-at="2018-05-26T20:54:50Z" data-provider="params" finished-at="2018-05-26T20:54:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopUntilZero -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:50Z" finished-at="2018-05-26T20:54:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testPopUntilZero(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testPopUntilZero" duration-ms="1" started-at="2018-05-26T20:54:50Z" data-provider="params" finished-at="2018-05-26T20:54:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopUntilZero -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:50Z" finished-at="2018-05-26T20:54:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:50Z" finished-at="2018-05-26T20:54:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testRemoveInLoop(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testRemoveInLoop" duration-ms="1" started-at="2018-05-26T20:54:50Z" data-provider="params" finished-at="2018-05-26T20:54:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveInLoop -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:50Z" finished-at="2018-05-26T20:54:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testRemoveInLoop(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testRemoveInLoop" duration-ms="1" started-at="2018-05-26T20:54:50Z" data-provider="params" finished-at="2018-05-26T20:54:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveInLoop -->
        <test-method status="PASS" signature="testSeveralPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testSeveralPushes" duration-ms="6" started-at="2018-05-26T20:54:50Z" data-provider="params" finished-at="2018-05-26T20:54:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSeveralPushes -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:50Z" finished-at="2018-05-26T20:54:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="1" started-at="2018-05-26T20:54:50Z" finished-at="2018-05-26T20:54:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testSeveralPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testSeveralPushes" duration-ms="9" started-at="2018-05-26T20:54:50Z" data-provider="params" finished-at="2018-05-26T20:54:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSeveralPushes -->
        <test-method status="PASS" signature="testTwoPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testTwoPushes" duration-ms="1" started-at="2018-05-26T20:54:50Z" data-provider="params" finished-at="2018-05-26T20:54:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwoPushes -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:50Z" finished-at="2018-05-26T20:54:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:50Z" finished-at="2018-05-26T20:54:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testTwoPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testTwoPushes" duration-ms="0" started-at="2018-05-26T20:54:50Z" data-provider="params" finished-at="2018-05-26T20:54:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwoPushes -->
        <test-method status="PASS" signature="testTwoSets(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testTwoSets" duration-ms="0" started-at="2018-05-26T20:54:50Z" data-provider="params" finished-at="2018-05-26T20:54:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwoSets -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:50Z" finished-at="2018-05-26T20:54:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testTwoSets(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testTwoSets" duration-ms="0" started-at="2018-05-26T20:54:50Z" data-provider="params" finished-at="2018-05-26T20:54:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwoSets -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:50Z" finished-at="2018-05-26T20:54:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testVoidPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testVoidPushes" duration-ms="1" started-at="2018-05-26T20:54:50Z" data-provider="params" finished-at="2018-05-26T20:54:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVoidPushes -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:50Z" finished-at="2018-05-26T20:54:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="1" started-at="2018-05-26T20:54:50Z" finished-at="2018-05-26T20:54:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testVoidPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testVoidPushes" duration-ms="0" started-at="2018-05-26T20:54:50Z" data-provider="params" finished-at="2018-05-26T20:54:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVoidPushes -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddAlreadyExists()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testAddAlreadyExists" duration-ms="1" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAlreadyExists -->
        <test-method status="PASS" signature="testAddMaxValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testAddMaxValue" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMaxValue -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddNegativeKO()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testAddNegativeKO" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Cannot add -2 to set of offset 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Cannot add -2 to set of offset 0
	at org.chocosolver.util.objects.setDataStructures.bitset.Set_BitSet.add(Set_BitSet.java:85)
	at org.chocosolver.util.objects.setDataStructures.StdSet.add(StdSet.java:68)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testAddNegativeKO(SetTest.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNegativeKO -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddNegativeOK()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testAddNegativeOK" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNegativeOK -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddNominal2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testAddNominal2" duration-ms="1" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNominal2 -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddNominal()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testAddNominal" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNominal -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddRemoveReturnValueNB()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testAddRemoveReturnValueNB" duration-ms="1" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddRemoveReturnValueNB -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testClear" duration-ms="1" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testEmptyMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testEmptyMax" duration-ms="1" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[cannot find maximum of an empty set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: cannot find maximum of an empty set
	at org.chocosolver.util.objects.setDataStructures.bitset.Set_BitSet.max(Set_BitSet.java:130)
	at org.chocosolver.util.objects.setDataStructures.StdSet.max(StdSet.java:122)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testEmptyMax(SetTest.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyMax -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testEmptyMin()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testEmptyMin" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[cannot find minimum of an empty set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: cannot find minimum of an empty set
	at org.chocosolver.util.objects.setDataStructures.bitset.Set_BitSet.min(Set_BitSet.java:124)
	at org.chocosolver.util.objects.setDataStructures.StdSet.min(StdSet.java:117)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testEmptyMin(SetTest.java:172)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyMin -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testEquals()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testEquals" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testIterator" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testIteratorLength()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testIteratorLength" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorLength -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="1" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testMinMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testMinMax" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinMax -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testMultipleLoops()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testMultipleLoops" duration-ms="1" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleLoops -->
        <test-method status="PASS" signature="testNewIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testNewIterator" duration-ms="1" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNewIterator -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testReadOnlySet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testReadOnlySet" duration-ms="1" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadOnlySet -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testRemove" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="testRemoveInLoop()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="testRemoveInLoop" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveInLoop -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest@70bc9070]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
      </class> <!-- org.chocosolver.util.objects.setDataStructures.backtrackable.BitSetTest -->
      <class name="org.chocosolver.solver.variables.impl.SetVarImplTest">
        <test-method status="PASS" signature="testPropagate()[pri:0, instance:org.chocosolver.solver.variables.impl.SetVarImplTest@76b019c4]" name="testPropagate" duration-ms="14" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPropagate -->
        <test-method status="PASS" signature="testPropagate2()[pri:0, instance:org.chocosolver.solver.variables.impl.SetVarImplTest@76b019c4]" name="testPropagate2" duration-ms="1" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPropagate2 -->
        <test-method status="PASS" signature="testSetVarInstantiated()[pri:0, instance:org.chocosolver.solver.variables.impl.SetVarImplTest@76b019c4]" name="testSetVarInstantiated" duration-ms="3" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetVarInstantiated -->
        <test-method status="PASS" signature="testSetVarInstantiated2()[pri:0, instance:org.chocosolver.solver.variables.impl.SetVarImplTest@76b019c4]" name="testSetVarInstantiated2" duration-ms="1" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetVarInstantiated2 -->
        <test-method status="PASS" signature="testStructures()[pri:0, instance:org.chocosolver.solver.variables.impl.SetVarImplTest@76b019c4]" name="testStructures" duration-ms="31" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStructures -->
      </class> <!-- org.chocosolver.solver.variables.impl.SetVarImplTest -->
      <class name="org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest">
        <test-method status="PASS" signature="testAddAlreadyExists()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testAddAlreadyExists" duration-ms="1" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAlreadyExists -->
        <test-method status="PASS" signature="testAddMaxValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testAddMaxValue" duration-ms="0" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMaxValue -->
        <test-method status="PASS" signature="testAddNegativeKO()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testAddNegativeKO" duration-ms="1" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Cannot add -2 to set of offset 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Cannot add -2 to set of offset 0
	at org.chocosolver.util.objects.setDataStructures.bitset.Set_BitSet.add(Set_BitSet.java:85)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testAddNegativeKO(SetTest.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNegativeKO -->
        <test-method status="PASS" signature="testAddNegativeOK()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testAddNegativeOK" duration-ms="0" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNegativeOK -->
        <test-method status="PASS" signature="testAddNominal()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testAddNominal" duration-ms="0" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNominal -->
        <test-method status="PASS" signature="testAddNominal2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testAddNominal2" duration-ms="0" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNominal2 -->
        <test-method status="PASS" signature="testAddRemoveReturnValueNB()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testAddRemoveReturnValueNB" duration-ms="0" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddRemoveReturnValueNB -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testClear" duration-ms="1" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testEmptyMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testEmptyMax" duration-ms="1" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[cannot find maximum of an empty set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: cannot find maximum of an empty set
	at org.chocosolver.util.objects.setDataStructures.bitset.Set_BitSet.max(Set_BitSet.java:130)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testEmptyMax(SetTest.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyMax -->
        <test-method status="PASS" signature="testEmptyMin()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testEmptyMin" duration-ms="0" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[cannot find minimum of an empty set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: cannot find minimum of an empty set
	at org.chocosolver.util.objects.setDataStructures.bitset.Set_BitSet.min(Set_BitSet.java:124)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testEmptyMin(SetTest.java:172)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyMin -->
        <test-method status="PASS" signature="testEquals()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testEquals" duration-ms="1" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testIterator" duration-ms="1" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="testIteratorLength()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testIteratorLength" duration-ms="0" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorLength -->
        <test-method status="PASS" signature="testMinMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testMinMax" duration-ms="0" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinMax -->
        <test-method status="PASS" signature="testMultipleLoops()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testMultipleLoops" duration-ms="0" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleLoops -->
        <test-method status="PASS" signature="testNewIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testNewIterator" duration-ms="1" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNewIterator -->
        <test-method status="PASS" signature="testReadOnlySet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testReadOnlySet" duration-ms="1" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadOnlySet -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testRemove" duration-ms="0" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="testRemoveInLoop()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest@b5d7233]" name="testRemoveInLoop" duration-ms="0" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveInLoop -->
      </class> <!-- org.chocosolver.util.objects.setDataStructures.backtrackable.SortedBitSetTest -->
      <class name="org.chocosolver.solver.constraints.binary.DistanceLTTest">
        <test-method status="PASS" signature="test1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.DistanceLTTest@36931450]" name="test1" duration-ms="429" started-at="2018-05-26T20:56:13Z" data-provider="params" finished-at="2018-05-26T20:56:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.DistanceLTTest@36931450]" name="test1" duration-ms="308" started-at="2018-05-26T20:56:14Z" data-provider="params" finished-at="2018-05-26T20:56:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
      </class> <!-- org.chocosolver.solver.constraints.binary.DistanceLTTest -->
      <class name="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.IntervalSetTest">
        <test-method status="PASS" signature="testAdd()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.IntervalSetTest@221cdd87]" name="testAdd" duration-ms="1" started-at="2018-05-26T20:54:54Z" finished-at="2018-05-26T20:54:54Z">
          <exception class="java.lang.UnsupportedOperationException">
            <message>
              <![CDATA[It is forbidden to add an element to a constant set (Set_CstInterval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException: It is forbidden to add an element to a constant set (Set_CstInterval)
	at org.chocosolver.util.objects.setDataStructures.constant.Set_CstInterval.add(Set_CstInterval.java:58)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.IntervalSetTest.testAdd(IntervalSetTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAddFalse()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.IntervalSetTest@221cdd87]" name="testAddFalse" duration-ms="0" started-at="2018-05-26T20:54:54Z" finished-at="2018-05-26T20:54:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddFalse -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.IntervalSetTest@221cdd87]" name="testClear" duration-ms="0" started-at="2018-05-26T20:54:54Z" finished-at="2018-05-26T20:54:54Z">
          <exception class="java.lang.UnsupportedOperationException">
            <message>
              <![CDATA[It is forbidden to remove an element from a constant set (Set_CstInterval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException: It is forbidden to remove an element from a constant set (Set_CstInterval)
	at org.chocosolver.util.objects.setDataStructures.constant.Set_CstInterval.clear(Set_CstInterval.java:84)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.IntervalSetTest.testClear(IntervalSetTest.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.IntervalSetTest@221cdd87]" name="testIterator" duration-ms="1" started-at="2018-05-26T20:54:54Z" finished-at="2018-05-26T20:54:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.IntervalSetTest@221cdd87]" name="testRemove" duration-ms="1" started-at="2018-05-26T20:54:54Z" finished-at="2018-05-26T20:54:54Z">
          <exception class="java.lang.UnsupportedOperationException">
            <message>
              <![CDATA[It is forbidden to remove an element from a constant set (Set_CstInterval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException: It is forbidden to remove an element from a constant set (Set_CstInterval)
	at org.chocosolver.util.objects.setDataStructures.constant.Set_CstInterval.remove(Set_CstInterval.java:65)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.IntervalSetTest.testRemove(IntervalSetTest.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.IntervalSetTest@221cdd87]" name="testSize" duration-ms="1" started-at="2018-05-26T20:54:54Z" finished-at="2018-05-26T20:54:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- org.chocosolver.util.objects.setDataStructures.nonbacktrackable.IntervalSetTest -->
      <class name="org.chocosolver.solver.constraints.binary.EqTest">
        <test-method status="PASS" signature="test1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.EqTest@1e466d]" name="test1" duration-ms="2" started-at="2018-05-26T20:51:12Z" data-provider="params" finished-at="2018-05-26T20:51:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.EqTest@1e466d]" name="test1" duration-ms="1" started-at="2018-05-26T20:51:12Z" data-provider="params" finished-at="2018-05-26T20:51:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.EqTest@1e466d]" name="test2" duration-ms="1" started-at="2018-05-26T20:51:12Z" data-provider="params" finished-at="2018-05-26T20:51:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test2(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.EqTest@1e466d]" name="test2" duration-ms="1" started-at="2018-05-26T20:51:12Z" data-provider="params" finished-at="2018-05-26T20:51:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.EqTest@1e466d]" name="test3" duration-ms="0" started-at="2018-05-26T20:51:12Z" data-provider="params" finished-at="2018-05-26T20:51:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test3(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.EqTest@1e466d]" name="test3" duration-ms="0" started-at="2018-05-26T20:51:12Z" data-provider="params" finished-at="2018-05-26T20:51:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
      </class> <!-- org.chocosolver.solver.constraints.binary.EqTest -->
      <class name="org.chocosolver.solver.constraints.nary.KnapsackTest">
        <test-method status="PASS" signature="knapsackTest()[pri:0, instance:org.chocosolver.solver.constraints.nary.KnapsackTest@2e1e7bc6]" name="knapsackTest" duration-ms="776" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- knapsackTest -->
        <test-method status="PASS" signature="knapsackTestBestValue()[pri:0, instance:org.chocosolver.solver.constraints.nary.KnapsackTest@2e1e7bc6]" name="knapsackTestBestValue" duration-ms="256" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- knapsackTestBestValue -->
      </class> <!-- org.chocosolver.solver.constraints.nary.KnapsackTest -->
      <class name="org.chocosolver.solver.constraints.set.SubsetEqTest">
        <test-method status="PASS" signature="testNoSolution()[pri:0, instance:org.chocosolver.solver.constraints.set.SubsetEqTest@a302f30]" name="testNoSolution" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoSolution -->
        <test-method status="PASS" signature="testNoSolutionBadData()[pri:0, instance:org.chocosolver.solver.constraints.set.SubsetEqTest@a302f30]" name="testNoSolutionBadData" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoSolutionBadData -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.SubsetEqTest@a302f30]" name="testNominal" duration-ms="14" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testOneToFill()[pri:0, instance:org.chocosolver.solver.constraints.set.SubsetEqTest@a302f30]" name="testOneToFill" duration-ms="1" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneToFill -->
      </class> <!-- org.chocosolver.solver.constraints.set.SubsetEqTest -->
      <class name="org.chocosolver.solver.constraints.nary.CountTest">
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.CountTest@7bd1098]" name="test2" duration-ms="40" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test2VB()[pri:0, instance:org.chocosolver.solver.constraints.nary.CountTest@7bd1098]" name="test2VB" duration-ms="7" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2VB -->
        <test-method status="PASS" signature="test2VE()[pri:0, instance:org.chocosolver.solver.constraints.nary.CountTest@7bd1098]" name="test2VE" duration-ms="5" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2VE -->
        <test-method status="PASS" signature="testMS4()[pri:0, instance:org.chocosolver.solver.constraints.nary.CountTest@7bd1098]" name="testMS4" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMS4 -->
        <test-method status="PASS" signature="testMS8()[pri:0, instance:org.chocosolver.solver.constraints.nary.CountTest@7bd1098]" name="testMS8" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMS8 -->
        <test-method status="PASS" signature="testRandomProblems()[pri:0, instance:org.chocosolver.solver.constraints.nary.CountTest@7bd1098]" name="testRandomProblems" duration-ms="5346" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRandomProblems -->
      </class> <!-- org.chocosolver.solver.constraints.nary.CountTest -->
      <class name="org.chocosolver.solver.constraints.set.OffsetTest">
        <test-method status="PASS" signature="testEqualityFalse()[pri:0, instance:org.chocosolver.solver.constraints.set.OffsetTest@1860b107]" name="testEqualityFalse" duration-ms="4" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEqualityFalse -->
        <test-method status="PASS" signature="testEqualityTrue()[pri:0, instance:org.chocosolver.solver.constraints.set.OffsetTest@1860b107]" name="testEqualityTrue" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEqualityTrue -->
        <test-method status="PASS" signature="testNominalInverse()[pri:0, instance:org.chocosolver.solver.constraints.set.OffsetTest@1860b107]" name="testNominalInverse" duration-ms="1" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominalInverse -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.OffsetTest@1860b107]" name="testNominal" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testNominalNegative()[pri:0, instance:org.chocosolver.solver.constraints.set.OffsetTest@1860b107]" name="testNominalNegative" duration-ms="1" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominalNegative -->
        <test-method status="PASS" signature="wrongLowerBound()[pri:0, instance:org.chocosolver.solver.constraints.set.OffsetTest@1860b107]" name="wrongLowerBound" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongLowerBound -->
        <test-method status="PASS" signature="wrongUpperBound()[pri:0, instance:org.chocosolver.solver.constraints.set.OffsetTest@1860b107]" name="wrongUpperBound" duration-ms="1" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongUpperBound -->
      </class> <!-- org.chocosolver.solver.constraints.set.OffsetTest -->
      <class name="org.chocosolver.solver.constraints.nary.TreeTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.TreeTest@182dcd2b]" name="test1" duration-ms="260" started-at="2018-05-26T21:00:45Z" finished-at="2018-05-26T21:00:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
      </class> <!-- org.chocosolver.solver.constraints.nary.TreeTest -->
      <class name="org.chocosolver.solver.search.restart.RestartTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.search.restart.RestartTest@50b624da]" name="test1" duration-ms="15514" started-at="2018-05-26T21:02:41Z" finished-at="2018-05-26T21:02:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="testGeometricalRestart1()[pri:0, instance:org.chocosolver.solver.search.restart.RestartTest@50b624da]" name="testGeometricalRestart1" duration-ms="3" started-at="2018-05-26T21:02:56Z" finished-at="2018-05-26T21:02:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeometricalRestart1 -->
        <test-method status="PASS" signature="testGeometricalRestart2()[pri:0, instance:org.chocosolver.solver.search.restart.RestartTest@50b624da]" name="testGeometricalRestart2" duration-ms="6" started-at="2018-05-26T21:02:56Z" finished-at="2018-05-26T21:02:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeometricalRestart2 -->
        <test-method status="PASS" signature="testLubyRestart1()[pri:0, instance:org.chocosolver.solver.search.restart.RestartTest@50b624da]" name="testLubyRestart1" duration-ms="0" started-at="2018-05-26T21:02:56Z" finished-at="2018-05-26T21:02:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLubyRestart1 -->
      </class> <!-- org.chocosolver.solver.search.restart.RestartTest -->
      <class name="org.chocosolver.solver.constraints.DynamicPostTest">
        <test-method status="PASS" signature="test0()[pri:0, instance:org.chocosolver.solver.constraints.DynamicPostTest@1e2b37cd]" name="test0" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test0 -->
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.DynamicPostTest@1e2b37cd]" name="test1" duration-ms="7" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.DynamicPostTest@1e2b37cd]" name="test2" duration-ms="2" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.solver.constraints.DynamicPostTest@1e2b37cd]" name="test3" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test4()[pri:0, instance:org.chocosolver.solver.constraints.DynamicPostTest@1e2b37cd]" name="test4" duration-ms="2" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="testCostas()[pri:0, instance:org.chocosolver.solver.constraints.DynamicPostTest@1e2b37cd]" name="testCostas" duration-ms="2005" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCostas -->
        <test-method status="PASS" signature="testIssue214()[pri:0, instance:org.chocosolver.solver.constraints.DynamicPostTest@1e2b37cd]" name="testIssue214" duration-ms="1" started-at="2018-05-26T21:00:52Z" finished-at="2018-05-26T21:00:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIssue214 -->
        <test-method status="PASS" signature="testJLpareto()[pri:0, instance:org.chocosolver.solver.constraints.DynamicPostTest@1e2b37cd]" name="testJLpareto" duration-ms="2" started-at="2018-05-26T21:00:52Z" finished-at="2018-05-26T21:00:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJLpareto -->
      </class> <!-- org.chocosolver.solver.constraints.DynamicPostTest -->
      <class name="org.chocosolver.solver.constraints.ternary.DistanceEQTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DistanceEQTest@7db2b614]" name="test1" duration-ms="474" started-at="2018-05-26T21:10:33Z" finished-at="2018-05-26T21:10:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DistanceEQTest@7db2b614]" name="test2" duration-ms="1" started-at="2018-05-26T21:10:33Z" finished-at="2018-05-26T21:10:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
      </class> <!-- org.chocosolver.solver.constraints.ternary.DistanceEQTest -->
      <class name="org.chocosolver.solver.constraints.binary.NotEqualX_YCTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.binary.NotEqualX_YCTest@63243c8f]" name="test1" duration-ms="1" started-at="2018-05-26T20:54:54Z" finished-at="2018-05-26T20:54:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.binary.NotEqualX_YCTest@63243c8f]" name="test2" duration-ms="1" started-at="2018-05-26T20:54:54Z" finished-at="2018-05-26T20:54:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.solver.constraints.binary.NotEqualX_YCTest@63243c8f]" name="test3" duration-ms="1" started-at="2018-05-26T20:54:54Z" finished-at="2018-05-26T20:54:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
      </class> <!-- org.chocosolver.solver.constraints.binary.NotEqualX_YCTest -->
      <class name="org.chocosolver.solver.constraints.set.IntBoundedMemberTest">
        <test-method status="PASS" signature="testDifferentDomains()[pri:0, instance:org.chocosolver.solver.constraints.set.IntBoundedMemberTest@570127fa]" name="testDifferentDomains" duration-ms="7" started-at="2018-05-26T21:09:53Z" finished-at="2018-05-26T21:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDifferentDomains -->
        <test-method status="PASS" signature="testEmptySet()[pri:0, instance:org.chocosolver.solver.constraints.set.IntBoundedMemberTest@570127fa]" name="testEmptySet" duration-ms="1" started-at="2018-05-26T21:09:53Z" finished-at="2018-05-26T21:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptySet -->
        <test-method status="PASS" signature="testIncompatibleDomains()[pri:0, instance:org.chocosolver.solver.constraints.set.IntBoundedMemberTest@570127fa]" name="testIncompatibleDomains" duration-ms="1" started-at="2018-05-26T21:09:53Z" finished-at="2018-05-26T21:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIncompatibleDomains -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.IntBoundedMemberTest@570127fa]" name="testNominal" duration-ms="0" started-at="2018-05-26T21:09:53Z" finished-at="2018-05-26T21:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
      </class> <!-- org.chocosolver.solver.constraints.set.IntBoundedMemberTest -->
      <class name="org.chocosolver.solver.constraints.ternary.MinTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.ternary.MinTest@70eb94d7]" name="test1" duration-ms="430" started-at="2018-05-26T20:58:42Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.ternary.MinTest@70eb94d7]" name="test2" duration-ms="1" started-at="2018-05-26T20:59:16Z" finished-at="2018-05-26T20:59:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
      </class> <!-- org.chocosolver.solver.constraints.ternary.MinTest -->
      <class name="org.chocosolver.solver.constraints.nary.ClauseChannelingTest">
        <test-method status="PASS" signature="test1B()[pri:0, instance:org.chocosolver.solver.constraints.nary.ClauseChannelingTest@abf1816]" name="test1B" duration-ms="12748" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1B -->
        <test-method status="PASS" signature="test1E()[pri:0, instance:org.chocosolver.solver.constraints.nary.ClauseChannelingTest@abf1816]" name="test1E" duration-ms="6973" started-at="2018-05-26T20:58:56Z" finished-at="2018-05-26T20:59:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1E -->
        <test-method status="PASS" signature="test2B()[pri:0, instance:org.chocosolver.solver.constraints.nary.ClauseChannelingTest@abf1816]" name="test2B" duration-ms="5170" started-at="2018-05-26T20:59:03Z" finished-at="2018-05-26T20:59:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2B -->
        <test-method status="PASS" signature="test2E()[pri:0, instance:org.chocosolver.solver.constraints.nary.ClauseChannelingTest@abf1816]" name="test2E" duration-ms="6304" started-at="2018-05-26T20:59:08Z" finished-at="2018-05-26T20:59:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2E -->
      </class> <!-- org.chocosolver.solver.constraints.nary.ClauseChannelingTest -->
      <class name="org.chocosolver.solver.search.MeasuresTest">
        <test-method status="PASS" signature="measExceptionTest()[pri:0, instance:org.chocosolver.solver.search.MeasuresTest@520ec7a7]" name="measExceptionTest" duration-ms="1" started-at="2018-05-26T21:09:40Z" finished-at="2018-05-26T21:09:40Z">
          <exception class="java.lang.UnsupportedOperationException">
            <message>
              <![CDATA[There is no objective variable in satisfaction problems]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException: There is no objective variable in satisfaction problems
	at org.chocosolver.solver.objective.SATManager.getBestSolutionValue(ObjectiveFactory.java:165)
	at org.chocosolver.solver.search.measure.Measures.getBestSolutionValue(Measures.java:191)
	at org.chocosolver.solver.search.MeasuresTest.measExceptionTest(MeasuresTest.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- measExceptionTest -->
        <test-method status="PASS" signature="measRecTest()[pri:0, instance:org.chocosolver.solver.search.MeasuresTest@520ec7a7]" name="measRecTest" duration-ms="302" started-at="2018-05-26T21:09:40Z" finished-at="2018-05-26T21:09:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- measRecTest -->
        <test-method status="PASS" signature="measSerializeTest()[pri:0, instance:org.chocosolver.solver.search.MeasuresTest@520ec7a7]" name="measSerializeTest" duration-ms="17" started-at="2018-05-26T21:09:41Z" finished-at="2018-05-26T21:09:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- measSerializeTest -->
        <test-method status="PASS" signature="measuresTest()[pri:0, instance:org.chocosolver.solver.search.MeasuresTest@520ec7a7]" name="measuresTest" duration-ms="1" started-at="2018-05-26T21:09:41Z" finished-at="2018-05-26T21:09:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- measuresTest -->
        <test-method status="PASS" signature="testReading()[pri:0, instance:org.chocosolver.solver.search.MeasuresTest@520ec7a7]" name="testReading" duration-ms="156" started-at="2018-05-26T21:09:41Z" finished-at="2018-05-26T21:09:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReading -->
      </class> <!-- org.chocosolver.solver.search.MeasuresTest -->
      <class name="org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest">
        <test-method status="PASS" signature="memoryCrashTest()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="memoryCrashTest" duration-ms="20573" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memoryCrashTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:16Z" finished-at="2018-05-26T20:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddRemoveReturnValue(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testAddRemoveReturnValue" duration-ms="1" started-at="2018-05-26T20:55:16Z" data-provider="params" finished-at="2018-05-26T20:55:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddRemoveReturnValue -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:16Z" finished-at="2018-05-26T20:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddRemoveReturnValue(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testAddRemoveReturnValue" duration-ms="0" started-at="2018-05-26T20:55:16Z" data-provider="params" finished-at="2018-05-26T20:55:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddRemoveReturnValue -->
        <test-method status="PASS" signature="testNominal(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testNominal" duration-ms="1" started-at="2018-05-26T20:55:16Z" data-provider="params" finished-at="2018-05-26T20:55:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testNominal(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testNominal" duration-ms="0" started-at="2018-05-26T20:55:16Z" data-provider="params" finished-at="2018-05-26T20:55:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:16Z" finished-at="2018-05-26T20:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:16Z" finished-at="2018-05-26T20:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:16Z" finished-at="2018-05-26T20:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testPopUntilZero(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testPopUntilZero" duration-ms="0" started-at="2018-05-26T20:55:16Z" data-provider="params" finished-at="2018-05-26T20:55:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopUntilZero -->
        <test-method status="PASS" signature="testPopUntilZero(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testPopUntilZero" duration-ms="0" started-at="2018-05-26T20:55:16Z" data-provider="params" finished-at="2018-05-26T20:55:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopUntilZero -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:16Z" finished-at="2018-05-26T20:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testRemoveInLoop(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testRemoveInLoop" duration-ms="0" started-at="2018-05-26T20:55:16Z" data-provider="params" finished-at="2018-05-26T20:55:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveInLoop -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="1" started-at="2018-05-26T20:55:16Z" finished-at="2018-05-26T20:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:16Z" finished-at="2018-05-26T20:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testRemoveInLoop(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testRemoveInLoop" duration-ms="0" started-at="2018-05-26T20:55:16Z" data-provider="params" finished-at="2018-05-26T20:55:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveInLoop -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="1" started-at="2018-05-26T20:55:16Z" finished-at="2018-05-26T20:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testSeveralPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testSeveralPushes" duration-ms="70" started-at="2018-05-26T20:55:16Z" data-provider="params" finished-at="2018-05-26T20:55:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSeveralPushes -->
        <test-method status="PASS" signature="testSeveralPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testSeveralPushes" duration-ms="111" started-at="2018-05-26T20:55:16Z" data-provider="params" finished-at="2018-05-26T20:55:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSeveralPushes -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:16Z" finished-at="2018-05-26T20:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testTwoPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testTwoPushes" duration-ms="1" started-at="2018-05-26T20:55:16Z" data-provider="params" finished-at="2018-05-26T20:55:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwoPushes -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:16Z" finished-at="2018-05-26T20:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:16Z" finished-at="2018-05-26T20:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testTwoPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testTwoPushes" duration-ms="1" started-at="2018-05-26T20:55:16Z" data-provider="params" finished-at="2018-05-26T20:55:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwoPushes -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="1" started-at="2018-05-26T20:55:16Z" finished-at="2018-05-26T20:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="1" started-at="2018-05-26T20:55:16Z" finished-at="2018-05-26T20:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testTwoSets(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testTwoSets" duration-ms="0" started-at="2018-05-26T20:55:16Z" data-provider="params" finished-at="2018-05-26T20:55:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwoSets -->
        <test-method status="PASS" signature="testTwoSets(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testTwoSets" duration-ms="0" started-at="2018-05-26T20:55:16Z" data-provider="params" finished-at="2018-05-26T20:55:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwoSets -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:16Z" finished-at="2018-05-26T20:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testVoidPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testVoidPushes" duration-ms="1" started-at="2018-05-26T20:55:16Z" data-provider="params" finished-at="2018-05-26T20:55:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVoidPushes -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:16Z" finished-at="2018-05-26T20:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testVoidPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testVoidPushes" duration-ms="1" started-at="2018-05-26T20:55:16Z" data-provider="params" finished-at="2018-05-26T20:55:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVoidPushes -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddAlreadyExists()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testAddAlreadyExists" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAlreadyExists -->
        <test-method status="PASS" signature="testAddMaxValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testAddMaxValue" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMaxValue -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddNegativeOK()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testAddNegativeOK" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNegativeOK -->
        <test-method status="PASS" signature="testAddNominal()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testAddNominal" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNominal -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddNominal2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testAddNominal2" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNominal2 -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddRemoveReturnValueNB()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testAddRemoveReturnValueNB" duration-ms="3" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddRemoveReturnValueNB -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testClear" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testEmptyMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testEmptyMax" duration-ms="13" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[cannot find maximum of an empty set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: cannot find maximum of an empty set
	at org.chocosolver.util.objects.setDataStructures.swapList.Set_Swap2.max(Set_Swap2.java:104)
	at org.chocosolver.util.objects.setDataStructures.StdSet.max(StdSet.java:122)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testEmptyMax(SetTest.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyMax -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testEmptyMin()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testEmptyMin" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[cannot find minimum of an empty set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: cannot find minimum of an empty set
	at org.chocosolver.util.objects.setDataStructures.swapList.Set_Swap2.min(Set_Swap2.java:92)
	at org.chocosolver.util.objects.setDataStructures.StdSet.min(StdSet.java:117)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testEmptyMin(SetTest.java:172)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyMin -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testEquals()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testEquals" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testIterator" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="testIteratorLength()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testIteratorLength" duration-ms="1" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorLength -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="1" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testMinMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testMinMax" duration-ms="1" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinMax -->
        <test-method status="PASS" signature="testMultipleLoops()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testMultipleLoops" duration-ms="1" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleLoops -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testNewIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testNewIterator" duration-ms="1" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNewIterator -->
        <test-method status="PASS" signature="testReadOnlySet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testReadOnlySet" duration-ms="1" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadOnlySet -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testRemove" duration-ms="0" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testRemoveInLoop()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testRemoveInLoop" duration-ms="0" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveInLoop -->
        <test-method status="PASS" signature="testAddNegativeKO()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="testAddNegativeKO" duration-ms="3" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNegativeKO -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest@6636448b]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
      </class> <!-- org.chocosolver.util.objects.setDataStructures.backtrackable.SmallBipartiteTest -->
      <class name="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest">
        <test-method status="PASS" signature="testAddNegativeKO()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testAddNegativeKO" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNegativeKO -->
        <test-method status="PASS" signature="testAddAlreadyExists()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testAddAlreadyExists" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAlreadyExists -->
        <test-method status="PASS" signature="testAddMaxValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testAddMaxValue" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMaxValue -->
        <test-method status="PASS" signature="testAddNegativeOK()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testAddNegativeOK" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNegativeOK -->
        <test-method status="PASS" signature="testAddNominal()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testAddNominal" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNominal -->
        <test-method status="PASS" signature="testAddNominal2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testAddNominal2" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNominal2 -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testClear" duration-ms="3" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testAddRemoveReturnValueNB()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testAddRemoveReturnValueNB" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddRemoveReturnValueNB -->
        <test-method status="PASS" signature="testEmptyMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testEmptyMax" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[cannot find maximum of an empty set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: cannot find maximum of an empty set
	at org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSet.max(IntIterableRangeSet.java:146)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testEmptyMax(SetTest.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyMax -->
        <test-method status="PASS" signature="testEmptyMin()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testEmptyMin" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[cannot find minimum of an empty set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: cannot find minimum of an empty set
	at org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSet.min(IntIterableRangeSet.java:140)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testEmptyMin(SetTest.java:172)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyMin -->
        <test-method status="PASS" signature="testEquals()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testEquals" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testIterator" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="testIteratorLength()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testIteratorLength" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorLength -->
        <test-method status="PASS" signature="testMinMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testMinMax" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinMax -->
        <test-method status="PASS" signature="testMultipleLoops()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testMultipleLoops" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleLoops -->
        <test-method status="PASS" signature="testNewIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testNewIterator" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNewIterator -->
        <test-method status="PASS" signature="testReadOnlySet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testReadOnlySet" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadOnlySet -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testRemove" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="testRemoveInLoop()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest@1820f274]" name="testRemoveInLoop" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveInLoop -->
      </class> <!-- org.chocosolver.util.objects.setDataStructures.nonbacktrackable.RangeSetTest -->
      <class name="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest">
        <test-method status="PASS" signature="testAddAlreadyExists()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testAddAlreadyExists" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAlreadyExists -->
        <test-method status="PASS" signature="testAddMaxValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testAddMaxValue" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMaxValue -->
        <test-method status="PASS" signature="testAddNegativeOK()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testAddNegativeOK" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNegativeOK -->
        <test-method status="PASS" signature="testAddNominal()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testAddNominal" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNominal -->
        <test-method status="PASS" signature="testAddNominal2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testAddNominal2" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNominal2 -->
        <test-method status="PASS" signature="testAddRemoveReturnValueNB()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testAddRemoveReturnValueNB" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddRemoveReturnValueNB -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testClear" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testEmptyMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testEmptyMax" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[cannot find maximum of an empty set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: cannot find maximum of an empty set
	at org.chocosolver.util.objects.setDataStructures.swapList.Set_Swap2.max(Set_Swap2.java:104)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testEmptyMax(SetTest.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyMax -->
        <test-method status="PASS" signature="testEmptyMin()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testEmptyMin" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[cannot find minimum of an empty set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: cannot find minimum of an empty set
	at org.chocosolver.util.objects.setDataStructures.swapList.Set_Swap2.min(Set_Swap2.java:92)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testEmptyMin(SetTest.java:172)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyMin -->
        <test-method status="PASS" signature="testEquals()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testEquals" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testIterator" duration-ms="0" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="testIteratorLength()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testIteratorLength" duration-ms="1" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorLength -->
        <test-method status="PASS" signature="testMinMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testMinMax" duration-ms="0" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinMax -->
        <test-method status="PASS" signature="testMultipleLoops()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testMultipleLoops" duration-ms="1" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleLoops -->
        <test-method status="PASS" signature="testNewIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testNewIterator" duration-ms="1" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNewIterator -->
        <test-method status="PASS" signature="testReadOnlySet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testReadOnlySet" duration-ms="0" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadOnlySet -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testRemove" duration-ms="0" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="testRemoveInLoop()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testRemoveInLoop" duration-ms="0" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveInLoop -->
        <test-method status="PASS" signature="testAddNegativeKO()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testAddNegativeKO" duration-ms="0" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNegativeKO -->
        <test-method status="PASS" signature="testMaxSpan()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest@4d66cb]" name="testMaxSpan" duration-ms="0" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxSpan -->
      </class> <!-- org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SmallBipartiteTest -->
      <class name="org.chocosolver.solver.constraints.real.RealTest">
        <test-method status="FAIL" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="test1" duration-ms="1" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.RealTest.test1(RealTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="FAIL" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="test2" duration-ms="1" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.RealTest.test2(RealTest.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="FAIL" signature="test4()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="test4" duration-ms="1" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper.findAllSolutions(IResolutionHelper.java:141)
	at org.chocosolver.solver.constraints.real.RealTest.test4(RealTest.java:127)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="testDetec()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testDetec" duration-ms="1" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDetec -->
        <test-method status="FAIL" signature="testFN1()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testFN1" duration-ms="1" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper.findSolution(IResolutionHelper.java:91)
	at org.chocosolver.solver.constraints.real.RealTest.testFN1(RealTest.java:722)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFN1 -->
        <test-method status="FAIL" signature="testFN2()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testFN2" duration-ms="1" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper.findSolution(IResolutionHelper.java:91)
	at org.chocosolver.solver.constraints.real.RealTest.testFN2(RealTest.java:732)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFN2 -->
        <test-method status="FAIL" signature="testFreemajb1()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testFreemajb1" duration-ms="1" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.constraints.real.RealTest.testFreemajb1(RealTest.java:148)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFreemajb1 -->
        <test-method status="FAIL" signature="testFreemajb2()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testFreemajb2" duration-ms="1" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.Solver.propagate(Solver.java:561)
	at org.chocosolver.solver.constraints.real.RealTest.testFreemajb2(RealTest.java:165)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFreemajb2 -->
        <test-method status="FAIL" signature="testFreemajb3()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testFreemajb3" duration-ms="1" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.Solver.propagate(Solver.java:561)
	at org.chocosolver.solver.constraints.real.RealTest.testFreemajb3(RealTest.java:183)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFreemajb3 -->
        <test-method status="FAIL" signature="testHM1(java.lang.String)[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testHM1" duration-ms="2" started-at="2018-05-26T21:10:04Z" data-provider="coeffs" finished-at="2018-05-26T21:10:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{0}*0.5) = {1}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.constraints.real.RealTest.testHM1(RealTest.java:214)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHM1 -->
        <test-method status="FAIL" signature="testHM1(java.lang.String)[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testHM1" duration-ms="1" started-at="2018-05-26T21:10:04Z" data-provider="coeffs" finished-at="2018-05-26T21:10:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{0}/2) = {1}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.constraints.real.RealTest.testHM1(RealTest.java:214)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHM1 -->
        <test-method status="FAIL" signature="testHM2()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testHM2" duration-ms="1" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.constraints.real.RealTest.testHM2(RealTest.java:230)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHM2 -->
        <test-method status="FAIL" signature="testHM21()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testHM21" duration-ms="1" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.RealTest.testHM21(RealTest.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHM21 -->
        <test-method status="FAIL" signature="testJJ1()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJJ1" duration-ms="1" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.RealTest.testJJ1(RealTest.java:476)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJJ1 -->
        <test-method status="FAIL" signature="testJJ2()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJJ2" duration-ms="0" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.RealTest.testJJ2(RealTest.java:515)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJJ2 -->
        <test-method status="FAIL" signature="testJJ3()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJJ3" duration-ms="0" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.RealTest.testJJ3(RealTest.java:526)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJJ3 -->
        <test-method status="FAIL" signature="testJJ34()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJJ34" duration-ms="0" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.RealTest.testJJ34(RealTest.java:572)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJJ34 -->
        <test-method status="FAIL" signature="testJJ35()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJJ35" duration-ms="1" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.RealTest.testJJ35(RealTest.java:261)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJJ35 -->
        <test-method status="FAIL" signature="testJiTee1()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJiTee1" duration-ms="28365" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper.findSolution(IResolutionHelper.java:91)
	at org.chocosolver.solver.constraints.real.RealTest.testJiTee1(RealTest.java:364)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJiTee1 -->
        <test-method status="FAIL" signature="testJiiTee1()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJiiTee1" duration-ms="0" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.constraints.real.RealTest.testJiiTee1(RealTest.java:307)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJiiTee1 -->
        <test-method status="FAIL" signature="testJuha1()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha1" duration-ms="2" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper.findAllSolutions(IResolutionHelper.java:141)
	at org.chocosolver.solver.constraints.real.RealTest.testJuha1(RealTest.java:638)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha1 -->
        <test-method status="FAIL" signature="testJuha2()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha2" duration-ms="1" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper.findAllSolutions(IResolutionHelper.java:141)
	at org.chocosolver.solver.constraints.real.RealTest.testJuha2(RealTest.java:652)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha2 -->
        <test-method status="FAIL" signature="testJuha3()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha3" duration-ms="1" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper.findAllSolutions(IResolutionHelper.java:141)
	at org.chocosolver.solver.constraints.real.RealTest.testJuha3(RealTest.java:672)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:257)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:244)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:667)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha3 -->
        <test-method status="FAIL" signature="testJuha3()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha3" duration-ms="0" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper.findAllSolutions(IResolutionHelper.java:141)
	at org.chocosolver.solver.constraints.real.RealTest.testJuha3(RealTest.java:672)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:257)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:244)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:667)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha3 -->
        <test-method status="FAIL" signature="testJuha3()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha3" duration-ms="0" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper.findAllSolutions(IResolutionHelper.java:141)
	at org.chocosolver.solver.constraints.real.RealTest.testJuha3(RealTest.java:672)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:257)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:244)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:667)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha3 -->
        <test-method status="FAIL" signature="testJuha3()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha3" duration-ms="0" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper.findAllSolutions(IResolutionHelper.java:141)
	at org.chocosolver.solver.constraints.real.RealTest.testJuha3(RealTest.java:672)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:257)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:244)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:667)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha3 -->
        <test-method status="FAIL" signature="testJuha3()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha3" duration-ms="0" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper.findAllSolutions(IResolutionHelper.java:141)
	at org.chocosolver.solver.constraints.real.RealTest.testJuha3(RealTest.java:672)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:257)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:244)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:667)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha3 -->
        <test-method status="FAIL" signature="testJuha3()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha3" duration-ms="0" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper.findAllSolutions(IResolutionHelper.java:141)
	at org.chocosolver.solver.constraints.real.RealTest.testJuha3(RealTest.java:672)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:257)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:244)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:667)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha3 -->
        <test-method status="FAIL" signature="testJuha3()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha3" duration-ms="0" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper.findAllSolutions(IResolutionHelper.java:141)
	at org.chocosolver.solver.constraints.real.RealTest.testJuha3(RealTest.java:672)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:257)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:244)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:667)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha3 -->
        <test-method status="FAIL" signature="testJuha3()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha3" duration-ms="0" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper.findAllSolutions(IResolutionHelper.java:141)
	at org.chocosolver.solver.constraints.real.RealTest.testJuha3(RealTest.java:672)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:257)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:244)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:667)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha3 -->
        <test-method status="FAIL" signature="testJuha3()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha3" duration-ms="0" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper.findAllSolutions(IResolutionHelper.java:141)
	at org.chocosolver.solver.constraints.real.RealTest.testJuha3(RealTest.java:672)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:257)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:244)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:667)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha3 -->
        <test-method status="FAIL" signature="testJuha3()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha3" duration-ms="0" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper.findAllSolutions(IResolutionHelper.java:141)
	at org.chocosolver.solver.constraints.real.RealTest.testJuha3(RealTest.java:672)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:257)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:244)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:667)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha3 -->
        <test-method status="FAIL" signature="testJuha4()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha4" duration-ms="1" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.RealTest.testJuha4(RealTest.java:684)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:257)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:244)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:667)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha4 -->
        <test-method status="FAIL" signature="testJuha4()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha4" duration-ms="1" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.RealTest.testJuha4(RealTest.java:684)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:257)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:244)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:667)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha4 -->
        <test-method status="FAIL" signature="testJuha4()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha4" duration-ms="1" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.RealTest.testJuha4(RealTest.java:684)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:257)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:244)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:667)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha4 -->
        <test-method status="FAIL" signature="testJuha4()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha4" duration-ms="1" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.RealTest.testJuha4(RealTest.java:684)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:257)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:244)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:667)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha4 -->
        <test-method status="FAIL" signature="testJuha4()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha4" duration-ms="1" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.RealTest.testJuha4(RealTest.java:684)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:257)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:244)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:667)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha4 -->
        <test-method status="FAIL" signature="testJuha4()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha4" duration-ms="1" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.RealTest.testJuha4(RealTest.java:684)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:257)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:244)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:667)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha4 -->
        <test-method status="FAIL" signature="testJuha4()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha4" duration-ms="0" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.RealTest.testJuha4(RealTest.java:684)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:257)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:244)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:667)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha4 -->
        <test-method status="FAIL" signature="testJuha4()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha4" duration-ms="0" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.RealTest.testJuha4(RealTest.java:684)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:257)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:244)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:667)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha4 -->
        <test-method status="FAIL" signature="testJuha4()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha4" duration-ms="0" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.RealTest.testJuha4(RealTest.java:684)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:257)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:244)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:667)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha4 -->
        <test-method status="FAIL" signature="testJuha4()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testJuha4" duration-ms="0" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.RealTest.testJuha4(RealTest.java:684)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:257)
	at org.testng.internal.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:244)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:667)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha4 -->
        <test-method status="FAIL" signature="testMove1()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testMove1" duration-ms="2" started-at="2018-05-26T21:10:32Z" finished-at="2018-05-26T21:10:32Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper.findAllSolutions(IResolutionHelper.java:141)
	at org.chocosolver.solver.constraints.real.RealTest.testMove1(RealTest.java:545)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMove1 -->
        <test-method status="FAIL" signature="testMove2()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testMove2" duration-ms="0" started-at="2018-05-26T21:10:33Z" finished-at="2018-05-26T21:10:33Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper.findAllSolutions(IResolutionHelper.java:141)
	at org.chocosolver.solver.constraints.real.RealTest.testMove2(RealTest.java:566)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMove2 -->
        <test-method status="FAIL" signature="testMove3()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testMove3" duration-ms="1" started-at="2018-05-26T21:10:33Z" finished-at="2018-05-26T21:10:33Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper.findAllSolutions(IResolutionHelper.java:141)
	at org.chocosolver.solver.constraints.real.RealTest.testMove3(RealTest.java:592)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMove3 -->
        <test-method status="FAIL" signature="testMove4()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testMove4" duration-ms="0" started-at="2018-05-26T21:10:33Z" finished-at="2018-05-26T21:10:33Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper.findAllSolutions(IResolutionHelper.java:141)
	at org.chocosolver.solver.constraints.real.RealTest.testMove4(RealTest.java:607)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMove4 -->
        <test-method status="FAIL" signature="testMove5()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testMove5" duration-ms="0" started-at="2018-05-26T21:10:33Z" finished-at="2018-05-26T21:10:33Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.search.IResolutionHelper.findAllSolutions(IResolutionHelper.java:141)
	at org.chocosolver.solver.constraints.real.RealTest.testMove5(RealTest.java:623)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMove5 -->
        <test-method status="FAIL" signature="testPeter()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testPeter" duration-ms="3" started-at="2018-05-26T21:10:33Z" finished-at="2018-05-26T21:10:33Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.constraints.real.RealTest.testPeter(RealTest.java:341)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPeter -->
        <test-method status="FAIL" signature="testPG1()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testPG1" duration-ms="0" started-at="2018-05-26T21:10:33Z" finished-at="2018-05-26T21:10:33Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.constraints.real.RealTest.testPG1(RealTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPG1 -->
        <test-method status="FAIL" signature="testPostUnpost()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testPostUnpost" duration-ms="1" started-at="2018-05-26T21:10:33Z" finished-at="2018-05-26T21:10:33Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.constraints.real.RealTest.testPostUnpost(RealTest.java:436)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostUnpost -->
        <test-method status="FAIL" signature="testRoberto1()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testRoberto1" duration-ms="1" started-at="2018-05-26T21:10:33Z" finished-at="2018-05-26T21:10:33Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.IbexHandler.createInstance(IbexHandler.java:297)
	at org.chocosolver.solver.constraints.real.IbexHandler.getIbexInstance(IbexHandler.java:217)
	at org.chocosolver.solver.constraints.real.IbexHandler.contract(IbexHandler.java:121)
	at org.chocosolver.solver.constraints.real.RealPropagator.propagate(RealPropagator.java:84)
	at org.chocosolver.solver.propagation.PropagationEngine.execute(PropagationEngine.java:213)
	at org.chocosolver.solver.propagation.PropagationEngine.prepropagate(PropagationEngine.java:204)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:157)
	at org.chocosolver.solver.search.loop.propagate.PropagateBasic.execute(PropagateBasic.java:27)
	at org.chocosolver.solver.Solver.initialize(Solver.java:346)
	at org.chocosolver.solver.Solver.solve(Solver.java:254)
	at org.chocosolver.solver.constraints.real.RealTest.testRoberto1(RealTest.java:749)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoberto1 -->
        <test-method status="FAIL" signature="testRoberto3()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testRoberto3" duration-ms="1" started-at="2018-05-26T21:10:33Z" finished-at="2018-05-26T21:10:33Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.RealTest.testRoberto3(RealTest.java:754)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoberto3 -->
        <test-method status="FAIL" signature="testRoberto4()[pri:0, instance:org.chocosolver.solver.constraints.real.RealTest@69abeb14]" name="testRoberto4" duration-ms="1" started-at="2018-05-26T21:10:33Z" finished-at="2018-05-26T21:10:33Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.chocosolver.solver.constraints.real.Ibex]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.chocosolver.solver.constraints.real.Ibex
	at org.chocosolver.solver.constraints.real.RealTest.testRoberto4(RealTest.java:764)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoberto4 -->
      </class> <!-- org.chocosolver.solver.constraints.real.RealTest -->
      <class name="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest">
        <test-method status="PASS" signature="testAddAlreadyExists()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testAddAlreadyExists" duration-ms="1" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAlreadyExists -->
        <test-method status="PASS" signature="testAddMaxValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testAddMaxValue" duration-ms="1" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMaxValue -->
        <test-method status="PASS" signature="testAddNegativeKO()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testAddNegativeKO" duration-ms="1" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Cannot add -2 to set of offset 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Cannot add -2 to set of offset 0
	at org.chocosolver.util.objects.setDataStructures.bitset.Set_BitSet.add(Set_BitSet.java:85)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testAddNegativeKO(SetTest.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNegativeKO -->
        <test-method status="PASS" signature="testAddNegativeOK()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testAddNegativeOK" duration-ms="1" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNegativeOK -->
        <test-method status="PASS" signature="testAddNominal()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testAddNominal" duration-ms="1" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNominal -->
        <test-method status="PASS" signature="testAddNominal2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testAddNominal2" duration-ms="0" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNominal2 -->
        <test-method status="PASS" signature="testAddRemoveReturnValueNB()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testAddRemoveReturnValueNB" duration-ms="0" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddRemoveReturnValueNB -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testClear" duration-ms="0" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testEmptyMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testEmptyMax" duration-ms="1" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[cannot find maximum of an empty set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: cannot find maximum of an empty set
	at org.chocosolver.util.objects.setDataStructures.bitset.Set_BitSet.max(Set_BitSet.java:130)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testEmptyMax(SetTest.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyMax -->
        <test-method status="PASS" signature="testEmptyMin()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testEmptyMin" duration-ms="0" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[cannot find minimum of an empty set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: cannot find minimum of an empty set
	at org.chocosolver.util.objects.setDataStructures.bitset.Set_BitSet.min(Set_BitSet.java:124)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testEmptyMin(SetTest.java:172)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyMin -->
        <test-method status="PASS" signature="testEquals()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testEquals" duration-ms="0" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testIterator" duration-ms="0" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="testIteratorLength()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testIteratorLength" duration-ms="0" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorLength -->
        <test-method status="PASS" signature="testMinMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testMinMax" duration-ms="0" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinMax -->
        <test-method status="PASS" signature="testMultipleLoops()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testMultipleLoops" duration-ms="0" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleLoops -->
        <test-method status="PASS" signature="testNewIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testNewIterator" duration-ms="0" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNewIterator -->
        <test-method status="PASS" signature="testReadOnlySet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testReadOnlySet" duration-ms="0" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadOnlySet -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testRemove" duration-ms="0" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="testRemoveInLoop()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest@7c79f2cf]" name="testRemoveInLoop" duration-ms="1" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveInLoop -->
      </class> <!-- org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BitSetTest -->
      <class name="org.chocosolver.solver.variables.impl.EnumIntVarTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="setup" is-config="true" duration-ms="1" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="setup" is-config="true" duration-ms="1" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveIntervalInner()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveIntervalInner" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveIntervalInner -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValuesButInner()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValuesButInner" duration-ms="1" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesButInner -->
        <test-method status="PASS" signature="testRemoveValueInner()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValueInner" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValueInner -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValuesInner()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValuesInner" duration-ms="1" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesInner -->
        <test-method status="PASS" signature="removeAllValuesButCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="removeAllValuesButCoverBound" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeAllValuesButCoverBound -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="removeAllValuesButWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="removeAllValuesButWrongDomain" duration-ms="1" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, IV_1 = {1..4}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeAllValuesButWrongDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveAllValuesButCoverDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveAllValuesButCoverDomain" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveAllValuesButCoverDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveIntervalCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveIntervalCoverBound" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveIntervalCoverBound -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveIntervalCoverDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveIntervalCoverDomain" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, IV_1 = {1..4}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveIntervalCoverDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveIntervalEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveIntervalEmptyDomain" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, IV_1 = {1..4}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveIntervalEmptyDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveIntervalOK()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveIntervalOK" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveIntervalOK -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveIntervalWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveIntervalWrongDomain" duration-ms="1" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveIntervalWrongDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValueEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValueEmptyDomain" duration-ms="1" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, IV_1 = 3) : remove last value
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValueEmptyDomain -->
        <test-method status="PASS" signature="testRemoveValueOK()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValueOK" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValueOK -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValueWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValueWrongDomain" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValueWrongDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValuesButOK()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValuesButOK" duration-ms="1" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesButOK -->
        <test-method status="PASS" signature="testRemoveValuesCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValuesCoverBound" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesCoverBound -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValuesEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValuesEmptyDomain" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, IV_1 = {1..4}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesEmptyDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValuesOK()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValuesOK" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesOK -->
        <test-method status="PASS" signature="testRemoveValuesWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValuesWrongDomain" duration-ms="1" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesWrongDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValuesTwoSides()[pri:0, instance:org.chocosolver.solver.variables.impl.EnumIntVarTest@55202ba6]" name="testRemoveValuesTwoSides" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesTwoSides -->
      </class> <!-- org.chocosolver.solver.variables.impl.EnumIntVarTest -->
      <class name="org.chocosolver.solver.constraints.ternary.DivTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DivTest@1be4a7e3]" name="test1" duration-ms="778" started-at="2018-05-26T20:55:23Z" finished-at="2018-05-26T20:55:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="testJL()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DivTest@1be4a7e3]" name="testJL" duration-ms="3" started-at="2018-05-26T20:55:24Z" finished-at="2018-05-26T20:55:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL -->
        <test-method status="PASS" signature="testJL2()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DivTest@1be4a7e3]" name="testJL2" duration-ms="9048" started-at="2018-05-26T20:55:24Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL2 -->
        <test-method status="PASS" signature="testTP1()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DivTest@1be4a7e3]" name="testTP1" duration-ms="1" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTP1 -->
      </class> <!-- org.chocosolver.solver.constraints.ternary.DivTest -->
      <class name="org.chocosolver.solver.constraints.LogicTreeTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test10()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test10" duration-ms="190" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test10 -->
        <test-method status="PASS" signature="test11()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test11" duration-ms="0" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test11 -->
        <test-method status="PASS" signature="test12()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test12" duration-ms="0" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test12 -->
        <test-method status="PASS" signature="test14()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test14" duration-ms="1" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test14 -->
        <test-method status="PASS" signature="test13()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test13" duration-ms="0" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test13 -->
        <test-method status="PASS" signature="test15()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test15" duration-ms="3" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test15 -->
        <test-method status="PASS" signature="test16()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test16" duration-ms="0" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test16 -->
        <test-method status="PASS" signature="test17()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test17" duration-ms="0" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test17 -->
        <test-method status="PASS" signature="test18()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test18" duration-ms="1" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test18 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test2" duration-ms="1" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test3" duration-ms="0" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test4()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test4" duration-ms="1" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test5()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test5" duration-ms="0" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="test6()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test6" duration-ms="1" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method status="PASS" signature="test7()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test7" duration-ms="0" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test7 -->
        <test-method status="PASS" signature="test8()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test8" duration-ms="1" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test8 -->
        <test-method status="PASS" signature="test9()[pri:0, instance:org.chocosolver.solver.constraints.LogicTreeTest@770cbe5d]" name="test9" duration-ms="0" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test9 -->
      </class> <!-- org.chocosolver.solver.constraints.LogicTreeTest -->
      <class name="org.chocosolver.solver.constraints.set.SumOfElementsTest">
        <test-method status="PASS" signature="testEmptySetKo()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testEmptySetKo" duration-ms="0" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptySetKo -->
        <test-method status="PASS" signature="testEmptySetKo3()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testEmptySetKo3" duration-ms="1" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptySetKo3 -->
        <test-method status="PASS" signature="testEmptySetOk()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testEmptySetOk" duration-ms="0" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptySetOk -->
        <test-method status="PASS" signature="testEmptySetOk2()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testEmptySetOk2" duration-ms="1" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptySetOk2 -->
        <test-method status="PASS" signature="testEmptySetOk3()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testEmptySetOk3" duration-ms="0" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptySetOk3 -->
        <test-method status="PASS" signature="testFixedSum()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testFixedSum" duration-ms="1" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFixedSum -->
        <test-method status="PASS" signature="testFixedSumNeg()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testFixedSumNeg" duration-ms="0" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFixedSumNeg -->
        <test-method status="PASS" signature="testFixedSumNegWrong()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testFixedSumNegWrong" duration-ms="1" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFixedSumNegWrong -->
        <test-method status="PASS" signature="testFixedSumOffsetKo()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testFixedSumOffsetKo" duration-ms="1" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFixedSumOffsetKo -->
        <test-method status="PASS" signature="testFixedSumOffset()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testFixedSumOffset" duration-ms="0" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFixedSumOffset -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testNominal" duration-ms="2" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testFixedSumOffsetKo2()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testFixedSumOffsetKo2" duration-ms="0" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFixedSumOffsetKo2 -->
        <test-method status="PASS" signature="testWrongBounds()[pri:0, instance:org.chocosolver.solver.constraints.set.SumOfElementsTest@41463c56]" name="testWrongBounds" duration-ms="1" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWrongBounds -->
      </class> <!-- org.chocosolver.solver.constraints.set.SumOfElementsTest -->
      <class name="org.chocosolver.solver.search.strategy.decision.DecisionPathTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testApply()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="testApply" duration-ms="1" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApply -->
        <test-method status="PASS" signature="testGetDecision1()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="testGetDecision1" duration-ms="1" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDecision1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetDecision2()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="testGetDecision2" duration-ms="1" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 4, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 4, Size: 1
	at org.chocosolver.solver.search.strategy.decision.DecisionPath.getDecision(DecisionPath.java:167)
	at org.chocosolver.solver.search.strategy.decision.DecisionPathTest.testGetDecision2(DecisionPathTest.java:216)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDecision2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="setUp" is-config="true" duration-ms="1" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetDecision3()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="testGetDecision3" duration-ms="0" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at org.chocosolver.solver.search.strategy.decision.DecisionPath.getDecision(DecisionPath.java:167)
	at org.chocosolver.solver.search.strategy.decision.DecisionPathTest.testGetDecision3(DecisionPathTest.java:221)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDecision3 -->
        <test-method status="PASS" signature="testPushDecision()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="testPushDecision" duration-ms="0" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPushDecision -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetLastDecision()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="testGetLastDecision" duration-ms="0" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLastDecision -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="testSize" duration-ms="1" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="testRemoveLast" duration-ms="0" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testTransferInto()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="testTransferInto" duration-ms="0" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransferInto -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionPathTest@3a7dcfb7]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- org.chocosolver.solver.search.strategy.decision.DecisionPathTest -->
      <class name="org.chocosolver.solver.constraints.binary.DistanceGTTest">
        <test-method status="PASS" signature="test1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.DistanceGTTest@dbcf7c3]" name="test1" duration-ms="1862" started-at="2018-05-26T20:46:39Z" data-provider="params" finished-at="2018-05-26T20:46:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.DistanceGTTest@dbcf7c3]" name="test1" duration-ms="1110" started-at="2018-05-26T20:46:41Z" data-provider="params" finished-at="2018-05-26T20:46:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
      </class> <!-- org.chocosolver.solver.constraints.binary.DistanceGTTest -->
      <class name="org.chocosolver.memory.EnvironmentTest">
        <test-method status="PASS" signature="testBitset1(org.chocosolver.memory.IEnvironment)[pri:0, instance:org.chocosolver.memory.EnvironmentTest@fb42c1c]" name="testBitset1" duration-ms="1" started-at="2018-05-26T21:01:05Z" data-provider="env" finished-at="2018-05-26T21:01:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@3dbb7f60]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBitset1 -->
        <test-method status="PASS" signature="testBitset1(org.chocosolver.memory.IEnvironment)[pri:0, instance:org.chocosolver.memory.EnvironmentTest@fb42c1c]" name="testBitset1" duration-ms="1" started-at="2018-05-26T21:01:05Z" data-provider="env" finished-at="2018-05-26T21:01:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@7803a877]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBitset1 -->
        <test-method status="PASS" signature="testBool(org.chocosolver.memory.IEnvironment)[pri:0, instance:org.chocosolver.memory.EnvironmentTest@fb42c1c]" name="testBool" duration-ms="1" started-at="2018-05-26T21:01:05Z" data-provider="env" finished-at="2018-05-26T21:01:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@67f3a068]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBool -->
        <test-method status="PASS" signature="testBool(org.chocosolver.memory.IEnvironment)[pri:0, instance:org.chocosolver.memory.EnvironmentTest@fb42c1c]" name="testBool" duration-ms="1" started-at="2018-05-26T21:01:05Z" data-provider="env" finished-at="2018-05-26T21:01:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@1e33dda]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBool -->
        <test-method status="PASS" signature="testFloat(org.chocosolver.memory.IEnvironment)[pri:0, instance:org.chocosolver.memory.EnvironmentTest@fb42c1c]" name="testFloat" duration-ms="1" started-at="2018-05-26T21:01:05Z" data-provider="env" finished-at="2018-05-26T21:01:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@64e5f67b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFloat -->
        <test-method status="PASS" signature="testInt(org.chocosolver.memory.IEnvironment)[pri:0, instance:org.chocosolver.memory.EnvironmentTest@fb42c1c]" name="testInt" duration-ms="1" started-at="2018-05-26T21:01:05Z" data-provider="env" finished-at="2018-05-26T21:01:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@71109f13]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInt -->
        <test-method status="PASS" signature="testFloat(org.chocosolver.memory.IEnvironment)[pri:0, instance:org.chocosolver.memory.EnvironmentTest@fb42c1c]" name="testFloat" duration-ms="0" started-at="2018-05-26T21:01:05Z" data-provider="env" finished-at="2018-05-26T21:01:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@687101a2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFloat -->
        <test-method status="PASS" signature="testInt(org.chocosolver.memory.IEnvironment)[pri:0, instance:org.chocosolver.memory.EnvironmentTest@fb42c1c]" name="testInt" duration-ms="0" started-at="2018-05-26T21:01:05Z" data-provider="env" finished-at="2018-05-26T21:01:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@ad71740]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInt -->
        <test-method status="PASS" signature="testLong(org.chocosolver.memory.IEnvironment)[pri:0, instance:org.chocosolver.memory.EnvironmentTest@fb42c1c]" name="testLong" duration-ms="1" started-at="2018-05-26T21:01:05Z" data-provider="env" finished-at="2018-05-26T21:01:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@3ce3b8d3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLong -->
        <test-method status="PASS" signature="testLong(org.chocosolver.memory.IEnvironment)[pri:0, instance:org.chocosolver.memory.EnvironmentTest@fb42c1c]" name="testLong" duration-ms="0" started-at="2018-05-26T21:01:05Z" data-provider="env" finished-at="2018-05-26T21:01:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@51a0727b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLong -->
      </class> <!-- org.chocosolver.memory.EnvironmentTest -->
      <class name="org.chocosolver.solver.constraints.nary.KeysortingTest">
        <test-method status="PASS" signature="test01()[pri:0, instance:org.chocosolver.solver.constraints.nary.KeysortingTest@1f365a26]" name="test01" duration-ms="1" started-at="2018-05-26T21:02:36Z" finished-at="2018-05-26T21:02:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01 -->
        <test-method status="PASS" signature="test02()[pri:0, instance:org.chocosolver.solver.constraints.nary.KeysortingTest@1f365a26]" name="test02" duration-ms="1" started-at="2018-05-26T21:02:36Z" finished-at="2018-05-26T21:02:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02 -->
        <test-method status="PASS" signature="test03()[pri:0, instance:org.chocosolver.solver.constraints.nary.KeysortingTest@1f365a26]" name="test03" duration-ms="1" started-at="2018-05-26T21:02:36Z" finished-at="2018-05-26T21:02:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03 -->
        <test-method status="PASS" signature="test04()[pri:0, instance:org.chocosolver.solver.constraints.nary.KeysortingTest@1f365a26]" name="test04" duration-ms="1" started-at="2018-05-26T21:02:36Z" finished-at="2018-05-26T21:02:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test04 -->
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.KeysortingTest@1f365a26]" name="test1" duration-ms="15" started-at="2018-05-26T21:02:36Z" finished-at="2018-05-26T21:02:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.KeysortingTest@1f365a26]" name="test2" duration-ms="0" started-at="2018-05-26T21:02:36Z" finished-at="2018-05-26T21:02:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.solver.constraints.nary.KeysortingTest@1f365a26]" name="test3" duration-ms="1" started-at="2018-05-26T21:02:36Z" finished-at="2018-05-26T21:02:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test4()[pri:0, instance:org.chocosolver.solver.constraints.nary.KeysortingTest@1f365a26]" name="test4" duration-ms="1" started-at="2018-05-26T21:02:36Z" finished-at="2018-05-26T21:02:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test5()[pri:0, instance:org.chocosolver.solver.constraints.nary.KeysortingTest@1f365a26]" name="test5" duration-ms="5" started-at="2018-05-26T21:02:36Z" finished-at="2018-05-26T21:02:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="test6()[pri:0, instance:org.chocosolver.solver.constraints.nary.KeysortingTest@1f365a26]" name="test6" duration-ms="4" started-at="2018-05-26T21:02:36Z" finished-at="2018-05-26T21:02:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
      </class> <!-- org.chocosolver.solver.constraints.nary.KeysortingTest -->
      <class name="org.chocosolver.solver.constraints.nary.AllDifferentTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.AllDifferentTest@1cdad619]" name="test1" duration-ms="25" started-at="2018-05-26T21:03:12Z" finished-at="2018-05-26T21:03:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.AllDifferentTest@1cdad619]" name="test2" duration-ms="8" started-at="2018-05-26T21:03:12Z" finished-at="2018-05-26T21:03:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.solver.constraints.nary.AllDifferentTest@1cdad619]" name="test3" duration-ms="1" started-at="2018-05-26T21:03:12Z" finished-at="2018-05-26T21:03:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test4()[pri:0, instance:org.chocosolver.solver.constraints.nary.AllDifferentTest@1cdad619]" name="test4" duration-ms="1" started-at="2018-05-26T21:03:12Z" finished-at="2018-05-26T21:03:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test6()[pri:0, instance:org.chocosolver.solver.constraints.nary.AllDifferentTest@1cdad619]" name="test6" duration-ms="9231" started-at="2018-05-26T21:03:12Z" finished-at="2018-05-26T21:03:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method status="PASS" signature="testB()[pri:0, instance:org.chocosolver.solver.constraints.nary.AllDifferentTest@1cdad619]" name="testB" duration-ms="1" started-at="2018-05-26T21:03:21Z" finished-at="2018-05-26T21:03:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB -->
        <test-method status="PASS" signature="testB1()[pri:0, instance:org.chocosolver.solver.constraints.nary.AllDifferentTest@1cdad619]" name="testB1" duration-ms="0" started-at="2018-05-26T21:03:21Z" finished-at="2018-05-26T21:03:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB1 -->
        <test-method status="PASS" signature="testE()[pri:0, instance:org.chocosolver.solver.constraints.nary.AllDifferentTest@1cdad619]" name="testE" duration-ms="1" started-at="2018-05-26T21:03:21Z" finished-at="2018-05-26T21:03:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testE -->
        <test-method status="PASS" signature="testXX()[pri:0, instance:org.chocosolver.solver.constraints.nary.AllDifferentTest@1cdad619]" name="testXX" duration-ms="0" started-at="2018-05-26T21:03:21Z" finished-at="2018-05-26T21:03:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXX -->
        <test-method status="PASS" signature="testXXX()[pri:0, instance:org.chocosolver.solver.constraints.nary.AllDifferentTest@1cdad619]" name="testXXX" duration-ms="0" started-at="2018-05-26T21:03:21Z" finished-at="2018-05-26T21:03:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXXX -->
      </class> <!-- org.chocosolver.solver.constraints.nary.AllDifferentTest -->
      <class name="org.chocosolver.solver.constraints.nary.NValueTest">
        <test-method status="PASS" signature="testAtLeast()[pri:0, instance:org.chocosolver.solver.constraints.nary.NValueTest@71cc0e35]" name="testAtLeast" duration-ms="20" started-at="2018-05-26T21:04:33Z" finished-at="2018-05-26T21:04:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAtLeast -->
        <test-method status="PASS" signature="testAtLeastFixed()[pri:0, instance:org.chocosolver.solver.constraints.nary.NValueTest@71cc0e35]" name="testAtLeastFixed" duration-ms="1" started-at="2018-05-26T21:04:33Z" finished-at="2018-05-26T21:04:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAtLeastFixed -->
        <test-method status="PASS" signature="testAtLeastFixed2()[pri:0, instance:org.chocosolver.solver.constraints.nary.NValueTest@71cc0e35]" name="testAtLeastFixed2" duration-ms="1981" started-at="2018-05-26T21:04:33Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAtLeastFixed2 -->
        <test-method status="PASS" signature="testAtMost()[pri:0, instance:org.chocosolver.solver.constraints.nary.NValueTest@71cc0e35]" name="testAtMost" duration-ms="23" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAtMost -->
        <test-method status="PASS" signature="testAtMostFixed()[pri:0, instance:org.chocosolver.solver.constraints.nary.NValueTest@71cc0e35]" name="testAtMostFixed" duration-ms="2" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAtMostFixed -->
        <test-method status="PASS" signature="testNValuesFixed()[pri:0, instance:org.chocosolver.solver.constraints.nary.NValueTest@71cc0e35]" name="testNValuesFixed" duration-ms="4" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNValuesFixed -->
      </class> <!-- org.chocosolver.solver.constraints.nary.NValueTest -->
      <class name="org.chocosolver.solver.variables.ViewSumXYTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.variables.ViewSumXYTest@77d58f3a]" name="test1" duration-ms="1" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.variables.ViewSumXYTest@77d58f3a]" name="test2" duration-ms="559" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.solver.variables.ViewSumXYTest@77d58f3a]" name="test3" duration-ms="519" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
      </class> <!-- org.chocosolver.solver.variables.ViewSumXYTest -->
      <class name="org.chocosolver.solver.constraints.nary.TableTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="test1" duration-ms="3" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test329()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="test329" duration-ms="13" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test329 -->
        <test-method status="PASS" signature="testAllDifferent()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testAllDifferent" duration-ms="12426" started-at="2018-05-26T20:55:41Z" finished-at="2018-05-26T20:55:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllDifferent -->
        <test-method status="PASS" signature="testAllEquals()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testAllEquals" duration-ms="12031" started-at="2018-05-26T20:55:53Z" finished-at="2018-05-26T20:56:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllEquals -->
        <test-method status="PASS" signature="testJuha1()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testJuha1" duration-ms="5" started-at="2018-05-26T20:56:05Z" finished-at="2018-05-26T20:56:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha1 -->
        <test-method status="PASS" signature="testJuha2()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testJuha2" duration-ms="8" started-at="2018-05-26T20:56:05Z" finished-at="2018-05-26T20:56:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJuha2 -->
        <test-method status="PASS" signature="testMDD1()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testMDD1" duration-ms="1" started-at="2018-05-26T20:56:05Z" finished-at="2018-05-26T20:56:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMDD1 -->
        <test-method status="PASS" signature="testMDD2()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testMDD2" duration-ms="1" started-at="2018-05-26T20:56:05Z" finished-at="2018-05-26T20:56:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMDD2 -->
        <test-method status="PASS" signature="testPDav()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testPDav" duration-ms="4" started-at="2018-05-26T20:56:05Z" finished-at="2018-05-26T20:56:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPDav -->
        <test-method status="PASS" signature="testPosFalse()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testPosFalse" duration-ms="2" started-at="2018-05-26T20:56:06Z" finished-at="2018-05-26T20:56:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPosFalse -->
        <test-method status="PASS" signature="testPosFalse2()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testPosFalse2" duration-ms="2" started-at="2018-05-26T20:56:06Z" finished-at="2018-05-26T20:56:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPosFalse2 -->
        <test-method status="PASS" signature="testPosTrue()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testPosTrue" duration-ms="2" started-at="2018-05-26T20:56:06Z" finished-at="2018-05-26T20:56:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPosTrue -->
        <test-method status="PASS" signature="testPosUndef()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testPosUndef" duration-ms="1" started-at="2018-05-26T20:56:06Z" finished-at="2018-05-26T20:56:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPosUndef -->
        <test-method status="PASS" signature="testRandom()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testRandom" duration-ms="7276" started-at="2018-05-26T20:56:06Z" finished-at="2018-05-26T20:56:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRandom -->
        <test-method status="PASS" signature="testST1()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testST1" duration-ms="4" started-at="2018-05-26T20:56:13Z" finished-at="2018-05-26T20:56:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testST1 -->
        <test-method status="PASS" signature="testST2()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testST2" duration-ms="14" started-at="2018-05-26T20:56:13Z" finished-at="2018-05-26T20:56:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testST2 -->
        <test-method status="PASS" signature="testThierry1()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testThierry1" duration-ms="14" started-at="2018-05-26T20:56:13Z" finished-at="2018-05-26T20:56:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testThierry1 -->
        <test-method status="PASS" signature="testTuples()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testTuples" duration-ms="5" started-at="2018-05-26T20:56:13Z" finished-at="2018-05-26T20:56:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTuples -->
        <test-method status="PASS" signature="testTuplesLargeTable1()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testTuplesLargeTable1" duration-ms="1" started-at="2018-05-26T20:56:13Z" finished-at="2018-05-26T20:56:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTuplesLargeTable1 -->
        <test-method status="PASS" signature="testTuplesLargeTable2()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testTuplesLargeTable2" duration-ms="1" started-at="2018-05-26T20:56:13Z" finished-at="2018-05-26T20:56:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTuplesLargeTable2 -->
        <test-method status="PASS" signature="testTuplesTable1()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testTuplesTable1" duration-ms="1" started-at="2018-05-26T20:56:13Z" finished-at="2018-05-26T20:56:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTuplesTable1 -->
        <test-method status="PASS" signature="testTuplesVeryLargeTable1()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testTuplesVeryLargeTable1" duration-ms="1" started-at="2018-05-26T20:56:13Z" finished-at="2018-05-26T20:56:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTuplesVeryLargeTable1 -->
        <test-method status="PASS" signature="testTuplesTable2()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testTuplesTable2" duration-ms="0" started-at="2018-05-26T20:56:13Z" finished-at="2018-05-26T20:56:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTuplesTable2 -->
        <test-method status="PASS" signature="testTuplesVeryLargeTable2()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testTuplesVeryLargeTable2" duration-ms="1" started-at="2018-05-26T20:56:13Z" finished-at="2018-05-26T20:56:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTuplesVeryLargeTable2 -->
        <test-method status="PASS" signature="testtpetit()[pri:0, instance:org.chocosolver.solver.constraints.nary.TableTest@1c3b221f]" name="testtpetit" duration-ms="17" started-at="2018-05-26T20:56:13Z" finished-at="2018-05-26T20:56:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testtpetit -->
      </class> <!-- org.chocosolver.solver.constraints.nary.TableTest -->
      <class name="org.chocosolver.solver.constraints.nary.CryptoTest">
        <test-method status="PASS" signature="testCS71234(java.lang.String)[pri:0, instance:org.chocosolver.solver.constraints.nary.CryptoTest@640a6d4b]" name="testCS71234" duration-ms="417" started-at="2018-05-26T20:54:50Z" data-provider="table" finished-at="2018-05-26T20:54:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CT+]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCS71234 -->
        <test-method status="PASS" signature="testCS71234(java.lang.String)[pri:0, instance:org.chocosolver.solver.constraints.nary.CryptoTest@640a6d4b]" name="testCS71234" duration-ms="268" started-at="2018-05-26T20:54:50Z" data-provider="table" finished-at="2018-05-26T20:54:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[FC]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCS71234 -->
        <test-method status="PASS" signature="testCS71234(java.lang.String)[pri:0, instance:org.chocosolver.solver.constraints.nary.CryptoTest@640a6d4b]" name="testCS71234" duration-ms="557" started-at="2018-05-26T20:54:50Z" data-provider="table" finished-at="2018-05-26T20:54:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GAC2001]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCS71234 -->
        <test-method status="PASS" signature="testCS71234(java.lang.String)[pri:0, instance:org.chocosolver.solver.constraints.nary.CryptoTest@640a6d4b]" name="testCS71234" duration-ms="424" started-at="2018-05-26T20:54:51Z" data-provider="table" finished-at="2018-05-26T20:54:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GACSTR+]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCS71234 -->
        <test-method status="PASS" signature="testCS71234(java.lang.String)[pri:0, instance:org.chocosolver.solver.constraints.nary.CryptoTest@640a6d4b]" name="testCS71234" duration-ms="765" started-at="2018-05-26T20:54:51Z" data-provider="table" finished-at="2018-05-26T20:54:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GAC2001+]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCS71234 -->
        <test-method status="PASS" signature="testCS71234(java.lang.String)[pri:0, instance:org.chocosolver.solver.constraints.nary.CryptoTest@640a6d4b]" name="testCS71234" duration-ms="710" started-at="2018-05-26T20:54:52Z" data-provider="table" finished-at="2018-05-26T20:54:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GAC3rm+]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCS71234 -->
        <test-method status="PASS" signature="testCS71234(java.lang.String)[pri:0, instance:org.chocosolver.solver.constraints.nary.CryptoTest@640a6d4b]" name="testCS71234" duration-ms="351" started-at="2018-05-26T20:54:53Z" data-provider="table" finished-at="2018-05-26T20:54:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GAC3rm]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCS71234 -->
        <test-method status="PASS" signature="testCS71234(java.lang.String)[pri:0, instance:org.chocosolver.solver.constraints.nary.CryptoTest@640a6d4b]" name="testCS71234" duration-ms="1079" started-at="2018-05-26T20:54:53Z" data-provider="table" finished-at="2018-05-26T20:54:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[STR2+]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCS71234 -->
        <test-method status="PASS" signature="testCS71234(java.lang.String)[pri:0, instance:org.chocosolver.solver.constraints.nary.CryptoTest@640a6d4b]" name="testCS71234" duration-ms="327" started-at="2018-05-26T20:54:54Z" data-provider="table" finished-at="2018-05-26T20:54:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[MDD+]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCS71234 -->
      </class> <!-- org.chocosolver.solver.constraints.nary.CryptoTest -->
      <class name="org.chocosolver.solver.variables.impl.BoundedIntVarTest">
        <test-method status="PASS" signature="removeAllValuesButCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="removeAllValuesButCoverBound" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeAllValuesButCoverBound -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="removeAllValuesButWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="removeAllValuesButWrongDomain" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, IV_1 = [1,4]) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeAllValuesButWrongDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="setup" is-config="true" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveAllValuesButCoverDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveAllValuesButCoverDomain" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveAllValuesButCoverDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveIntervalCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveIntervalCoverBound" duration-ms="4" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveIntervalCoverBound -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveIntervalCoverDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveIntervalCoverDomain" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, IV_1 = [1,4]) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveIntervalCoverDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveIntervalEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveIntervalEmptyDomain" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, IV_1 = [1,4]) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveIntervalEmptyDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveIntervalOK()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveIntervalOK" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveIntervalOK -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveIntervalWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveIntervalWrongDomain" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveIntervalWrongDomain -->
        <test-method status="PASS" signature="testRemoveValueEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveValueEmptyDomain" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, IV_1 = 3) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValueEmptyDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValueOK()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveValueOK" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValueOK -->
        <test-method status="PASS" signature="testRemoveValueWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveValueWrongDomain" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValueWrongDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValuesButOK()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveValuesButOK" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesButOK -->
        <test-method status="PASS" signature="testRemoveValuesCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveValuesCoverBound" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesCoverBound -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValuesEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveValuesEmptyDomain" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, IV_1 = [1,4]) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesEmptyDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValuesOK()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveValuesOK" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesOK -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="setup" is-config="true" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValuesTwoSides()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveValuesTwoSides" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesTwoSides -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValuesWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.BoundedIntVarTest@221961af]" name="testRemoveValuesWrongDomain" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesWrongDomain -->
      </class> <!-- org.chocosolver.solver.variables.impl.BoundedIntVarTest -->
      <class name="org.chocosolver.solver.variables.impl.BoolVarImplTest">
        <test-method status="PASS" signature="testGetDomainSize()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testGetDomainSize" duration-ms="0" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDomainSize -->
        <test-method status="PASS" signature="testGetLB()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testGetLB" duration-ms="1" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLB -->
        <test-method status="PASS" signature="testGetRangeIterator()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testGetRangeIterator" duration-ms="1" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRangeIterator -->
        <test-method status="PASS" signature="testGetTypeAndKind()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testGetTypeAndKind" duration-ms="0" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTypeAndKind -->
        <test-method status="PASS" signature="testGetUB()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testGetUB" duration-ms="4" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUB -->
        <test-method status="PASS" signature="testGetValueIterator()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testGetValueIterator" duration-ms="1" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetValueIterator -->
        <test-method status="PASS" signature="testHasEnumeratedDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testHasEnumeratedDomain" duration-ms="0" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasEnumeratedDomain -->
        <test-method status="PASS" signature="testNextOut1()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testNextOut1" duration-ms="1" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNextOut1 -->
        <test-method status="PASS" signature="testNextOut2()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testNextOut2" duration-ms="1" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNextOut2 -->
        <test-method status="PASS" signature="testNextValue()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testNextValue" duration-ms="0" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNextValue -->
        <test-method status="PASS" signature="testPreviousOut1()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testPreviousOut1" duration-ms="1" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreviousOut1 -->
        <test-method status="PASS" signature="testPreviousOut2()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testPreviousOut2" duration-ms="1" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreviousOut2 -->
        <test-method status="PASS" signature="testPreviousValue()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testPreviousValue" duration-ms="1" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreviousValue -->
        <test-method status="PASS" signature="testRemVals1()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemVals1" duration-ms="3" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals1 -->
        <test-method status="PASS" signature="testRemVals21()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemVals21" duration-ms="0" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals21 -->
        <test-method status="PASS" signature="testRemVals22()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemVals22" duration-ms="1" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals22 -->
        <test-method status="PASS" signature="testRemVals3()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemVals3" duration-ms="1" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals3 -->
        <test-method status="PASS" signature="testRemVals31()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemVals31" duration-ms="1" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals31 -->
        <test-method status="PASS" signature="testRemVals41()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemVals41" duration-ms="2" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, BV_1 = 1) : already instantiated
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals41 -->
        <test-method status="PASS" signature="testRemVals42()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemVals42" duration-ms="1" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals42 -->
        <test-method status="PASS" signature="testRemVals5()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemVals5" duration-ms="1" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, BV_1 = 1) : already instantiated
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals5 -->
        <test-method status="PASS" signature="testRemValsBut1()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemValsBut1" duration-ms="0" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut1 -->
        <test-method status="PASS" signature="testRemValsBut21()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemValsBut21" duration-ms="1" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut21 -->
        <test-method status="PASS" signature="testRemValsBut22()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemValsBut22" duration-ms="1" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, BV_1 = 1) : already instantiated
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut22 -->
        <test-method status="PASS" signature="testRemValsBut3()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemValsBut3" duration-ms="1" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut3 -->
        <test-method status="PASS" signature="testRemValsBut31()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemValsBut31" duration-ms="1" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, BV_1 = 1) : already instantiated
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut31 -->
        <test-method status="PASS" signature="testRemValsBut41()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemValsBut41" duration-ms="0" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut41 -->
        <test-method status="PASS" signature="testRemValsBut42()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemValsBut42" duration-ms="0" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut42 -->
        <test-method status="PASS" signature="testRemoveInterval()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemoveInterval" duration-ms="1" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveInterval -->
        <test-method status="PASS" signature="testRemoveValue()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testRemoveValue" duration-ms="1" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValue -->
        <test-method status="PASS" signature="testUpdBounds1()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testUpdBounds1" duration-ms="1" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds1 -->
        <test-method status="PASS" signature="testUpdBounds2()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testUpdBounds2" duration-ms="0" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds2 -->
        <test-method status="PASS" signature="testUpdBounds3()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testUpdBounds3" duration-ms="0" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds3 -->
        <test-method status="PASS" signature="testUpdBounds4()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testUpdBounds4" duration-ms="0" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds4 -->
        <test-method status="PASS" signature="testUpdBounds5()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testUpdBounds5" duration-ms="1" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, BV_1 = [0,1]) : unknown value
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds5 -->
        <test-method status="PASS" signature="testUpdateLowerBound()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testUpdateLowerBound" duration-ms="1" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateLowerBound -->
        <test-method status="PASS" signature="testUpdateUpperBound()[pri:0, instance:org.chocosolver.solver.variables.impl.BoolVarImplTest@2ef1fc8a]" name="testUpdateUpperBound" duration-ms="1" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateUpperBound -->
      </class> <!-- org.chocosolver.solver.variables.impl.BoolVarImplTest -->
      <class name="org.chocosolver.solver.constraints.set.InverseTest">
        <test-method status="PASS" signature="testBuildInverse()[pri:0, instance:org.chocosolver.solver.constraints.set.InverseTest@d271d6c]" name="testBuildInverse" duration-ms="5" started-at="2018-05-26T21:09:48Z" finished-at="2018-05-26T21:09:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildInverse -->
        <test-method status="PASS" signature="testEnumerateLength1()[pri:0, instance:org.chocosolver.solver.constraints.set.InverseTest@d271d6c]" name="testEnumerateLength1" duration-ms="1" started-at="2018-05-26T21:09:48Z" finished-at="2018-05-26T21:09:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumerateLength1 -->
        <test-method status="PASS" signature="testEnumerateLength2()[pri:0, instance:org.chocosolver.solver.constraints.set.InverseTest@d271d6c]" name="testEnumerateLength2" duration-ms="0" started-at="2018-05-26T21:09:48Z" finished-at="2018-05-26T21:09:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumerateLength2 -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.InverseTest@d271d6c]" name="testNominal" duration-ms="668" started-at="2018-05-26T21:09:48Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
      </class> <!-- org.chocosolver.solver.constraints.set.InverseTest -->
      <class name="org.chocosolver.solver.constraints.nary.CNFTest">
        <test-method status="PASS" signature="testJGF()[pri:0, instance:org.chocosolver.solver.constraints.nary.CNFTest@3b6c740b]" name="testJGF" duration-ms="9" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJGF -->
      </class> <!-- org.chocosolver.solver.constraints.nary.CNFTest -->
      <class name="org.chocosolver.solver.search.loop.SolverTest">
        <test-method status="PASS" signature="test1DDS()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test1DDS" duration-ms="5" started-at="2018-05-26T21:09:07Z" finished-at="2018-05-26T21:09:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1DDS -->
        <test-method status="PASS" signature="test1DFS()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test1DFS" duration-ms="2" started-at="2018-05-26T21:09:07Z" finished-at="2018-05-26T21:09:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1DFS -->
        <test-method status="PASS" signature="test1HBFS()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test1HBFS" duration-ms="501" started-at="2018-05-26T21:09:07Z" finished-at="2018-05-26T21:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1HBFS -->
        <test-method status="PASS" signature="test1LDS()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test1LDS" duration-ms="5" started-at="2018-05-26T21:09:08Z" finished-at="2018-05-26T21:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1LDS -->
        <test-method status="PASS" signature="test2DDS()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test2DDS" duration-ms="4" started-at="2018-05-26T21:09:08Z" finished-at="2018-05-26T21:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2DDS -->
        <test-method status="PASS" signature="test2DDS2()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test2DDS2" duration-ms="1" started-at="2018-05-26T21:09:08Z" finished-at="2018-05-26T21:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2DDS2 -->
        <test-method status="PASS" signature="test2DFS()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test2DFS" duration-ms="11" started-at="2018-05-26T21:09:08Z" finished-at="2018-05-26T21:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2DFS -->
        <test-method status="PASS" signature="test2LDS()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test2LDS" duration-ms="4" started-at="2018-05-26T21:09:08Z" finished-at="2018-05-26T21:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2LDS -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test3" duration-ms="2" started-at="2018-05-26T21:09:08Z" finished-at="2018-05-26T21:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test4()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test4" duration-ms="18" started-at="2018-05-26T21:09:08Z" finished-at="2018-05-26T21:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test5()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test5" duration-ms="22" started-at="2018-05-26T21:09:08Z" finished-at="2018-05-26T21:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="test6()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test6" duration-ms="91" started-at="2018-05-26T21:09:08Z" finished-at="2018-05-26T21:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method status="PASS" signature="test7()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test7" duration-ms="2" started-at="2018-05-26T21:09:08Z" finished-at="2018-05-26T21:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test7 -->
        <test-method status="PASS" signature="test8()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test8" duration-ms="4" started-at="2018-05-26T21:09:08Z" finished-at="2018-05-26T21:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test8 -->
        <test-method status="PASS" signature="test9()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="test9" duration-ms="4" started-at="2018-05-26T21:09:08Z" finished-at="2018-05-26T21:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test9 -->
        <test-method status="PASS" signature="testReset()[pri:0, instance:org.chocosolver.solver.search.loop.SolverTest@71de1091]" name="testReset" duration-ms="2" started-at="2018-05-26T21:09:08Z" finished-at="2018-05-26T21:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReset -->
      </class> <!-- org.chocosolver.solver.search.loop.SolverTest -->
      <class name="org.chocosolver.solver.EnvironmentTest">
        <test-method status="PASS" signature="testBuilder()[pri:0, instance:org.chocosolver.solver.EnvironmentTest@39c1e7b7]" name="testBuilder" duration-ms="1" started-at="2018-05-26T21:09:07Z" finished-at="2018-05-26T21:09:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuilder -->
        <test-method status="PASS" signature="testJL01()[pri:0, instance:org.chocosolver.solver.EnvironmentTest@39c1e7b7]" name="testJL01" duration-ms="3" started-at="2018-05-26T21:09:07Z" finished-at="2018-05-26T21:09:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL01 -->
        <test-method status="PASS" signature="testJL02()[pri:0, instance:org.chocosolver.solver.EnvironmentTest@39c1e7b7]" name="testJL02" duration-ms="3" started-at="2018-05-26T21:09:07Z" finished-at="2018-05-26T21:09:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL02 -->
        <test-method status="PASS" signature="testSize(org.chocosolver.memory.trailing.EnvironmentTrailing)[pri:0, instance:org.chocosolver.solver.EnvironmentTest@39c1e7b7]" name="testSize" duration-ms="191" started-at="2018-05-26T21:09:07Z" data-provider="env" finished-at="2018-05-26T21:09:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@2360414f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="testSize(org.chocosolver.memory.trailing.EnvironmentTrailing)[pri:0, instance:org.chocosolver.solver.EnvironmentTest@39c1e7b7]" name="testSize" duration-ms="215" started-at="2018-05-26T21:09:07Z" data-provider="env" finished-at="2018-05-26T21:09:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@76eabed6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- org.chocosolver.solver.EnvironmentTest -->
      <class name="org.chocosolver.solver.constraints.nary.LexTest">
        <test-method status="PASS" signature="testAshish()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexTest@7ef7f414]" name="testAshish" duration-ms="0" started-at="2018-05-26T21:00:25Z" finished-at="2018-05-26T21:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAshish -->
        <test-method status="PASS" signature="testBug2()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexTest@7ef7f414]" name="testBug2" duration-ms="1" started-at="2018-05-26T21:00:25Z" finished-at="2018-05-26T21:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBug2 -->
        <test-method status="PASS" signature="testBug1()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexTest@7ef7f414]" name="testBug1" duration-ms="0" started-at="2018-05-26T21:00:25Z" finished-at="2018-05-26T21:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBug1 -->
        <test-method status="PASS" signature="testBug3()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexTest@7ef7f414]" name="testBug3" duration-ms="1" started-at="2018-05-26T21:00:25Z" finished-at="2018-05-26T21:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBug3 -->
        <test-method status="PASS" signature="testBug4()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexTest@7ef7f414]" name="testBug4" duration-ms="2" started-at="2018-05-26T21:00:25Z" finished-at="2018-05-26T21:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBug4 -->
        <test-method status="PASS" signature="testBug5()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexTest@7ef7f414]" name="testBug5" duration-ms="1" started-at="2018-05-26T21:00:25Z" finished-at="2018-05-26T21:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBug5 -->
        <test-method status="PASS" signature="testLessLexq()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexTest@7ef7f414]" name="testLessLexq" duration-ms="76" started-at="2018-05-26T21:00:25Z" finished-at="2018-05-26T21:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLessLexq -->
        <test-method status="PASS" signature="testLex()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexTest@7ef7f414]" name="testLex" duration-ms="60" started-at="2018-05-26T21:00:25Z" finished-at="2018-05-26T21:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLex -->
        <test-method status="PASS" signature="testLexiSatisfied()[pri:0, instance:org.chocosolver.solver.constraints.nary.LexTest@7ef7f414]" name="testLexiSatisfied" duration-ms="1" started-at="2018-05-26T21:00:26Z" finished-at="2018-05-26T21:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLexiSatisfied -->
      </class> <!-- org.chocosolver.solver.constraints.nary.LexTest -->
      <class name="org.chocosolver.solver.PortFolioTest">
        <test-method status="PASS" signature="testP1()[pri:0, instance:org.chocosolver.solver.PortFolioTest@1c14d24d]" name="testP1" duration-ms="282" started-at="2018-05-26T21:09:08Z" finished-at="2018-05-26T21:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testP1 -->
        <test-method status="PASS" signature="testP2()[pri:0, instance:org.chocosolver.solver.PortFolioTest@1c14d24d]" name="testP2" duration-ms="3778" started-at="2018-05-26T21:09:08Z" finished-at="2018-05-26T21:09:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testP2 -->
        <test-method status="PASS" signature="testP3()[pri:0, instance:org.chocosolver.solver.PortFolioTest@1c14d24d]" name="testP3" duration-ms="3518" started-at="2018-05-26T21:09:12Z" finished-at="2018-05-26T21:09:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testP3 -->
        <test-method status="PASS" signature="testP3bug()[pri:0, instance:org.chocosolver.solver.PortFolioTest@1c14d24d]" name="testP3bug" duration-ms="3746" started-at="2018-05-26T21:09:16Z" finished-at="2018-05-26T21:09:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testP3bug -->
        <test-method status="PASS" signature="testP3bug2()[pri:0, instance:org.chocosolver.solver.PortFolioTest@1c14d24d]" name="testP3bug2" duration-ms="6669" started-at="2018-05-26T21:09:19Z" finished-at="2018-05-26T21:09:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testP3bug2 -->
        <test-method status="PASS" signature="testP3bug3()[pri:0, instance:org.chocosolver.solver.PortFolioTest@1c14d24d]" name="testP3bug3" duration-ms="3672" started-at="2018-05-26T21:09:26Z" finished-at="2018-05-26T21:09:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testP3bug3 -->
        <test-method status="PASS" signature="testP4()[pri:0, instance:org.chocosolver.solver.PortFolioTest@1c14d24d]" name="testP4" duration-ms="2890" started-at="2018-05-26T21:09:30Z" finished-at="2018-05-26T21:09:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testP4 -->
        <test-method status="PASS" signature="testP5()[pri:0, instance:org.chocosolver.solver.PortFolioTest@1c14d24d]" name="testP5" duration-ms="3243" started-at="2018-05-26T21:09:33Z" finished-at="2018-05-26T21:09:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testP5 -->
        <test-method status="PASS" signature="testParBug()[pri:0, instance:org.chocosolver.solver.PortFolioTest@1c14d24d]" name="testParBug" duration-ms="4197" started-at="2018-05-26T21:09:36Z" finished-at="2018-05-26T21:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParBug -->
        <test-method status="PASS" signature="testParWait()[pri:0, instance:org.chocosolver.solver.PortFolioTest@1c14d24d]" name="testParWait" duration-ms="60" started-at="2018-05-26T21:09:40Z" finished-at="2018-05-26T21:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParWait -->
      </class> <!-- org.chocosolver.solver.PortFolioTest -->
      <class name="org.chocosolver.solver.constraints.ConstraintTest">
        <test-method status="PASS" signature="testAmIMeYet()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testAmIMeYet" duration-ms="6" started-at="2018-05-26T20:59:14Z" finished-at="2018-05-26T20:59:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAmIMeYet -->
        <test-method status="PASS" signature="testBooleanChannelingJL()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testBooleanChannelingJL" duration-ms="38" started-at="2018-05-26T20:59:14Z" finished-at="2018-05-26T20:59:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBooleanChannelingJL -->
        <test-method status="PASS" signature="testDependencyConditions()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testDependencyConditions" duration-ms="1" started-at="2018-05-26T20:59:14Z" finished-at="2018-05-26T20:59:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDependencyConditions -->
        <test-method status="PASS" signature="testDependencyConditions2()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testDependencyConditions2" duration-ms="1" started-at="2018-05-26T20:59:14Z" finished-at="2018-05-26T20:59:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDependencyConditions2 -->
        <test-method status="PASS" signature="testJiTee1()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testJiTee1" duration-ms="28" started-at="2018-05-26T20:59:14Z" finished-at="2018-05-26T20:59:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJiTee1 -->
        <test-method status="PASS" signature="testJiTee2()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testJiTee2" duration-ms="19" started-at="2018-05-26T20:59:14Z" finished-at="2018-05-26T20:59:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJiTee2 -->
        <test-method status="PASS" signature="testJitee2()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testJitee2" duration-ms="1327" started-at="2018-05-26T20:59:14Z" finished-at="2018-05-26T20:59:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJitee2 -->
        <test-method status="PASS" signature="testOpposite1()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testOpposite1" duration-ms="1" started-at="2018-05-26T20:59:16Z" finished-at="2018-05-26T20:59:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpposite1 -->
        <test-method status="PASS" signature="testOpposite2()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testOpposite2" duration-ms="0" started-at="2018-05-26T20:59:16Z" finished-at="2018-05-26T20:59:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpposite2 -->
        <test-method status="PASS" signature="testPostAndReif1()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testPostAndReif1" duration-ms="2" started-at="2018-05-26T20:59:16Z" finished-at="2018-05-26T20:59:16Z">
          <exception class="org.chocosolver.solver.exception.SolverException">
            <message>
              <![CDATA[This propagator is already defined in a constraint. This happens when a constraint is reified and posted.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.chocosolver.solver.exception.SolverException: This propagator is already defined in a constraint. This happens when a constraint is reified and posted.
	at org.chocosolver.solver.constraints.Propagator.defineIn(Propagator.java:337)
	at org.chocosolver.solver.constraints.Constraint.<init>(Constraint.java:109)
	at org.chocosolver.solver.constraints.ReificationConstraint.<init>(ReificationConstraint.java:56)
	at org.chocosolver.solver.constraints.Constraint.reifyWith(Constraint.java:198)
	at org.chocosolver.solver.constraints.Constraint.reify(Constraint.java:213)
	at org.chocosolver.solver.constraints.ConstraintTest.testPostAndReif1(ConstraintTest.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.SolverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostAndReif1 -->
        <test-method status="PASS" signature="testOpposite3()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testOpposite3" duration-ms="0" started-at="2018-05-26T20:59:16Z" finished-at="2018-05-26T20:59:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpposite3 -->
        <test-method status="PASS" signature="testPostAndReif2()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testPostAndReif2" duration-ms="2" started-at="2018-05-26T20:59:16Z" finished-at="2018-05-26T20:59:16Z">
          <exception class="org.chocosolver.solver.exception.SolverException">
            <message>
              <![CDATA[Try to post a constraint which is already posted in the model.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.chocosolver.solver.exception.SolverException: Try to post a constraint which is already posted in the model.
	at org.chocosolver.solver.constraints.Constraint.checkNewStatus(Constraint.java:255)
	at org.chocosolver.solver.Model._post(Model.java:853)
	at org.chocosolver.solver.Model.post(Model.java:823)
	at org.chocosolver.solver.constraints.Constraint.post(Constraint.java:223)
	at org.chocosolver.solver.constraints.ConstraintTest.testPostAndReif2(ConstraintTest.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.SolverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostAndReif2 -->
        <test-method status="PASS" signature="testPostRemove1()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testPostRemove1" duration-ms="1" started-at="2018-05-26T20:59:16Z" finished-at="2018-05-26T20:59:16Z">
          <exception class="org.chocosolver.solver.exception.SolverException">
            <message>
              <![CDATA[Try to remove a constraint which is not known from the model.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.chocosolver.solver.exception.SolverException: Try to remove a constraint which is not known from the model.
	at org.chocosolver.solver.constraints.Constraint.checkNewStatus(Constraint.java:249)
	at org.chocosolver.solver.constraints.Constraint.declareAs(Constraint.java:234)
	at org.chocosolver.solver.Model.unpost(Model.java:896)
	at org.chocosolver.solver.constraints.ConstraintTest.testPostRemove1(ConstraintTest.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.SolverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostRemove1 -->
        <test-method status="PASS" signature="testPostRemove2()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testPostRemove2" duration-ms="1" started-at="2018-05-26T20:59:16Z" finished-at="2018-05-26T20:59:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostRemove2 -->
        <test-method status="PASS" signature="testPostRemove4()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testPostRemove4" duration-ms="1" started-at="2018-05-26T20:59:16Z" finished-at="2018-05-26T20:59:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostRemove4 -->
        <test-method status="PASS" signature="testPostRemove3()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testPostRemove3" duration-ms="0" started-at="2018-05-26T20:59:16Z" finished-at="2018-05-26T20:59:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostRemove3 -->
        <test-method status="PASS" signature="testPostTwice1()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testPostTwice1" duration-ms="1" started-at="2018-05-26T20:59:16Z" finished-at="2018-05-26T20:59:16Z">
          <exception class="org.chocosolver.solver.exception.SolverException">
            <message>
              <![CDATA[Try to post a constraint which is already posted in the model.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.chocosolver.solver.exception.SolverException: Try to post a constraint which is already posted in the model.
	at org.chocosolver.solver.constraints.Constraint.checkNewStatus(Constraint.java:255)
	at org.chocosolver.solver.Model._post(Model.java:853)
	at org.chocosolver.solver.Model.post(Model.java:823)
	at org.chocosolver.solver.constraints.Constraint.post(Constraint.java:223)
	at org.chocosolver.solver.constraints.ConstraintTest.testPostTwice1(ConstraintTest.java:155)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.SolverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostTwice1 -->
        <test-method status="PASS" signature="testPostTwice2()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testPostTwice2" duration-ms="2" started-at="2018-05-26T20:59:16Z" finished-at="2018-05-26T20:59:16Z">
          <exception class="org.chocosolver.solver.exception.SolverException">
            <message>
              <![CDATA[This propagator is already defined in a constraint. This happens when a constraint is reified and posted.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.chocosolver.solver.exception.SolverException: This propagator is already defined in a constraint. This happens when a constraint is reified and posted.
	at org.chocosolver.solver.constraints.Propagator.defineIn(Propagator.java:337)
	at org.chocosolver.solver.constraints.Constraint.<init>(Constraint.java:109)
	at org.chocosolver.solver.constraints.ConstraintTest.testPostTwice2(ConstraintTest.java:170)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.SolverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostTwice2 -->
        <test-method status="PASS" signature="testPostUnpostPost1()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testPostUnpostPost1" duration-ms="1" started-at="2018-05-26T20:59:16Z" finished-at="2018-05-26T20:59:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostUnpostPost1 -->
        <test-method status="PASS" signature="testUnlink1()[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testUnlink1" duration-ms="1" started-at="2018-05-26T20:59:16Z" finished-at="2018-05-26T20:59:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnlink1 -->
        <test-method status="PASS" signature="testUnpost(java.lang.String)[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testUnpost" duration-ms="3" started-at="2018-05-26T20:59:16Z" data-provider="unpost" finished-at="2018-05-26T20:59:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[=]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnpost -->
        <test-method status="PASS" signature="testUnpost(java.lang.String)[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testUnpost" duration-ms="1" started-at="2018-05-26T20:59:16Z" data-provider="unpost" finished-at="2018-05-26T20:59:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!=]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnpost -->
        <test-method status="PASS" signature="testUnpost(java.lang.String)[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testUnpost" duration-ms="1" started-at="2018-05-26T20:59:16Z" data-provider="unpost" finished-at="2018-05-26T20:59:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnpost -->
        <test-method status="PASS" signature="testUnpost(java.lang.String)[pri:0, instance:org.chocosolver.solver.constraints.ConstraintTest@599310ab]" name="testUnpost" duration-ms="0" started-at="2018-05-26T20:59:16Z" data-provider="unpost" finished-at="2018-05-26T20:59:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[<]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnpost -->
      </class> <!-- org.chocosolver.solver.constraints.ConstraintTest -->
      <class name="org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest">
        <test-method status="PASS" signature="testGetDomainSize()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testGetDomainSize" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDomainSize -->
        <test-method status="PASS" signature="testGetRangeIterator()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testGetRangeIterator" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRangeIterator -->
        <test-method status="PASS" signature="testGetLB()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testGetLB" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLB -->
        <test-method status="PASS" signature="testGetTypeAndKind()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testGetTypeAndKind" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTypeAndKind -->
        <test-method status="PASS" signature="testGetUB()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testGetUB" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUB -->
        <test-method status="PASS" signature="testGetValueIterator()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testGetValueIterator" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetValueIterator -->
        <test-method status="PASS" signature="testJL01()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testJL01" duration-ms="2" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL01 -->
        <test-method status="PASS" signature="testHasEnumeratedDomain()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testHasEnumeratedDomain" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasEnumeratedDomain -->
        <test-method status="PASS" signature="testJL02()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testJL02" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL02 -->
        <test-method status="PASS" signature="testJL03()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testJL03" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL03 -->
        <test-method status="PASS" signature="testJL04()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testJL04" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL04 -->
        <test-method status="PASS" signature="testNextOut1()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testNextOut1" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNextOut1 -->
        <test-method status="PASS" signature="testNextOut3()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testNextOut3" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNextOut3 -->
        <test-method status="PASS" signature="testNextOut2()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testNextOut2" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNextOut2 -->
        <test-method status="PASS" signature="testPreviousOut1()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testPreviousOut1" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreviousOut1 -->
        <test-method status="PASS" signature="testNextValue()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testNextValue" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNextValue -->
        <test-method status="PASS" signature="testPreviousOut2()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testPreviousOut2" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreviousOut2 -->
        <test-method status="PASS" signature="testPreviousValue()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testPreviousValue" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreviousValue -->
        <test-method status="PASS" signature="testPreviousOut3()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testPreviousOut3" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreviousOut3 -->
        <test-method status="PASS" signature="testRemVals0()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals0" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals0 -->
        <test-method status="PASS" signature="testRemVals1()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals1" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals1 -->
        <test-method status="PASS" signature="testRemVals11()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals11" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals11 -->
        <test-method status="PASS" signature="testRemVals13()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals13" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals13 -->
        <test-method status="PASS" signature="testRemVals12()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals12" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals12 -->
        <test-method status="PASS" signature="testRemVals15()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals15" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, X = {2,5,6,8,9}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals15 -->
        <test-method status="PASS" signature="testRemVals14()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals14" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals14 -->
        <test-method status="PASS" signature="testRemVals21()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals21" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals21 -->
        <test-method status="PASS" signature="testRemVals22()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals22" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals22 -->
        <test-method status="PASS" signature="testRemVals3()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals3" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals3 -->
        <test-method status="PASS" signature="testRemVals31()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals31" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals31 -->
        <test-method status="PASS" signature="testRemVals41()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals41" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals41 -->
        <test-method status="PASS" signature="testRemVals42()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals42" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals42 -->
        <test-method status="PASS" signature="testRemVals5()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals5" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, X = {-1,0,1}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals5 -->
        <test-method status="PASS" signature="testRemVals6()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals6" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals6 -->
        <test-method status="PASS" signature="testRemVals7()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals7" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals7 -->
        <test-method status="PASS" signature="testRemVals81()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals81" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, X = {0,3}) : already instantiated
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals81 -->
        <test-method status="PASS" signature="testRemVals82()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemVals82" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals82 -->
        <test-method status="PASS" signature="testRemValsBut0()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut0" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, X = {-3,-2,-1,0,1,2...,3}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut0 -->
        <test-method status="PASS" signature="testRemValsBut11()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut11" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut11 -->
        <test-method status="PASS" signature="testRemValsBut1()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut1" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut1 -->
        <test-method status="PASS" signature="testRemValsBut12()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut12" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut12 -->
        <test-method status="PASS" signature="testRemValsBut13()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut13" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut13 -->
        <test-method status="PASS" signature="testRemValsBut14()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut14" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut14 -->
        <test-method status="PASS" signature="testRemValsBut15()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut15" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, X = {2,5,6,8,9}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut15 -->
        <test-method status="PASS" signature="testRemValsBut21()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut21" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut21 -->
        <test-method status="PASS" signature="testRemValsBut22()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut22" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut22 -->
        <test-method status="PASS" signature="testRemValsBut41()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut41" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut41 -->
        <test-method status="PASS" signature="testRemValsBut3()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut3" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut3 -->
        <test-method status="PASS" signature="testRemValsBut42()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut42" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut42 -->
        <test-method status="PASS" signature="testRemValsBut5()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut5" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, X = {-1,0,1}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut5 -->
        <test-method status="PASS" signature="testRemValsBut6()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut6" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut6 -->
        <test-method status="PASS" signature="testRemValsBut7()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut7" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, X = {-27,-25,-20}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut7 -->
        <test-method status="PASS" signature="testRemValsBut9()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut9" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut9 -->
        <test-method status="PASS" signature="testRemValsBut8()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemValsBut8" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut8 -->
        <test-method status="PASS" signature="testRemoveInterval()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemoveInterval" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveInterval -->
        <test-method status="PASS" signature="testUpdBounds1()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdBounds1" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds1 -->
        <test-method status="PASS" signature="testRemoveValue()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testRemoveValue" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValue -->
        <test-method status="PASS" signature="testUpdBounds10()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdBounds10" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, X = {-3,0,3}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds10 -->
        <test-method status="PASS" signature="testUpdBounds11()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdBounds11" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, X = {5,6,8,9}) : new lower bound is greater than upper bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds11 -->
        <test-method status="PASS" signature="testUpdBounds2()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdBounds2" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds2 -->
        <test-method status="PASS" signature="testUpdBounds3()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdBounds3" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds3 -->
        <test-method status="PASS" signature="testUpdBounds4()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdBounds4" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds4 -->
        <test-method status="PASS" signature="testUpdBounds5()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdBounds5" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, X = {-3,-2,-1,0,1,2...,3}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds5 -->
        <test-method status="PASS" signature="testUpdBounds6()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdBounds6" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds6 -->
        <test-method status="PASS" signature="testUpdBounds7()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdBounds7" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds7 -->
        <test-method status="PASS" signature="testUpdBounds8()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdBounds8" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds8 -->
        <test-method status="PASS" signature="testUpdBounds9()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdBounds9" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds9 -->
        <test-method status="PASS" signature="testUpdateLowerBound()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdateLowerBound" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateLowerBound -->
        <test-method status="PASS" signature="testUpdateUpperBound()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest@478c84aa]" name="testUpdateUpperBound" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateUpperBound -->
      </class> <!-- org.chocosolver.solver.variables.fast.BitsetArrayIntVarImplTest -->
      <class name="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest">
        <test-method status="PASS" signature="testAddAlreadyExists()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testAddAlreadyExists" duration-ms="2" started-at="2018-05-26T20:46:49Z" finished-at="2018-05-26T20:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAlreadyExists -->
        <test-method status="PASS" signature="testAddMaxValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testAddMaxValue" duration-ms="1" started-at="2018-05-26T20:46:49Z" finished-at="2018-05-26T20:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMaxValue -->
        <test-method status="PASS" signature="testAddNegativeKO()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testAddNegativeKO" duration-ms="1" started-at="2018-05-26T20:46:49Z" finished-at="2018-05-26T20:46:49Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Cannot add -2 to set of offset 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Cannot add -2 to set of offset 0
	at org.chocosolver.util.objects.setDataStructures.swapList.Set_Swap.add(Set_Swap.java:57)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testAddNegativeKO(SetTest.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNegativeKO -->
        <test-method status="PASS" signature="testAddNegativeOK()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testAddNegativeOK" duration-ms="1" started-at="2018-05-26T20:46:49Z" finished-at="2018-05-26T20:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNegativeOK -->
        <test-method status="PASS" signature="testAddNominal()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testAddNominal" duration-ms="0" started-at="2018-05-26T20:46:49Z" finished-at="2018-05-26T20:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNominal -->
        <test-method status="PASS" signature="testAddNominal2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testAddNominal2" duration-ms="1" started-at="2018-05-26T20:46:49Z" finished-at="2018-05-26T20:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNominal2 -->
        <test-method status="PASS" signature="testAddRemoveReturnValueNB()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testAddRemoveReturnValueNB" duration-ms="1" started-at="2018-05-26T20:46:49Z" finished-at="2018-05-26T20:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddRemoveReturnValueNB -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testClear" duration-ms="1" started-at="2018-05-26T20:46:49Z" finished-at="2018-05-26T20:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testEmptyMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testEmptyMax" duration-ms="1" started-at="2018-05-26T20:46:49Z" finished-at="2018-05-26T20:46:49Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[cannot find maximum of an empty set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: cannot find maximum of an empty set
	at org.chocosolver.util.objects.setDataStructures.swapList.Set_Swap.max(Set_Swap.java:145)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testEmptyMax(SetTest.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyMax -->
        <test-method status="PASS" signature="testEmptyMin()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testEmptyMin" duration-ms="1" started-at="2018-05-26T20:46:49Z" finished-at="2018-05-26T20:46:49Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[cannot find minimum of an empty set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: cannot find minimum of an empty set
	at org.chocosolver.util.objects.setDataStructures.swapList.Set_Swap.min(Set_Swap.java:133)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testEmptyMin(SetTest.java:172)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyMin -->
        <test-method status="PASS" signature="testEquals()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testEquals" duration-ms="1" started-at="2018-05-26T20:46:49Z" finished-at="2018-05-26T20:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testIterator" duration-ms="0" started-at="2018-05-26T20:46:49Z" finished-at="2018-05-26T20:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="testIteratorLength()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testIteratorLength" duration-ms="1" started-at="2018-05-26T20:46:49Z" finished-at="2018-05-26T20:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorLength -->
        <test-method status="PASS" signature="testMinMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testMinMax" duration-ms="1" started-at="2018-05-26T20:46:49Z" finished-at="2018-05-26T20:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinMax -->
        <test-method status="PASS" signature="testMultipleLoops()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testMultipleLoops" duration-ms="1" started-at="2018-05-26T20:46:49Z" finished-at="2018-05-26T20:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleLoops -->
        <test-method status="PASS" signature="testNewIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testNewIterator" duration-ms="0" started-at="2018-05-26T20:46:49Z" finished-at="2018-05-26T20:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNewIterator -->
        <test-method status="PASS" signature="testReadOnlySet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testReadOnlySet" duration-ms="1" started-at="2018-05-26T20:46:49Z" finished-at="2018-05-26T20:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadOnlySet -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testRemove" duration-ms="1" started-at="2018-05-26T20:46:49Z" finished-at="2018-05-26T20:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="testRemoveInLoop()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest@2eea4441]" name="testRemoveInLoop" duration-ms="1" started-at="2018-05-26T20:46:49Z" finished-at="2018-05-26T20:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveInLoop -->
      </class> <!-- org.chocosolver.util.objects.setDataStructures.nonbacktrackable.BipartiteSetTest -->
      <class name="org.chocosolver.solver.constraints.ternary.MaxTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.ternary.MaxTest@34d5eac]" name="test1" duration-ms="756" started-at="2018-05-26T20:46:42Z" finished-at="2018-05-26T20:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
      </class> <!-- org.chocosolver.solver.constraints.ternary.MaxTest -->
      <class name="org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest">
        <test-method status="PASS" signature="testAdd2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testAdd2" duration-ms="1" started-at="2018-05-26T20:56:20Z" finished-at="2018-05-26T20:56:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd2 -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testAdd" duration-ms="0" started-at="2018-05-26T20:56:20Z" finished-at="2018-05-26T20:56:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testComplement()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testComplement" duration-ms="0" started-at="2018-05-26T20:56:20Z" finished-at="2018-05-26T20:56:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComplement -->
        <test-method status="PASS" signature="testIntersect()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testIntersect" duration-ms="104" started-at="2018-05-26T20:56:20Z" finished-at="2018-05-26T20:56:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIntersect -->
        <test-method status="PASS" signature="testIntersect2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testIntersect2" duration-ms="105" started-at="2018-05-26T20:56:20Z" finished-at="2018-05-26T20:56:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIntersect2 -->
        <test-method status="PASS" signature="testMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testMax" duration-ms="1" started-at="2018-05-26T20:56:21Z" finished-at="2018-05-26T20:56:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax -->
        <test-method status="PASS" signature="testMin()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testMin" duration-ms="0" started-at="2018-05-26T20:56:21Z" finished-at="2018-05-26T20:56:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMin -->
        <test-method status="PASS" signature="testMinus()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testMinus" duration-ms="3936" started-at="2018-05-26T20:56:21Z" finished-at="2018-05-26T20:56:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinus -->
        <test-method status="PASS" signature="testNextValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testNextValue" duration-ms="1" started-at="2018-05-26T20:56:24Z" finished-at="2018-05-26T20:56:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNextValue -->
        <test-method status="PASS" signature="testNextValue2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testNextValue2" duration-ms="1" started-at="2018-05-26T20:56:24Z" finished-at="2018-05-26T20:56:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNextValue2 -->
        <test-method status="PASS" signature="testNextValue3()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testNextValue3" duration-ms="0" started-at="2018-05-26T20:56:24Z" finished-at="2018-05-26T20:56:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNextValue3 -->
        <test-method status="PASS" signature="testPlus()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testPlus" duration-ms="4038" started-at="2018-05-26T20:56:24Z" finished-at="2018-05-26T20:56:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPlus -->
        <test-method status="PASS" signature="testPrevValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testPrevValue" duration-ms="0" started-at="2018-05-26T20:56:29Z" finished-at="2018-05-26T20:56:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrevValue -->
        <test-method status="PASS" signature="testPrevValue2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testPrevValue2" duration-ms="0" started-at="2018-05-26T20:56:29Z" finished-at="2018-05-26T20:56:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrevValue2 -->
        <test-method status="PASS" signature="testPrevValue3()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testPrevValue3" duration-ms="1" started-at="2018-05-26T20:56:29Z" finished-at="2018-05-26T20:56:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrevValue3 -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testRemove" duration-ms="0" started-at="2018-05-26T20:56:29Z" finished-at="2018-05-26T20:56:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="testRemove2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testRemove2" duration-ms="1" started-at="2018-05-26T20:56:29Z" finished-at="2018-05-26T20:56:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove2 -->
        <test-method status="PASS" signature="testRemoveBetween1()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testRemoveBetween1" duration-ms="0" started-at="2018-05-26T20:56:29Z" finished-at="2018-05-26T20:56:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveBetween1 -->
        <test-method status="PASS" signature="testRemoveBetween2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testRemoveBetween2" duration-ms="0" started-at="2018-05-26T20:56:29Z" finished-at="2018-05-26T20:56:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveBetween2 -->
        <test-method status="PASS" signature="testRemoveBetween3()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testRemoveBetween3" duration-ms="1" started-at="2018-05-26T20:56:29Z" finished-at="2018-05-26T20:56:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveBetween3 -->
        <test-method status="PASS" signature="testRemoveBetween4()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testRemoveBetween4" duration-ms="0" started-at="2018-05-26T20:56:29Z" finished-at="2018-05-26T20:56:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveBetween4 -->
        <test-method status="PASS" signature="testUnion()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testUnion" duration-ms="237" started-at="2018-05-26T20:56:29Z" finished-at="2018-05-26T20:56:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnion -->
        <test-method status="PASS" signature="testUnion2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testUnion2" duration-ms="151" started-at="2018-05-26T20:56:29Z" finished-at="2018-05-26T20:56:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnion2 -->
        <test-method status="PASS" signature="testrangeOf1()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testrangeOf1" duration-ms="1" started-at="2018-05-26T20:56:29Z" finished-at="2018-05-26T20:56:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testrangeOf1 -->
        <test-method status="PASS" signature="testrangeOf2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest@46290193]" name="testrangeOf2" duration-ms="0" started-at="2018-05-26T20:56:29Z" finished-at="2018-05-26T20:56:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testrangeOf2 -->
      </class> <!-- org.chocosolver.util.objects.setDataStructures.iterable.IntIterableRangeSetTest -->
      <class name="org.chocosolver.util.tools.VariableUtilsTest">
        <test-method status="PASS" signature="testBoundsForAddition()[pri:0, instance:org.chocosolver.util.tools.VariableUtilsTest@2fc435e9]" name="testBoundsForAddition" duration-ms="206" started-at="2018-05-26T21:00:15Z" finished-at="2018-05-26T21:00:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoundsForAddition -->
        <test-method status="PASS" signature="testBoundsForDivision()[pri:0, instance:org.chocosolver.util.tools.VariableUtilsTest@2fc435e9]" name="testBoundsForDivision" duration-ms="358" started-at="2018-05-26T21:00:16Z" finished-at="2018-05-26T21:00:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoundsForDivision -->
        <test-method status="PASS" signature="testBoundsForMultiplication()[pri:0, instance:org.chocosolver.util.tools.VariableUtilsTest@2fc435e9]" name="testBoundsForMultiplication" duration-ms="425" started-at="2018-05-26T21:00:16Z" finished-at="2018-05-26T21:00:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoundsForMultiplication -->
        <test-method status="PASS" signature="testBoundsForSubstraction()[pri:0, instance:org.chocosolver.util.tools.VariableUtilsTest@2fc435e9]" name="testBoundsForSubstraction" duration-ms="199" started-at="2018-05-26T21:00:16Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoundsForSubstraction -->
      </class> <!-- org.chocosolver.util.tools.VariableUtilsTest -->
      <class name="org.chocosolver.sat.PropNogoodsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="setUp" is-config="true" duration-ms="1" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testApplyEarlyDeductions()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testApplyEarlyDeductions" duration-ms="1" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApplyEarlyDeductions -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDeclareDomainNogood()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testDeclareDomainNogood" duration-ms="1" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeclareDomainNogood -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDoReduce1()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testDoReduce1" duration-ms="0" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoReduce1 -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="setUp" is-config="true" duration-ms="1" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDoReduce2()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testDoReduce2" duration-ms="0" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoReduce2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDoReduce3()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testDoReduce3" duration-ms="0" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoReduce3 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testDoReduce4()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testDoReduce4" duration-ms="0" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoReduce4 -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testIsEntailed1()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testIsEntailed1" duration-ms="0" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEntailed1 -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testIsEntailed2()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testIsEntailed2" duration-ms="0" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEntailed2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testIseq()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testIseq" duration-ms="174" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIseq -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:27Z" finished-at="2018-05-26T21:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testIvalue()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testIvalue" duration-ms="1" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIvalue -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testLiteral1()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testLiteral1" duration-ms="0" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLiteral1 -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testLiteral2()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testLiteral2" duration-ms="1" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLiteral2 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="setUp" is-config="true" duration-ms="1" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testPropagate()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testPropagate" duration-ms="0" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPropagate -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testPropagate1()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testPropagate1" duration-ms="0" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPropagate1 -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testVariableBound1()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testVariableBound1" duration-ms="0" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVariableBound1 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testVariableBound2()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testVariableBound2" duration-ms="1" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVariableBound2 -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testVariableBound3()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testVariableBound3" duration-ms="0" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVariableBound3 -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testVariableBound4()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testVariableBound4" duration-ms="0" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVariableBound4 -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="setUp" is-config="true" duration-ms="1" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testWhy()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="testWhy" duration-ms="1" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWhy -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.chocosolver.sat.PropNogoodsTest@51b41740]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.chocosolver.sat.PropNogoodsTest -->
      <class name="org.chocosolver.solver.constraints.set.AtMost1EmptyTest">
        <test-method status="PASS" signature="testNoEmptySet()[pri:0, instance:org.chocosolver.solver.constraints.set.AtMost1EmptyTest@19f99aaf]" name="testNoEmptySet" duration-ms="196" started-at="2018-05-26T21:10:01Z" finished-at="2018-05-26T21:10:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoEmptySet -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.AtMost1EmptyTest@19f99aaf]" name="testNominal" duration-ms="227" started-at="2018-05-26T21:10:01Z" finished-at="2018-05-26T21:10:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testOneEmptySet()[pri:0, instance:org.chocosolver.solver.constraints.set.AtMost1EmptyTest@19f99aaf]" name="testOneEmptySet" duration-ms="180" started-at="2018-05-26T21:10:01Z" finished-at="2018-05-26T21:10:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneEmptySet -->
        <test-method status="PASS" signature="twoEmptySets()[pri:0, instance:org.chocosolver.solver.constraints.set.AtMost1EmptyTest@19f99aaf]" name="twoEmptySets" duration-ms="1" started-at="2018-05-26T21:10:01Z" finished-at="2018-05-26T21:10:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twoEmptySets -->
      </class> <!-- org.chocosolver.solver.constraints.set.AtMost1EmptyTest -->
      <class name="org.chocosolver.solver.variables.impl.IntVarOffSetViewTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="setup" is-config="true" duration-ms="4" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="removeAllValuesButCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="removeAllValuesButCoverBound" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeAllValuesButCoverBound -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="setup" is-config="true" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="removeAllValuesButWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="removeAllValuesButWrongDomain" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION ((IV_1 = {0..3} + 1) = [1,4], IV_1 = {0..3}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeAllValuesButWrongDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="setup" is-config="true" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveAllValuesButCoverDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveAllValuesButCoverDomain" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveAllValuesButCoverDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveIntervalCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveIntervalCoverBound" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveIntervalCoverBound -->
        <test-method status="PASS" signature="testRemoveIntervalCoverDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveIntervalCoverDomain" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION ((IV_1 = {0..3} + 1) = [1,4], IV_1 = {0..3}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveIntervalCoverDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveIntervalEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveIntervalEmptyDomain" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION ((IV_1 = {0..3} + 1) = [1,4], IV_1 = {0..3}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveIntervalEmptyDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveIntervalOK()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveIntervalOK" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveIntervalOK -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveIntervalWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveIntervalWrongDomain" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveIntervalWrongDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValueEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveValueEmptyDomain" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION ((IV_1 = 2 + 1) = [3,3], IV_1 = 2) : remove last value
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValueEmptyDomain -->
        <test-method status="PASS" signature="testRemoveValueOK()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveValueOK" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValueOK -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="setup" is-config="true" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValueWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveValueWrongDomain" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValueWrongDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValuesButOK()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveValuesButOK" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesButOK -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValuesCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveValuesCoverBound" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesCoverBound -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValuesEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveValuesEmptyDomain" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION ((IV_1 = {0..3} + 1) = [1,4], IV_1 = {0..3}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesEmptyDomain -->
        <test-method status="PASS" signature="testRemoveValuesOK()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveValuesOK" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesOK -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="setup" is-config="true" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValuesTwoSides()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveValuesTwoSides" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesTwoSides -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="setup" is-config="true" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValuesWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarOffSetViewTest@38874eb5]" name="testRemoveValuesWrongDomain" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesWrongDomain -->
      </class> <!-- org.chocosolver.solver.variables.impl.IntVarOffSetViewTest -->
      <class name="org.chocosolver.solver.constraints.nary.SumTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="justBelow()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="justBelow" duration-ms="1" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- justBelow -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testFH01()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="testFH01" duration-ms="3" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFH01 -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testJL01()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="testJL01" duration-ms="1" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL01 -->
        <test-method status="PASS" signature="testJustAbove()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="testJustAbove" duration-ms="0" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJustAbove -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testNoExactSolution()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="testNoExactSolution" duration-ms="0" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoExactSolution -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testNoSolution()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="testNoSolution" duration-ms="1" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoSolution -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="testNominal" duration-ms="46" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="setup" is-config="true" duration-ms="1" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testSameVariableSolution()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="testSameVariableSolution" duration-ms="1" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSameVariableSolution -->
        <test-method status="PASS" signature="testSameVariableNoSolution()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="testSameVariableNoSolution" duration-ms="0" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSameVariableNoSolution -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testSimpleSum()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="testSimpleSum" duration-ms="1" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleSum -->
        <test-method status="PASS" signature="testZero()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="testZero" duration-ms="1" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testZero -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testZeroElements()[pri:0, instance:org.chocosolver.solver.constraints.nary.SumTest@374ba492]" name="testZeroElements" duration-ms="1" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testZeroElements -->
      </class> <!-- org.chocosolver.solver.constraints.nary.SumTest -->
      <class name="org.chocosolver.solver.constraints.set.SumTest">
        <test-method status="PASS" signature="testEmptySetKo()[pri:0, instance:org.chocosolver.solver.constraints.set.SumTest@90394d]" name="testEmptySetKo" duration-ms="1" started-at="2018-05-26T21:09:40Z" finished-at="2018-05-26T21:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptySetKo -->
        <test-method status="PASS" signature="testFixedSum()[pri:0, instance:org.chocosolver.solver.constraints.set.SumTest@90394d]" name="testFixedSum" duration-ms="1" started-at="2018-05-26T21:09:40Z" finished-at="2018-05-26T21:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFixedSum -->
        <test-method status="PASS" signature="testEmptySetOk()[pri:0, instance:org.chocosolver.solver.constraints.set.SumTest@90394d]" name="testEmptySetOk" duration-ms="0" started-at="2018-05-26T21:09:40Z" finished-at="2018-05-26T21:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptySetOk -->
        <test-method status="PASS" signature="testFixedSumNeg()[pri:0, instance:org.chocosolver.solver.constraints.set.SumTest@90394d]" name="testFixedSumNeg" duration-ms="1" started-at="2018-05-26T21:09:40Z" finished-at="2018-05-26T21:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFixedSumNeg -->
        <test-method status="PASS" signature="testFixedSumNeg2()[pri:0, instance:org.chocosolver.solver.constraints.set.SumTest@90394d]" name="testFixedSumNeg2" duration-ms="0" started-at="2018-05-26T21:09:40Z" finished-at="2018-05-26T21:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFixedSumNeg2 -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.SumTest@90394d]" name="testNominal" duration-ms="2" started-at="2018-05-26T21:09:40Z" finished-at="2018-05-26T21:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testFixedSumNegWrong()[pri:0, instance:org.chocosolver.solver.constraints.set.SumTest@90394d]" name="testFixedSumNegWrong" duration-ms="0" started-at="2018-05-26T21:09:40Z" finished-at="2018-05-26T21:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFixedSumNegWrong -->
        <test-method status="PASS" signature="testWrongBounds()[pri:0, instance:org.chocosolver.solver.constraints.set.SumTest@90394d]" name="testWrongBounds" duration-ms="0" started-at="2018-05-26T21:09:40Z" finished-at="2018-05-26T21:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWrongBounds -->
      </class> <!-- org.chocosolver.solver.constraints.set.SumTest -->
      <class name="org.chocosolver.solver.search.StrategyTest">
        <test-method status="PASS" signature="AssignmentTest()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="AssignmentTest" duration-ms="1" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssignmentTest -->
        <test-method status="PASS" signature="AssignmentTest2()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="AssignmentTest2" duration-ms="1" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssignmentTest2 -->
        <test-method status="PASS" signature="testAntiFirstFail1()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testAntiFirstFail1" duration-ms="2" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAntiFirstFail1 -->
        <test-method status="PASS" signature="testAntiFirstFail2()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testAntiFirstFail2" duration-ms="0" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAntiFirstFail2 -->
        <test-method status="PASS" signature="testBound()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testBound" duration-ms="8037" started-at="2018-05-26T21:03:28Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBound -->
        <test-method status="PASS" signature="testFH3321()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testFH3321" duration-ms="4" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFH3321 -->
        <test-method status="PASS" signature="testFH3322()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testFH3322" duration-ms="4" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFH3322 -->
        <test-method status="PASS" signature="testFH33232()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testFH33232" duration-ms="3" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFH33232 -->
        <test-method status="PASS" signature="testFH3324()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testFH3324" duration-ms="3" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFH3324 -->
        <test-method status="PASS" signature="testFirstFail1()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testFirstFail1" duration-ms="1" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstFail1 -->
        <test-method status="PASS" signature="testInputOrder()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testInputOrder" duration-ms="1" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInputOrder -->
        <test-method status="PASS" signature="testFirstFail2()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testFirstFail2" duration-ms="0" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstFail2 -->
        <test-method status="PASS" signature="testLargest1()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testLargest1" duration-ms="1" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLargest1 -->
        <test-method status="PASS" signature="testLargest2()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testLargest2" duration-ms="0" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLargest2 -->
        <test-method status="PASS" signature="testMaxDelta1()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testMaxDelta1" duration-ms="1" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxDelta1 -->
        <test-method status="PASS" signature="testMaxDelta2()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testMaxDelta2" duration-ms="1" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxDelta2 -->
        <test-method status="PASS" signature="testMaxRegret1()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testMaxRegret1" duration-ms="1" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxRegret1 -->
        <test-method status="PASS" signature="testMaxRegret2()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testMaxRegret2" duration-ms="1" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxRegret2 -->
        <test-method status="PASS" signature="testMinDelta1()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testMinDelta1" duration-ms="1" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinDelta1 -->
        <test-method status="PASS" signature="testMinDelta2()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testMinDelta2" duration-ms="1" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinDelta2 -->
        <test-method status="PASS" signature="testNoScope()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testNoScope" duration-ms="1" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoScope -->
        <test-method status="PASS" signature="testOccurrence1()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testOccurrence1" duration-ms="1" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOccurrence1 -->
        <test-method status="PASS" signature="testOccurrence2()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testOccurrence2" duration-ms="1" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOccurrence2 -->
        <test-method status="PASS" signature="testOnce()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testOnce" duration-ms="0" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnce -->
        <test-method status="PASS" signature="testSmallest1()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testSmallest1" duration-ms="1" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSmallest1 -->
        <test-method status="PASS" signature="testSmallest2()[pri:0, instance:org.chocosolver.solver.search.StrategyTest@3892802b]" name="testSmallest2" duration-ms="0" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSmallest2 -->
      </class> <!-- org.chocosolver.solver.search.StrategyTest -->
      <class name="org.chocosolver.solver.constraints.nary.RegularTest">
        <test-method status="PASS" signature="ccostregular2()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="ccostregular2" duration-ms="482" started-at="2018-05-26T20:59:16Z" finished-at="2018-05-26T20:59:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ccostregular2 -->
        <test-method status="PASS" signature="compareVersionSpeedNew()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="compareVersionSpeedNew" duration-ms="22952" started-at="2018-05-26T20:59:16Z" finished-at="2018-05-26T20:59:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareVersionSpeedNew -->
        <test-method status="PASS" signature="compareVersionSpeedNew2()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="compareVersionSpeedNew2" duration-ms="31" started-at="2018-05-26T20:59:39Z" finished-at="2018-05-26T20:59:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareVersionSpeedNew2 -->
        <test-method status="PASS" signature="isCorrect()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="isCorrect" duration-ms="2916" started-at="2018-05-26T20:59:39Z" finished-at="2018-05-26T20:59:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isCorrect -->
        <test-method status="PASS" signature="isCorrect2()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="isCorrect2" duration-ms="8678" started-at="2018-05-26T20:59:42Z" finished-at="2018-05-26T20:59:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isCorrect2 -->
        <test-method status="PASS" signature="testNeg()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testNeg" duration-ms="1" started-at="2018-05-26T20:59:51Z" finished-at="2018-05-26T20:59:51Z">
          <exception class="org.chocosolver.solver.exception.SolverException">
            <message>
              <![CDATA[Unknown value "-9". Note that only integers in [0,65535] are allowed by FiniteAutomaton.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.chocosolver.solver.exception.SolverException: Unknown value "-9". Note that only integers in [0,65535] are allowed by FiniteAutomaton.
	at org.chocosolver.solver.constraints.nary.automata.FA.FiniteAutomaton.getCharFromInt(FiniteAutomaton.java:138)
	at org.chocosolver.util.tools.StringUtils.toCharExp(StringUtils.java:64)
	at org.chocosolver.solver.constraints.nary.automata.FA.FiniteAutomaton.<init>(FiniteAutomaton.java:97)
	at org.chocosolver.solver.constraints.nary.automata.FA.FiniteAutomaton.<init>(FiniteAutomaton.java:113)
	at org.chocosolver.solver.constraints.nary.RegularTest.testNeg(RegularTest.java:219)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.SolverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNeg -->
        <test-method status="PASS" signature="testRG11(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testRG11" duration-ms="11892" started-at="2018-05-26T20:59:51Z" data-provider="two" finished-at="2018-05-26T21:00:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRG11 -->
        <test-method status="PASS" signature="testRG11(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testRG11" duration-ms="12535" started-at="2018-05-26T21:00:03Z" data-provider="two" finished-at="2018-05-26T21:00:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRG11 -->
        <test-method status="PASS" signature="testSimpleAuto()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testSimpleAuto" duration-ms="319" started-at="2018-05-26T21:00:15Z" finished-at="2018-05-26T21:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleAuto -->
        <test-method status="PASS" signature="testregExp1()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp1" duration-ms="1" started-at="2018-05-26T21:00:15Z" finished-at="2018-05-26T21:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testregExp1 -->
        <test-method status="PASS" signature="testregExp10()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp10" duration-ms="45" started-at="2018-05-26T21:00:15Z" finished-at="2018-05-26T21:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testregExp10 -->
        <test-method status="PASS" signature="testregExp11()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp11" duration-ms="1" started-at="2018-05-26T21:00:15Z" finished-at="2018-05-26T21:00:15Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at org.chocosolver.solver.constraints.nary.automata.FA.FiniteAutomaton.addTransition(FiniteAutomaton.java:250)
	at org.chocosolver.solver.constraints.nary.RegularTest.testregExp11(RegularTest.java:348)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testregExp11 -->
        <test-method status="PASS" signature="testregExp12()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp12" duration-ms="18" started-at="2018-05-26T21:00:15Z" finished-at="2018-05-26T21:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testregExp12 -->
        <test-method status="PASS" signature="testregExp2()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp2" duration-ms="1" started-at="2018-05-26T21:00:15Z" finished-at="2018-05-26T21:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testregExp2 -->
        <test-method status="PASS" signature="testregExp3()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp3" duration-ms="6" started-at="2018-05-26T21:00:15Z" finished-at="2018-05-26T21:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testregExp3 -->
        <test-method status="PASS" signature="testregExp4()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp4" duration-ms="1" started-at="2018-05-26T21:00:15Z" finished-at="2018-05-26T21:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testregExp4 -->
        <test-method status="PASS" signature="testregExp5()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp5" duration-ms="1" started-at="2018-05-26T21:00:15Z" finished-at="2018-05-26T21:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testregExp5 -->
        <test-method status="PASS" signature="testregExp6()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp6" duration-ms="1" started-at="2018-05-26T21:00:15Z" finished-at="2018-05-26T21:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testregExp6 -->
        <test-method status="PASS" signature="testregExp7()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp7" duration-ms="26" started-at="2018-05-26T21:00:15Z" finished-at="2018-05-26T21:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testregExp7 -->
        <test-method status="PASS" signature="testregExp8()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp8" duration-ms="7" started-at="2018-05-26T21:00:15Z" finished-at="2018-05-26T21:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testregExp8 -->
        <test-method status="PASS" signature="testregExp9()[pri:0, instance:org.chocosolver.solver.constraints.nary.RegularTest@5dc120ab]" name="testregExp9" duration-ms="1" started-at="2018-05-26T21:00:15Z" finished-at="2018-05-26T21:00:15Z">
          <exception class="org.chocosolver.solver.exception.SolverException">
            <message>
              <![CDATA[Unknown value "127436". Note that only integers in [0,65535] are allowed by FiniteAutomaton.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.chocosolver.solver.exception.SolverException: Unknown value "127436". Note that only integers in [0,65535] are allowed by FiniteAutomaton.
	at org.chocosolver.solver.constraints.nary.automata.FA.FiniteAutomaton.getCharFromInt(FiniteAutomaton.java:138)
	at org.chocosolver.util.tools.StringUtils.toCharExp(StringUtils.java:64)
	at org.chocosolver.solver.constraints.nary.automata.FA.FiniteAutomaton.<init>(FiniteAutomaton.java:97)
	at org.chocosolver.solver.constraints.nary.automata.FA.FiniteAutomaton.<init>(FiniteAutomaton.java:113)
	at org.chocosolver.solver.constraints.nary.RegularTest.testregExp9(RegularTest.java:328)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.SolverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testregExp9 -->
      </class> <!-- org.chocosolver.solver.constraints.nary.RegularTest -->
      <class name="org.chocosolver.solver.search.loop.LNSTest">
        <test-method status="PASS" signature="test1(int)[pri:0, instance:org.chocosolver.solver.search.loop.LNSTest@5274830e]" name="test1" duration-ms="4" started-at="2018-05-26T21:05:54Z" data-provider="lns" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int)[pri:0, instance:org.chocosolver.solver.search.loop.LNSTest@5274830e]" name="test1" duration-ms="902" started-at="2018-05-26T21:05:54Z" data-provider="lns" finished-at="2018-05-26T21:05:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int)[pri:0, instance:org.chocosolver.solver.search.loop.LNSTest@5274830e]" name="test1" duration-ms="904" started-at="2018-05-26T21:05:55Z" data-provider="lns" finished-at="2018-05-26T21:05:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int)[pri:0, instance:org.chocosolver.solver.search.loop.LNSTest@5274830e]" name="test1" duration-ms="903" started-at="2018-05-26T21:05:56Z" data-provider="lns" finished-at="2018-05-26T21:05:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int)[pri:0, instance:org.chocosolver.solver.search.loop.LNSTest@5274830e]" name="test1" duration-ms="900" started-at="2018-05-26T21:05:57Z" data-provider="lns" finished-at="2018-05-26T21:05:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int)[pri:0, instance:org.chocosolver.solver.search.loop.LNSTest@5274830e]" name="test1" duration-ms="902" started-at="2018-05-26T21:05:58Z" data-provider="lns" finished-at="2018-05-26T21:05:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int)[pri:0, instance:org.chocosolver.solver.search.loop.LNSTest@5274830e]" name="test1" duration-ms="901" started-at="2018-05-26T21:05:58Z" data-provider="lns" finished-at="2018-05-26T21:05:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="testPN1()[pri:0, instance:org.chocosolver.solver.search.loop.LNSTest@5274830e]" name="testPN1" duration-ms="5538" started-at="2018-05-26T21:05:59Z" finished-at="2018-05-26T21:06:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPN1 -->
        <test-method status="PASS" signature="testTOTO()[pri:0, instance:org.chocosolver.solver.search.loop.LNSTest@5274830e]" name="testTOTO" duration-ms="101" started-at="2018-05-26T21:06:05Z" finished-at="2018-05-26T21:06:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTOTO -->
      </class> <!-- org.chocosolver.solver.search.loop.LNSTest -->
      <class name="org.chocosolver.solver.expression.discrete.ExpressionTest">
        <test-method status="PASS" signature="test(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test" duration-ms="9" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test1(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test1" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test1" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test10(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test10" duration-ms="0" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test10 -->
        <test-method status="PASS" signature="test10(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test10" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test10 -->
        <test-method status="PASS" signature="test11(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test11" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test11 -->
        <test-method status="PASS" signature="test11(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test11" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test11 -->
        <test-method status="PASS" signature="test112(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test112" duration-ms="5" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test112 -->
        <test-method status="PASS" signature="test112(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test112" duration-ms="5" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test112 -->
        <test-method status="PASS" signature="test12(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test12" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test12 -->
        <test-method status="PASS" signature="test12(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test12" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test12 -->
        <test-method status="PASS" signature="test13(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test13" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test13 -->
        <test-method status="PASS" signature="test13(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test13" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test13 -->
        <test-method status="PASS" signature="test14(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test14" duration-ms="3" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test14 -->
        <test-method status="PASS" signature="test14(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test14" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test14 -->
        <test-method status="PASS" signature="test15(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test15" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test15 -->
        <test-method status="PASS" signature="test15(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test15" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test15 -->
        <test-method status="PASS" signature="test16(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test16" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test16 -->
        <test-method status="PASS" signature="test16(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test16" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test16 -->
        <test-method status="PASS" signature="test17(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test17" duration-ms="3" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test17 -->
        <test-method status="PASS" signature="test17(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test17" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test17 -->
        <test-method status="PASS" signature="test18(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test18" duration-ms="3" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test18 -->
        <test-method status="PASS" signature="test18(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test18" duration-ms="4" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test18 -->
        <test-method status="PASS" signature="test19(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test19" duration-ms="4" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test19 -->
        <test-method status="PASS" signature="test19(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test19" duration-ms="3" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test19 -->
        <test-method status="PASS" signature="test20(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test20" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test20 -->
        <test-method status="PASS" signature="test20(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test20" duration-ms="3" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test20 -->
        <test-method status="PASS" signature="test21(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test21" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test21 -->
        <test-method status="PASS" signature="test21(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test21" duration-ms="2" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test21 -->
        <test-method status="PASS" signature="test22(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test22" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test22 -->
        <test-method status="PASS" signature="test22(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test22" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test22 -->
        <test-method status="PASS" signature="test23(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test23" duration-ms="0" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test23 -->
        <test-method status="PASS" signature="test23(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test23" duration-ms="0" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test23 -->
        <test-method status="PASS" signature="test24(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test24" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test24 -->
        <test-method status="PASS" signature="test24(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test24" duration-ms="0" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test24 -->
        <test-method status="PASS" signature="test25(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test25" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test25 -->
        <test-method status="PASS" signature="test25(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test25" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test25 -->
        <test-method status="PASS" signature="test26(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test26" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test26 -->
        <test-method status="PASS" signature="test26(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test26" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test26 -->
        <test-method status="PASS" signature="test27(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test27" duration-ms="35" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test27 -->
        <test-method status="PASS" signature="test27(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test27" duration-ms="2" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test27 -->
        <test-method status="PASS" signature="test28(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test28" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test28 -->
        <test-method status="PASS" signature="test28(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test28" duration-ms="0" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test28 -->
        <test-method status="PASS" signature="test29(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test29" duration-ms="0" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test29 -->
        <test-method status="PASS" signature="test29(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test29" duration-ms="0" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test29 -->
        <test-method status="PASS" signature="test3(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test3" duration-ms="0" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test3(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test3" duration-ms="0" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test30(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test30" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test30 -->
        <test-method status="PASS" signature="test30(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test30" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test30 -->
        <test-method status="PASS" signature="test31(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test31" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test31 -->
        <test-method status="PASS" signature="test31(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test31" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test31 -->
        <test-method status="PASS" signature="test32(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test32" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test32 -->
        <test-method status="PASS" signature="test32(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test32" duration-ms="0" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test32 -->
        <test-method status="PASS" signature="test33(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test33" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test33 -->
        <test-method status="PASS" signature="test33(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test33" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test33 -->
        <test-method status="PASS" signature="test34(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test34" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test34 -->
        <test-method status="PASS" signature="test34(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test34" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test34 -->
        <test-method status="PASS" signature="test35(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test35" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test35 -->
        <test-method status="PASS" signature="test35(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test35" duration-ms="2" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test35 -->
        <test-method status="PASS" signature="test36(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test36" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test36 -->
        <test-method status="PASS" signature="test36(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test36" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test36 -->
        <test-method status="PASS" signature="test37(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test37" duration-ms="10" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test37 -->
        <test-method status="PASS" signature="test37(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test37" duration-ms="2" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test37 -->
        <test-method status="PASS" signature="test38(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test38" duration-ms="4" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test38 -->
        <test-method status="PASS" signature="test38(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test38" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test38 -->
        <test-method status="PASS" signature="test39(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test39" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test39 -->
        <test-method status="PASS" signature="test39(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test39" duration-ms="2" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test39 -->
        <test-method status="PASS" signature="test4(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test4" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test4" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test40(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test40" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test40 -->
        <test-method status="PASS" signature="test40(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test40" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test40 -->
        <test-method status="PASS" signature="test41(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test41" duration-ms="3" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test41 -->
        <test-method status="PASS" signature="test41(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test41" duration-ms="2" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test41 -->
        <test-method status="PASS" signature="test42(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test42" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test42 -->
        <test-method status="PASS" signature="test42(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test42" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test42 -->
        <test-method status="PASS" signature="test43(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test43" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test43 -->
        <test-method status="PASS" signature="test43(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test43" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test43 -->
        <test-method status="PASS" signature="test44(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test44" duration-ms="2" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test44 -->
        <test-method status="PASS" signature="test44(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test44" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test44 -->
        <test-method status="PASS" signature="test45(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test45" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test45 -->
        <test-method status="PASS" signature="test45(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test45" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test45 -->
        <test-method status="PASS" signature="test5(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test5" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="test5(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test5" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="test6(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test6" duration-ms="0" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method status="PASS" signature="test6(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test6" duration-ms="0" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method status="PASS" signature="test7(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test7" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test7 -->
        <test-method status="PASS" signature="test7(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test7" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test7 -->
        <test-method status="PASS" signature="test8(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test8" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test8 -->
        <test-method status="PASS" signature="test8(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test8" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test8 -->
        <test-method status="PASS" signature="test9(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test9" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test9 -->
        <test-method status="PASS" signature="test9(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="test9" duration-ms="1" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test9 -->
        <test-method status="PASS" signature="testLongExpression(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="testLongExpression" duration-ms="4" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLongExpression -->
        <test-method status="PASS" signature="testLongExpression(int)[pri:0, instance:org.chocosolver.solver.expression.discrete.ExpressionTest@490fbeaa]" name="testLongExpression" duration-ms="6432" started-at="2018-05-26T21:03:21Z" data-provider="post" finished-at="2018-05-26T21:03:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLongExpression -->
      </class> <!-- org.chocosolver.solver.expression.discrete.ExpressionTest -->
      <class name="org.chocosolver.solver.propagation.PropEngineTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.propagation.PropEngineTest@6033f36c]" name="test1" duration-ms="1" started-at="2018-05-26T21:02:36Z" finished-at="2018-05-26T21:02:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2a()[pri:0, instance:org.chocosolver.solver.propagation.PropEngineTest@6033f36c]" name="test2a" duration-ms="0" started-at="2018-05-26T21:02:36Z" finished-at="2018-05-26T21:02:36Z">
          <exception class="org.chocosolver.solver.exception.SolverException">
            <message>
              <![CDATA[Try to post a constraint which is already posted in the model.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.chocosolver.solver.exception.SolverException: Try to post a constraint which is already posted in the model.
	at org.chocosolver.solver.constraints.Constraint.checkNewStatus(Constraint.java:255)
	at org.chocosolver.solver.Model._post(Model.java:853)
	at org.chocosolver.solver.Model.post(Model.java:823)
	at org.chocosolver.solver.propagation.PropEngineTest.test2a(PropEngineTest.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.SolverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2a -->
        <test-method status="PASS" signature="test2c()[pri:0, instance:org.chocosolver.solver.propagation.PropEngineTest@6033f36c]" name="test2c" duration-ms="1" started-at="2018-05-26T21:02:36Z" finished-at="2018-05-26T21:02:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2c -->
        <test-method status="PASS" signature="test2b()[pri:0, instance:org.chocosolver.solver.propagation.PropEngineTest@6033f36c]" name="test2b" duration-ms="0" started-at="2018-05-26T21:02:36Z" finished-at="2018-05-26T21:02:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2b -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.solver.propagation.PropEngineTest@6033f36c]" name="test3" duration-ms="11" started-at="2018-05-26T21:02:36Z" finished-at="2018-05-26T21:02:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test5()[pri:0, instance:org.chocosolver.solver.propagation.PropEngineTest@6033f36c]" name="test5" duration-ms="3057" started-at="2018-05-26T21:02:36Z" finished-at="2018-05-26T21:02:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="testClone()[pri:0, instance:org.chocosolver.solver.propagation.PropEngineTest@6033f36c]" name="testClone" duration-ms="2" started-at="2018-05-26T21:02:39Z" finished-at="2018-05-26T21:02:39Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[V[0] not instantiated]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: V[0] not instantiated
	at org.chocosolver.solver.variables.impl.BitsetIntVarImpl.getValue(BitsetIntVarImpl.java:550)
	at org.chocosolver.solver.constraints.nary.alldifferent.PropAllDiffInst.fixpoint(PropAllDiffInst.java:89)
	at org.chocosolver.solver.constraints.nary.alldifferent.PropAllDiffInst.propagate(PropAllDiffInst.java:83)
	at org.chocosolver.solver.constraints.Propagator.doFinePropagation(Propagator.java:813)
	at org.chocosolver.solver.propagation.PropagationEngine.propagate(PropagationEngine.java:166)
	at org.chocosolver.solver.Solver.propagate(Solver.java:561)
	at org.chocosolver.solver.propagation.PropEngineTest.testClone(PropEngineTest.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClone -->
        <test-method status="PASS" signature="testGregy41()[pri:0, instance:org.chocosolver.solver.propagation.PropEngineTest@6033f36c]" name="testGregy41" duration-ms="2" started-at="2018-05-26T21:02:39Z" finished-at="2018-05-26T21:02:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGregy41 -->
        <test-method status="PASS" signature="testJG1()[pri:0, instance:org.chocosolver.solver.propagation.PropEngineTest@6033f36c]" name="testJG1" duration-ms="0" started-at="2018-05-26T21:02:39Z" finished-at="2018-05-26T21:02:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJG1 -->
        <test-method status="PASS" signature="testJG2()[pri:0, instance:org.chocosolver.solver.propagation.PropEngineTest@6033f36c]" name="testJG2" duration-ms="1" started-at="2018-05-26T21:02:39Z" finished-at="2018-05-26T21:02:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJG2 -->
        <test-method status="PASS" signature="testJG3()[pri:0, instance:org.chocosolver.solver.propagation.PropEngineTest@6033f36c]" name="testJG3" duration-ms="1" started-at="2018-05-26T21:02:39Z" finished-at="2018-05-26T21:02:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJG3 -->
      </class> <!-- org.chocosolver.solver.propagation.PropEngineTest -->
      <class name="org.chocosolver.solver.search.ActivityTest">
        <test-method status="PASS" signature="testCostas()[pri:0, instance:org.chocosolver.solver.search.ActivityTest@2634d000]" name="testCostas" duration-ms="2608" started-at="2018-05-26T21:04:30Z" finished-at="2018-05-26T21:04:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCostas -->
      </class> <!-- org.chocosolver.solver.search.ActivityTest -->
      <class name="org.chocosolver.solver.constraints.nary.MixedScalarTest">
        <test-method status="PASS" signature="testCoeffAtZeroNoSolutions()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testCoeffAtZeroNoSolutions" duration-ms="9" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCoeffAtZeroNoSolutions -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testCoeffAtZeroSolutions()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testCoeffAtZeroSolutions" duration-ms="14" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCoeffAtZeroSolutions -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="setup" is-config="true" duration-ms="1" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testCoeffAtZeroSolutions2()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testCoeffAtZeroSolutions2" duration-ms="80" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCoeffAtZeroSolutions2 -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testNominal" duration-ms="1" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testNominalBounded()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testNominalBounded" duration-ms="2" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominalBounded -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testNominalBounded2()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testNominalBounded2" duration-ms="287" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominalBounded2 -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testNominalBounded3()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testNominalBounded3" duration-ms="21" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominalBounded3 -->
        <test-method status="PASS" signature="testNominalBoundedWithNegatives()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testNominalBoundedWithNegatives" duration-ms="35" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominalBoundedWithNegatives -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="setup" is-config="true" duration-ms="1" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testNominalBoundedWithNegatives2()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testNominalBoundedWithNegatives2" duration-ms="1492" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominalBoundedWithNegatives2 -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testSameVariableNoSolution()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testSameVariableNoSolution" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSameVariableNoSolution -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="setup" is-config="true" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testSameVariableSolution()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testSameVariableSolution" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSameVariableSolution -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="setup" is-config="true" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testSameVariableSolution2()[pri:0, instance:org.chocosolver.solver.constraints.nary.MixedScalarTest@73baf7f0]" name="testSameVariableSolution2" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSameVariableSolution2 -->
      </class> <!-- org.chocosolver.solver.constraints.nary.MixedScalarTest -->
      <class name="org.chocosolver.solver.constraints.set.BoolChannelTest">
        <test-method status="PASS" signature="testBooleansFixed()[pri:0, instance:org.chocosolver.solver.constraints.set.BoolChannelTest@629de8]" name="testBooleansFixed" duration-ms="0" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBooleansFixed -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.BoolChannelTest@629de8]" name="testNominal" duration-ms="1" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testNoChannelingPossible()[pri:0, instance:org.chocosolver.solver.constraints.set.BoolChannelTest@629de8]" name="testNoChannelingPossible" duration-ms="0" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoChannelingPossible -->
        <test-method status="PASS" signature="testNominalMZN()[pri:0, instance:org.chocosolver.solver.constraints.set.BoolChannelTest@629de8]" name="testNominalMZN" duration-ms="0" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominalMZN -->
        <test-method status="PASS" signature="testSetFixed()[pri:0, instance:org.chocosolver.solver.constraints.set.BoolChannelTest@629de8]" name="testSetFixed" duration-ms="0" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetFixed -->
      </class> <!-- org.chocosolver.solver.constraints.set.BoolChannelTest -->
      <class name="org.chocosolver.solver.constraints.binary.BinTableTest">
        <test-method status="PASS" signature="test2(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.BinTableTest@74919649]" name="test2" duration-ms="7" started-at="2018-05-26T20:56:20Z" data-provider="params" finished-at="2018-05-26T20:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test2(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.BinTableTest@74919649]" name="test2" duration-ms="4" started-at="2018-05-26T20:56:20Z" data-provider="params" finished-at="2018-05-26T20:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.BinTableTest@74919649]" name="test3" duration-ms="5" started-at="2018-05-26T20:56:20Z" data-provider="params" finished-at="2018-05-26T20:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test3(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.BinTableTest@74919649]" name="test3" duration-ms="4" started-at="2018-05-26T20:56:20Z" data-provider="params" finished-at="2018-05-26T20:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="testAbsolute(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.BinTableTest@74919649]" name="testAbsolute" duration-ms="57" started-at="2018-05-26T20:56:20Z" data-provider="params" finished-at="2018-05-26T20:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAbsolute -->
        <test-method status="PASS" signature="testAbsolute(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.BinTableTest@74919649]" name="testAbsolute" duration-ms="42" started-at="2018-05-26T20:56:20Z" data-provider="params" finished-at="2018-05-26T20:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAbsolute -->
        <test-method status="PASS" signature="testArithmLT(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.BinTableTest@74919649]" name="testArithmLT" duration-ms="131" started-at="2018-05-26T20:56:20Z" data-provider="params" finished-at="2018-05-26T20:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArithmLT -->
        <test-method status="PASS" signature="testArithmLT(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.BinTableTest@74919649]" name="testArithmLT" duration-ms="98" started-at="2018-05-26T20:56:20Z" data-provider="params" finished-at="2018-05-26T20:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArithmLT -->
        <test-method status="PASS" signature="testArithmNQ(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.BinTableTest@74919649]" name="testArithmNQ" duration-ms="161" started-at="2018-05-26T20:56:20Z" data-provider="params" finished-at="2018-05-26T20:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArithmNQ -->
        <test-method status="PASS" signature="testArithmNQ(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.BinTableTest@74919649]" name="testArithmNQ" duration-ms="155" started-at="2018-05-26T20:56:20Z" data-provider="params" finished-at="2018-05-26T20:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArithmNQ -->
        <test-method status="PASS" signature="testFeas1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.BinTableTest@74919649]" name="testFeas1" duration-ms="1" started-at="2018-05-26T20:56:20Z" data-provider="params" finished-at="2018-05-26T20:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFeas1 -->
        <test-method status="PASS" signature="testFeas1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.BinTableTest@74919649]" name="testFeas1" duration-ms="0" started-at="2018-05-26T20:56:20Z" data-provider="params" finished-at="2018-05-26T20:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFeas1 -->
        <test-method status="PASS" signature="testInfeas1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.BinTableTest@74919649]" name="testInfeas1" duration-ms="1" started-at="2018-05-26T20:56:20Z" data-provider="params" finished-at="2018-05-26T20:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInfeas1 -->
        <test-method status="PASS" signature="testInfeas1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.BinTableTest@74919649]" name="testInfeas1" duration-ms="1" started-at="2018-05-26T20:56:20Z" data-provider="params" finished-at="2018-05-26T20:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInfeas1 -->
      </class> <!-- org.chocosolver.solver.constraints.binary.BinTableTest -->
      <class name="org.chocosolver.solver.constraints.nary.BoundGlobalCardinalityTest">
        <test-method status="PASS" signature="test0()[pri:0, instance:org.chocosolver.solver.constraints.nary.BoundGlobalCardinalityTest@1238a074]" name="test0" duration-ms="2" started-at="2018-05-26T20:55:16Z" finished-at="2018-05-26T20:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test0 -->
        <test-method status="PASS" signature="testRandom()[pri:0, instance:org.chocosolver.solver.constraints.nary.BoundGlobalCardinalityTest@1238a074]" name="testRandom" duration-ms="3103" started-at="2018-05-26T20:55:16Z" finished-at="2018-05-26T20:55:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRandom -->
        <test-method status="PASS" signature="testRandom2()[pri:0, instance:org.chocosolver.solver.constraints.nary.BoundGlobalCardinalityTest@1238a074]" name="testRandom2" duration-ms="2702" started-at="2018-05-26T20:55:19Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRandom2 -->
      </class> <!-- org.chocosolver.solver.constraints.nary.BoundGlobalCardinalityTest -->
      <class name="org.chocosolver.solver.constraints.set.UnionTest">
        <test-method status="PASS" signature="testImpossible()[pri:0, instance:org.chocosolver.solver.constraints.set.UnionTest@6b32b678]" name="testImpossible" duration-ms="1" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImpossible -->
        <test-method status="PASS" signature="testSetVarsFixed()[pri:0, instance:org.chocosolver.solver.constraints.set.UnionTest@6b32b678]" name="testSetVarsFixed" duration-ms="0" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetVarsFixed -->
        <test-method status="PASS" signature="testUnionFixed()[pri:0, instance:org.chocosolver.solver.constraints.set.UnionTest@6b32b678]" name="testUnionFixed" duration-ms="250" started-at="2018-05-26T21:10:04Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnionFixed -->
      </class> <!-- org.chocosolver.solver.constraints.set.UnionTest -->
      <class name="org.chocosolver.solver.variables.IteratorTest">
        <test-method status="PASS" signature="JLiangWaterlooTest()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="JLiangWaterlooTest" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JLiangWaterlooTest -->
        <test-method status="PASS" signature="testAbs2()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testAbs2" duration-ms="3" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAbs2 -->
        <test-method status="PASS" signature="testAbs1()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testAbs1" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAbs1 -->
        <test-method status="PASS" signature="testAbs3()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testAbs3" duration-ms="1" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAbs3 -->
        <test-method status="PASS" signature="testAbs4()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testAbs4" duration-ms="1" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAbs4 -->
        <test-method status="PASS" signature="testBool1()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testBool1" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBool1 -->
        <test-method status="PASS" signature="testBool2()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testBool2" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBool2 -->
        <test-method status="PASS" signature="testBool3()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testBool3" duration-ms="1" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBool3 -->
        <test-method status="PASS" signature="testBool4()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testBool4" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBool4 -->
        <test-method status="PASS" signature="testBound2()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testBound2" duration-ms="1" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBound2 -->
        <test-method status="PASS" signature="testBound1()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testBound1" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBound1 -->
        <test-method status="PASS" signature="testBound3()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testBound3" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBound3 -->
        <test-method status="PASS" signature="testBound4()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testBound4" duration-ms="1" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBound4 -->
        <test-method status="PASS" signature="testCste1()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testCste1" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCste1 -->
        <test-method status="PASS" signature="testCste3()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testCste3" duration-ms="1" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCste3 -->
        <test-method status="PASS" signature="testCste2()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testCste2" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCste2 -->
        <test-method status="PASS" signature="testCste4()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testCste4" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCste4 -->
        <test-method status="PASS" signature="testEnum1()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testEnum1" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnum1 -->
        <test-method status="PASS" signature="testEnum2()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testEnum2" duration-ms="1" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnum2 -->
        <test-method status="PASS" signature="testEnum3()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testEnum3" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnum3 -->
        <test-method status="PASS" signature="testEnum4()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testEnum4" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnum4 -->
        <test-method status="PASS" signature="testMax1()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testMax1" duration-ms="2" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax1 -->
        <test-method status="PASS" signature="testMax2()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testMax2" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax2 -->
        <test-method status="PASS" signature="testMax3()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testMax3" duration-ms="1" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax3 -->
        <test-method status="PASS" signature="testMax4()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testMax4" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax4 -->
        <test-method status="PASS" signature="testMinus2()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testMinus2" duration-ms="1" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinus2 -->
        <test-method status="PASS" signature="testMinus1()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testMinus1" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinus1 -->
        <test-method status="PASS" signature="testMinus3()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testMinus3" duration-ms="1" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinus3 -->
        <test-method status="PASS" signature="testOffset1()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testOffset1" duration-ms="1" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOffset1 -->
        <test-method status="PASS" signature="testMinus4()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testMinus4" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinus4 -->
        <test-method status="PASS" signature="testOffset2()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testOffset2" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOffset2 -->
        <test-method status="PASS" signature="testOffset3()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testOffset3" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOffset3 -->
        <test-method status="PASS" signature="testOffset4()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testOffset4" duration-ms="1" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOffset4 -->
        <test-method status="PASS" signature="testScale1()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testScale1" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScale1 -->
        <test-method status="PASS" signature="testScale2()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testScale2" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScale2 -->
        <test-method status="PASS" signature="testScale3()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testScale3" duration-ms="1" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScale3 -->
        <test-method status="PASS" signature="testScale4()[pri:0, instance:org.chocosolver.solver.variables.IteratorTest@f5f8de2]" name="testScale4" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScale4 -->
      </class> <!-- org.chocosolver.solver.variables.IteratorTest -->
      <class name="org.chocosolver.memory.BasicIndexBipartiteSetTest">
        <test-method status="PASS" signature="testBasicIndexedBipartiteSet(org.chocosolver.memory.trailing.EnvironmentTrailing)[pri:0, instance:org.chocosolver.memory.BasicIndexBipartiteSetTest@2911db81]" name="testBasicIndexedBipartiteSet" duration-ms="1" started-at="2018-05-26T21:02:41Z" data-provider="env" finished-at="2018-05-26T21:02:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@5d6850f7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBasicIndexedBipartiteSet -->
        <test-method status="PASS" signature="testBasicIndexedBipartiteSet(org.chocosolver.memory.trailing.EnvironmentTrailing)[pri:0, instance:org.chocosolver.memory.BasicIndexBipartiteSetTest@2911db81]" name="testBasicIndexedBipartiteSet" duration-ms="1" started-at="2018-05-26T21:02:41Z" data-provider="env" finished-at="2018-05-26T21:02:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@3b8bbfab]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBasicIndexedBipartiteSet -->
      </class> <!-- org.chocosolver.memory.BasicIndexBipartiteSetTest -->
      <class name="org.chocosolver.solver.constraints.set.IntChannelTest">
        <test-method status="PASS" signature="testNoChannelingPossible()[pri:0, instance:org.chocosolver.solver.constraints.set.IntChannelTest@50caeb4b]" name="testNoChannelingPossible" duration-ms="4" started-at="2018-05-26T21:09:40Z" finished-at="2018-05-26T21:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoChannelingPossible -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.IntChannelTest@50caeb4b]" name="testNominal" duration-ms="37" started-at="2018-05-26T21:09:40Z" finished-at="2018-05-26T21:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testNominalMZN()[pri:0, instance:org.chocosolver.solver.constraints.set.IntChannelTest@50caeb4b]" name="testNominalMZN" duration-ms="23" started-at="2018-05-26T21:09:40Z" finished-at="2018-05-26T21:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominalMZN -->
      </class> <!-- org.chocosolver.solver.constraints.set.IntChannelTest -->
      <class name="org.chocosolver.solver.explanations.ExplanationTest">
        <test-method status="PASS" signature="testLazy()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testLazy" duration-ms="3" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLazy -->
        <test-method status="PASS" signature="testMS()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testMS" duration-ms="6863" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMS -->
        <test-method status="PASS" signature="testNosol0()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testNosol0" duration-ms="7261" started-at="2018-05-26T21:04:42Z" finished-at="2018-05-26T21:04:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNosol0 -->
        <test-method status="PASS" signature="testNosolBut0()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testNosolBut0" duration-ms="13892" started-at="2018-05-26T21:04:49Z" finished-at="2018-05-26T21:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNosolBut0 -->
        <test-method status="PASS" signature="testPigeons()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testPigeons" duration-ms="18322" started-at="2018-05-26T21:05:03Z" finished-at="2018-05-26T21:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPigeons -->
        <test-method status="PASS" signature="testReif()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testReif" duration-ms="13" started-at="2018-05-26T21:05:21Z" finished-at="2018-05-26T21:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReif -->
        <test-method status="PASS" signature="testReif2()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testReif2" duration-ms="5" started-at="2018-05-26T21:05:21Z" finished-at="2018-05-26T21:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReif2 -->
        <test-method status="PASS" signature="testReif3()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testReif3" duration-ms="3" started-at="2018-05-26T21:05:21Z" finished-at="2018-05-26T21:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReif3 -->
        <test-method status="PASS" signature="testUserExpl()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testUserExpl" duration-ms="0" started-at="2018-05-26T21:05:21Z" finished-at="2018-05-26T21:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserExpl -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="3" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ == ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ == ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="0" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ == ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ == ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="0" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ == ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ == ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ == ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ == ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ == ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ == ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ != ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="0" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ != ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ != ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ != ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ != ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ != ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ != ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ != ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ != ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="0" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ != ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ >= ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ >= ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="0" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ >= ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="0" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ >= ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ >= ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="0" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ >= ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="0" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ >= ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ >= ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ >= ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ <= ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="0" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ >= ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ <= ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="0" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ <= ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ <= ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="0" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ <= ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ <= ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="0" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ <= ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="0" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ <= ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="0" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ <= ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
        <test-method status="PASS" signature="testXP1(boolean, int, org.chocosolver.solver.search.strategy.assignments.DecisionOperator)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationTest@c85486]" name="testXP1" duration-ms="1" started-at="2018-05-26T21:05:21Z" data-provider="params" finished-at="2018-05-26T21:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ <= ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXP1 -->
      </class> <!-- org.chocosolver.solver.explanations.ExplanationTest -->
      <class name="org.chocosolver.solver.constraints.unary.MemberTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.unary.MemberTest@2c92f094]" name="test1" duration-ms="68" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.unary.MemberTest@2c92f094]" name="test2" duration-ms="121" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test_alxpgr()[pri:0, instance:org.chocosolver.solver.constraints.unary.MemberTest@2c92f094]" name="test_alxpgr" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_alxpgr -->
      </class> <!-- org.chocosolver.solver.constraints.unary.MemberTest -->
      <class name="org.chocosolver.solver.search.ImpactTest">
        <test-method status="PASS" signature="testCostas()[pri:0, instance:org.chocosolver.solver.search.ImpactTest@53551fef]" name="testCostas" duration-ms="551" started-at="2018-05-26T21:09:41Z" finished-at="2018-05-26T21:09:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCostas -->
      </class> <!-- org.chocosolver.solver.search.ImpactTest -->
      <class name="org.chocosolver.solver.explanations.ExplanationEngineTest">
        <test-method status="PASS" signature="aTest()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="aTest" duration-ms="3" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aTest -->
        <test-method status="PASS" signature="test01()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test01" duration-ms="13" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01 -->
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test1" duration-ms="15" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test111()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test111" duration-ms="1" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test111 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test2" duration-ms="28" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3(int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test3" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="xp1" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test3(int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test3" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="xp1" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test3(int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test3" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="xp1" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test3(int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test3" duration-ms="0" started-at="2018-05-26T21:03:36Z" data-provider="xp1" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test3(int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test3" duration-ms="0" started-at="2018-05-26T21:03:36Z" data-provider="xp1" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[48]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test3(int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test3" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="xp1" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[192]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test3(int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test3" duration-ms="0" started-at="2018-05-26T21:03:36Z" data-provider="xp1" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[96]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test3(int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test3" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="xp1" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[384]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test3(int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test3" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="xp1" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[768]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test3(int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test3" duration-ms="3" started-at="2018-05-26T21:03:36Z" data-provider="xp1" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1536]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test3(int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test3" duration-ms="3" started-at="2018-05-26T21:03:36Z" data-provider="xp1" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3072]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test3(int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test3" duration-ms="7" started-at="2018-05-26T21:03:36Z" data-provider="xp1" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6144]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test3(int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test3" duration-ms="16" started-at="2018-05-26T21:03:36Z" data-provider="xp1" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12288]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test3(int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test3" duration-ms="29" started-at="2018-05-26T21:03:36Z" data-provider="xp1" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[24576]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test3(int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test3" duration-ms="47" started-at="2018-05-26T21:03:36Z" data-provider="xp1" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[49152]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test4()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="test4" duration-ms="1" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="testClauses2()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testClauses2" duration-ms="1" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClauses2 -->
        <test-method status="PASS" signature="testClauses()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testClauses" duration-ms="0" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClauses -->
        <test-method status="PASS" signature="testClauses3()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testClauses3" duration-ms="1" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClauses3 -->
        <test-method status="PASS" signature="testClauses4()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testClauses4" duration-ms="2" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClauses4 -->
        <test-method status="PASS" signature="testIntSat()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testIntSat" duration-ms="0" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIntSat -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="2" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="2" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="2" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="0" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="0" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="2" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="2" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="2" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="3" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="2" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="3" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="14" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="3" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="9" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="3" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="6" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="27" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="4" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="14" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="6" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="6" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="46" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="4" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="18" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="26" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="9" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="47" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="3" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="12" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="172" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="29" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="330" started-at="2018-05-26T21:03:36Z" data-provider="ls" finished-at="2018-05-26T21:03:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="6" started-at="2018-05-26T21:03:37Z" data-provider="ls" finished-at="2018-05-26T21:03:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="46" started-at="2018-05-26T21:03:37Z" data-provider="ls" finished-at="2018-05-26T21:03:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="5394" started-at="2018-05-26T21:03:37Z" data-provider="ls" finished-at="2018-05-26T21:03:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="86" started-at="2018-05-26T21:03:42Z" data-provider="ls" finished-at="2018-05-26T21:03:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="1268" started-at="2018-05-26T21:03:42Z" data-provider="ls" finished-at="2018-05-26T21:03:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="14" started-at="2018-05-26T21:03:44Z" data-provider="ls" finished-at="2018-05-26T21:03:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testLSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testLSsmall" duration-ms="181" started-at="2018-05-26T21:03:44Z" data-provider="ls" finished-at="2018-05-26T21:03:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLSsmall -->
        <test-method status="PASS" signature="testMSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testMSsmall" duration-ms="5" started-at="2018-05-26T21:03:44Z" data-provider="ms" finished-at="2018-05-26T21:03:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMSsmall -->
        <test-method status="PASS" signature="testMSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testMSsmall" duration-ms="15" started-at="2018-05-26T21:03:44Z" data-provider="ms" finished-at="2018-05-26T21:03:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMSsmall -->
        <test-method status="PASS" signature="testMSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testMSsmall" duration-ms="27" started-at="2018-05-26T21:03:44Z" data-provider="ms" finished-at="2018-05-26T21:03:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMSsmall -->
        <test-method status="PASS" signature="testMSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testMSsmall" duration-ms="9" started-at="2018-05-26T21:03:44Z" data-provider="ms" finished-at="2018-05-26T21:03:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMSsmall -->
        <test-method status="PASS" signature="testMSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testMSsmall" duration-ms="17" started-at="2018-05-26T21:03:44Z" data-provider="ms" finished-at="2018-05-26T21:03:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMSsmall -->
        <test-method status="PASS" signature="testMSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testMSsmall" duration-ms="173" started-at="2018-05-26T21:03:44Z" data-provider="ms" finished-at="2018-05-26T21:03:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMSsmall -->
        <test-method status="PASS" signature="testMSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testMSsmall" duration-ms="281" started-at="2018-05-26T21:03:44Z" data-provider="ms" finished-at="2018-05-26T21:03:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMSsmall -->
        <test-method status="PASS" signature="testMSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testMSsmall" duration-ms="2180" started-at="2018-05-26T21:03:44Z" data-provider="ms" finished-at="2018-05-26T21:03:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMSsmall -->
        <test-method status="PASS" signature="testMSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testMSsmall" duration-ms="433" started-at="2018-05-26T21:03:47Z" data-provider="ms" finished-at="2018-05-26T21:03:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMSsmall -->
        <test-method status="PASS" signature="testMSsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testMSsmall" duration-ms="2167" started-at="2018-05-26T21:03:47Z" data-provider="ms" finished-at="2018-05-26T21:03:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMSsmall -->
        <test-method status="PASS" signature="testNosol0B()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testNosol0B" duration-ms="756" started-at="2018-05-26T21:03:49Z" finished-at="2018-05-26T21:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNosol0B -->
        <test-method status="PASS" signature="testNosol0E()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testNosol0E" duration-ms="1930" started-at="2018-05-26T21:03:50Z" finished-at="2018-05-26T21:03:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNosol0E -->
        <test-method status="PASS" signature="testNosol1B()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testNosol1B" duration-ms="53" started-at="2018-05-26T21:03:52Z" finished-at="2018-05-26T21:03:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNosol1B -->
        <test-method status="PASS" signature="testNosol1E()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testNosol1E" duration-ms="173" started-at="2018-05-26T21:03:52Z" finished-at="2018-05-26T21:03:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNosol1E -->
        <test-method status="PASS" signature="testOnce1()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testOnce1" duration-ms="3" started-at="2018-05-26T21:03:52Z" finished-at="2018-05-26T21:03:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnce1 -->
        <test-method status="PASS" signature="testPAsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testPAsmall" duration-ms="4" started-at="2018-05-26T21:03:52Z" data-provider="pa" finished-at="2018-05-26T21:03:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPAsmall -->
        <test-method status="PASS" signature="testPAsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testPAsmall" duration-ms="8" started-at="2018-05-26T21:03:52Z" data-provider="pa" finished-at="2018-05-26T21:03:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPAsmall -->
        <test-method status="PASS" signature="testPAsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testPAsmall" duration-ms="7" started-at="2018-05-26T21:03:52Z" data-provider="pa" finished-at="2018-05-26T21:03:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPAsmall -->
        <test-method status="PASS" signature="testPAsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testPAsmall" duration-ms="5" started-at="2018-05-26T21:03:52Z" data-provider="pa" finished-at="2018-05-26T21:03:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPAsmall -->
        <test-method status="PASS" signature="testPAsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testPAsmall" duration-ms="6" started-at="2018-05-26T21:03:52Z" data-provider="pa" finished-at="2018-05-26T21:03:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPAsmall -->
        <test-method status="PASS" signature="testPAsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testPAsmall" duration-ms="5" started-at="2018-05-26T21:03:52Z" data-provider="pa" finished-at="2018-05-26T21:03:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPAsmall -->
        <test-method status="PASS" signature="testPAsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testPAsmall" duration-ms="5" started-at="2018-05-26T21:03:52Z" data-provider="pa" finished-at="2018-05-26T21:03:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPAsmall -->
        <test-method status="PASS" signature="testPAsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testPAsmall" duration-ms="9" started-at="2018-05-26T21:03:52Z" data-provider="pa" finished-at="2018-05-26T21:03:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPAsmall -->
        <test-method status="PASS" signature="testPAsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testPAsmall" duration-ms="6" started-at="2018-05-26T21:03:52Z" data-provider="pa" finished-at="2018-05-26T21:03:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPAsmall -->
        <test-method status="PASS" signature="testPAsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testPAsmall" duration-ms="10" started-at="2018-05-26T21:03:52Z" data-provider="pa" finished-at="2018-05-26T21:03:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPAsmall -->
        <test-method status="PASS" signature="testPAsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testPAsmall" duration-ms="30" started-at="2018-05-26T21:03:52Z" data-provider="pa" finished-at="2018-05-26T21:03:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPAsmall -->
        <test-method status="PASS" signature="testPAsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testPAsmall" duration-ms="39" started-at="2018-05-26T21:03:52Z" data-provider="pa" finished-at="2018-05-26T21:03:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPAsmall -->
        <test-method status="PASS" signature="testPAsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testPAsmall" duration-ms="76" started-at="2018-05-26T21:03:52Z" data-provider="pa" finished-at="2018-05-26T21:03:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPAsmall -->
        <test-method status="PASS" signature="testPAsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testPAsmall" duration-ms="42" started-at="2018-05-26T21:03:52Z" data-provider="pa" finished-at="2018-05-26T21:03:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPAsmall -->
        <test-method status="PASS" signature="testPAsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testPAsmall" duration-ms="74" started-at="2018-05-26T21:03:52Z" data-provider="pa" finished-at="2018-05-26T21:03:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPAsmall -->
        <test-method status="PASS" signature="testPAsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testPAsmall" duration-ms="45" started-at="2018-05-26T21:03:52Z" data-provider="pa" finished-at="2018-05-26T21:03:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[28]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPAsmall -->
        <test-method status="PASS" signature="testPAsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testPAsmall" duration-ms="52" started-at="2018-05-26T21:03:52Z" data-provider="pa" finished-at="2018-05-26T21:03:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[28]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPAsmall -->
        <test-method status="PASS" signature="testPAsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testPAsmall" duration-ms="88" started-at="2018-05-26T21:03:52Z" data-provider="pa" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[28]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPAsmall -->
        <test-method status="PASS" signature="testPAsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testPAsmall" duration-ms="51" started-at="2018-05-26T21:03:53Z" data-provider="pa" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[28]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPAsmall -->
        <test-method status="PASS" signature="testPAsmall(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testPAsmall" duration-ms="99" started-at="2018-05-26T21:03:53Z" data-provider="pa" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[28]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPAsmall -->
        <test-method status="PASS" signature="testReif()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testReif" duration-ms="3" started-at="2018-05-26T21:03:53Z" finished-at="2018-05-26T21:03:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReif -->
        <test-method status="PASS" signature="testReif2()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testReif2" duration-ms="2" started-at="2018-05-26T21:03:53Z" finished-at="2018-05-26T21:03:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReif2 -->
        <test-method status="PASS" signature="testReif3()[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testReif3" duration-ms="2" started-at="2018-05-26T21:03:53Z" finished-at="2018-05-26T21:03:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReif3 -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="1" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="5" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="3" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="3" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="2" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="2" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="4" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="5" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="4" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="5" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="4" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="6" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="6" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="4" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="7" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="7" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="12" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="16" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="13" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="15" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="3" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="5" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="7" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="5" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="6" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="48" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="72" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="95" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="73" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="92" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="26" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="38" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="47" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="42" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="38" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="106" started-at="2018-05-26T21:03:53Z" data-provider="ca" finished-at="2018-05-26T21:03:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="153" started-at="2018-05-26T21:03:54Z" data-provider="ca" finished-at="2018-05-26T21:03:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="235" started-at="2018-05-26T21:03:54Z" data-provider="ca" finished-at="2018-05-26T21:03:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="185" started-at="2018-05-26T21:03:54Z" data-provider="ca" finished-at="2018-05-26T21:03:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="236" started-at="2018-05-26T21:03:54Z" data-provider="ca" finished-at="2018-05-26T21:03:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="1464" started-at="2018-05-26T21:03:54Z" data-provider="ca" finished-at="2018-05-26T21:03:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="2258" started-at="2018-05-26T21:03:56Z" data-provider="ca" finished-at="2018-05-26T21:03:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="4130" started-at="2018-05-26T21:03:58Z" data-provider="ca" finished-at="2018-05-26T21:04:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="3175" started-at="2018-05-26T21:04:02Z" data-provider="ca" finished-at="2018-05-26T21:04:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallCA(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallCA" duration-ms="4110" started-at="2018-05-26T21:04:05Z" data-provider="ca" finished-at="2018-05-26T21:04:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallCA -->
        <test-method status="PASS" signature="testsmallGR(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallGR" duration-ms="4" started-at="2018-05-26T21:04:09Z" data-provider="gr" finished-at="2018-05-26T21:04:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallGR -->
        <test-method status="PASS" signature="testsmallGR(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallGR" duration-ms="4" started-at="2018-05-26T21:04:09Z" data-provider="gr" finished-at="2018-05-26T21:04:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallGR -->
        <test-method status="PASS" signature="testsmallGR(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallGR" duration-ms="4" started-at="2018-05-26T21:04:09Z" data-provider="gr" finished-at="2018-05-26T21:04:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallGR -->
        <test-method status="PASS" signature="testsmallGR(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallGR" duration-ms="3" started-at="2018-05-26T21:04:09Z" data-provider="gr" finished-at="2018-05-26T21:04:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallGR -->
        <test-method status="PASS" signature="testsmallGR(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallGR" duration-ms="5" started-at="2018-05-26T21:04:09Z" data-provider="gr" finished-at="2018-05-26T21:04:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallGR -->
        <test-method status="PASS" signature="testsmallGR(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallGR" duration-ms="11" started-at="2018-05-26T21:04:09Z" data-provider="gr" finished-at="2018-05-26T21:04:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallGR -->
        <test-method status="PASS" signature="testsmallGR(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallGR" duration-ms="15" started-at="2018-05-26T21:04:10Z" data-provider="gr" finished-at="2018-05-26T21:04:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallGR -->
        <test-method status="PASS" signature="testsmallGR(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallGR" duration-ms="22" started-at="2018-05-26T21:04:10Z" data-provider="gr" finished-at="2018-05-26T21:04:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallGR -->
        <test-method status="PASS" signature="testsmallGR(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallGR" duration-ms="17" started-at="2018-05-26T21:04:10Z" data-provider="gr" finished-at="2018-05-26T21:04:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallGR -->
        <test-method status="PASS" signature="testsmallGR(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallGR" duration-ms="23" started-at="2018-05-26T21:04:10Z" data-provider="gr" finished-at="2018-05-26T21:04:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallGR -->
        <test-method status="PASS" signature="testsmallGR(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallGR" duration-ms="89" started-at="2018-05-26T21:04:10Z" data-provider="gr" finished-at="2018-05-26T21:04:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallGR -->
        <test-method status="PASS" signature="testsmallGR(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallGR" duration-ms="112" started-at="2018-05-26T21:04:10Z" data-provider="gr" finished-at="2018-05-26T21:04:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallGR -->
        <test-method status="PASS" signature="testsmallGR(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallGR" duration-ms="191" started-at="2018-05-26T21:04:10Z" data-provider="gr" finished-at="2018-05-26T21:04:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallGR -->
        <test-method status="PASS" signature="testsmallGR(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallGR" duration-ms="129" started-at="2018-05-26T21:04:10Z" data-provider="gr" finished-at="2018-05-26T21:04:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallGR -->
        <test-method status="PASS" signature="testsmallGR(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallGR" duration-ms="225" started-at="2018-05-26T21:04:10Z" data-provider="gr" finished-at="2018-05-26T21:04:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallGR -->
        <test-method status="PASS" signature="testsmallGR(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallGR" duration-ms="689" started-at="2018-05-26T21:04:10Z" data-provider="gr" finished-at="2018-05-26T21:04:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallGR -->
        <test-method status="PASS" signature="testsmallGR(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallGR" duration-ms="896" started-at="2018-05-26T21:04:11Z" data-provider="gr" finished-at="2018-05-26T21:04:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallGR -->
        <test-method status="PASS" signature="testsmallGR(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallGR" duration-ms="1654" started-at="2018-05-26T21:04:12Z" data-provider="gr" finished-at="2018-05-26T21:04:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallGR -->
        <test-method status="PASS" signature="testsmallGR(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallGR" duration-ms="1060" started-at="2018-05-26T21:04:14Z" data-provider="gr" finished-at="2018-05-26T21:04:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallGR -->
        <test-method status="PASS" signature="testsmallGR(int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallGR" duration-ms="1663" started-at="2018-05-26T21:04:15Z" data-provider="gr" finished-at="2018-05-26T21:04:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallGR -->
        <test-method status="PASS" signature="testsmallLN(int, int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallLN" duration-ms="1" started-at="2018-05-26T21:04:16Z" data-provider="ln" finished-at="2018-05-26T21:04:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallLN -->
        <test-method status="PASS" signature="testsmallLN(int, int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallLN" duration-ms="1" started-at="2018-05-26T21:04:16Z" data-provider="ln" finished-at="2018-05-26T21:04:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallLN -->
        <test-method status="PASS" signature="testsmallLN(int, int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallLN" duration-ms="1" started-at="2018-05-26T21:04:16Z" data-provider="ln" finished-at="2018-05-26T21:04:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallLN -->
        <test-method status="PASS" signature="testsmallLN(int, int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallLN" duration-ms="1" started-at="2018-05-26T21:04:16Z" data-provider="ln" finished-at="2018-05-26T21:04:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallLN -->
        <test-method status="PASS" signature="testsmallLN(int, int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallLN" duration-ms="0" started-at="2018-05-26T21:04:16Z" data-provider="ln" finished-at="2018-05-26T21:04:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallLN -->
        <test-method status="PASS" signature="testsmallLN(int, int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallLN" duration-ms="1" started-at="2018-05-26T21:04:16Z" data-provider="ln" finished-at="2018-05-26T21:04:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallLN -->
        <test-method status="PASS" signature="testsmallLN(int, int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallLN" duration-ms="0" started-at="2018-05-26T21:04:16Z" data-provider="ln" finished-at="2018-05-26T21:04:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallLN -->
        <test-method status="PASS" signature="testsmallLN(int, int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallLN" duration-ms="1" started-at="2018-05-26T21:04:16Z" data-provider="ln" finished-at="2018-05-26T21:04:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallLN -->
        <test-method status="PASS" signature="testsmallLN(int, int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallLN" duration-ms="1" started-at="2018-05-26T21:04:16Z" data-provider="ln" finished-at="2018-05-26T21:04:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallLN -->
        <test-method status="PASS" signature="testsmallLN(int, int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallLN" duration-ms="1" started-at="2018-05-26T21:04:16Z" data-provider="ln" finished-at="2018-05-26T21:04:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallLN -->
        <test-method status="PASS" signature="testsmallLN(int, int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallLN" duration-ms="41" started-at="2018-05-26T21:04:16Z" data-provider="ln" finished-at="2018-05-26T21:04:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallLN -->
        <test-method status="PASS" signature="testsmallLN(int, int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallLN" duration-ms="36" started-at="2018-05-26T21:04:16Z" data-provider="ln" finished-at="2018-05-26T21:04:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallLN -->
        <test-method status="PASS" signature="testsmallLN(int, int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallLN" duration-ms="57" started-at="2018-05-26T21:04:16Z" data-provider="ln" finished-at="2018-05-26T21:04:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallLN -->
        <test-method status="PASS" signature="testsmallLN(int, int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallLN" duration-ms="29" started-at="2018-05-26T21:04:16Z" data-provider="ln" finished-at="2018-05-26T21:04:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallLN -->
        <test-method status="PASS" signature="testsmallLN(int, int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallLN" duration-ms="50" started-at="2018-05-26T21:04:16Z" data-provider="ln" finished-at="2018-05-26T21:04:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallLN -->
        <test-method status="PASS" signature="testsmallLN(int, int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallLN" duration-ms="923" started-at="2018-05-26T21:04:17Z" data-provider="ln" finished-at="2018-05-26T21:04:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallLN -->
        <test-method status="PASS" signature="testsmallLN(int, int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallLN" duration-ms="1541" started-at="2018-05-26T21:04:17Z" data-provider="ln" finished-at="2018-05-26T21:04:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallLN -->
        <test-method status="PASS" signature="testsmallLN(int, int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallLN" duration-ms="4545" started-at="2018-05-26T21:04:19Z" data-provider="ln" finished-at="2018-05-26T21:04:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallLN -->
        <test-method status="PASS" signature="testsmallLN(int, int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallLN" duration-ms="2053" started-at="2018-05-26T21:04:24Z" data-provider="ln" finished-at="2018-05-26T21:04:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallLN -->
        <test-method status="PASS" signature="testsmallLN(int, int, int)[pri:0, instance:org.chocosolver.solver.explanations.ExplanationEngineTest@35dc849b]" name="testsmallLN" duration-ms="4515" started-at="2018-05-26T21:04:26Z" data-provider="ln" finished-at="2018-05-26T21:04:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsmallLN -->
      </class> <!-- org.chocosolver.solver.explanations.ExplanationEngineTest -->
      <class name="org.chocosolver.solver.constraints.nary.NogoodTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.NogoodTest@6a562255]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.NogoodTest@6a562255]" name="test2" duration-ms="4" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.solver.constraints.nary.NogoodTest@6a562255]" name="test3" duration-ms="2" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test4()[pri:0, instance:org.chocosolver.solver.constraints.nary.NogoodTest@6a562255]" name="test4" duration-ms="2" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
      </class> <!-- org.chocosolver.solver.constraints.nary.NogoodTest -->
      <class name="org.chocosolver.solver.explanations.EqualXYCExplTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.explanations.EqualXYCExplTest@276aa33f]" name="test1" duration-ms="15" started-at="2018-05-26T21:04:33Z" finished-at="2018-05-26T21:04:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
      </class> <!-- org.chocosolver.solver.explanations.EqualXYCExplTest -->
      <class name="org.chocosolver.solver.constraints.ClauseTest">
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="0" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="0" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="0" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="0" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="0" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="0" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="0" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[31]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="0" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[31]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[31]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="0" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[31]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[31]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="0" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[31]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[63]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[63]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[63]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[63]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[63]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[63]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[63]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[127]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[127]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[127]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[127]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[127]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[127]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[127]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="0" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[127]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="2" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[255]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[255]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="2" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[255]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[255]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[255]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="2" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[255]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[255]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[255]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[255]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="2" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[511]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="2" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[511]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="3" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[511]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="2" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[511]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="3" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[511]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="2" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[511]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="3" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[511]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="2" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[511]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="2" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[511]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="2" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[511]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="4" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1023]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="4" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1023]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="4" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1023]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="4" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1023]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="4" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1023]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="4" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1023]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="4" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1023]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="4" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1023]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="4" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1023]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="3" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1023]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="4" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1023]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="8" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2047]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="8" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2047]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="8" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2047]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="8" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2047]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="8" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2047]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="7" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2047]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="8" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2047]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="8" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2047]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="8" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2047]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="8" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2047]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="11" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2047]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="8" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2047]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="25" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4095]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="20" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4095]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="20" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4095]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="22" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4095]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="14" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4095]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="14" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4095]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="13" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4095]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="14" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4095]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="13" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4095]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="14" started-at="2018-05-26T21:00:45Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4095]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="13" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4095]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="13" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4095]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="12" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4095]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="41" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8191]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="28" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8191]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="34" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8191]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="28" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8191]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="28" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8191]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="26" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8191]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="27" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8191]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="26" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8191]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="27" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8191]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="27" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8191]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="27" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8191]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="28" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8191]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="25" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8191]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="22" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8191]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="55" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[16383]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="54" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[16383]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="54" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[16383]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="55" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[16383]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="83" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[16383]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="61" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[16383]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="54" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[16383]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="54" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[16383]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="53" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[16383]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="54" started-at="2018-05-26T21:00:46Z" data-provider="cl1" finished-at="2018-05-26T21:00:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[16383]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="54" started-at="2018-05-26T21:00:47Z" data-provider="cl1" finished-at="2018-05-26T21:00:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[16383]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="53" started-at="2018-05-26T21:00:47Z" data-provider="cl1" finished-at="2018-05-26T21:00:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[16383]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="52" started-at="2018-05-26T21:00:47Z" data-provider="cl1" finished-at="2018-05-26T21:00:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[16383]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="50" started-at="2018-05-26T21:00:47Z" data-provider="cl1" finished-at="2018-05-26T21:00:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[16383]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="43" started-at="2018-05-26T21:00:47Z" data-provider="cl1" finished-at="2018-05-26T21:00:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[16383]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="108" started-at="2018-05-26T21:00:47Z" data-provider="cl1" finished-at="2018-05-26T21:00:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[32767]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="109" started-at="2018-05-26T21:00:47Z" data-provider="cl1" finished-at="2018-05-26T21:00:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[32767]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="107" started-at="2018-05-26T21:00:47Z" data-provider="cl1" finished-at="2018-05-26T21:00:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[32767]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="119" started-at="2018-05-26T21:00:47Z" data-provider="cl1" finished-at="2018-05-26T21:00:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[32767]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="107" started-at="2018-05-26T21:00:47Z" data-provider="cl1" finished-at="2018-05-26T21:00:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[32767]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="133" started-at="2018-05-26T21:00:47Z" data-provider="cl1" finished-at="2018-05-26T21:00:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[32767]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="108" started-at="2018-05-26T21:00:47Z" data-provider="cl1" finished-at="2018-05-26T21:00:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[32767]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="108" started-at="2018-05-26T21:00:48Z" data-provider="cl1" finished-at="2018-05-26T21:00:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[32767]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="105" started-at="2018-05-26T21:00:48Z" data-provider="cl1" finished-at="2018-05-26T21:00:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[32767]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="105" started-at="2018-05-26T21:00:48Z" data-provider="cl1" finished-at="2018-05-26T21:00:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[32767]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="105" started-at="2018-05-26T21:00:48Z" data-provider="cl1" finished-at="2018-05-26T21:00:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[32767]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="105" started-at="2018-05-26T21:00:48Z" data-provider="cl1" finished-at="2018-05-26T21:00:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[32767]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="107" started-at="2018-05-26T21:00:48Z" data-provider="cl1" finished-at="2018-05-26T21:00:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[32767]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="102" started-at="2018-05-26T21:00:48Z" data-provider="cl1" finished-at="2018-05-26T21:00:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[32767]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="100" started-at="2018-05-26T21:00:48Z" data-provider="cl1" finished-at="2018-05-26T21:00:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[32767]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(int, int, int)[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test1" duration-ms="84" started-at="2018-05-26T21:00:48Z" data-provider="cl1" finished-at="2018-05-26T21:00:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[32767]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test2" duration-ms="1" started-at="2018-05-26T21:00:48Z" finished-at="2018-05-26T21:00:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test30()[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test30" duration-ms="0" started-at="2018-05-26T21:00:48Z" finished-at="2018-05-26T21:00:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test30 -->
        <test-method status="PASS" signature="test32()[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test32" duration-ms="1" started-at="2018-05-26T21:00:48Z" finished-at="2018-05-26T21:00:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test32 -->
        <test-method status="PASS" signature="test31()[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test31" duration-ms="0" started-at="2018-05-26T21:00:48Z" finished-at="2018-05-26T21:00:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test31 -->
        <test-method status="PASS" signature="test4()[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test4" duration-ms="340" started-at="2018-05-26T21:00:48Z" finished-at="2018-05-26T21:00:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test33()[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test33" duration-ms="0" started-at="2018-05-26T21:00:48Z" finished-at="2018-05-26T21:00:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test33 -->
        <test-method status="PASS" signature="test5()[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test5" duration-ms="1243" started-at="2018-05-26T21:00:49Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="test6()[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="test6" duration-ms="2" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method status="PASS" signature="testBothAnd()[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="testBothAnd" duration-ms="1" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBothAnd -->
        <test-method status="PASS" signature="testBothOr()[pri:0, instance:org.chocosolver.solver.constraints.ClauseTest@c478e4e]" name="testBothOr" duration-ms="1" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBothOr -->
      </class> <!-- org.chocosolver.solver.constraints.ClauseTest -->
      <class name="org.chocosolver.solver.constraints.nary.MultiCostRegularTest">
        <test-method status="PASS" signature="test0()[pri:0, instance:org.chocosolver.solver.constraints.nary.MultiCostRegularTest@182fd26b]" name="test0" duration-ms="976" started-at="2018-05-26T20:58:27Z" finished-at="2018-05-26T20:58:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test0 -->
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.MultiCostRegularTest@182fd26b]" name="test1" duration-ms="92" started-at="2018-05-26T20:58:28Z" finished-at="2018-05-26T20:58:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.MultiCostRegularTest@182fd26b]" name="test2" duration-ms="188" started-at="2018-05-26T20:58:28Z" finished-at="2018-05-26T20:58:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.solver.constraints.nary.MultiCostRegularTest@182fd26b]" name="test3" duration-ms="525" started-at="2018-05-26T20:58:28Z" finished-at="2018-05-26T20:58:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test4()[pri:0, instance:org.chocosolver.solver.constraints.nary.MultiCostRegularTest@182fd26b]" name="test4" duration-ms="297" started-at="2018-05-26T20:58:29Z" finished-at="2018-05-26T20:58:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
      </class> <!-- org.chocosolver.solver.constraints.nary.MultiCostRegularTest -->
      <class name="org.chocosolver.solver.explanations.RuleStoreTest">
        <test-method status="PASS" signature="testBoolFullDom()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testBoolFullDom" duration-ms="1" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoolFullDom -->
        <test-method status="PASS" signature="testBoundBound()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testBoundBound" duration-ms="1" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoundBound -->
        <test-method status="PASS" signature="testBoundFullDom()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testBoundFullDom" duration-ms="0" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoundFullDom -->
        <test-method status="PASS" signature="testBoundLow()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testBoundLow" duration-ms="1" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoundLow -->
        <test-method status="PASS" signature="testBoundRem2()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testBoundRem2" duration-ms="1" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <exception class="org.chocosolver.solver.exception.SolverException">
            <message>
              <![CDATA[Unknown event]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.chocosolver.solver.exception.SolverException: Unknown event
	at org.chocosolver.solver.explanations.RuleStore.matchDomain(RuleStore.java:217)
	at org.chocosolver.solver.explanations.RuleStoreTest.testBoundRem2(RuleStoreTest.java:331)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.SolverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoundRem2 -->
        <test-method status="PASS" signature="testBoundRem()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testBoundRem" duration-ms="0" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoundRem -->
        <test-method status="PASS" signature="testBoundUpp()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testBoundUpp" duration-ms="1" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoundUpp -->
        <test-method status="PASS" signature="testEnumBound()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testEnumBound" duration-ms="1" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumBound -->
        <test-method status="PASS" signature="testDecRefutation()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testDecRefutation" duration-ms="0" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDecRefutation -->
        <test-method status="PASS" signature="testEnumLow()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testEnumLow" duration-ms="1" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumLow -->
        <test-method status="PASS" signature="testEnumFullDom()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testEnumFullDom" duration-ms="0" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumFullDom -->
        <test-method status="PASS" signature="testEnumRem()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testEnumRem" duration-ms="0" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumRem -->
        <test-method status="PASS" signature="testEnumUpp()[pri:0, instance:org.chocosolver.solver.explanations.RuleStoreTest@34065642]" name="testEnumUpp" duration-ms="1" started-at="2018-05-26T21:04:35Z" finished-at="2018-05-26T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumUpp -->
      </class> <!-- org.chocosolver.solver.explanations.RuleStoreTest -->
      <class name="org.chocosolver.solver.constraints.set.NbEmptyTest">
        <test-method status="PASS" signature="testEmptyUnfeasible()[pri:0, instance:org.chocosolver.solver.constraints.set.NbEmptyTest@4af44f2a]" name="testEmptyUnfeasible" duration-ms="2" started-at="2018-05-26T21:09:52Z" finished-at="2018-05-26T21:09:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyUnfeasible -->
        <test-method status="PASS" signature="testMoreEmptyThanSetVar()[pri:0, instance:org.chocosolver.solver.constraints.set.NbEmptyTest@4af44f2a]" name="testMoreEmptyThanSetVar" duration-ms="0" started-at="2018-05-26T21:09:52Z" finished-at="2018-05-26T21:09:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMoreEmptyThanSetVar -->
        <test-method status="PASS" signature="testNoEmpty()[pri:0, instance:org.chocosolver.solver.constraints.set.NbEmptyTest@4af44f2a]" name="testNoEmpty" duration-ms="51" started-at="2018-05-26T21:09:52Z" finished-at="2018-05-26T21:09:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoEmpty -->
        <test-method status="PASS" signature="testNoEmptyUnfeasible()[pri:0, instance:org.chocosolver.solver.constraints.set.NbEmptyTest@4af44f2a]" name="testNoEmptyUnfeasible" duration-ms="1" started-at="2018-05-26T21:09:52Z" finished-at="2018-05-26T21:09:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoEmptyUnfeasible -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.NbEmptyTest@4af44f2a]" name="testNominal" duration-ms="1" started-at="2018-05-26T21:09:52Z" finished-at="2018-05-26T21:09:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testWithIntVar()[pri:0, instance:org.chocosolver.solver.constraints.set.NbEmptyTest@4af44f2a]" name="testWithIntVar" duration-ms="311" started-at="2018-05-26T21:09:52Z" finished-at="2018-05-26T21:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithIntVar -->
      </class> <!-- org.chocosolver.solver.constraints.set.NbEmptyTest -->
      <class name="org.chocosolver.solver.variables.OffsetViewTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.variables.OffsetViewTest@1e288c76]" name="test1" duration-ms="1" started-at="2018-05-26T20:58:29Z" finished-at="2018-05-26T20:58:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="testIt1()[pri:0, instance:org.chocosolver.solver.variables.OffsetViewTest@1e288c76]" name="testIt1" duration-ms="8" started-at="2018-05-26T20:58:29Z" finished-at="2018-05-26T20:58:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIt1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.variables.OffsetViewTest@1e288c76]" name="test2" duration-ms="0" started-at="2018-05-26T20:58:29Z" finished-at="2018-05-26T20:58:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="testIt2()[pri:0, instance:org.chocosolver.solver.variables.OffsetViewTest@1e288c76]" name="testIt2" duration-ms="9" started-at="2018-05-26T20:58:29Z" finished-at="2018-05-26T20:58:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIt2 -->
        <test-method status="PASS" signature="testRandom1()[pri:0, instance:org.chocosolver.solver.variables.OffsetViewTest@1e288c76]" name="testRandom1" duration-ms="1285" started-at="2018-05-26T20:58:29Z" finished-at="2018-05-26T20:58:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRandom1 -->
        <test-method status="PASS" signature="testRandom2()[pri:0, instance:org.chocosolver.solver.variables.OffsetViewTest@1e288c76]" name="testRandom2" duration-ms="132" started-at="2018-05-26T20:58:30Z" finished-at="2018-05-26T20:58:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRandom2 -->
        <test-method status="PASS" signature="testRandom3()[pri:0, instance:org.chocosolver.solver.variables.OffsetViewTest@1e288c76]" name="testRandom3" duration-ms="11889" started-at="2018-05-26T20:58:30Z" finished-at="2018-05-26T20:58:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRandom3 -->
      </class> <!-- org.chocosolver.solver.variables.OffsetViewTest -->
      <class name="org.chocosolver.solver.constraints.nary.ScalarTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="setup" is-config="true" duration-ms="1" started-at="2018-05-26T21:02:56Z" finished-at="2018-05-26T21:02:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:02:56Z" finished-at="2018-05-26T21:02:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testCoeffAtZeroSolutions()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="testCoeffAtZeroSolutions" duration-ms="142" started-at="2018-05-26T21:02:56Z" finished-at="2018-05-26T21:02:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCoeffAtZeroSolutions -->
        <test-method status="PASS" signature="testCoeffAtZeroNoSolutions()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="testCoeffAtZeroNoSolutions" duration-ms="0" started-at="2018-05-26T21:02:56Z" finished-at="2018-05-26T21:02:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCoeffAtZeroNoSolutions -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:02:56Z" finished-at="2018-05-26T21:02:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="testNominal" duration-ms="1" started-at="2018-05-26T21:02:56Z" finished-at="2018-05-26T21:02:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:02:56Z" finished-at="2018-05-26T21:02:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testNominalBounded()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="testNominalBounded" duration-ms="0" started-at="2018-05-26T21:02:56Z" finished-at="2018-05-26T21:02:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominalBounded -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="setup" is-config="true" duration-ms="1" started-at="2018-05-26T21:02:56Z" finished-at="2018-05-26T21:02:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testNominalBoundedWithNegatives()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="testNominalBoundedWithNegatives" duration-ms="32" started-at="2018-05-26T21:02:56Z" finished-at="2018-05-26T21:02:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominalBoundedWithNegatives -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="setup" is-config="true" duration-ms="1" started-at="2018-05-26T21:02:56Z" finished-at="2018-05-26T21:02:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testSameVariableNoSolution()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="testSameVariableNoSolution" duration-ms="0" started-at="2018-05-26T21:02:56Z" finished-at="2018-05-26T21:02:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSameVariableNoSolution -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:02:56Z" finished-at="2018-05-26T21:02:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testSameVariableSolution()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="testSameVariableSolution" duration-ms="0" started-at="2018-05-26T21:02:56Z" finished-at="2018-05-26T21:02:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSameVariableSolution -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="setup" is-config="true" duration-ms="1" started-at="2018-05-26T21:02:56Z" finished-at="2018-05-26T21:02:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testWithSumVariable()[pri:0, instance:org.chocosolver.solver.constraints.nary.ScalarTest@44a9971f]" name="testWithSumVariable" duration-ms="2" started-at="2018-05-26T21:02:56Z" finished-at="2018-05-26T21:02:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithSumVariable -->
      </class> <!-- org.chocosolver.solver.constraints.nary.ScalarTest -->
      <class name="org.chocosolver.solver.constraints.binary.DistanceTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.binary.DistanceTest@2ea4e762]" name="test1" duration-ms="47" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.binary.DistanceTest@2ea4e762]" name="test2" duration-ms="109" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.solver.constraints.binary.DistanceTest@2ea4e762]" name="test3" duration-ms="8" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
      </class> <!-- org.chocosolver.solver.constraints.binary.DistanceTest -->
      <class name="org.chocosolver.util.MDDTest">
        <test-method status="PASS" signature="test0()[pri:0, instance:org.chocosolver.util.MDDTest@5ca7619f]" name="test0" duration-ms="1" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test0 -->
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.util.MDDTest@5ca7619f]" name="test1" duration-ms="1" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.util.MDDTest@5ca7619f]" name="test2" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test4()[pri:0, instance:org.chocosolver.util.MDDTest@5ca7619f]" name="test4" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.util.MDDTest@5ca7619f]" name="test3" duration-ms="0" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test5()[pri:0, instance:org.chocosolver.util.MDDTest@5ca7619f]" name="test5" duration-ms="2" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="test6()[pri:0, instance:org.chocosolver.util.MDDTest@5ca7619f]" name="test6" duration-ms="1" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method status="PASS" signature="test7()[pri:0, instance:org.chocosolver.util.MDDTest@5ca7619f]" name="test7" duration-ms="1" started-at="2018-05-26T21:00:50Z" finished-at="2018-05-26T21:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test7 -->
      </class> <!-- org.chocosolver.util.MDDTest -->
      <class name="org.chocosolver.solver.constraints.nary.BinPackingTest">
        <test-method status="PASS" signature="test2(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.BinPackingTest@319058ce]" name="test2" duration-ms="3" started-at="2018-05-26T21:03:36Z" data-provider="params" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test2(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.BinPackingTest@319058ce]" name="test2" duration-ms="6" started-at="2018-05-26T21:03:36Z" data-provider="params" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.BinPackingTest@319058ce]" name="test3" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="params" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test3(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.BinPackingTest@319058ce]" name="test3" duration-ms="1" started-at="2018-05-26T21:03:36Z" data-provider="params" finished-at="2018-05-26T21:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="testFixedLoadBackPropag()[pri:0, instance:org.chocosolver.solver.constraints.nary.BinPackingTest@319058ce]" name="testFixedLoadBackPropag" duration-ms="1" started-at="2018-05-26T21:03:36Z" finished-at="2018-05-26T21:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFixedLoadBackPropag -->
      </class> <!-- org.chocosolver.solver.constraints.nary.BinPackingTest -->
      <class name="org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest">
        <test-method status="PASS" signature="memoryCrashTest()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="memoryCrashTest" duration-ms="338" started-at="2018-05-26T20:56:18Z" finished-at="2018-05-26T20:56:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memoryCrashTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:18Z" finished-at="2018-05-26T20:56:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="1" started-at="2018-05-26T20:56:19Z" finished-at="2018-05-26T20:56:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="1" started-at="2018-05-26T20:56:19Z" finished-at="2018-05-26T20:56:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddRemoveReturnValue(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testAddRemoveReturnValue" duration-ms="0" started-at="2018-05-26T20:56:19Z" data-provider="params" finished-at="2018-05-26T20:56:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddRemoveReturnValue -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="1" started-at="2018-05-26T20:56:19Z" finished-at="2018-05-26T20:56:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddRemoveReturnValue(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testAddRemoveReturnValue" duration-ms="0" started-at="2018-05-26T20:56:19Z" data-provider="params" finished-at="2018-05-26T20:56:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddRemoveReturnValue -->
        <test-method status="PASS" signature="testNominal(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testNominal" duration-ms="0" started-at="2018-05-26T20:56:19Z" data-provider="params" finished-at="2018-05-26T20:56:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testNominal(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testNominal" duration-ms="1" started-at="2018-05-26T20:56:19Z" data-provider="params" finished-at="2018-05-26T20:56:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:19Z" finished-at="2018-05-26T20:56:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testPopUntilZero(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testPopUntilZero" duration-ms="1" started-at="2018-05-26T20:56:19Z" data-provider="params" finished-at="2018-05-26T20:56:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopUntilZero -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:19Z" finished-at="2018-05-26T20:56:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:19Z" finished-at="2018-05-26T20:56:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testPopUntilZero(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testPopUntilZero" duration-ms="1" started-at="2018-05-26T20:56:19Z" data-provider="params" finished-at="2018-05-26T20:56:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopUntilZero -->
        <test-method status="PASS" signature="testRemoveInLoop(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testRemoveInLoop" duration-ms="1" started-at="2018-05-26T20:56:19Z" data-provider="params" finished-at="2018-05-26T20:56:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveInLoop -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:19Z" finished-at="2018-05-26T20:56:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:19Z" finished-at="2018-05-26T20:56:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testRemoveInLoop(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testRemoveInLoop" duration-ms="1" started-at="2018-05-26T20:56:19Z" data-provider="params" finished-at="2018-05-26T20:56:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveInLoop -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:19Z" finished-at="2018-05-26T20:56:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testSeveralPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testSeveralPushes" duration-ms="501" started-at="2018-05-26T20:56:19Z" data-provider="params" finished-at="2018-05-26T20:56:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSeveralPushes -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="1" started-at="2018-05-26T20:56:19Z" finished-at="2018-05-26T20:56:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testSeveralPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testSeveralPushes" duration-ms="454" started-at="2018-05-26T20:56:19Z" data-provider="params" finished-at="2018-05-26T20:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSeveralPushes -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="1" started-at="2018-05-26T20:56:20Z" finished-at="2018-05-26T20:56:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testTwoPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testTwoPushes" duration-ms="0" started-at="2018-05-26T20:56:20Z" data-provider="params" finished-at="2018-05-26T20:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwoPushes -->
        <test-method status="PASS" signature="testTwoPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testTwoPushes" duration-ms="1" started-at="2018-05-26T20:56:20Z" data-provider="params" finished-at="2018-05-26T20:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwoPushes -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:20Z" finished-at="2018-05-26T20:56:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:20Z" finished-at="2018-05-26T20:56:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testTwoSets(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testTwoSets" duration-ms="0" started-at="2018-05-26T20:56:20Z" data-provider="params" finished-at="2018-05-26T20:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwoSets -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:20Z" finished-at="2018-05-26T20:56:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testTwoSets(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testTwoSets" duration-ms="0" started-at="2018-05-26T20:56:20Z" data-provider="params" finished-at="2018-05-26T20:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwoSets -->
        <test-method status="PASS" signature="testVoidPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testVoidPushes" duration-ms="0" started-at="2018-05-26T20:56:20Z" data-provider="params" finished-at="2018-05-26T20:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVoidPushes -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:20Z" finished-at="2018-05-26T20:56:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:20Z" finished-at="2018-05-26T20:56:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testVoidPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testVoidPushes" duration-ms="0" started-at="2018-05-26T20:56:20Z" data-provider="params" finished-at="2018-05-26T20:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVoidPushes -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddNegativeKO()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testAddNegativeKO" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNegativeKO -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddAlreadyExists()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testAddAlreadyExists" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAlreadyExists -->
        <test-method status="PASS" signature="testAddMaxValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testAddMaxValue" duration-ms="1" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMaxValue -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddNegativeOK()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testAddNegativeOK" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNegativeOK -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddNominal2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testAddNominal2" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNominal2 -->
        <test-method status="PASS" signature="testAddNominal()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testAddNominal" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNominal -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testClear" duration-ms="1" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testAddRemoveReturnValueNB()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testAddRemoveReturnValueNB" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddRemoveReturnValueNB -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testEmptyMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testEmptyMax" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[cannot find maximum of an empty set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: cannot find maximum of an empty set
	at org.chocosolver.util.objects.setDataStructures.linkedlist.Set_LinkedList.max(Set_LinkedList.java:135)
	at org.chocosolver.util.objects.setDataStructures.StdSet.max(StdSet.java:122)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testEmptyMax(SetTest.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyMax -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testEquals()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testEquals" duration-ms="1" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testEmptyMin()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testEmptyMin" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[cannot find minimum of an empty set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: cannot find minimum of an empty set
	at org.chocosolver.util.objects.setDataStructures.linkedlist.Set_LinkedList.min(Set_LinkedList.java:121)
	at org.chocosolver.util.objects.setDataStructures.StdSet.min(StdSet.java:117)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testEmptyMin(SetTest.java:172)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyMin -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testIterator" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="1" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testMinMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testMinMax" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinMax -->
        <test-method status="PASS" signature="testIteratorLength()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testIteratorLength" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorLength -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testMultipleLoops()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testMultipleLoops" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleLoops -->
        <test-method status="PASS" signature="testNewIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testNewIterator" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNewIterator -->
        <test-method status="PASS" signature="testReadOnlySet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testReadOnlySet" duration-ms="1" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadOnlySet -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testRemove" duration-ms="1" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testRemoveInLoop()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest@2761156e]" name="testRemoveInLoop" duration-ms="0" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveInLoop -->
      </class> <!-- org.chocosolver.util.objects.setDataStructures.backtrackable.LinkedListTest -->
      <class name="org.chocosolver.solver.search.TestMultiSequentialObjectives">
        <test-method status="PASS" signature="simpleLexTest1()[pri:0, instance:org.chocosolver.solver.search.TestMultiSequentialObjectives@50008974]" name="simpleLexTest1" duration-ms="200" started-at="2018-05-26T21:05:53Z" finished-at="2018-05-26T21:05:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleLexTest1 -->
        <test-method status="PASS" signature="simpleLexTest2()[pri:0, instance:org.chocosolver.solver.search.TestMultiSequentialObjectives@50008974]" name="simpleLexTest2" duration-ms="9" started-at="2018-05-26T21:05:54Z" finished-at="2018-05-26T21:05:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleLexTest2 -->
        <test-method status="PASS" signature="simpleLexTest3()[pri:0, instance:org.chocosolver.solver.search.TestMultiSequentialObjectives@50008974]" name="simpleLexTest3" duration-ms="170" started-at="2018-05-26T21:05:54Z" finished-at="2018-05-26T21:05:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleLexTest3 -->
        <test-method status="PASS" signature="simpleLexTest4()[pri:0, instance:org.chocosolver.solver.search.TestMultiSequentialObjectives@50008974]" name="simpleLexTest4" duration-ms="3" started-at="2018-05-26T21:05:54Z" finished-at="2018-05-26T21:05:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleLexTest4 -->
      </class> <!-- org.chocosolver.solver.search.TestMultiSequentialObjectives -->
      <class name="org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets">
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="28" started-at="2018-05-26T20:51:23Z" data-provider="params" finished-at="2018-05-26T20:51:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="17" started-at="2018-05-26T20:51:23Z" data-provider="params" finished-at="2018-05-26T20:51:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="65" started-at="2018-05-26T20:51:23Z" data-provider="params" finished-at="2018-05-26T20:51:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="422" started-at="2018-05-26T20:51:23Z" data-provider="params" finished-at="2018-05-26T20:51:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="7018" started-at="2018-05-26T20:51:24Z" data-provider="params" finished-at="2018-05-26T20:51:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="2" started-at="2018-05-26T20:51:31Z" data-provider="params" finished-at="2018-05-26T20:51:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="7" started-at="2018-05-26T20:51:31Z" data-provider="params" finished-at="2018-05-26T20:51:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="38" started-at="2018-05-26T20:51:31Z" data-provider="params" finished-at="2018-05-26T20:51:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="364" started-at="2018-05-26T20:51:31Z" data-provider="params" finished-at="2018-05-26T20:51:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="7038" started-at="2018-05-26T20:51:31Z" data-provider="params" finished-at="2018-05-26T20:51:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="2" started-at="2018-05-26T20:51:38Z" data-provider="params" finished-at="2018-05-26T20:51:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="5" started-at="2018-05-26T20:51:38Z" data-provider="params" finished-at="2018-05-26T20:51:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="23" started-at="2018-05-26T20:51:38Z" data-provider="params" finished-at="2018-05-26T20:51:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="348" started-at="2018-05-26T20:51:38Z" data-provider="params" finished-at="2018-05-26T20:51:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="6764" started-at="2018-05-26T20:51:39Z" data-provider="params" finished-at="2018-05-26T20:51:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="4" started-at="2018-05-26T20:51:45Z" data-provider="params" finished-at="2018-05-26T20:51:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="6" started-at="2018-05-26T20:51:45Z" data-provider="params" finished-at="2018-05-26T20:51:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="35" started-at="2018-05-26T20:51:45Z" data-provider="params" finished-at="2018-05-26T20:51:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="320" started-at="2018-05-26T20:51:45Z" data-provider="params" finished-at="2018-05-26T20:51:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="6676" started-at="2018-05-26T20:51:46Z" data-provider="params" finished-at="2018-05-26T20:51:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="1" started-at="2018-05-26T20:51:52Z" data-provider="params" finished-at="2018-05-26T20:51:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="5" started-at="2018-05-26T20:51:52Z" data-provider="params" finished-at="2018-05-26T20:51:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="32" started-at="2018-05-26T20:51:52Z" data-provider="params" finished-at="2018-05-26T20:51:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="328" started-at="2018-05-26T20:51:52Z" data-provider="params" finished-at="2018-05-26T20:51:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="7658" started-at="2018-05-26T20:51:53Z" data-provider="params" finished-at="2018-05-26T20:52:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="2" started-at="2018-05-26T20:52:00Z" data-provider="params" finished-at="2018-05-26T20:52:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="4" started-at="2018-05-26T20:52:00Z" data-provider="params" finished-at="2018-05-26T20:52:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="35" started-at="2018-05-26T20:52:00Z" data-provider="params" finished-at="2018-05-26T20:52:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="452" started-at="2018-05-26T20:52:01Z" data-provider="params" finished-at="2018-05-26T20:52:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="7375" started-at="2018-05-26T20:52:01Z" data-provider="params" finished-at="2018-05-26T20:52:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="2" started-at="2018-05-26T20:52:08Z" data-provider="params" finished-at="2018-05-26T20:52:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="5" started-at="2018-05-26T20:52:08Z" data-provider="params" finished-at="2018-05-26T20:52:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="26" started-at="2018-05-26T20:52:08Z" data-provider="params" finished-at="2018-05-26T20:52:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="293" started-at="2018-05-26T20:52:08Z" data-provider="params" finished-at="2018-05-26T20:52:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="7237" started-at="2018-05-26T20:52:09Z" data-provider="params" finished-at="2018-05-26T20:52:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="2" started-at="2018-05-26T20:52:16Z" data-provider="params" finished-at="2018-05-26T20:52:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="5" started-at="2018-05-26T20:52:16Z" data-provider="params" finished-at="2018-05-26T20:52:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="31" started-at="2018-05-26T20:52:16Z" data-provider="params" finished-at="2018-05-26T20:52:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="311" started-at="2018-05-26T20:52:16Z" data-provider="params" finished-at="2018-05-26T20:52:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="6924" started-at="2018-05-26T20:52:16Z" data-provider="params" finished-at="2018-05-26T20:52:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="2" started-at="2018-05-26T20:52:23Z" data-provider="params" finished-at="2018-05-26T20:52:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="4" started-at="2018-05-26T20:52:23Z" data-provider="params" finished-at="2018-05-26T20:52:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="29" started-at="2018-05-26T20:52:23Z" data-provider="params" finished-at="2018-05-26T20:52:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="335" started-at="2018-05-26T20:52:23Z" data-provider="params" finished-at="2018-05-26T20:52:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="6959" started-at="2018-05-26T20:52:24Z" data-provider="params" finished-at="2018-05-26T20:52:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="1" started-at="2018-05-26T20:52:31Z" data-provider="params" finished-at="2018-05-26T20:52:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="3" started-at="2018-05-26T20:52:31Z" data-provider="params" finished-at="2018-05-26T20:52:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="27" started-at="2018-05-26T20:52:31Z" data-provider="params" finished-at="2018-05-26T20:52:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="330" started-at="2018-05-26T20:52:31Z" data-provider="params" finished-at="2018-05-26T20:52:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setAllEq(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setAllEq" duration-ms="6891" started-at="2018-05-26T20:52:31Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllEq -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="4" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="3" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="6" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="19" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="87" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="1" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="1" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="3" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="14" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="91" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="1" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="1" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="8" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="19" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="69" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="1" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="2" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="3" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="12" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="69" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="1" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="2" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="4" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="14" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="83" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="1" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="1" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="2" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="12" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="106" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="2" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="2" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="4" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="12" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="90" started-at="2018-05-26T20:52:38Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="3" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="2" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="6" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="20" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="86" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="1" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="2" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="4" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="18" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="64" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="1" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="2" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="3" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="11" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDiff(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDiff" duration-ms="60" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDiff -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="4" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="3" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="3" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="10" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="34" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="2" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="2" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="2" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="12" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="35" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="1" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="2" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="3" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="8" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="48" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="2" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="2" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="4" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="8" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="34" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="1" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="1" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="2" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="8" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="34" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="2" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="5" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="3" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="8" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="32" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="1" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="3" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="2" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="10" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="36" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="1" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="2" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="4" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="13" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="50" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="1" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="2" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="3" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="11" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="53" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="1" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="1" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="3" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="7" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setDisj(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setDisj" duration-ms="32" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDisj -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="5" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="3" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="16" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="234" started-at="2018-05-26T20:52:39Z" data-provider="params" finished-at="2018-05-26T20:52:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="3631" started-at="2018-05-26T20:52:40Z" data-provider="params" finished-at="2018-05-26T20:52:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="1" started-at="2018-05-26T20:52:43Z" data-provider="params" finished-at="2018-05-26T20:52:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="2" started-at="2018-05-26T20:52:43Z" data-provider="params" finished-at="2018-05-26T20:52:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="13" started-at="2018-05-26T20:52:43Z" data-provider="params" finished-at="2018-05-26T20:52:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="265" started-at="2018-05-26T20:52:43Z" data-provider="params" finished-at="2018-05-26T20:52:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="4670" started-at="2018-05-26T20:52:44Z" data-provider="params" finished-at="2018-05-26T20:52:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="1" started-at="2018-05-26T20:52:48Z" data-provider="params" finished-at="2018-05-26T20:52:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="2" started-at="2018-05-26T20:52:48Z" data-provider="params" finished-at="2018-05-26T20:52:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="10" started-at="2018-05-26T20:52:48Z" data-provider="params" finished-at="2018-05-26T20:52:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="146" started-at="2018-05-26T20:52:48Z" data-provider="params" finished-at="2018-05-26T20:52:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="3727" started-at="2018-05-26T20:52:48Z" data-provider="params" finished-at="2018-05-26T20:52:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="2" started-at="2018-05-26T20:52:52Z" data-provider="params" finished-at="2018-05-26T20:52:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="3" started-at="2018-05-26T20:52:52Z" data-provider="params" finished-at="2018-05-26T20:52:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="11" started-at="2018-05-26T20:52:52Z" data-provider="params" finished-at="2018-05-26T20:52:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="111" started-at="2018-05-26T20:52:52Z" data-provider="params" finished-at="2018-05-26T20:52:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="2603" started-at="2018-05-26T20:52:52Z" data-provider="params" finished-at="2018-05-26T20:52:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="1" started-at="2018-05-26T20:52:55Z" data-provider="params" finished-at="2018-05-26T20:52:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="2" started-at="2018-05-26T20:52:55Z" data-provider="params" finished-at="2018-05-26T20:52:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="13" started-at="2018-05-26T20:52:55Z" data-provider="params" finished-at="2018-05-26T20:52:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="109" started-at="2018-05-26T20:52:55Z" data-provider="params" finished-at="2018-05-26T20:52:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="3240" started-at="2018-05-26T20:52:55Z" data-provider="params" finished-at="2018-05-26T20:52:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="1" started-at="2018-05-26T20:52:58Z" data-provider="params" finished-at="2018-05-26T20:52:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="2" started-at="2018-05-26T20:52:58Z" data-provider="params" finished-at="2018-05-26T20:52:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="9" started-at="2018-05-26T20:52:58Z" data-provider="params" finished-at="2018-05-26T20:52:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="146" started-at="2018-05-26T20:52:58Z" data-provider="params" finished-at="2018-05-26T20:52:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="3712" started-at="2018-05-26T20:52:58Z" data-provider="params" finished-at="2018-05-26T20:53:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="1" started-at="2018-05-26T20:53:02Z" data-provider="params" finished-at="2018-05-26T20:53:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="3" started-at="2018-05-26T20:53:02Z" data-provider="params" finished-at="2018-05-26T20:53:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="19" started-at="2018-05-26T20:53:02Z" data-provider="params" finished-at="2018-05-26T20:53:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="226" started-at="2018-05-26T20:53:02Z" data-provider="params" finished-at="2018-05-26T20:53:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="3469" started-at="2018-05-26T20:53:02Z" data-provider="params" finished-at="2018-05-26T20:53:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="2" started-at="2018-05-26T20:53:06Z" data-provider="params" finished-at="2018-05-26T20:53:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="3" started-at="2018-05-26T20:53:06Z" data-provider="params" finished-at="2018-05-26T20:53:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="19" started-at="2018-05-26T20:53:06Z" data-provider="params" finished-at="2018-05-26T20:53:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="162" started-at="2018-05-26T20:53:06Z" data-provider="params" finished-at="2018-05-26T20:53:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="3111" started-at="2018-05-26T20:53:06Z" data-provider="params" finished-at="2018-05-26T20:53:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="1" started-at="2018-05-26T20:53:09Z" data-provider="params" finished-at="2018-05-26T20:53:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="2" started-at="2018-05-26T20:53:09Z" data-provider="params" finished-at="2018-05-26T20:53:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="11" started-at="2018-05-26T20:53:09Z" data-provider="params" finished-at="2018-05-26T20:53:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="167" started-at="2018-05-26T20:53:09Z" data-provider="params" finished-at="2018-05-26T20:53:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="4384" started-at="2018-05-26T20:53:09Z" data-provider="params" finished-at="2018-05-26T20:53:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="1" started-at="2018-05-26T20:53:14Z" data-provider="params" finished-at="2018-05-26T20:53:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="3" started-at="2018-05-26T20:53:14Z" data-provider="params" finished-at="2018-05-26T20:53:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="17" started-at="2018-05-26T20:53:14Z" data-provider="params" finished-at="2018-05-26T20:53:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="192" started-at="2018-05-26T20:53:14Z" data-provider="params" finished-at="2018-05-26T20:53:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setInter(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setInter" duration-ms="3573" started-at="2018-05-26T20:53:14Z" data-provider="params" finished-at="2018-05-26T20:53:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInter -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="4" started-at="2018-05-26T20:53:17Z" data-provider="params" finished-at="2018-05-26T20:53:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="7" started-at="2018-05-26T20:53:17Z" data-provider="params" finished-at="2018-05-26T20:53:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="31" started-at="2018-05-26T20:53:17Z" data-provider="params" finished-at="2018-05-26T20:53:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="360" started-at="2018-05-26T20:53:18Z" data-provider="params" finished-at="2018-05-26T20:53:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="8421" started-at="2018-05-26T20:53:18Z" data-provider="params" finished-at="2018-05-26T20:53:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="2" started-at="2018-05-26T20:53:26Z" data-provider="params" finished-at="2018-05-26T20:53:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="3" started-at="2018-05-26T20:53:26Z" data-provider="params" finished-at="2018-05-26T20:53:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="19" started-at="2018-05-26T20:53:26Z" data-provider="params" finished-at="2018-05-26T20:53:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="314" started-at="2018-05-26T20:53:26Z" data-provider="params" finished-at="2018-05-26T20:53:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="7670" started-at="2018-05-26T20:53:27Z" data-provider="params" finished-at="2018-05-26T20:53:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="1" started-at="2018-05-26T20:53:34Z" data-provider="params" finished-at="2018-05-26T20:53:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="3" started-at="2018-05-26T20:53:34Z" data-provider="params" finished-at="2018-05-26T20:53:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="20" started-at="2018-05-26T20:53:34Z" data-provider="params" finished-at="2018-05-26T20:53:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="402" started-at="2018-05-26T20:53:34Z" data-provider="params" finished-at="2018-05-26T20:53:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="7865" started-at="2018-05-26T20:53:35Z" data-provider="params" finished-at="2018-05-26T20:53:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="2" started-at="2018-05-26T20:53:43Z" data-provider="params" finished-at="2018-05-26T20:53:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="3" started-at="2018-05-26T20:53:43Z" data-provider="params" finished-at="2018-05-26T20:53:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="20" started-at="2018-05-26T20:53:43Z" data-provider="params" finished-at="2018-05-26T20:53:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="302" started-at="2018-05-26T20:53:43Z" data-provider="params" finished-at="2018-05-26T20:53:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="7836" started-at="2018-05-26T20:53:43Z" data-provider="params" finished-at="2018-05-26T20:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="2" started-at="2018-05-26T20:53:51Z" data-provider="params" finished-at="2018-05-26T20:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="5" started-at="2018-05-26T20:53:51Z" data-provider="params" finished-at="2018-05-26T20:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="18" started-at="2018-05-26T20:53:51Z" data-provider="params" finished-at="2018-05-26T20:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="322" started-at="2018-05-26T20:53:51Z" data-provider="params" finished-at="2018-05-26T20:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="7834" started-at="2018-05-26T20:53:51Z" data-provider="params" finished-at="2018-05-26T20:53:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="1" started-at="2018-05-26T20:53:59Z" data-provider="params" finished-at="2018-05-26T20:53:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="7" started-at="2018-05-26T20:53:59Z" data-provider="params" finished-at="2018-05-26T20:53:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="24" started-at="2018-05-26T20:53:59Z" data-provider="params" finished-at="2018-05-26T20:53:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="291" started-at="2018-05-26T20:53:59Z" data-provider="params" finished-at="2018-05-26T20:53:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="7721" started-at="2018-05-26T20:53:59Z" data-provider="params" finished-at="2018-05-26T20:54:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="1" started-at="2018-05-26T20:54:07Z" data-provider="params" finished-at="2018-05-26T20:54:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="5" started-at="2018-05-26T20:54:07Z" data-provider="params" finished-at="2018-05-26T20:54:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="25" started-at="2018-05-26T20:54:07Z" data-provider="params" finished-at="2018-05-26T20:54:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="397" started-at="2018-05-26T20:54:07Z" data-provider="params" finished-at="2018-05-26T20:54:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="7475" started-at="2018-05-26T20:54:07Z" data-provider="params" finished-at="2018-05-26T20:54:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="1" started-at="2018-05-26T20:54:15Z" data-provider="params" finished-at="2018-05-26T20:54:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="3" started-at="2018-05-26T20:54:15Z" data-provider="params" finished-at="2018-05-26T20:54:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="22" started-at="2018-05-26T20:54:15Z" data-provider="params" finished-at="2018-05-26T20:54:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="294" started-at="2018-05-26T20:54:15Z" data-provider="params" finished-at="2018-05-26T20:54:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="7620" started-at="2018-05-26T20:54:15Z" data-provider="params" finished-at="2018-05-26T20:54:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="1" started-at="2018-05-26T20:54:23Z" data-provider="params" finished-at="2018-05-26T20:54:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="2" started-at="2018-05-26T20:54:23Z" data-provider="params" finished-at="2018-05-26T20:54:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="17" started-at="2018-05-26T20:54:23Z" data-provider="params" finished-at="2018-05-26T20:54:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="300" started-at="2018-05-26T20:54:23Z" data-provider="params" finished-at="2018-05-26T20:54:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="7956" started-at="2018-05-26T20:54:23Z" data-provider="params" finished-at="2018-05-26T20:54:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="2" started-at="2018-05-26T20:54:31Z" data-provider="params" finished-at="2018-05-26T20:54:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="4" started-at="2018-05-26T20:54:31Z" data-provider="params" finished-at="2018-05-26T20:54:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="25" started-at="2018-05-26T20:54:31Z" data-provider="params" finished-at="2018-05-26T20:54:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="289" started-at="2018-05-26T20:54:31Z" data-provider="params" finished-at="2018-05-26T20:54:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setSubSet(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setSubSet" duration-ms="7293" started-at="2018-05-26T20:54:31Z" data-provider="params" finished-at="2018-05-26T20:54:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSubSet -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="7" started-at="2018-05-26T20:54:39Z" data-provider="params" finished-at="2018-05-26T20:54:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="6" started-at="2018-05-26T20:54:39Z" data-provider="params" finished-at="2018-05-26T20:54:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="18" started-at="2018-05-26T20:54:39Z" data-provider="params" finished-at="2018-05-26T20:54:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="38" started-at="2018-05-26T20:54:39Z" data-provider="params" finished-at="2018-05-26T20:54:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="385" started-at="2018-05-26T20:54:39Z" data-provider="params" finished-at="2018-05-26T20:54:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="1" started-at="2018-05-26T20:54:39Z" data-provider="params" finished-at="2018-05-26T20:54:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="2" started-at="2018-05-26T20:54:39Z" data-provider="params" finished-at="2018-05-26T20:54:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="8" started-at="2018-05-26T20:54:39Z" data-provider="params" finished-at="2018-05-26T20:54:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="26" started-at="2018-05-26T20:54:39Z" data-provider="params" finished-at="2018-05-26T20:54:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="232" started-at="2018-05-26T20:54:39Z" data-provider="params" finished-at="2018-05-26T20:54:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="1" started-at="2018-05-26T20:54:39Z" data-provider="params" finished-at="2018-05-26T20:54:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="3" started-at="2018-05-26T20:54:39Z" data-provider="params" finished-at="2018-05-26T20:54:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="9" started-at="2018-05-26T20:54:39Z" data-provider="params" finished-at="2018-05-26T20:54:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="26" started-at="2018-05-26T20:54:39Z" data-provider="params" finished-at="2018-05-26T20:54:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="211" started-at="2018-05-26T20:54:40Z" data-provider="params" finished-at="2018-05-26T20:54:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="5" started-at="2018-05-26T20:54:40Z" data-provider="params" finished-at="2018-05-26T20:54:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="2" started-at="2018-05-26T20:54:40Z" data-provider="params" finished-at="2018-05-26T20:54:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="7" started-at="2018-05-26T20:54:40Z" data-provider="params" finished-at="2018-05-26T20:54:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="28" started-at="2018-05-26T20:54:40Z" data-provider="params" finished-at="2018-05-26T20:54:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="221" started-at="2018-05-26T20:54:40Z" data-provider="params" finished-at="2018-05-26T20:54:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="1" started-at="2018-05-26T20:54:40Z" data-provider="params" finished-at="2018-05-26T20:54:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="3" started-at="2018-05-26T20:54:40Z" data-provider="params" finished-at="2018-05-26T20:54:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="8" started-at="2018-05-26T20:54:40Z" data-provider="params" finished-at="2018-05-26T20:54:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="31" started-at="2018-05-26T20:54:40Z" data-provider="params" finished-at="2018-05-26T20:54:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="223" started-at="2018-05-26T20:54:40Z" data-provider="params" finished-at="2018-05-26T20:54:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="2" started-at="2018-05-26T20:54:40Z" data-provider="params" finished-at="2018-05-26T20:54:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="2" started-at="2018-05-26T20:54:40Z" data-provider="params" finished-at="2018-05-26T20:54:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="6" started-at="2018-05-26T20:54:40Z" data-provider="params" finished-at="2018-05-26T20:54:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="28" started-at="2018-05-26T20:54:40Z" data-provider="params" finished-at="2018-05-26T20:54:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="205" started-at="2018-05-26T20:54:40Z" data-provider="params" finished-at="2018-05-26T20:54:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="1" started-at="2018-05-26T20:54:40Z" data-provider="params" finished-at="2018-05-26T20:54:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="3" started-at="2018-05-26T20:54:40Z" data-provider="params" finished-at="2018-05-26T20:54:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="7" started-at="2018-05-26T20:54:40Z" data-provider="params" finished-at="2018-05-26T20:54:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="25" started-at="2018-05-26T20:54:41Z" data-provider="params" finished-at="2018-05-26T20:54:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="255" started-at="2018-05-26T20:54:41Z" data-provider="params" finished-at="2018-05-26T20:54:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="1" started-at="2018-05-26T20:54:41Z" data-provider="params" finished-at="2018-05-26T20:54:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="2" started-at="2018-05-26T20:54:41Z" data-provider="params" finished-at="2018-05-26T20:54:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="7" started-at="2018-05-26T20:54:41Z" data-provider="params" finished-at="2018-05-26T20:54:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="28" started-at="2018-05-26T20:54:41Z" data-provider="params" finished-at="2018-05-26T20:54:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="225" started-at="2018-05-26T20:54:41Z" data-provider="params" finished-at="2018-05-26T20:54:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="1" started-at="2018-05-26T20:54:41Z" data-provider="params" finished-at="2018-05-26T20:54:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="2" started-at="2018-05-26T20:54:41Z" data-provider="params" finished-at="2018-05-26T20:54:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="6" started-at="2018-05-26T20:54:41Z" data-provider="params" finished-at="2018-05-26T20:54:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="24" started-at="2018-05-26T20:54:41Z" data-provider="params" finished-at="2018-05-26T20:54:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="206" started-at="2018-05-26T20:54:41Z" data-provider="params" finished-at="2018-05-26T20:54:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="1" started-at="2018-05-26T20:54:41Z" data-provider="params" finished-at="2018-05-26T20:54:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="3" started-at="2018-05-26T20:54:41Z" data-provider="params" finished-at="2018-05-26T20:54:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="7" started-at="2018-05-26T20:54:41Z" data-provider="params" finished-at="2018-05-26T20:54:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="34" started-at="2018-05-26T20:54:41Z" data-provider="params" finished-at="2018-05-26T20:54:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="setUnion(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="setUnion" duration-ms="213" started-at="2018-05-26T20:54:41Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUnion -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="3" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="9" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="24" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="16" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="26" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="2" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="5" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="16" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="18" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="25" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="1" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="4" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="17" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="13" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="20" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="2" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="3" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="14" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="8" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="19" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="2" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="3" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="14" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="7" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="15" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="2" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="3" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="14" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="7" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="32" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="2" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="4" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="12" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="13" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="24" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="2" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="3" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="18" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="8" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="10" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="1" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="3" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="10" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="7" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="12" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="2" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="3" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="9" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="6" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
        <test-method status="PASS" signature="testBOOL_SUM(int, int)[pri:0, instance:org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets@27d6467]" name="testBOOL_SUM" duration-ms="13" started-at="2018-05-26T20:54:42Z" data-provider="params" finished-at="2018-05-26T20:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBOOL_SUM -->
      </class> <!-- org.chocosolver.solver.constraints.checker.fmk.Test_Bools_Sets -->
      <class name="org.chocosolver.solver.variables.fast.BitsetIntVarImplTest">
        <test-method status="PASS" signature="testGetDomainSize()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testGetDomainSize" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDomainSize -->
        <test-method status="PASS" signature="testGetLB()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testGetLB" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLB -->
        <test-method status="PASS" signature="testGetRangeIterator()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testGetRangeIterator" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRangeIterator -->
        <test-method status="PASS" signature="testGetTypeAndKind()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testGetTypeAndKind" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTypeAndKind -->
        <test-method status="PASS" signature="testGetUB()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testGetUB" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUB -->
        <test-method status="PASS" signature="testGetValueIterator()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testGetValueIterator" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetValueIterator -->
        <test-method status="PASS" signature="testHasEnumeratedDomain()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testHasEnumeratedDomain" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasEnumeratedDomain -->
        <test-method status="PASS" signature="testJL1()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testJL1" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL1 -->
        <test-method status="PASS" signature="testJL2()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testJL2" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL2 -->
        <test-method status="PASS" signature="testJL3()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testJL3" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL3 -->
        <test-method status="PASS" signature="testNextOut1()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testNextOut1" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNextOut1 -->
        <test-method status="PASS" signature="testNextOut2()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testNextOut2" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNextOut2 -->
        <test-method status="PASS" signature="testNextOut3()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testNextOut3" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNextOut3 -->
        <test-method status="PASS" signature="testNextValue()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testNextValue" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNextValue -->
        <test-method status="PASS" signature="testPreviousOut1()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testPreviousOut1" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreviousOut1 -->
        <test-method status="PASS" signature="testPreviousOut2()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testPreviousOut2" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreviousOut2 -->
        <test-method status="PASS" signature="testPreviousValue()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testPreviousValue" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreviousValue -->
        <test-method status="PASS" signature="testPreviousOut3()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testPreviousOut3" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreviousOut3 -->
        <test-method status="PASS" signature="testRemVals0()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals0" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals0 -->
        <test-method status="PASS" signature="testRemVals1()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals1" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals1 -->
        <test-method status="PASS" signature="testRemVals11()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals11" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals11 -->
        <test-method status="PASS" signature="testRemVals12()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals12" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals12 -->
        <test-method status="PASS" signature="testRemVals13()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals13" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals13 -->
        <test-method status="PASS" signature="testRemVals14()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals14" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals14 -->
        <test-method status="PASS" signature="testRemVals15()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals15" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, X = {2,5..6,8..9}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals15 -->
        <test-method status="PASS" signature="testRemVals22()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals22" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals22 -->
        <test-method status="PASS" signature="testRemVals21()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals21" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals21 -->
        <test-method status="PASS" signature="testRemVals3()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals3" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals3 -->
        <test-method status="PASS" signature="testRemVals31()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals31" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals31 -->
        <test-method status="PASS" signature="testRemVals41()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals41" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals41 -->
        <test-method status="PASS" signature="testRemVals5()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals5" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, X = {-1..1}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals5 -->
        <test-method status="PASS" signature="testRemVals42()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals42" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals42 -->
        <test-method status="PASS" signature="testRemVals6()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals6" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals6 -->
        <test-method status="PASS" signature="testRemValsBut0()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut0" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, X = {-3..3}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut0 -->
        <test-method status="PASS" signature="testRemVals7()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemVals7" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals7 -->
        <test-method status="PASS" signature="testRemValsBut1()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut1" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut1 -->
        <test-method status="PASS" signature="testRemValsBut11()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut11" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut11 -->
        <test-method status="PASS" signature="testRemValsBut12()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut12" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut12 -->
        <test-method status="PASS" signature="testRemValsBut13()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut13" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut13 -->
        <test-method status="PASS" signature="testRemValsBut15()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut15" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, X = {2,5..6,8..9}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut15 -->
        <test-method status="PASS" signature="testRemValsBut14()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut14" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut14 -->
        <test-method status="PASS" signature="testRemValsBut21()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut21" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut21 -->
        <test-method status="PASS" signature="testRemValsBut41()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut41" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut41 -->
        <test-method status="PASS" signature="testRemValsBut3()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut3" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut3 -->
        <test-method status="PASS" signature="testRemValsBut22()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut22" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut22 -->
        <test-method status="PASS" signature="testRemValsBut42()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut42" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut42 -->
        <test-method status="PASS" signature="testRemValsBut5()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut5" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, X = {-1..1}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut5 -->
        <test-method status="PASS" signature="testRemValsBut6()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut6" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut6 -->
        <test-method status="PASS" signature="testRemValsBut7()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut7" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, X = {-27,-25,-20}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut7 -->
        <test-method status="PASS" signature="testRemValsBut8()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut8" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut8 -->
        <test-method status="PASS" signature="testRemoveInterval()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemoveInterval" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveInterval -->
        <test-method status="PASS" signature="testRemValsBut9()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemValsBut9" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut9 -->
        <test-method status="PASS" signature="testUpdBounds1()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdBounds1" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds1 -->
        <test-method status="PASS" signature="testRemoveValue()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testRemoveValue" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValue -->
        <test-method status="PASS" signature="testUpdBounds10()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdBounds10" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, X = {-3,0,3}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds10 -->
        <test-method status="PASS" signature="testUpdBounds11()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdBounds11" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, X = {5..6,8..9}) : new lower bound is greater than upper bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds11 -->
        <test-method status="PASS" signature="testUpdBounds3()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdBounds3" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds3 -->
        <test-method status="PASS" signature="testUpdBounds2()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdBounds2" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds2 -->
        <test-method status="PASS" signature="testUpdBounds4()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdBounds4" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds4 -->
        <test-method status="PASS" signature="testUpdBounds5()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdBounds5" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, X = {-3..3}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds5 -->
        <test-method status="PASS" signature="testUpdBounds7()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdBounds7" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds7 -->
        <test-method status="PASS" signature="testUpdBounds6()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdBounds6" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds6 -->
        <test-method status="PASS" signature="testUpdBounds8()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdBounds8" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds8 -->
        <test-method status="PASS" signature="testUpdBounds9()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdBounds9" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds9 -->
        <test-method status="PASS" signature="testUpdateLowerBound()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdateLowerBound" duration-ms="1" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateLowerBound -->
        <test-method status="PASS" signature="testUpdateUpperBound()[pri:0, instance:org.chocosolver.solver.variables.fast.BitsetIntVarImplTest@738ed8f5]" name="testUpdateUpperBound" duration-ms="0" started-at="2018-05-26T20:58:43Z" finished-at="2018-05-26T20:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateUpperBound -->
      </class> <!-- org.chocosolver.solver.variables.fast.BitsetIntVarImplTest -->
      <class name="org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest">
        <test-method status="PASS" signature="testAllFalse(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testAllFalse" duration-ms="1" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@22d61fa7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllFalse -->
        <test-method status="PASS" signature="testAllFalse(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testAllFalse" duration-ms="1" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@2989e190]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllFalse -->
        <test-method status="PASS" signature="testAllFalse(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testAllFalse" duration-ms="0" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@22d61fa7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllFalse -->
        <test-method status="PASS" signature="testAllFalse(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testAllFalse" duration-ms="1" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@2989e190]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllFalse -->
        <test-method status="PASS" signature="testDifferentDomains(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testDifferentDomains" duration-ms="1" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@5440942]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDifferentDomains -->
        <test-method status="PASS" signature="testDifferentDomains(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testDifferentDomains" duration-ms="1" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@5440942]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDifferentDomains -->
        <test-method status="PASS" signature="testDifferentDomains(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testDifferentDomains" duration-ms="0" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@18aa9b83]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDifferentDomains -->
        <test-method status="PASS" signature="testDifferentDomains(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testDifferentDomains" duration-ms="0" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@18aa9b83]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDifferentDomains -->
        <test-method status="PASS" signature="testEmptyArray(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testEmptyArray" duration-ms="1" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@22ce83d6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyArray -->
        <test-method status="PASS" signature="testEmptyArray(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testEmptyArray" duration-ms="1" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@22ce83d6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyArray -->
        <test-method status="PASS" signature="testEmptyArray(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testEmptyArray" duration-ms="0" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@6e74628f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyArray -->
        <test-method status="PASS" signature="testEmptyArray(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testEmptyArray" duration-ms="0" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@6e74628f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyArray -->
        <test-method status="PASS" signature="testInstantiatedIndex(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testInstantiatedIndex" duration-ms="1" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@47338b8b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInstantiatedIndex -->
        <test-method status="PASS" signature="testInstantiatedIndex(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testInstantiatedIndex" duration-ms="0" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@27afeede]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInstantiatedIndex -->
        <test-method status="PASS" signature="testInstantiatedIndex(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testInstantiatedIndex" duration-ms="1" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@47338b8b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInstantiatedIndex -->
        <test-method status="PASS" signature="testInstantiatedIndex(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testInstantiatedIndex" duration-ms="0" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@27afeede]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInstantiatedIndex -->
        <test-method status="PASS" signature="testNominal(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testNominal" duration-ms="1" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@5ddc735b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testNominal(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testNominal" duration-ms="0" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@2e042c93]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testNominal(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testNominal" duration-ms="1" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@5ddc735b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testNominal(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testNominal" duration-ms="0" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@2e042c93]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testOutOfBoundsKO(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testOutOfBoundsKO" duration-ms="1" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@4358797d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOutOfBoundsKO -->
        <test-method status="PASS" signature="testOutOfBoundsKO(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testOutOfBoundsKO" duration-ms="0" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@4cb7b531]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOutOfBoundsKO -->
        <test-method status="PASS" signature="testOutOfBoundsKO(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testOutOfBoundsKO" duration-ms="1" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@4358797d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOutOfBoundsKO -->
        <test-method status="PASS" signature="testOutOfBoundsKO(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testOutOfBoundsKO" duration-ms="0" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@4cb7b531]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOutOfBoundsKO -->
        <test-method status="PASS" signature="testOutOfBoundsOK(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testOutOfBoundsOK" duration-ms="1" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@724f5157]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOutOfBoundsOK -->
        <test-method status="PASS" signature="testOutOfBoundsOK(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testOutOfBoundsOK" duration-ms="1" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@724f5157]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOutOfBoundsOK -->
        <test-method status="PASS" signature="testOutOfBoundsOK(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testOutOfBoundsOK" duration-ms="0" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@391dfe82]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOutOfBoundsOK -->
        <test-method status="PASS" signature="testOutOfBoundsOK(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testOutOfBoundsOK" duration-ms="1" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@391dfe82]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOutOfBoundsOK -->
        <test-method status="PASS" signature="testTwoTrue(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testTwoTrue" duration-ms="1" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@159e8432]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwoTrue -->
        <test-method status="PASS" signature="testTwoTrue(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testTwoTrue" duration-ms="0" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@773faae8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwoTrue -->
        <test-method status="PASS" signature="testTwoTrue(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testTwoTrue" duration-ms="0" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@773faae8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwoTrue -->
        <test-method status="PASS" signature="testTwoTrue(boolean, org.chocosolver.solver.Settings)[pri:0, instance:org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest@6958d5d0]" name="testTwoTrue" duration-ms="0" started-at="2018-05-26T21:05:54Z" data-provider="boundsAndViews" finished-at="2018-05-26T21:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.chocosolver.solver.DefaultSettings@159e8432]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwoTrue -->
      </class> <!-- org.chocosolver.solver.constraints.nary.BoolsIntChannelingTest -->
      <class name="org.chocosolver.solver.constraints.nary.MinMaxTest">
        <test-method status="PASS" signature="testBools(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testBools" duration-ms="3" started-at="2018-05-26T20:57:55Z" data-provider="params" finished-at="2018-05-26T20:57:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBools -->
        <test-method status="PASS" signature="testBools(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testBools" duration-ms="6" started-at="2018-05-26T20:57:55Z" data-provider="params" finished-at="2018-05-26T20:57:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBools -->
        <test-method status="PASS" signature="testBools(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testBools" duration-ms="15" started-at="2018-05-26T20:57:55Z" data-provider="params" finished-at="2018-05-26T20:57:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBools -->
        <test-method status="PASS" signature="testBools(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testBools" duration-ms="1" started-at="2018-05-26T20:57:55Z" data-provider="params" finished-at="2018-05-26T20:57:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBools -->
        <test-method status="PASS" signature="testBoolsGG(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testBoolsGG" duration-ms="2" started-at="2018-05-26T20:57:55Z" data-provider="params" finished-at="2018-05-26T20:57:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoolsGG -->
        <test-method status="PASS" signature="testBoolsGG(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testBoolsGG" duration-ms="1" started-at="2018-05-26T20:57:55Z" data-provider="params" finished-at="2018-05-26T20:57:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoolsGG -->
        <test-method status="PASS" signature="testBoolsGG(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testBoolsGG" duration-ms="1" started-at="2018-05-26T20:57:55Z" data-provider="params" finished-at="2018-05-26T20:57:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoolsGG -->
        <test-method status="PASS" signature="testBoolsGG(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testBoolsGG" duration-ms="1" started-at="2018-05-26T20:57:55Z" data-provider="params" finished-at="2018-05-26T20:57:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoolsGG -->
        <test-method status="PASS" signature="testMax1()[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testMax1" duration-ms="2" started-at="2018-05-26T20:57:55Z" finished-at="2018-05-26T20:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax1 -->
        <test-method status="PASS" signature="testMax2()[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testMax2" duration-ms="77" started-at="2018-05-26T20:57:55Z" finished-at="2018-05-26T20:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax2 -->
        <test-method status="PASS" signature="testMax3()[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testMax3" duration-ms="2" started-at="2018-05-26T20:57:55Z" finished-at="2018-05-26T20:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax3 -->
        <test-method status="PASS" signature="testMax30()[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testMax30" duration-ms="16502" started-at="2018-05-26T20:57:55Z" finished-at="2018-05-26T20:58:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax30 -->
        <test-method status="PASS" signature="testMin1()[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testMin1" duration-ms="1" started-at="2018-05-26T20:58:11Z" finished-at="2018-05-26T20:58:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMin1 -->
        <test-method status="PASS" signature="testMin2()[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testMin2" duration-ms="39" started-at="2018-05-26T20:58:11Z" finished-at="2018-05-26T20:58:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMin2 -->
        <test-method status="PASS" signature="testMin3()[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testMin3" duration-ms="0" started-at="2018-05-26T20:58:11Z" finished-at="2018-05-26T20:58:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMin3 -->
        <test-method status="PASS" signature="testMin30()[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testMin30" duration-ms="15421" started-at="2018-05-26T20:58:11Z" finished-at="2018-05-26T20:58:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMin30 -->
        <test-method status="PASS" signature="testNoSolution(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testNoSolution" duration-ms="1" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoSolution -->
        <test-method status="PASS" signature="testNoSolution(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testNoSolution" duration-ms="1" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoSolution -->
        <test-method status="PASS" signature="testNoSolution(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testNoSolution" duration-ms="0" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoSolution -->
        <test-method status="PASS" signature="testNoSolution(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testNoSolution" duration-ms="1" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoSolution -->
        <test-method status="PASS" signature="testNoSolution2(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testNoSolution2" duration-ms="1" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoSolution2 -->
        <test-method status="PASS" signature="testNoSolution2(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testNoSolution2" duration-ms="1" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoSolution2 -->
        <test-method status="PASS" signature="testNoSolution2(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testNoSolution2" duration-ms="0" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoSolution2 -->
        <test-method status="PASS" signature="testNoSolution2(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testNoSolution2" duration-ms="0" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoSolution2 -->
        <test-method status="PASS" signature="testNominal(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testNominal" duration-ms="9" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testNominal(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testNominal" duration-ms="7" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testNominal(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testNominal" duration-ms="4" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testNominal(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testNominal" duration-ms="3" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testSameVariableNoSolution(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testSameVariableNoSolution" duration-ms="1" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSameVariableNoSolution -->
        <test-method status="PASS" signature="testSameVariableNoSolution(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testSameVariableNoSolution" duration-ms="0" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSameVariableNoSolution -->
        <test-method status="PASS" signature="testSameVariableNoSolution(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testSameVariableNoSolution" duration-ms="1" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSameVariableNoSolution -->
        <test-method status="PASS" signature="testSameVariableNoSolution(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testSameVariableNoSolution" duration-ms="0" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSameVariableNoSolution -->
        <test-method status="PASS" signature="testSameVariableSolution(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testSameVariableSolution" duration-ms="1" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSameVariableSolution -->
        <test-method status="PASS" signature="testSameVariableSolution(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testSameVariableSolution" duration-ms="1" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSameVariableSolution -->
        <test-method status="PASS" signature="testSameVariableSolution(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testSameVariableSolution" duration-ms="0" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSameVariableSolution -->
        <test-method status="PASS" signature="testZero(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testZero" duration-ms="1" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testZero -->
        <test-method status="PASS" signature="testSameVariableSolution(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testSameVariableSolution" duration-ms="0" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSameVariableSolution -->
        <test-method status="PASS" signature="testZero(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testZero" duration-ms="0" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testZero -->
        <test-method status="PASS" signature="testZero(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testZero" duration-ms="0" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testZero -->
        <test-method status="PASS" signature="testZero(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testZero" duration-ms="0" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testZero -->
        <test-method status="PASS" signature="testZeroElements(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testZeroElements" duration-ms="1" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
	at org.chocosolver.solver.constraints.nary.min_max.PropMin.<init>(PropMin.java:33)
	at org.chocosolver.solver.constraints.IIntConstraintFactory.min(IIntConstraintFactory.java:1506)
	at org.chocosolver.solver.constraints.nary.MinMaxTest.testZeroElements(MinMaxTest.java:268)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testZeroElements -->
        <test-method status="PASS" signature="testZeroElements(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testZeroElements" duration-ms="1" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
	at org.chocosolver.solver.constraints.nary.min_max.PropMin.<init>(PropMin.java:33)
	at org.chocosolver.solver.constraints.IIntConstraintFactory.min(IIntConstraintFactory.java:1506)
	at org.chocosolver.solver.constraints.nary.MinMaxTest.testZeroElements(MinMaxTest.java:268)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testZeroElements -->
        <test-method status="PASS" signature="testZeroElements(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testZeroElements" duration-ms="0" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
	at org.chocosolver.solver.constraints.nary.min_max.PropMax.<init>(PropMax.java:33)
	at org.chocosolver.solver.constraints.IIntConstraintFactory.max(IIntConstraintFactory.java:1461)
	at org.chocosolver.solver.constraints.nary.MinMaxTest.testZeroElements(MinMaxTest.java:270)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testZeroElements -->
        <test-method status="PASS" signature="testZeroElements(boolean, boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.MinMaxTest@13018f00]" name="testZeroElements" duration-ms="1" started-at="2018-05-26T20:58:27Z" data-provider="params" finished-at="2018-05-26T20:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
	at org.chocosolver.solver.constraints.nary.min_max.PropMax.<init>(PropMax.java:33)
	at org.chocosolver.solver.constraints.IIntConstraintFactory.max(IIntConstraintFactory.java:1461)
	at org.chocosolver.solver.constraints.nary.MinMaxTest.testZeroElements(MinMaxTest.java:270)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testZeroElements -->
      </class> <!-- org.chocosolver.solver.constraints.nary.MinMaxTest -->
      <class name="org.chocosolver.solver.constraints.binary.DistanceEQTest">
        <test-method status="PASS" signature="test1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.DistanceEQTest@7d07e04e]" name="test1" duration-ms="538" started-at="2018-05-26T20:57:52Z" data-provider="params" finished-at="2018-05-26T20:57:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.DistanceEQTest@7d07e04e]" name="test1" duration-ms="308" started-at="2018-05-26T20:57:53Z" data-provider="params" finished-at="2018-05-26T20:57:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
      </class> <!-- org.chocosolver.solver.constraints.binary.DistanceEQTest -->
      <class name="org.chocosolver.solver.constraints.binary.DistanceNQTest">
        <test-method status="PASS" signature="test1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.DistanceNQTest@21dd9203]" name="test1" duration-ms="691" started-at="2018-05-26T21:00:18Z" data-provider="params" finished-at="2018-05-26T21:00:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.DistanceNQTest@21dd9203]" name="test1" duration-ms="1048" started-at="2018-05-26T21:00:19Z" data-provider="params" finished-at="2018-05-26T21:00:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
      </class> <!-- org.chocosolver.solver.constraints.binary.DistanceNQTest -->
      <class name="org.chocosolver.solver.constraints.set.IntersectionTest">
        <test-method status="PASS" signature="testDifferentDomains()[pri:0, instance:org.chocosolver.solver.constraints.set.IntersectionTest@4136b193]" name="testDifferentDomains" duration-ms="1" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDifferentDomains -->
        <test-method status="PASS" signature="testFuzzIdempotent()[pri:0, instance:org.chocosolver.solver.constraints.set.IntersectionTest@4136b193]" name="testFuzzIdempotent" duration-ms="50" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFuzzIdempotent -->
        <test-method status="PASS" signature="testFuzzIdempotentAndBoundConsistent()[pri:0, instance:org.chocosolver.solver.constraints.set.IntersectionTest@4136b193]" name="testFuzzIdempotentAndBoundConsistent" duration-ms="94" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFuzzIdempotentAndBoundConsistent -->
        <test-method status="PASS" signature="testIntersectToVars()[pri:0, instance:org.chocosolver.solver.constraints.set.IntersectionTest@4136b193]" name="testIntersectToVars" duration-ms="1" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIntersectToVars -->
        <test-method status="PASS" signature="testIntersectToVarsBoundConsistent()[pri:0, instance:org.chocosolver.solver.constraints.set.IntersectionTest@4136b193]" name="testIntersectToVarsBoundConsistent" duration-ms="0" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIntersectToVarsBoundConsistent -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.IntersectionTest@4136b193]" name="testNominal" duration-ms="1726" started-at="2018-05-26T21:09:49Z" finished-at="2018-05-26T21:09:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testNominalBoundConsistent()[pri:0, instance:org.chocosolver.solver.constraints.set.IntersectionTest@4136b193]" name="testNominalBoundConsistent" duration-ms="1438" started-at="2018-05-26T21:09:51Z" finished-at="2018-05-26T21:09:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominalBoundConsistent -->
        <test-method status="PASS" signature="testVarsToIntersect()[pri:0, instance:org.chocosolver.solver.constraints.set.IntersectionTest@4136b193]" name="testVarsToIntersect" duration-ms="36" started-at="2018-05-26T21:09:52Z" finished-at="2018-05-26T21:09:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVarsToIntersect -->
        <test-method status="PASS" signature="testVarsToIntersectBoundConsistent()[pri:0, instance:org.chocosolver.solver.constraints.set.IntersectionTest@4136b193]" name="testVarsToIntersectBoundConsistent" duration-ms="28" started-at="2018-05-26T21:09:52Z" finished-at="2018-05-26T21:09:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVarsToIntersectBoundConsistent -->
      </class> <!-- org.chocosolver.solver.constraints.set.IntersectionTest -->
      <class name="org.chocosolver.solver.constraints.nary.BottleneckTest">
        <test-method status="PASS" signature="testStynes1()[pri:0, instance:org.chocosolver.solver.constraints.nary.BottleneckTest@4c3d72fd]" name="testStynes1" duration-ms="5072" started-at="2018-05-26T20:46:43Z" finished-at="2018-05-26T20:46:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStynes1 -->
        <test-method status="PASS" signature="testStynes2()[pri:0, instance:org.chocosolver.solver.constraints.nary.BottleneckTest@4c3d72fd]" name="testStynes2" duration-ms="1236" started-at="2018-05-26T20:46:48Z" finished-at="2018-05-26T20:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStynes2 -->
      </class> <!-- org.chocosolver.solver.constraints.nary.BottleneckTest -->
      <class name="org.chocosolver.solver.constraints.ternary.DistanceLTTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DistanceLTTest@544e6b]" name="test1" duration-ms="380" started-at="2018-05-26T20:56:18Z" finished-at="2018-05-26T20:56:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DistanceLTTest@544e6b]" name="test2" duration-ms="1" started-at="2018-05-26T20:56:20Z" finished-at="2018-05-26T20:56:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
      </class> <!-- org.chocosolver.solver.constraints.ternary.DistanceLTTest -->
      <class name="org.chocosolver.solver.constraints.nary.CircuitTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.CircuitTest@78f4d15d]" name="test1" duration-ms="2" started-at="2018-05-26T21:05:50Z" finished-at="2018-05-26T21:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.CircuitTest@78f4d15d]" name="test2" duration-ms="1" started-at="2018-05-26T21:05:50Z" finished-at="2018-05-26T21:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.solver.constraints.nary.CircuitTest@78f4d15d]" name="test3" duration-ms="1" started-at="2018-05-26T21:05:50Z" finished-at="2018-05-26T21:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test4()[pri:0, instance:org.chocosolver.solver.constraints.nary.CircuitTest@78f4d15d]" name="test4" duration-ms="110" started-at="2018-05-26T21:05:50Z" finished-at="2018-05-26T21:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
      </class> <!-- org.chocosolver.solver.constraints.nary.CircuitTest -->
      <class name="org.chocosolver.solver.constraints.set.MemberSetTest">
        <test-method status="PASS" signature="testJL253_bound()[pri:0, instance:org.chocosolver.solver.constraints.set.MemberSetTest@143fe09c]" name="testJL253_bound" duration-ms="775" started-at="2018-05-26T21:10:02Z" finished-at="2018-05-26T21:10:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL253_bound -->
        <test-method status="PASS" signature="testJL253_enum()[pri:0, instance:org.chocosolver.solver.constraints.set.MemberSetTest@143fe09c]" name="testJL253_enum" duration-ms="1060" started-at="2018-05-26T21:10:03Z" finished-at="2018-05-26T21:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL253_enum -->
      </class> <!-- org.chocosolver.solver.constraints.set.MemberSetTest -->
      <class name="org.chocosolver.solver.constraints.nary.PathTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.PathTest@581d5b33]" name="test1" duration-ms="5" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.PathTest@581d5b33]" name="test2" duration-ms="3" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test2wrong()[pri:0, instance:org.chocosolver.solver.constraints.nary.PathTest@581d5b33]" name="test2wrong" duration-ms="1" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2wrong -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.solver.constraints.nary.PathTest@581d5b33]" name="test3" duration-ms="1" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test4()[pri:0, instance:org.chocosolver.solver.constraints.nary.PathTest@581d5b33]" name="test4" duration-ms="1" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4sub()[pri:0, instance:org.chocosolver.solver.constraints.nary.PathTest@581d5b33]" name="test4sub" duration-ms="1" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4sub -->
        <test-method status="PASS" signature="test4sub2()[pri:0, instance:org.chocosolver.solver.constraints.nary.PathTest@581d5b33]" name="test4sub2" duration-ms="1" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4sub2 -->
        <test-method status="PASS" signature="test5()[pri:0, instance:org.chocosolver.solver.constraints.nary.PathTest@581d5b33]" name="test5" duration-ms="0" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
      </class> <!-- org.chocosolver.solver.constraints.nary.PathTest -->
      <class name="org.chocosolver.solver.variables.fast.IntervalIntVarImplTest">
        <test-method status="PASS" signature="testGetDomainSize()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testGetDomainSize" duration-ms="1" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDomainSize -->
        <test-method status="PASS" signature="testGetLB()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testGetLB" duration-ms="1" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLB -->
        <test-method status="PASS" signature="testGetRangeIterator()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testGetRangeIterator" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRangeIterator -->
        <test-method status="PASS" signature="testGetTypeAndKind()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testGetTypeAndKind" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTypeAndKind -->
        <test-method status="PASS" signature="testGetUB()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testGetUB" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUB -->
        <test-method status="PASS" signature="testGetValueIterator()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testGetValueIterator" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetValueIterator -->
        <test-method status="PASS" signature="testHasEnumeratedDomain()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testHasEnumeratedDomain" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasEnumeratedDomain -->
        <test-method status="PASS" signature="testNextOut1()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testNextOut1" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNextOut1 -->
        <test-method status="PASS" signature="testNextOut2()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testNextOut2" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNextOut2 -->
        <test-method status="PASS" signature="testNextValue()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testNextValue" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNextValue -->
        <test-method status="PASS" signature="testPreviousOut1()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testPreviousOut1" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreviousOut1 -->
        <test-method status="PASS" signature="testPreviousOut2()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testPreviousOut2" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreviousOut2 -->
        <test-method status="PASS" signature="testPreviousValue()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testPreviousValue" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreviousValue -->
        <test-method status="PASS" signature="testRemVals22()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemVals22" duration-ms="1" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals22 -->
        <test-method status="PASS" signature="testRemVals1()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemVals1" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals1 -->
        <test-method status="PASS" signature="testRemVals21()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemVals21" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals21 -->
        <test-method status="PASS" signature="testRemVals3()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemVals3" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals3 -->
        <test-method status="PASS" signature="testRemVals31()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemVals31" duration-ms="1" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals31 -->
        <test-method status="PASS" signature="testRemVals42()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemVals42" duration-ms="1" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals42 -->
        <test-method status="PASS" signature="testRemVals41()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemVals41" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals41 -->
        <test-method status="PASS" signature="testRemVals5()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemVals5" duration-ms="1" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, X = [-1,1]) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemVals5 -->
        <test-method status="PASS" signature="testRemValsBut1()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemValsBut1" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut1 -->
        <test-method status="PASS" signature="testRemValsBut21()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemValsBut21" duration-ms="1" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut21 -->
        <test-method status="PASS" signature="testRemValsBut22()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemValsBut22" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, X = [-3,3]) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut22 -->
        <test-method status="PASS" signature="testRemValsBut3()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemValsBut3" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut3 -->
        <test-method status="PASS" signature="testRemValsBut31()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemValsBut31" duration-ms="1" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, X = [-3,3]) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut31 -->
        <test-method status="PASS" signature="testRemValsBut41()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemValsBut41" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut41 -->
        <test-method status="PASS" signature="testRemValsBut42()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemValsBut42" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut42 -->
        <test-method status="PASS" signature="testRemValsBut8()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemValsBut8" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut8 -->
        <test-method status="PASS" signature="testRemoveInterval()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemoveInterval" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveInterval -->
        <test-method status="PASS" signature="testRemValsBut9()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemValsBut9" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemValsBut9 -->
        <test-method status="PASS" signature="testUpdBounds1()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testUpdBounds1" duration-ms="1" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds1 -->
        <test-method status="PASS" signature="testRemoveValue()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testRemoveValue" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValue -->
        <test-method status="PASS" signature="testUpdBounds2()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testUpdBounds2" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds2 -->
        <test-method status="PASS" signature="testUpdBounds3()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testUpdBounds3" duration-ms="1" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds3 -->
        <test-method status="PASS" signature="testUpdBounds4()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testUpdBounds4" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds4 -->
        <test-method status="PASS" signature="testUpdBounds5()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testUpdBounds5" duration-ms="1" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (Null, X = [-3,3]) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdBounds5 -->
        <test-method status="PASS" signature="testUpdateLowerBound()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testUpdateLowerBound" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateLowerBound -->
        <test-method status="PASS" signature="testUpdateUpperBound()[pri:0, instance:org.chocosolver.solver.variables.fast.IntervalIntVarImplTest@1cfb7450]" name="testUpdateUpperBound" duration-ms="0" started-at="2018-05-26T21:00:17Z" finished-at="2018-05-26T21:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateUpperBound -->
      </class> <!-- org.chocosolver.solver.variables.fast.IntervalIntVarImplTest -->
      <class name="org.chocosolver.solver.variables.MaxViewTest">
        <test-method status="PASS" signature="testMax1()[pri:0, instance:org.chocosolver.solver.variables.MaxViewTest@6baee63b]" name="testMax1" duration-ms="1754" started-at="2018-05-26T21:00:52Z" finished-at="2018-05-26T21:00:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax1 -->
        <test-method status="PASS" signature="testMax2()[pri:0, instance:org.chocosolver.solver.variables.MaxViewTest@6baee63b]" name="testMax2" duration-ms="10698" started-at="2018-05-26T21:00:54Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax2 -->
      </class> <!-- org.chocosolver.solver.variables.MaxViewTest -->
      <class name="org.chocosolver.solver.constraints.nary.CumulativeTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.CumulativeTest@259c6ab8]" name="test1" duration-ms="196" started-at="2018-05-26T20:51:07Z" finished-at="2018-05-26T20:51:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.CumulativeTest@259c6ab8]" name="test2" duration-ms="68" started-at="2018-05-26T20:51:07Z" finished-at="2018-05-26T20:51:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.solver.constraints.nary.CumulativeTest@259c6ab8]" name="test3" duration-ms="66" started-at="2018-05-26T20:51:07Z" finished-at="2018-05-26T20:51:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test4()[pri:0, instance:org.chocosolver.solver.constraints.nary.CumulativeTest@259c6ab8]" name="test4" duration-ms="31" started-at="2018-05-26T20:51:07Z" finished-at="2018-05-26T20:51:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test5()[pri:0, instance:org.chocosolver.solver.constraints.nary.CumulativeTest@259c6ab8]" name="test5" duration-ms="79" started-at="2018-05-26T20:51:07Z" finished-at="2018-05-26T20:51:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="test6()[pri:0, instance:org.chocosolver.solver.constraints.nary.CumulativeTest@259c6ab8]" name="test6" duration-ms="1103" started-at="2018-05-26T20:51:07Z" finished-at="2018-05-26T20:51:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method status="PASS" signature="testDur0()[pri:0, instance:org.chocosolver.solver.constraints.nary.CumulativeTest@259c6ab8]" name="testDur0" duration-ms="1" started-at="2018-05-26T20:51:08Z" finished-at="2018-05-26T20:51:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDur0 -->
        <test-method status="PASS" signature="testMed()[pri:0, instance:org.chocosolver.solver.constraints.nary.CumulativeTest@259c6ab8]" name="testMed" duration-ms="3939" started-at="2018-05-26T20:51:08Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMed -->
      </class> <!-- org.chocosolver.solver.constraints.nary.CumulativeTest -->
      <class name="org.chocosolver.solver.constraints.checker.consistency.TestConsistency">
        <test-method status="PASS" signature="testABSOLUTE()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testABSOLUTE" duration-ms="9075" started-at="2018-05-26T20:46:49Z" finished-at="2018-05-26T20:46:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testABSOLUTE -->
        <test-method status="PASS" signature="testALLDIFFERENT()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testALLDIFFERENT" duration-ms="7571" started-at="2018-05-26T20:46:58Z" finished-at="2018-05-26T20:47:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testALLDIFFERENT -->
        <test-method status="PASS" signature="testALLDIFFERENTBC()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testALLDIFFERENTBC" duration-ms="11382" started-at="2018-05-26T20:47:06Z" finished-at="2018-05-26T20:47:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testALLDIFFERENTBC -->
        <test-method status="PASS" signature="testAMONG()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testAMONG" duration-ms="1749" started-at="2018-05-26T20:47:17Z" finished-at="2018-05-26T20:47:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAMONG -->
        <test-method status="PASS" signature="testCOUNT()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testCOUNT" duration-ms="5377" started-at="2018-05-26T20:47:19Z" finished-at="2018-05-26T20:47:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCOUNT -->
        <test-method status="PASS" signature="testELEMENT()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testELEMENT" duration-ms="463" started-at="2018-05-26T20:47:24Z" finished-at="2018-05-26T20:47:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testELEMENT -->
        <test-method status="PASS" signature="testEQ()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testEQ" duration-ms="1844" started-at="2018-05-26T20:47:25Z" finished-at="2018-05-26T20:47:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEQ -->
        <test-method status="PASS" signature="testIVPC()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testIVPC" duration-ms="2484" started-at="2018-05-26T20:47:27Z" finished-at="2018-05-26T20:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIVPC -->
        <test-method status="PASS" signature="testLEX()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testLEX" duration-ms="11214" started-at="2018-05-26T20:47:29Z" finished-at="2018-05-26T20:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLEX -->
        <test-method status="PASS" signature="testLEXCHAIN()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testLEXCHAIN" duration-ms="14312" started-at="2018-05-26T20:47:40Z" finished-at="2018-05-26T20:47:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLEXCHAIN -->
        <test-method status="PASS" signature="testMAX()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testMAX" duration-ms="2420" started-at="2018-05-26T20:47:55Z" finished-at="2018-05-26T20:47:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMAX -->
        <test-method status="PASS" signature="testMDD()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testMDD" duration-ms="976" started-at="2018-05-26T20:47:57Z" finished-at="2018-05-26T20:47:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMDD -->
        <test-method status="PASS" signature="testMIN()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testMIN" duration-ms="2441" started-at="2018-05-26T20:47:58Z" finished-at="2018-05-26T20:48:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMIN -->
        <test-method status="PASS" signature="testNEQ()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testNEQ" duration-ms="2676" started-at="2018-05-26T20:48:00Z" finished-at="2018-05-26T20:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNEQ -->
        <test-method status="PASS" signature="testPLUSAC()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testPLUSAC" duration-ms="8999" started-at="2018-05-26T20:48:03Z" finished-at="2018-05-26T20:48:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPLUSAC -->
        <test-method status="PASS" signature="testPLUSBC()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testPLUSBC" duration-ms="10236" started-at="2018-05-26T20:48:12Z" finished-at="2018-05-26T20:48:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPLUSBC -->
        <test-method status="PASS" signature="testSORT()[pri:0, instance:org.chocosolver.solver.constraints.checker.consistency.TestConsistency@1e27bb89]" name="testSORT" duration-ms="12151" started-at="2018-05-26T20:48:22Z" finished-at="2018-05-26T20:48:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSORT -->
      </class> <!-- org.chocosolver.solver.constraints.checker.consistency.TestConsistency -->
      <class name="org.chocosolver.solver.constraints.unary.NotMemberTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.unary.NotMemberTest@5bf1b528]" name="test1" duration-ms="110" started-at="2018-05-26T20:54:54Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.unary.NotMemberTest@5bf1b528]" name="test2" duration-ms="172" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test_alxpgr()[pri:0, instance:org.chocosolver.solver.constraints.unary.NotMemberTest@5bf1b528]" name="test_alxpgr" duration-ms="1" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_alxpgr -->
      </class> <!-- org.chocosolver.solver.constraints.unary.NotMemberTest -->
      <class name="org.chocosolver.SuspiciousTest">
        <test-method status="PASS" signature="testBacktrack()[pri:0, instance:org.chocosolver.SuspiciousTest@5b71af0d]" name="testBacktrack" duration-ms="4" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBacktrack -->
        <test-method status="PASS" signature="testGregy4()[pri:0, instance:org.chocosolver.SuspiciousTest@5b71af0d]" name="testGregy4" duration-ms="17" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGregy4 -->
      </class> <!-- org.chocosolver.SuspiciousTest -->
      <class name="org.chocosolver.solver.constraints.ternary.ModTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.ternary.ModTest@632b96b8]" name="test1" duration-ms="883" started-at="2018-05-26T20:56:14Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.ternary.ModTest@632b96b8]" name="test2" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="testJL()[pri:0, instance:org.chocosolver.solver.constraints.ternary.ModTest@632b96b8]" name="testJL" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL -->
      </class> <!-- org.chocosolver.solver.constraints.ternary.ModTest -->
      <class name="org.chocosolver.solver.constraints.set.AllDifferentTest">
        <test-method status="PASS" signature="alreadyDifferent()[pri:0, instance:org.chocosolver.solver.constraints.set.AllDifferentTest@5020e5ab]" name="alreadyDifferent" duration-ms="1" started-at="2018-05-26T21:10:01Z" finished-at="2018-05-26T21:10:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alreadyDifferent -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.AllDifferentTest@5020e5ab]" name="testNominal" duration-ms="665" started-at="2018-05-26T21:10:01Z" finished-at="2018-05-26T21:10:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="oneElement()[pri:0, instance:org.chocosolver.solver.constraints.set.AllDifferentTest@5020e5ab]" name="oneElement" duration-ms="0" started-at="2018-05-26T21:10:01Z" finished-at="2018-05-26T21:10:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- oneElement -->
      </class> <!-- org.chocosolver.solver.constraints.set.AllDifferentTest -->
      <class name="org.chocosolver.solver.constraints.binary.SquareTest">
        <test-method status="PASS" signature="test()[pri:0, instance:org.chocosolver.solver.constraints.binary.SquareTest@7e43b342]" name="test" duration-ms="3" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="testCst()[pri:0, instance:org.chocosolver.solver.constraints.binary.SquareTest@7e43b342]" name="testCst" duration-ms="1" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCst -->
        <test-method status="PASS" signature="testCstFail()[pri:0, instance:org.chocosolver.solver.constraints.binary.SquareTest@7e43b342]" name="testCstFail" duration-ms="0" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCstFail -->
        <test-method status="PASS" signature="testSimple()[pri:0, instance:org.chocosolver.solver.constraints.binary.SquareTest@7e43b342]" name="testSimple" duration-ms="0" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimple -->
        <test-method status="PASS" signature="testCstNeg()[pri:0, instance:org.chocosolver.solver.constraints.binary.SquareTest@7e43b342]" name="testCstNeg" duration-ms="0" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCstNeg -->
      </class> <!-- org.chocosolver.solver.constraints.binary.SquareTest -->
      <class name="org.chocosolver.solver.constraints.set.NotEmptyTest">
        <test-method status="PASS" signature="testComparedToNbEmpty()[pri:0, instance:org.chocosolver.solver.constraints.set.NotEmptyTest@47994b51]" name="testComparedToNbEmpty" duration-ms="7900" started-at="2018-05-26T21:09:53Z" finished-at="2018-05-26T21:10:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComparedToNbEmpty -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.NotEmptyTest@47994b51]" name="testNominal" duration-ms="0" started-at="2018-05-26T21:10:01Z" finished-at="2018-05-26T21:10:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testTrivialFalse()[pri:0, instance:org.chocosolver.solver.constraints.set.NotEmptyTest@47994b51]" name="testTrivialFalse" duration-ms="0" started-at="2018-05-26T21:10:01Z" finished-at="2018-05-26T21:10:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrivialFalse -->
        <test-method status="PASS" signature="testTrivialTrue()[pri:0, instance:org.chocosolver.solver.constraints.set.NotEmptyTest@47994b51]" name="testTrivialTrue" duration-ms="1" started-at="2018-05-26T21:10:01Z" finished-at="2018-05-26T21:10:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrivialTrue -->
      </class> <!-- org.chocosolver.solver.constraints.set.NotEmptyTest -->
      <class name="org.chocosolver.solver.variables.impl.IntVarMinusViewTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="removeAllValuesButCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="removeAllValuesButCoverBound" duration-ms="1" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeAllValuesButCoverBound -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="setup" is-config="true" duration-ms="1" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="removeAllValuesButWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="removeAllValuesButWrongDomain" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (-(IV_1 = {-4..-1}) = [1,4], IV_1 = {-4..-1}) : new lower bound is greater than upper bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeAllValuesButWrongDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveAllValuesButCoverDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveAllValuesButCoverDomain" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveAllValuesButCoverDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveIntervalCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveIntervalCoverBound" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveIntervalCoverBound -->
        <test-method status="PASS" signature="testRemoveIntervalCoverDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveIntervalCoverDomain" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (-(IV_1 = {-4..-1}) = [1,4], IV_1 = {-4..-1}) : new lower bound is greater than upper bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveIntervalCoverDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveIntervalEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveIntervalEmptyDomain" duration-ms="1" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (-(IV_1 = {-4..-1}) = [1,4], IV_1 = {-4..-1}) : new lower bound is greater than upper bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveIntervalEmptyDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveIntervalOK()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveIntervalOK" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveIntervalOK -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="setup" is-config="true" duration-ms="1" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveIntervalWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveIntervalWrongDomain" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveIntervalWrongDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValueEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveValueEmptyDomain" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (-(IV_1 = -3) = [3,3], IV_1 = -3) : remove last value
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValueEmptyDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValueOK()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveValueOK" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValueOK -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="setup" is-config="true" duration-ms="1" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValuesButOK()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveValuesButOK" duration-ms="1" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesButOK -->
        <test-method status="PASS" signature="testRemoveValueWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveValueWrongDomain" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValueWrongDomain -->
        <test-method status="PASS" signature="testRemoveValuesCoverBound()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveValuesCoverBound" duration-ms="1" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesCoverBound -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValuesEmptyDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveValuesEmptyDomain" duration-ms="1" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (-(IV_1 = {-4..-1}) = [1,4], IV_1 = {-4..-1}) : new lower bound is greater than upper bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesEmptyDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValuesOK()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveValuesOK" duration-ms="1" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesOK -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValuesTwoSides()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveValuesTwoSides" duration-ms="1" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesTwoSides -->
        <test-method status="PASS" signature="testRemoveValuesWrongDomain()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="testRemoveValuesWrongDomain" duration-ms="1" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValuesWrongDomain -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.IntVarMinusViewTest@32ddcca]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- org.chocosolver.solver.variables.impl.IntVarMinusViewTest -->
      <class name="org.chocosolver.util.ESatTest">
        <test-method status="PASS" signature="testESat()[pri:0, instance:org.chocosolver.util.ESatTest@52c27d53]" name="testESat" duration-ms="1" started-at="2018-05-26T21:00:32Z" finished-at="2018-05-26T21:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testESat -->
      </class> <!-- org.chocosolver.util.ESatTest -->
      <class name="org.chocosolver.solver.constraints.nary.sum.IntLinCombTest">
        <test-method status="PASS" signature="testB1()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testB1" duration-ms="5164" started-at="2018-05-26T20:56:29Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB1 -->
        <test-method status="PASS" signature="testB2()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testB2" duration-ms="0" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB2 -->
        <test-method status="PASS" signature="testB3()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testB3" duration-ms="0" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB3 -->
        <test-method status="PASS" signature="testB4()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testB4" duration-ms="1" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB4 -->
        <test-method status="PASS" signature="testB5()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testB5" duration-ms="1" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB5 -->
        <test-method status="PASS" signature="testB6()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testB6" duration-ms="1" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB6 -->
        <test-method status="PASS" signature="testB61()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testB61" duration-ms="0" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB61 -->
        <test-method status="PASS" signature="testB71()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testB71" duration-ms="1" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB71 -->
        <test-method status="PASS" signature="testB7()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testB7" duration-ms="0" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB7 -->
        <test-method status="PASS" signature="testD1()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD1" duration-ms="0" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD1 -->
        <test-method status="PASS" signature="testD11()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD11" duration-ms="1" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD11 -->
        <test-method status="PASS" signature="testD10()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD10" duration-ms="0" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD10 -->
        <test-method status="PASS" signature="testD12()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD12" duration-ms="0" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD12 -->
        <test-method status="PASS" signature="testD14()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD14" duration-ms="1" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD14 -->
        <test-method status="PASS" signature="testD13()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD13" duration-ms="0" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD13 -->
        <test-method status="PASS" signature="testD16()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD16" duration-ms="1" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD16 -->
        <test-method status="PASS" signature="testD15()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD15" duration-ms="0" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD15 -->
        <test-method status="PASS" signature="testD2()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD2" duration-ms="0" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD2 -->
        <test-method status="PASS" signature="testD20()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD20" duration-ms="0" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD20 -->
        <test-method status="PASS" signature="testD3()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD3" duration-ms="0" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD3 -->
        <test-method status="PASS" signature="testD4()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD4" duration-ms="0" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD4 -->
        <test-method status="PASS" signature="testD5()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD5" duration-ms="1" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD5 -->
        <test-method status="PASS" signature="testD6()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD6" duration-ms="0" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD6 -->
        <test-method status="PASS" signature="testD7()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD7" duration-ms="1" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD7 -->
        <test-method status="PASS" signature="testD9()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD9" duration-ms="1" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD9 -->
        <test-method status="PASS" signature="testD8()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testD8" duration-ms="0" started-at="2018-05-26T20:56:34Z" finished-at="2018-05-26T20:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD8 -->
        <test-method status="PASS" signature="testDec1(boolean, int)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testDec1" duration-ms="1270" started-at="2018-05-26T20:56:34Z" data-provider="decomp" finished-at="2018-05-26T20:56:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDec1 -->
        <test-method status="PASS" signature="testDec1(boolean, int)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testDec1" duration-ms="2503" started-at="2018-05-26T20:56:35Z" data-provider="decomp" finished-at="2018-05-26T20:56:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDec1 -->
        <test-method status="PASS" signature="testDec1(boolean, int)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testDec1" duration-ms="4513" started-at="2018-05-26T20:56:38Z" data-provider="decomp" finished-at="2018-05-26T20:56:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDec1 -->
        <test-method status="PASS" signature="testDec1(boolean, int)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testDec1" duration-ms="1429" started-at="2018-05-26T20:56:42Z" data-provider="decomp" finished-at="2018-05-26T20:56:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDec1 -->
        <test-method status="PASS" signature="testDec1(boolean, int)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testDec1" duration-ms="1636" started-at="2018-05-26T20:56:44Z" data-provider="decomp" finished-at="2018-05-26T20:56:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDec1 -->
        <test-method status="PASS" signature="testDec1(boolean, int)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testDec1" duration-ms="2879" started-at="2018-05-26T20:56:45Z" data-provider="decomp" finished-at="2018-05-26T20:56:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDec1 -->
        <test-method status="PASS" signature="testDec2(boolean, int)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testDec2" duration-ms="1994" started-at="2018-05-26T20:56:48Z" data-provider="decomp" finished-at="2018-05-26T20:56:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDec2 -->
        <test-method status="PASS" signature="testDec2(boolean, int)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testDec2" duration-ms="3176" started-at="2018-05-26T20:56:50Z" data-provider="decomp" finished-at="2018-05-26T20:56:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDec2 -->
        <test-method status="PASS" signature="testDec2(boolean, int)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testDec2" duration-ms="6028" started-at="2018-05-26T20:56:53Z" data-provider="decomp" finished-at="2018-05-26T20:57:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDec2 -->
        <test-method status="PASS" signature="testDec2(boolean, int)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testDec2" duration-ms="1012" started-at="2018-05-26T20:57:00Z" data-provider="decomp" finished-at="2018-05-26T20:57:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDec2 -->
        <test-method status="PASS" signature="testDec2(boolean, int)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testDec2" duration-ms="2401" started-at="2018-05-26T20:57:01Z" data-provider="decomp" finished-at="2018-05-26T20:57:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDec2 -->
        <test-method status="PASS" signature="testDec2(boolean, int)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testDec2" duration-ms="4120" started-at="2018-05-26T20:57:03Z" data-provider="decomp" finished-at="2018-05-26T20:57:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDec2 -->
        <test-method status="PASS" signature="testEQ()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testEQ" duration-ms="3" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEQ -->
        <test-method status="PASS" signature="testEq()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testEq" duration-ms="3" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEq -->
        <test-method status="PASS" signature="testExt1()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testExt1" duration-ms="1" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExt1 -->
        <test-method status="PASS" signature="testExt2()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testExt2" duration-ms="1" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExt2 -->
        <test-method status="PASS" signature="testExt3()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testExt3" duration-ms="9" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExt3 -->
        <test-method status="PASS" signature="testGE()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testGE" duration-ms="2" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGE -->
        <test-method status="PASS" signature="testGT()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testGT" duration-ms="1" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGT -->
        <test-method status="PASS" signature="testGeq()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testGeq" duration-ms="1" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeq -->
        <test-method status="PASS" signature="testIss237_1()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testIss237_1" duration-ms="1" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIss237_1 -->
        <test-method status="PASS" signature="testJG1()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testJG1" duration-ms="4" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJG1 -->
        <test-method status="PASS" signature="testJG2()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testJG2" duration-ms="2" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJG2 -->
        <test-method status="PASS" signature="testJL082016()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testJL082016" duration-ms="53" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL082016 -->
        <test-method status="PASS" signature="testJL1()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testJL1" duration-ms="0" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL1 -->
        <test-method status="PASS" signature="testJL2()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testJL2" duration-ms="0" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL2 -->
        <test-method status="PASS" signature="testJL3()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testJL3" duration-ms="0" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL3 -->
        <test-method status="PASS" signature="testJL4()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testJL4" duration-ms="1" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL4 -->
        <test-method status="PASS" signature="testLE()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testLE" duration-ms="1" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLE -->
        <test-method status="PASS" signature="testLT()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testLT" duration-ms="1" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLT -->
        <test-method status="PASS" signature="testLeq()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testLeq" duration-ms="0" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLeq -->
        <test-method status="PASS" signature="testNE()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testNE" duration-ms="2" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNE -->
        <test-method status="PASS" signature="testNeq()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testNeq" duration-ms="2" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNeq -->
        <test-method status="PASS" signature="testOpp1()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testOpp1" duration-ms="1" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpp1 -->
        <test-method status="PASS" signature="testOpp1strict()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testOpp1strict" duration-ms="0" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpp1strict -->
        <test-method status="PASS" signature="testOpp2()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testOpp2" duration-ms="0" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpp2 -->
        <test-method status="PASS" signature="testOpp3()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testOpp3" duration-ms="0" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpp3 -->
        <test-method status="PASS" signature="testOpp4()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testOpp4" duration-ms="0" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpp4 -->
        <test-method status="PASS" signature="testRFP1()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testRFP1" duration-ms="43" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRFP1 -->
        <test-method status="PASS" signature="testOpp4strict()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testOpp4strict" duration-ms="0" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpp4strict -->
        <test-method status="PASS" signature="testRFP2()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testRFP2" duration-ms="37" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRFP2 -->
        <test-method status="PASS" signature="testRFP3()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testRFP3" duration-ms="5" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRFP3 -->
        <test-method status="PASS" signature="testS1_coeff_null()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testS1_coeff_null" duration-ms="1" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testS1_coeff_null -->
        <test-method status="PASS" signature="testS2_coeff_null()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testS2_coeff_null" duration-ms="0" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testS2_coeff_null -->
        <test-method status="PASS" signature="testSmallSumsEQ()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSmallSumsEQ" duration-ms="4" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSmallSumsEQ -->
        <test-method status="PASS" signature="testSmallSumsGE()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSmallSumsGE" duration-ms="1" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSmallSumsGE -->
        <test-method status="PASS" signature="testSmallSumsGT()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSmallSumsGT" duration-ms="1" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSmallSumsGT -->
        <test-method status="PASS" signature="testSmallSumsLE()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSmallSumsLE" duration-ms="1" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSmallSumsLE -->
        <test-method status="PASS" signature="testSmallSumsLT()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSmallSumsLT" duration-ms="1" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSmallSumsLT -->
        <test-method status="PASS" signature="testSmallSumsNE()[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSmallSumsNE" duration-ms="5" started-at="2018-05-26T20:57:07Z" finished-at="2018-05-26T20:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSmallSumsNE -->
        <test-method status="PASS" signature="testSumvsIntLinCombTest(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSumvsIntLinCombTest" duration-ms="21722" started-at="2018-05-26T20:57:07Z" data-provider="boolean" finished-at="2018-05-26T20:57:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSumvsIntLinCombTest -->
        <test-method status="PASS" signature="testSumvsIntLinCombTest(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSumvsIntLinCombTest" duration-ms="21227" started-at="2018-05-26T20:57:29Z" data-provider="boolean" finished-at="2018-05-26T20:57:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSumvsIntLinCombTest -->
        <test-method status="PASS" signature="testSumvsIntLinCombTest2(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSumvsIntLinCombTest2" duration-ms="60" started-at="2018-05-26T20:57:50Z" data-provider="boolean" finished-at="2018-05-26T20:57:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSumvsIntLinCombTest2 -->
        <test-method status="PASS" signature="testSumvsIntLinCombTest2(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSumvsIntLinCombTest2" duration-ms="69" started-at="2018-05-26T20:57:50Z" data-provider="boolean" finished-at="2018-05-26T20:57:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSumvsIntLinCombTest2 -->
        <test-method status="PASS" signature="testSumvsIntLinCombTest3(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSumvsIntLinCombTest3" duration-ms="41" started-at="2018-05-26T20:57:50Z" data-provider="boolean" finished-at="2018-05-26T20:57:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSumvsIntLinCombTest3 -->
        <test-method status="PASS" signature="testSumvsIntLinCombTest3(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSumvsIntLinCombTest3" duration-ms="37" started-at="2018-05-26T20:57:50Z" data-provider="boolean" finished-at="2018-05-26T20:57:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSumvsIntLinCombTest3 -->
        <test-method status="PASS" signature="testSumvsIntLinCombTest4(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSumvsIntLinCombTest4" duration-ms="154" started-at="2018-05-26T20:57:50Z" data-provider="boolean" finished-at="2018-05-26T20:57:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSumvsIntLinCombTest4 -->
        <test-method status="PASS" signature="testSumvsIntLinCombTest4(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testSumvsIntLinCombTest4" duration-ms="125" started-at="2018-05-26T20:57:51Z" data-provider="boolean" finished-at="2018-05-26T20:57:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSumvsIntLinCombTest4 -->
        <test-method status="PASS" signature="testUSum1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testUSum1" duration-ms="1" started-at="2018-05-26T20:57:51Z" data-provider="boolean" finished-at="2018-05-26T20:57:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUSum1 -->
        <test-method status="PASS" signature="testUSum1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testUSum1" duration-ms="0" started-at="2018-05-26T20:57:51Z" data-provider="boolean" finished-at="2018-05-26T20:57:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUSum1 -->
        <test-method status="PASS" signature="testUSum2(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testUSum2" duration-ms="1" started-at="2018-05-26T20:57:51Z" data-provider="boolean" finished-at="2018-05-26T20:57:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUSum2 -->
        <test-method status="PASS" signature="testUSum2(boolean)[pri:0, instance:org.chocosolver.solver.constraints.nary.sum.IntLinCombTest@446dacf9]" name="testUSum2" duration-ms="0" started-at="2018-05-26T20:57:51Z" data-provider="boolean" finished-at="2018-05-26T20:57:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUSum2 -->
      </class> <!-- org.chocosolver.solver.constraints.nary.sum.IntLinCombTest -->
      <class name="org.chocosolver.solver.constraints.nary.AmongTest">
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.AmongTest@8091d80]" name="test2" duration-ms="63" started-at="2018-05-26T21:05:21Z" finished-at="2018-05-26T21:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.solver.constraints.nary.AmongTest@8091d80]" name="test3" duration-ms="31" started-at="2018-05-26T21:05:21Z" finished-at="2018-05-26T21:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test4()[pri:0, instance:org.chocosolver.solver.constraints.nary.AmongTest@8091d80]" name="test4" duration-ms="2" started-at="2018-05-26T21:05:21Z" finished-at="2018-05-26T21:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="testRandomProblems()[pri:0, instance:org.chocosolver.solver.constraints.nary.AmongTest@8091d80]" name="testRandomProblems" duration-ms="4807" started-at="2018-05-26T21:05:21Z" finished-at="2018-05-26T21:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRandomProblems -->
        <test-method status="PASS" signature="testRandomProblems2()[pri:0, instance:org.chocosolver.solver.constraints.nary.AmongTest@8091d80]" name="testRandomProblems2" duration-ms="23988" started-at="2018-05-26T21:05:26Z" finished-at="2018-05-26T21:05:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRandomProblems2 -->
      </class> <!-- org.chocosolver.solver.constraints.nary.AmongTest -->
      <class name="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.ConstantSetTest">
        <test-method status="PASS" signature="testAdd()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.ConstantSetTest@28515443]" name="testAdd" duration-ms="1" started-at="2018-05-26T21:09:40Z" finished-at="2018-05-26T21:09:40Z">
          <exception class="java.lang.UnsupportedOperationException">
            <message>
              <![CDATA[Cannot add element to Set_FixedArray]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException: Cannot add element to Set_FixedArray
	at org.chocosolver.util.objects.setDataStructures.constant.Set_FixedArray.add(Set_FixedArray.java:53)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.ConstantSetTest.testAdd(ConstantSetTest.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.ConstantSetTest@28515443]" name="testClear" duration-ms="0" started-at="2018-05-26T21:09:40Z" finished-at="2018-05-26T21:09:40Z">
          <exception class="java.lang.UnsupportedOperationException">
            <message>
              <![CDATA[Cannot clear Set_FixedArray]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException: Cannot clear Set_FixedArray
	at org.chocosolver.util.objects.setDataStructures.constant.Set_FixedArray.clear(Set_FixedArray.java:75)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.ConstantSetTest.testClear(ConstantSetTest.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.ConstantSetTest@28515443]" name="testIterator" duration-ms="0" started-at="2018-05-26T21:09:40Z" finished-at="2018-05-26T21:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="testDuplicates()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.ConstantSetTest@28515443]" name="testDuplicates" duration-ms="0" started-at="2018-05-26T21:09:40Z" finished-at="2018-05-26T21:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDuplicates -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.ConstantSetTest@28515443]" name="testRemove" duration-ms="0" started-at="2018-05-26T21:09:40Z" finished-at="2018-05-26T21:09:40Z">
          <exception class="java.lang.UnsupportedOperationException">
            <message>
              <![CDATA[Cannot remove element from Set_FixedArray]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException: Cannot remove element from Set_FixedArray
	at org.chocosolver.util.objects.setDataStructures.constant.Set_FixedArray.remove(Set_FixedArray.java:59)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.ConstantSetTest.testRemove(ConstantSetTest.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.ConstantSetTest@28515443]" name="testSize" duration-ms="0" started-at="2018-05-26T21:09:40Z" finished-at="2018-05-26T21:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- org.chocosolver.util.objects.setDataStructures.nonbacktrackable.ConstantSetTest -->
      <class name="org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest">
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="memoryCrashTest()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="memoryCrashTest" duration-ms="35" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memoryCrashTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddRemoveReturnValue(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testAddRemoveReturnValue" duration-ms="1" started-at="2018-05-26T20:56:15Z" data-provider="params" finished-at="2018-05-26T20:56:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddRemoveReturnValue -->
        <test-method status="PASS" signature="testAddRemoveReturnValue(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testAddRemoveReturnValue" duration-ms="0" started-at="2018-05-26T20:56:15Z" data-provider="params" finished-at="2018-05-26T20:56:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddRemoveReturnValue -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testNominal(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testNominal" duration-ms="1" started-at="2018-05-26T20:56:15Z" data-provider="params" finished-at="2018-05-26T20:56:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testNominal(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testNominal" duration-ms="0" started-at="2018-05-26T20:56:15Z" data-provider="params" finished-at="2018-05-26T20:56:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testPopUntilZero(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testPopUntilZero" duration-ms="0" started-at="2018-05-26T20:56:15Z" data-provider="params" finished-at="2018-05-26T20:56:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopUntilZero -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testPopUntilZero(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testPopUntilZero" duration-ms="0" started-at="2018-05-26T20:56:15Z" data-provider="params" finished-at="2018-05-26T20:56:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopUntilZero -->
        <test-method status="PASS" signature="testRemoveInLoop(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testRemoveInLoop" duration-ms="1" started-at="2018-05-26T20:56:15Z" data-provider="params" finished-at="2018-05-26T20:56:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveInLoop -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testRemoveInLoop(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testRemoveInLoop" duration-ms="0" started-at="2018-05-26T20:56:15Z" data-provider="params" finished-at="2018-05-26T20:56:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveInLoop -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testSeveralPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testSeveralPushes" duration-ms="4" started-at="2018-05-26T20:56:15Z" data-provider="params" finished-at="2018-05-26T20:56:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSeveralPushes -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testSeveralPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testSeveralPushes" duration-ms="4" started-at="2018-05-26T20:56:15Z" data-provider="params" finished-at="2018-05-26T20:56:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSeveralPushes -->
        <test-method status="PASS" signature="testTwoPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testTwoPushes" duration-ms="0" started-at="2018-05-26T20:56:15Z" data-provider="params" finished-at="2018-05-26T20:56:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwoPushes -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="1" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testTwoPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testTwoPushes" duration-ms="0" started-at="2018-05-26T20:56:15Z" data-provider="params" finished-at="2018-05-26T20:56:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwoPushes -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testTwoSets(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testTwoSets" duration-ms="0" started-at="2018-05-26T20:56:15Z" data-provider="params" finished-at="2018-05-26T20:56:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwoSets -->
        <test-method status="PASS" signature="testTwoSets(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testTwoSets" duration-ms="1" started-at="2018-05-26T20:56:15Z" data-provider="params" finished-at="2018-05-26T20:56:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwoSets -->
        <test-method status="PASS" signature="testVoidPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testVoidPushes" duration-ms="1" started-at="2018-05-26T20:56:15Z" data-provider="params" finished-at="2018-05-26T20:56:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVoidPushes -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testVoidPushes(boolean)[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testVoidPushes" duration-ms="1" started-at="2018-05-26T20:56:15Z" data-provider="params" finished-at="2018-05-26T20:56:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVoidPushes -->
        <test-method status="PASS" signature="testAddAlreadyExists()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testAddAlreadyExists" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAlreadyExists -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddMaxValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testAddMaxValue" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMaxValue -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddNegativeKO()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testAddNegativeKO" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Cannot add -2 to set of offset 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Cannot add -2 to set of offset 0
	at org.chocosolver.util.objects.setDataStructures.swapList.Set_Swap.add(Set_Swap.java:57)
	at org.chocosolver.util.objects.setDataStructures.StdSet.add(StdSet.java:68)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testAddNegativeKO(SetTest.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNegativeKO -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddNegativeOK()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testAddNegativeOK" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNegativeOK -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddNominal()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testAddNominal" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNominal -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testAddNominal2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testAddNominal2" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNominal2 -->
        <test-method status="PASS" signature="testAddRemoveReturnValueNB()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testAddRemoveReturnValueNB" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddRemoveReturnValueNB -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testClear" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testEmptyMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testEmptyMax" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[cannot find maximum of an empty set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: cannot find maximum of an empty set
	at org.chocosolver.util.objects.setDataStructures.swapList.Set_Swap.max(Set_Swap.java:145)
	at org.chocosolver.util.objects.setDataStructures.StdSet.max(StdSet.java:122)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testEmptyMax(SetTest.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyMax -->
        <test-method status="PASS" signature="testEmptyMin()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testEmptyMin" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[cannot find minimum of an empty set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: cannot find minimum of an empty set
	at org.chocosolver.util.objects.setDataStructures.swapList.Set_Swap.min(Set_Swap.java:133)
	at org.chocosolver.util.objects.setDataStructures.StdSet.min(StdSet.java:117)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testEmptyMin(SetTest.java:172)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyMin -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testEquals()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testEquals" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testIteratorLength()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testIteratorLength" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorLength -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testIterator" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testMinMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testMinMax" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinMax -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testMultipleLoops()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testMultipleLoops" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleLoops -->
        <test-method status="PASS" signature="testNewIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testNewIterator" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNewIterator -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testReadOnlySet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testReadOnlySet" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadOnlySet -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testRemove" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="testRemoveInLoop()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="testRemoveInLoop" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveInLoop -->
        <test-method status="PASS" signature="init()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest@220f6a3c]" name="init" is-config="true" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
      </class> <!-- org.chocosolver.util.objects.setDataStructures.backtrackable.BipartiteSetTest -->
      <class name="org.chocosolver.solver.constraints.set.AllDisjointTest">
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.AllDisjointTest@5b324447]" name="testNominal" duration-ms="74" started-at="2018-05-26T21:09:53Z" finished-at="2018-05-26T21:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testTrivialFalse()[pri:0, instance:org.chocosolver.solver.constraints.set.AllDisjointTest@5b324447]" name="testTrivialFalse" duration-ms="0" started-at="2018-05-26T21:09:53Z" finished-at="2018-05-26T21:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrivialFalse -->
        <test-method status="PASS" signature="testTrivialTrue()[pri:0, instance:org.chocosolver.solver.constraints.set.AllDisjointTest@5b324447]" name="testTrivialTrue" duration-ms="1" started-at="2018-05-26T21:09:53Z" finished-at="2018-05-26T21:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrivialTrue -->
      </class> <!-- org.chocosolver.solver.constraints.set.AllDisjointTest -->
      <class name="org.chocosolver.solver.variables.impl.AbstractVariableTest">
        <test-method status="PASS" signature="testCancel1()[pri:0, instance:org.chocosolver.solver.variables.impl.AbstractVariableTest@71b7e9c8]" name="testCancel1" duration-ms="0" started-at="2018-05-26T21:09:48Z" finished-at="2018-05-26T21:09:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCancel1 -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.AbstractVariableTest@71b7e9c8]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:09:48Z" finished-at="2018-05-26T21:09:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testSubscribe2()[pri:0, instance:org.chocosolver.solver.variables.impl.AbstractVariableTest@71b7e9c8]" name="testSubscribe2" duration-ms="0" started-at="2018-05-26T21:09:48Z" finished-at="2018-05-26T21:09:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubscribe2 -->
        <test-method status="PASS" signature="testSubscribe1()[pri:0, instance:org.chocosolver.solver.variables.impl.AbstractVariableTest@71b7e9c8]" name="testSubscribe1" duration-ms="0" started-at="2018-05-26T21:09:48Z" finished-at="2018-05-26T21:09:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubscribe1 -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.AbstractVariableTest@71b7e9c8]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:09:48Z" finished-at="2018-05-26T21:09:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.impl.AbstractVariableTest@71b7e9c8]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:09:48Z" finished-at="2018-05-26T21:09:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- org.chocosolver.solver.variables.impl.AbstractVariableTest -->
      <class name="org.chocosolver.solver.search.ParetoTest">
        <test-method status="PASS" signature="testPareto()[pri:0, instance:org.chocosolver.solver.search.ParetoTest@4745bcc6]" name="testPareto" duration-ms="15" started-at="2018-05-26T21:04:30Z" finished-at="2018-05-26T21:04:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPareto -->
      </class> <!-- org.chocosolver.solver.search.ParetoTest -->
      <class name="org.chocosolver.solver.constraints.ternary.DistanceLETest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DistanceLETest@72b53f27]" name="test1" duration-ms="398" started-at="2018-05-26T20:54:55Z" finished-at="2018-05-26T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.ternary.DistanceLETest@72b53f27]" name="test2" duration-ms="1" started-at="2018-05-26T20:55:22Z" finished-at="2018-05-26T20:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
      </class> <!-- org.chocosolver.solver.constraints.ternary.DistanceLETest -->
      <class name="org.chocosolver.solver.propagation.DeltaTest">
        <test-method status="PASS" signature="testAdd()[pri:0, instance:org.chocosolver.solver.propagation.DeltaTest@2ba08f26]" name="testAdd" duration-ms="1" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testEq()[pri:0, instance:org.chocosolver.solver.propagation.DeltaTest@2ba08f26]" name="testEq" duration-ms="1" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEq -->
        <test-method status="PASS" signature="testJL()[pri:0, instance:org.chocosolver.solver.propagation.DeltaTest@2ba08f26]" name="testJL" duration-ms="0" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL -->
        <test-method status="PASS" signature="testJL2()[pri:0, instance:org.chocosolver.solver.propagation.DeltaTest@2ba08f26]" name="testJL2" duration-ms="16" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL2 -->
        <test-method status="PASS" signature="testJL3()[pri:0, instance:org.chocosolver.solver.propagation.DeltaTest@2ba08f26]" name="testJL3" duration-ms="5" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL3 -->
        <test-method status="PASS" signature="testJL4()[pri:0, instance:org.chocosolver.solver.propagation.DeltaTest@2ba08f26]" name="testJL4" duration-ms="1" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL4 -->
      </class> <!-- org.chocosolver.solver.propagation.DeltaTest -->
      <class name="org.chocosolver.solver.variables.BoolNotViewTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.variables.BoolNotViewTest@5008559a]" name="test1" duration-ms="116" started-at="2018-05-26T21:02:41Z" finished-at="2018-05-26T21:02:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="testIt()[pri:0, instance:org.chocosolver.solver.variables.BoolNotViewTest@5008559a]" name="testIt" duration-ms="1" started-at="2018-05-26T21:02:41Z" finished-at="2018-05-26T21:02:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIt -->
        <test-method status="PASS" signature="testPrevNext()[pri:0, instance:org.chocosolver.solver.variables.BoolNotViewTest@5008559a]" name="testPrevNext" duration-ms="0" started-at="2018-05-26T21:02:41Z" finished-at="2018-05-26T21:02:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrevNext -->
      </class> <!-- org.chocosolver.solver.variables.BoolNotViewTest -->
      <class name="org.chocosolver.solver.variables.ViewsTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test1" duration-ms="1598" started-at="2018-05-26T21:01:05Z" finished-at="2018-05-26T21:01:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1a()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test1a" duration-ms="1124" started-at="2018-05-26T21:01:06Z" finished-at="2018-05-26T21:01:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1a -->
        <test-method status="PASS" signature="test1b()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test1b" duration-ms="606" started-at="2018-05-26T21:01:08Z" finished-at="2018-05-26T21:01:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1b -->
        <test-method status="PASS" signature="test1bb()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test1bb" duration-ms="748" started-at="2018-05-26T21:01:08Z" finished-at="2018-05-26T21:01:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1bb -->
        <test-method status="PASS" signature="test1bbb()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test1bbb" duration-ms="666" started-at="2018-05-26T21:01:09Z" finished-at="2018-05-26T21:01:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1bbb -->
        <test-method status="PASS" signature="test1c()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test1c" duration-ms="457" started-at="2018-05-26T21:01:10Z" finished-at="2018-05-26T21:01:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1c -->
        <test-method status="PASS" signature="test1d(int)[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test1d" duration-ms="1" started-at="2018-05-26T21:01:10Z" data-provider="1d" finished-at="2018-05-26T21:01:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1d -->
        <test-method status="PASS" signature="test1d(int)[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test1d" duration-ms="2" started-at="2018-05-26T21:01:10Z" data-provider="1d" finished-at="2018-05-26T21:01:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1d -->
        <test-method status="PASS" signature="test1d(int)[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test1d" duration-ms="15" started-at="2018-05-26T21:01:10Z" data-provider="1d" finished-at="2018-05-26T21:01:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1d -->
        <test-method status="PASS" signature="test1d(int)[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test1d" duration-ms="115" started-at="2018-05-26T21:01:10Z" data-provider="1d" finished-at="2018-05-26T21:01:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1d -->
        <test-method status="PASS" signature="test1d(int)[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test1d" duration-ms="956" started-at="2018-05-26T21:01:10Z" data-provider="1d" finished-at="2018-05-26T21:01:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1d -->
        <test-method status="PASS" signature="test1d(int)[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test1d" duration-ms="8106" started-at="2018-05-26T21:01:11Z" data-provider="1d" finished-at="2018-05-26T21:01:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1d -->
        <test-method status="PASS" signature="test1d(int)[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test1d" duration-ms="69585" started-at="2018-05-26T21:01:19Z" data-provider="1d" finished-at="2018-05-26T21:02:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1d -->
        <test-method status="PASS" signature="test1f()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test1f" duration-ms="3" started-at="2018-05-26T21:02:29Z" finished-at="2018-05-26T21:02:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1f -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test2" duration-ms="1521" started-at="2018-05-26T21:02:29Z" finished-at="2018-05-26T21:02:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test3" duration-ms="139" started-at="2018-05-26T21:02:30Z" finished-at="2018-05-26T21:02:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test4()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test4" duration-ms="120" started-at="2018-05-26T21:02:30Z" finished-at="2018-05-26T21:02:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test5()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test5" duration-ms="137" started-at="2018-05-26T21:02:31Z" finished-at="2018-05-26T21:02:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="test6()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="test6" duration-ms="1017" started-at="2018-05-26T21:02:31Z" finished-at="2018-05-26T21:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method status="PASS" signature="testBoolNot()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testBoolNot" duration-ms="266" started-at="2018-05-26T21:02:32Z" finished-at="2018-05-26T21:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoolNot -->
        <test-method status="PASS" signature="testBoolNotNot()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testBoolNotNot" duration-ms="208" started-at="2018-05-26T21:02:32Z" finished-at="2018-05-26T21:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoolNotNot -->
        <test-method status="PASS" signature="testCP01()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testCP01" duration-ms="32" started-at="2018-05-26T21:02:32Z" finished-at="2018-05-26T21:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCP01 -->
        <test-method status="PASS" signature="testJG()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testJG" duration-ms="1" started-at="2018-05-26T21:02:32Z" finished-at="2018-05-26T21:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJG -->
        <test-method status="PASS" signature="testJG2()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testJG2" duration-ms="1" started-at="2018-05-26T21:02:32Z" finished-at="2018-05-26T21:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJG2 -->
        <test-method status="PASS" signature="testJG3()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testJG3" duration-ms="0" started-at="2018-05-26T21:02:32Z" finished-at="2018-05-26T21:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJG3 -->
        <test-method status="PASS" signature="testJL1()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testJL1" duration-ms="1" started-at="2018-05-26T21:02:32Z" finished-at="2018-05-26T21:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL1 -->
        <test-method status="PASS" signature="testJG4()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testJG4" duration-ms="0" started-at="2018-05-26T21:02:32Z" finished-at="2018-05-26T21:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJG4 -->
        <test-method status="PASS" signature="testJL2()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testJL2" duration-ms="1" started-at="2018-05-26T21:02:32Z" finished-at="2018-05-26T21:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL2 -->
        <test-method status="PASS" signature="testJL3()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testJL3" duration-ms="1" started-at="2018-05-26T21:02:32Z" finished-at="2018-05-26T21:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL3 -->
        <test-method status="PASS" signature="testJL4()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testJL4" duration-ms="1" started-at="2018-05-26T21:02:32Z" finished-at="2018-05-26T21:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL4 -->
        <test-method status="PASS" signature="testMinus()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testMinus" duration-ms="230" started-at="2018-05-26T21:02:32Z" finished-at="2018-05-26T21:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinus -->
        <test-method status="PASS" signature="testOffset()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testOffset" duration-ms="2" started-at="2018-05-26T21:02:32Z" finished-at="2018-05-26T21:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOffset -->
        <test-method status="PASS" signature="testScale()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testScale" duration-ms="4" started-at="2018-05-26T21:02:32Z" finished-at="2018-05-26T21:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScale -->
        <test-method status="PASS" signature="testTernArithmAC()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testTernArithmAC" duration-ms="1" started-at="2018-05-26T21:02:32Z" finished-at="2018-05-26T21:02:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTernArithmAC -->
        <test-method status="PASS" signature="testTernArithmBC()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testTernArithmBC" duration-ms="0" started-at="2018-05-26T21:02:33Z" finished-at="2018-05-26T21:02:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTernArithmBC -->
        <test-method status="PASS" signature="testa()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testa" duration-ms="11" started-at="2018-05-26T21:02:33Z" finished-at="2018-05-26T21:02:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testa -->
        <test-method status="PASS" signature="testvanH()[pri:0, instance:org.chocosolver.solver.variables.ViewsTest@1002b06d]" name="testvanH" duration-ms="1" started-at="2018-05-26T21:02:33Z" finished-at="2018-05-26T21:02:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testvanH -->
      </class> <!-- org.chocosolver.solver.variables.ViewsTest -->
      <class name="org.chocosolver.solver.search.ObjectiveTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="test1" duration-ms="7" started-at="2018-05-26T21:09:41Z" finished-at="2018-05-26T21:09:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="test2" duration-ms="1" started-at="2018-05-26T21:09:41Z" finished-at="2018-05-26T21:09:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="test3" duration-ms="2" started-at="2018-05-26T21:09:41Z" finished-at="2018-05-26T21:09:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test4()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="test4" duration-ms="1" started-at="2018-05-26T21:09:41Z" finished-at="2018-05-26T21:09:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="testAdaptiveCut1()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="testAdaptiveCut1" duration-ms="3452" started-at="2018-05-26T21:09:41Z" finished-at="2018-05-26T21:09:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdaptiveCut1 -->
        <test-method status="PASS" signature="testAdaptiveCut2()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="testAdaptiveCut2" duration-ms="3369" started-at="2018-05-26T21:09:45Z" finished-at="2018-05-26T21:09:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdaptiveCut2 -->
        <test-method status="PASS" signature="testAdaptiveCut3()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="testAdaptiveCut3" duration-ms="101" started-at="2018-05-26T21:09:48Z" finished-at="2018-05-26T21:09:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdaptiveCut3 -->
        <test-method status="PASS" signature="testJL1()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="testJL1" duration-ms="0" started-at="2018-05-26T21:09:48Z" finished-at="2018-05-26T21:09:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL1 -->
        <test-method status="PASS" signature="testJL2()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="testJL2" duration-ms="4" started-at="2018-05-26T21:09:48Z" finished-at="2018-05-26T21:09:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL2 -->
        <test-method status="PASS" signature="testMaxIntObj()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="testMaxIntObj" duration-ms="1" started-at="2018-05-26T21:09:48Z" finished-at="2018-05-26T21:09:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxIntObj -->
        <test-method status="PASS" signature="testMaxRealObj()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="testMaxRealObj" duration-ms="3" started-at="2018-05-26T21:09:48Z" finished-at="2018-05-26T21:09:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxRealObj -->
        <test-method status="PASS" signature="testMinIntObjCopy()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="testMinIntObjCopy" duration-ms="1" started-at="2018-05-26T21:09:48Z" finished-at="2018-05-26T21:09:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinIntObjCopy -->
        <test-method status="PASS" signature="testMinRealObj()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="testMinRealObj" duration-ms="1" started-at="2018-05-26T21:09:48Z" finished-at="2018-05-26T21:09:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinRealObj -->
        <test-method status="PASS" signature="testSatObj()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="testSatObj" duration-ms="1" started-at="2018-05-26T21:09:48Z" finished-at="2018-05-26T21:09:48Z">
          <exception class="java.lang.UnsupportedOperationException">
            <message>
              <![CDATA[There is no objective bounds in satisfaction problems]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException: There is no objective bounds in satisfaction problems
	at org.chocosolver.solver.objective.SATManager.getBestLB(ObjectiveFactory.java:145)
	at org.chocosolver.solver.search.ObjectiveTest.testSatObj(ObjectiveTest.java:388)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSatObj -->
        <test-method status="PASS" signature="testSerializeObjMan()[pri:0, instance:org.chocosolver.solver.search.ObjectiveTest@7d5d77a6]" name="testSerializeObjMan" duration-ms="6" started-at="2018-05-26T21:09:48Z" finished-at="2018-05-26T21:09:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerializeObjMan -->
      </class> <!-- org.chocosolver.solver.search.ObjectiveTest -->
      <class name="org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest">
        <test-method status="PASS" signature="testMaxSpan()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testMaxSpan" duration-ms="1" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxSpan -->
        <test-method status="PASS" signature="testAddNegativeKO()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testAddNegativeKO" duration-ms="0" started-at="2018-05-26T20:56:15Z" finished-at="2018-05-26T20:56:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNegativeKO -->
        <test-method status="PASS" signature="testAddAlreadyExists()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testAddAlreadyExists" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAlreadyExists -->
        <test-method status="PASS" signature="testAddMaxValue()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testAddMaxValue" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMaxValue -->
        <test-method status="PASS" signature="testAddNegativeOK()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testAddNegativeOK" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNegativeOK -->
        <test-method status="PASS" signature="testAddNominal()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testAddNominal" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNominal -->
        <test-method status="PASS" signature="testAddNominal2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testAddNominal2" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNominal2 -->
        <test-method status="PASS" signature="testAddRemoveReturnValueNB()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testAddRemoveReturnValueNB" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddRemoveReturnValueNB -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testClear" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testEmptyMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testEmptyMax" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[cannot find maximum of an empty set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: cannot find maximum of an empty set
	at org.chocosolver.util.objects.setDataStructures.linkedlist.Set_LinkedList.max(Set_LinkedList.java:135)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testEmptyMax(SetTest.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyMax -->
        <test-method status="PASS" signature="testEmptyMin()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testEmptyMin" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[cannot find minimum of an empty set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: cannot find minimum of an empty set
	at org.chocosolver.util.objects.setDataStructures.linkedlist.Set_LinkedList.min(Set_LinkedList.java:121)
	at org.chocosolver.util.objects.setDataStructures.nonbacktrackable.SetTest.testEmptyMin(SetTest.java:172)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyMin -->
        <test-method status="PASS" signature="testEquals()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testEquals" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testIterator" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="testIteratorLength()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testIteratorLength" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorLength -->
        <test-method status="PASS" signature="testMinMax()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testMinMax" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinMax -->
        <test-method status="PASS" signature="testMultipleLoops()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testMultipleLoops" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleLoops -->
        <test-method status="PASS" signature="testNewIterator()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testNewIterator" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNewIterator -->
        <test-method status="PASS" signature="testReadOnlySet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testReadOnlySet" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadOnlySet -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testRemove" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="testRemoveInLoop()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest@63551c66]" name="testRemoveInLoop" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveInLoop -->
      </class> <!-- org.chocosolver.util.objects.setDataStructures.nonbacktrackable.LinkedListTest -->
      <class name="org.chocosolver.solver.variables.ViewMinusTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.variables.ViewMinusTest@1ddc8fc]" name="test1" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.variables.ViewMinusTest@1ddc8fc]" name="test2" duration-ms="432" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.solver.variables.ViewMinusTest@1ddc8fc]" name="test3" duration-ms="525" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="testB1()[pri:0, instance:org.chocosolver.solver.variables.ViewMinusTest@1ddc8fc]" name="testB1" duration-ms="1" started-at="2018-05-26T20:56:18Z" finished-at="2018-05-26T20:56:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB1 -->
        <test-method status="PASS" signature="testIt1()[pri:0, instance:org.chocosolver.solver.variables.ViewMinusTest@1ddc8fc]" name="testIt1" duration-ms="7" started-at="2018-05-26T20:56:18Z" finished-at="2018-05-26T20:56:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIt1 -->
        <test-method status="PASS" signature="testIt2()[pri:0, instance:org.chocosolver.solver.variables.ViewMinusTest@1ddc8fc]" name="testIt2" duration-ms="7" started-at="2018-05-26T20:56:18Z" finished-at="2018-05-26T20:56:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIt2 -->
      </class> <!-- org.chocosolver.solver.variables.ViewMinusTest -->
      <class name="org.chocosolver.solver.constraints.nary.SatTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test1" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test10()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test10" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test10 -->
        <test-method status="PASS" signature="test11()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test11" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test11 -->
        <test-method status="PASS" signature="test12()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test12" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test12 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test2" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test3" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test4()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test4" duration-ms="2" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test5()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test5" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="test6()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test6" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method status="PASS" signature="test7()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test7" duration-ms="0" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test7 -->
        <test-method status="PASS" signature="test8()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test8" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test8 -->
        <test-method status="PASS" signature="test9()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="test9" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test9 -->
        <test-method status="PASS" signature="testAlexLoboda()[pri:0, instance:org.chocosolver.solver.constraints.nary.SatTest@750c23a3]" name="testAlexLoboda" duration-ms="1" started-at="2018-05-26T20:56:17Z" finished-at="2018-05-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlexLoboda -->
      </class> <!-- org.chocosolver.solver.constraints.nary.SatTest -->
      <class name="org.chocosolver.solver.search.loop.monitors.CPProfilerTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.search.loop.monitors.CPProfilerTest@6a0ee80]" name="test1" duration-ms="59" started-at="2018-05-26T21:08:20Z" finished-at="2018-05-26T21:08:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.search.loop.monitors.CPProfilerTest@6a0ee80]" name="test2" duration-ms="50" started-at="2018-05-26T21:08:20Z" finished-at="2018-05-26T21:08:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.solver.search.loop.monitors.CPProfilerTest@6a0ee80]" name="test3" duration-ms="32298" started-at="2018-05-26T21:08:20Z" finished-at="2018-05-26T21:08:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
      </class> <!-- org.chocosolver.solver.search.loop.monitors.CPProfilerTest -->
      <class name="org.chocosolver.solver.constraints.nary.SubcircuitTest">
        <test-method status="PASS" signature="test()[pri:0, instance:org.chocosolver.solver.constraints.nary.SubcircuitTest@185bf6e0]" name="test" duration-ms="3" started-at="2018-05-26T21:00:45Z" finished-at="2018-05-26T21:00:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.constraints.nary.SubcircuitTest@185bf6e0]" name="test1" duration-ms="2" started-at="2018-05-26T21:00:45Z" finished-at="2018-05-26T21:00:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test11()[pri:0, instance:org.chocosolver.solver.constraints.nary.SubcircuitTest@185bf6e0]" name="test11" duration-ms="6" started-at="2018-05-26T21:00:45Z" finished-at="2018-05-26T21:00:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test11 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.constraints.nary.SubcircuitTest@185bf6e0]" name="test2" duration-ms="1" started-at="2018-05-26T21:00:45Z" finished-at="2018-05-26T21:00:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.solver.constraints.nary.SubcircuitTest@185bf6e0]" name="test3" duration-ms="4" started-at="2018-05-26T21:00:45Z" finished-at="2018-05-26T21:00:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test4()[pri:0, instance:org.chocosolver.solver.constraints.nary.SubcircuitTest@185bf6e0]" name="test4" duration-ms="18" started-at="2018-05-26T21:00:45Z" finished-at="2018-05-26T21:00:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
      </class> <!-- org.chocosolver.solver.constraints.nary.SubcircuitTest -->
      <class name="org.chocosolver.util.objects.queues.CircularQueueTest">
        <test-method status="PASS" signature="testClear()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testClear" duration-ms="1" started-at="2018-05-26T20:57:55Z" finished-at="2018-05-26T20:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testCover()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testCover" duration-ms="1" started-at="2018-05-26T20:57:55Z" finished-at="2018-05-26T20:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCover -->
        <test-method status="PASS" signature="testEquals()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testEquals" duration-ms="1" started-at="2018-05-26T20:57:55Z" finished-at="2018-05-26T20:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method status="PASS" signature="testIndexOf()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testIndexOf" duration-ms="1" started-at="2018-05-26T20:57:55Z" finished-at="2018-05-26T20:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method status="PASS" signature="testGet()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testGet" duration-ms="0" started-at="2018-05-26T20:57:55Z" finished-at="2018-05-26T20:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method status="PASS" signature="testNoElement()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testNoElement" duration-ms="1" started-at="2018-05-26T20:57:55Z" finished-at="2018-05-26T20:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoElement -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testNominal" duration-ms="0" started-at="2018-05-26T20:57:55Z" finished-at="2018-05-26T20:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testRemoveElement()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testRemoveElement" duration-ms="1" started-at="2018-05-26T20:57:55Z" finished-at="2018-05-26T20:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveElement -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testRemove" duration-ms="0" started-at="2018-05-26T20:57:55Z" finished-at="2018-05-26T20:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="testRemoveNoSuchElement()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testRemoveNoSuchElement" duration-ms="1" started-at="2018-05-26T20:57:55Z" finished-at="2018-05-26T20:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveNoSuchElement -->
        <test-method status="PASS" signature="testSameElement()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testSameElement" duration-ms="2" started-at="2018-05-26T20:57:55Z" finished-at="2018-05-26T20:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSameElement -->
        <test-method status="PASS" signature="testSeveralIterationsMultipleElements()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testSeveralIterationsMultipleElements" duration-ms="5" started-at="2018-05-26T20:57:55Z" finished-at="2018-05-26T20:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSeveralIterationsMultipleElements -->
        <test-method status="PASS" signature="testSeveralIterationsOneElement()[pri:0, instance:org.chocosolver.util.objects.queues.CircularQueueTest@6ad7a305]" name="testSeveralIterationsOneElement" duration-ms="2" started-at="2018-05-26T20:57:55Z" finished-at="2018-05-26T20:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSeveralIterationsOneElement -->
      </class> <!-- org.chocosolver.util.objects.queues.CircularQueueTest -->
      <class name="org.chocosolver.solver.search.restart.NoGoodOnSolutionTest">
        <test-method status="PASS" signature="testA()[pri:0, instance:org.chocosolver.solver.search.restart.NoGoodOnSolutionTest@1764e45e]" name="testA" duration-ms="470" started-at="2018-05-26T21:03:09Z" finished-at="2018-05-26T21:03:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method status="PASS" signature="testANG()[pri:0, instance:org.chocosolver.solver.search.restart.NoGoodOnSolutionTest@1764e45e]" name="testANG" duration-ms="469" started-at="2018-05-26T21:03:09Z" finished-at="2018-05-26T21:03:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testANG -->
        <test-method status="PASS" signature="testNQ()[pri:0, instance:org.chocosolver.solver.search.restart.NoGoodOnSolutionTest@1764e45e]" name="testNQ" duration-ms="284" started-at="2018-05-26T21:03:10Z" finished-at="2018-05-26T21:03:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNQ -->
        <test-method status="PASS" signature="testNQ2()[pri:0, instance:org.chocosolver.solver.search.restart.NoGoodOnSolutionTest@1764e45e]" name="testNQ2" duration-ms="40" started-at="2018-05-26T21:03:10Z" finished-at="2018-05-26T21:03:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNQ2 -->
        <test-method status="PASS" signature="testNQ3()[pri:0, instance:org.chocosolver.solver.search.restart.NoGoodOnSolutionTest@1764e45e]" name="testNQ3" duration-ms="3" started-at="2018-05-26T21:03:10Z" finished-at="2018-05-26T21:03:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNQ3 -->
        <test-method status="PASS" signature="testNQ4()[pri:0, instance:org.chocosolver.solver.search.restart.NoGoodOnSolutionTest@1764e45e]" name="testNQ4" duration-ms="8" started-at="2018-05-26T21:03:10Z" finished-at="2018-05-26T21:03:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNQ4 -->
        <test-method status="PASS" signature="testNormal()[pri:0, instance:org.chocosolver.solver.search.restart.NoGoodOnSolutionTest@1764e45e]" name="testNormal" duration-ms="266" started-at="2018-05-26T21:03:10Z" finished-at="2018-05-26T21:03:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNormal -->
        <test-method status="PASS" signature="testRoS()[pri:0, instance:org.chocosolver.solver.search.restart.NoGoodOnSolutionTest@1764e45e]" name="testRoS" duration-ms="386" started-at="2018-05-26T21:03:10Z" finished-at="2018-05-26T21:03:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoS -->
        <test-method status="PASS" signature="testRoSNG()[pri:0, instance:org.chocosolver.solver.search.restart.NoGoodOnSolutionTest@1764e45e]" name="testRoSNG" duration-ms="748" started-at="2018-05-26T21:03:11Z" finished-at="2018-05-26T21:03:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoSNG -->
      </class> <!-- org.chocosolver.solver.search.restart.NoGoodOnSolutionTest -->
      <class name="org.chocosolver.util.objects.setDataStructures.backtrackable.ConstantSetsTest">
        <test-method status="PASS" signature="testCstArraySet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.ConstantSetsTest@61b76a7d]" name="testCstArraySet" duration-ms="4" started-at="2018-05-26T20:46:49Z" finished-at="2018-05-26T20:46:49Z">
          <exception class="java.lang.UnsupportedOperationException">
            <message>
              <![CDATA[Please use makeConstantSet method to create a FIXED_ARRAY set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException: Please use makeConstantSet method to create a FIXED_ARRAY set
	at org.chocosolver.util.objects.setDataStructures.SetFactory.makeSet(SetFactory.java:90)
	at org.chocosolver.util.objects.setDataStructures.SetFactory.makeStoredSet(SetFactory.java:64)
	at org.chocosolver.util.objects.setDataStructures.backtrackable.ConstantSetsTest.testCstArraySet(ConstantSetsTest.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCstArraySet -->
        <test-method status="PASS" signature="testCstIntervalSet()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.ConstantSetsTest@61b76a7d]" name="testCstIntervalSet" duration-ms="2" started-at="2018-05-26T20:46:49Z" finished-at="2018-05-26T20:46:49Z">
          <exception class="java.lang.UnsupportedOperationException">
            <message>
              <![CDATA[Please use makeConstantSet method to create a FIXED_INTERVAL set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException: Please use makeConstantSet method to create a FIXED_INTERVAL set
	at org.chocosolver.util.objects.setDataStructures.SetFactory.makeSet(SetFactory.java:91)
	at org.chocosolver.util.objects.setDataStructures.SetFactory.makeStoredSet(SetFactory.java:64)
	at org.chocosolver.util.objects.setDataStructures.backtrackable.ConstantSetsTest.testCstIntervalSet(ConstantSetsTest.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCstIntervalSet -->
      </class> <!-- org.chocosolver.util.objects.setDataStructures.backtrackable.ConstantSetsTest -->
      <class name="org.chocosolver.solver.constraints.nary.CostRegularTest">
        <test-method status="PASS" signature="ccostregular2()[pri:0, instance:org.chocosolver.solver.constraints.nary.CostRegularTest@7169d668]" name="ccostregular2" duration-ms="3254" started-at="2018-05-26T21:08:53Z" finished-at="2018-05-26T21:08:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ccostregular2 -->
        <test-method status="PASS" signature="ccostregular2WithCostAutomaton()[pri:0, instance:org.chocosolver.solver.constraints.nary.CostRegularTest@7169d668]" name="ccostregular2WithCostAutomaton" duration-ms="3223" started-at="2018-05-26T21:08:56Z" finished-at="2018-05-26T21:09:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ccostregular2WithCostAutomaton -->
        <test-method status="PASS" signature="compareVersionSpeedNew()[pri:0, instance:org.chocosolver.solver.constraints.nary.CostRegularTest@7169d668]" name="compareVersionSpeedNew" duration-ms="1500" started-at="2018-05-26T21:09:00Z" finished-at="2018-05-26T21:09:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareVersionSpeedNew -->
        <test-method status="PASS" signature="isCorrect()[pri:0, instance:org.chocosolver.solver.constraints.nary.CostRegularTest@7169d668]" name="isCorrect" duration-ms="1027" started-at="2018-05-26T21:09:01Z" finished-at="2018-05-26T21:09:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isCorrect -->
        <test-method status="PASS" signature="isCorrect2()[pri:0, instance:org.chocosolver.solver.constraints.nary.CostRegularTest@7169d668]" name="isCorrect2" duration-ms="1878" started-at="2018-05-26T21:09:02Z" finished-at="2018-05-26T21:09:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isCorrect2 -->
        <test-method status="PASS" signature="isCorrect2WithCostAutomaton()[pri:0, instance:org.chocosolver.solver.constraints.nary.CostRegularTest@7169d668]" name="isCorrect2WithCostAutomaton" duration-ms="1861" started-at="2018-05-26T21:09:04Z" finished-at="2018-05-26T21:09:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isCorrect2WithCostAutomaton -->
        <test-method status="PASS" signature="isCorrectWithCostAutomaton()[pri:0, instance:org.chocosolver.solver.constraints.nary.CostRegularTest@7169d668]" name="isCorrectWithCostAutomaton" duration-ms="757" started-at="2018-05-26T21:09:06Z" finished-at="2018-05-26T21:09:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isCorrectWithCostAutomaton -->
        <test-method status="PASS" signature="testJM1()[pri:0, instance:org.chocosolver.solver.constraints.nary.CostRegularTest@7169d668]" name="testJM1" duration-ms="1" started-at="2018-05-26T21:09:07Z" finished-at="2018-05-26T21:09:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJM1 -->
        <test-method status="PASS" signature="testSimpleAuto()[pri:0, instance:org.chocosolver.solver.constraints.nary.CostRegularTest@7169d668]" name="testSimpleAuto" duration-ms="109" started-at="2018-05-26T21:09:07Z" finished-at="2018-05-26T21:09:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleAuto -->
        <test-method status="PASS" signature="testSimpleAutoCostAutomaton()[pri:0, instance:org.chocosolver.solver.constraints.nary.CostRegularTest@7169d668]" name="testSimpleAutoCostAutomaton" duration-ms="113" started-at="2018-05-26T21:09:07Z" finished-at="2018-05-26T21:09:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleAutoCostAutomaton -->
      </class> <!-- org.chocosolver.solver.constraints.nary.CostRegularTest -->
      <class name="org.chocosolver.solver.constraints.set.MinElementTest">
        <test-method status="PASS" signature="testEmptySetKO()[pri:0, instance:org.chocosolver.solver.constraints.set.MinElementTest@c7c07ff]" name="testEmptySetKO" duration-ms="2" started-at="2018-05-26T21:09:41Z" finished-at="2018-05-26T21:09:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptySetKO -->
        <test-method status="PASS" signature="testEmptySetOK()[pri:0, instance:org.chocosolver.solver.constraints.set.MinElementTest@c7c07ff]" name="testEmptySetOK" duration-ms="1" started-at="2018-05-26T21:09:41Z" finished-at="2018-05-26T21:09:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptySetOK -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.MinElementTest@c7c07ff]" name="testNominal" duration-ms="2" started-at="2018-05-26T21:09:41Z" finished-at="2018-05-26T21:09:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testImpossible()[pri:0, instance:org.chocosolver.solver.constraints.set.MinElementTest@c7c07ff]" name="testImpossible" duration-ms="0" started-at="2018-05-26T21:09:41Z" finished-at="2018-05-26T21:09:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImpossible -->
        <test-method status="PASS" signature="testTrivialTrue()[pri:0, instance:org.chocosolver.solver.constraints.set.MinElementTest@c7c07ff]" name="testTrivialTrue" duration-ms="1" started-at="2018-05-26T21:09:41Z" finished-at="2018-05-26T21:09:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrivialTrue -->
        <test-method status="PASS" signature="testTrivialFalse()[pri:0, instance:org.chocosolver.solver.constraints.set.MinElementTest@c7c07ff]" name="testTrivialFalse" duration-ms="0" started-at="2018-05-26T21:09:41Z" finished-at="2018-05-26T21:09:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrivialFalse -->
      </class> <!-- org.chocosolver.solver.constraints.set.MinElementTest -->
      <class name="org.chocosolver.solver.constraints.nary.PropCondAllDiffTest">
        <test-method status="PASS" signature="noVariable()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="noVariable" duration-ms="23" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noVariable -->
        <test-method status="PASS" signature="singleVariable()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="singleVariable" duration-ms="20" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleVariable -->
        <test-method status="PASS" signature="testDynamicCondition()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="testDynamicCondition" duration-ms="2" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDynamicCondition -->
        <test-method status="PASS" signature="testEnumeratedValues()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="testEnumeratedValues" duration-ms="16" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumeratedValues -->
        <test-method status="PASS" signature="testExceptZero()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="testExceptZero" duration-ms="2" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExceptZero -->
        <test-method status="PASS" signature="testFreeVariables()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="testFreeVariables" duration-ms="33" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFreeVariables -->
        <test-method status="PASS" signature="testImpossible()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="testImpossible" duration-ms="2" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImpossible -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="testNominal" duration-ms="2" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testNominalNegative()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="testNominalNegative" duration-ms="3" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominalNegative -->
        <test-method status="PASS" signature="testPropagation()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="testPropagation" duration-ms="2" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPropagation -->
        <test-method status="PASS" signature="testTrivialFalse()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="testTrivialFalse" duration-ms="1" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrivialFalse -->
        <test-method status="PASS" signature="testTrivialTrue()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="testTrivialTrue" duration-ms="1" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrivialTrue -->
        <test-method status="PASS" signature="testTrueCondition()[pri:0, instance:org.chocosolver.solver.constraints.nary.PropCondAllDiffTest@238280df]" name="testTrueCondition" duration-ms="3" started-at="2018-05-26T20:57:51Z" finished-at="2018-05-26T20:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrueCondition -->
      </class> <!-- org.chocosolver.solver.constraints.nary.PropCondAllDiffTest -->
      <class name="org.chocosolver.util.tools.MathUtilsTest">
        <test-method status="PASS" signature="testDivCeil()[pri:0, instance:org.chocosolver.util.tools.MathUtilsTest@bf18412]" name="testDivCeil" duration-ms="0" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivCeil -->
        <test-method status="PASS" signature="testDivFloor()[pri:0, instance:org.chocosolver.util.tools.MathUtilsTest@bf18412]" name="testDivFloor" duration-ms="0" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivFloor -->
        <test-method status="PASS" signature="testMinMax()[pri:0, instance:org.chocosolver.util.tools.MathUtilsTest@bf18412]" name="testMinMax" duration-ms="0" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinMax -->
        <test-method status="PASS" signature="testSafeAdd()[pri:0, instance:org.chocosolver.util.tools.MathUtilsTest@bf18412]" name="testSafeAdd" duration-ms="0" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSafeAdd -->
        <test-method status="PASS" signature="testSafeMultiply()[pri:0, instance:org.chocosolver.util.tools.MathUtilsTest@bf18412]" name="testSafeMultiply" duration-ms="1" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSafeMultiply -->
        <test-method status="PASS" signature="testSafeSubstract()[pri:0, instance:org.chocosolver.util.tools.MathUtilsTest@bf18412]" name="testSafeSubstract" duration-ms="0" started-at="2018-05-26T21:00:18Z" finished-at="2018-05-26T21:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSafeSubstract -->
      </class> <!-- org.chocosolver.util.tools.MathUtilsTest -->
      <class name="org.chocosolver.memory.DynamicAdditionTest">
        <test-method status="PASS" signature="test1(org.chocosolver.memory.trailing.EnvironmentTrailing)[pri:0, instance:org.chocosolver.memory.DynamicAdditionTest@4edde05c]" name="test1" duration-ms="0" started-at="2018-05-26T21:02:33Z" data-provider="env" finished-at="2018-05-26T21:02:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@980142a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(org.chocosolver.memory.trailing.EnvironmentTrailing)[pri:0, instance:org.chocosolver.memory.DynamicAdditionTest@4edde05c]" name="test1" duration-ms="1" started-at="2018-05-26T21:02:33Z" data-provider="env" finished-at="2018-05-26T21:02:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@767bcf4d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2(org.chocosolver.memory.trailing.EnvironmentTrailing)[pri:0, instance:org.chocosolver.memory.DynamicAdditionTest@4edde05c]" name="test2" duration-ms="7" started-at="2018-05-26T21:02:33Z" data-provider="env" finished-at="2018-05-26T21:02:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@4e492c7d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test2(org.chocosolver.memory.trailing.EnvironmentTrailing)[pri:0, instance:org.chocosolver.memory.DynamicAdditionTest@4edde05c]" name="test2" duration-ms="8" started-at="2018-05-26T21:02:33Z" data-provider="env" finished-at="2018-05-26T21:02:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@332cf8ba]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3(org.chocosolver.memory.trailing.EnvironmentTrailing)[pri:0, instance:org.chocosolver.memory.DynamicAdditionTest@4edde05c]" name="test3" duration-ms="3092" started-at="2018-05-26T21:02:33Z" data-provider="env" finished-at="2018-05-26T21:02:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@12ad2a0b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test3(org.chocosolver.memory.trailing.EnvironmentTrailing)[pri:0, instance:org.chocosolver.memory.DynamicAdditionTest@4edde05c]" name="test3" duration-ms="78" started-at="2018-05-26T21:02:36Z" data-provider="env" finished-at="2018-05-26T21:02:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.chocosolver.memory.trailing.EnvironmentTrailing@1500c6e7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
      </class> <!-- org.chocosolver.memory.DynamicAdditionTest -->
      <class name="org.chocosolver.solver.variables.ScaleViewTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.solver.variables.ScaleViewTest@77988c45]" name="test1" duration-ms="0" started-at="2018-05-26T21:00:39Z" finished-at="2018-05-26T21:00:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="testCP01()[pri:0, instance:org.chocosolver.solver.variables.ScaleViewTest@77988c45]" name="testCP01" duration-ms="1" started-at="2018-05-26T21:00:39Z" finished-at="2018-05-26T21:00:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCP01 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.solver.variables.ScaleViewTest@77988c45]" name="test2" duration-ms="0" started-at="2018-05-26T21:00:39Z" finished-at="2018-05-26T21:00:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="testDec1()[pri:0, instance:org.chocosolver.solver.variables.ScaleViewTest@77988c45]" name="testDec1" duration-ms="1" started-at="2018-05-26T21:00:39Z" finished-at="2018-05-26T21:00:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDec1 -->
        <test-method status="PASS" signature="testIt1()[pri:0, instance:org.chocosolver.solver.variables.ScaleViewTest@77988c45]" name="testIt1" duration-ms="8" started-at="2018-05-26T21:00:39Z" finished-at="2018-05-26T21:00:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIt1 -->
        <test-method status="PASS" signature="testIt2()[pri:0, instance:org.chocosolver.solver.variables.ScaleViewTest@77988c45]" name="testIt2" duration-ms="6" started-at="2018-05-26T21:00:39Z" finished-at="2018-05-26T21:00:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIt2 -->
        <test-method status="PASS" signature="testJL01()[pri:0, instance:org.chocosolver.solver.variables.ScaleViewTest@77988c45]" name="testJL01" duration-ms="1" started-at="2018-05-26T21:00:39Z" finished-at="2018-05-26T21:00:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJL01 -->
        <test-method status="PASS" signature="testRandom1()[pri:0, instance:org.chocosolver.solver.variables.ScaleViewTest@77988c45]" name="testRandom1" duration-ms="5035" started-at="2018-05-26T21:00:39Z" finished-at="2018-05-26T21:00:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRandom1 -->
        <test-method status="PASS" signature="testRandom2()[pri:0, instance:org.chocosolver.solver.variables.ScaleViewTest@77988c45]" name="testRandom2" duration-ms="538" started-at="2018-05-26T21:00:44Z" finished-at="2018-05-26T21:00:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRandom2 -->
      </class> <!-- org.chocosolver.solver.variables.ScaleViewTest -->
      <class name="org.chocosolver.solver.search.strategy.decision.DecisionMakerTest">
        <test-method status="PASS" signature="testMakeIntDecision()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionMakerTest@1642968c]" name="testMakeIntDecision" duration-ms="1" started-at="2018-05-26T21:04:33Z" finished-at="2018-05-26T21:04:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMakeIntDecision -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionMakerTest@1642968c]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:04:33Z" finished-at="2018-05-26T21:04:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMakeRealDecision()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionMakerTest@1642968c]" name="testMakeRealDecision" duration-ms="1" started-at="2018-05-26T21:04:33Z" finished-at="2018-05-26T21:04:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMakeRealDecision -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionMakerTest@1642968c]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:04:33Z" finished-at="2018-05-26T21:04:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMakeSetDecision()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionMakerTest@1642968c]" name="testMakeSetDecision" duration-ms="1" started-at="2018-05-26T21:04:33Z" finished-at="2018-05-26T21:04:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMakeSetDecision -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionMakerTest@1642968c]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:04:33Z" finished-at="2018-05-26T21:04:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionMakerTest@1642968c]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:04:33Z" finished-at="2018-05-26T21:04:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSerializeIntDecision()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionMakerTest@1642968c]" name="testSerializeIntDecision" duration-ms="13" started-at="2018-05-26T21:04:33Z" finished-at="2018-05-26T21:04:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerializeIntDecision -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionMakerTest@1642968c]" name="setUp" is-config="true" duration-ms="0" started-at="2018-05-26T21:04:33Z" finished-at="2018-05-26T21:04:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSerializeSetDecision()[pri:0, instance:org.chocosolver.solver.search.strategy.decision.DecisionMakerTest@1642968c]" name="testSerializeSetDecision" duration-ms="3" started-at="2018-05-26T21:04:33Z" finished-at="2018-05-26T21:04:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerializeSetDecision -->
      </class> <!-- org.chocosolver.solver.search.strategy.decision.DecisionMakerTest -->
      <class name="org.chocosolver.solver.constraints.set.CardinalityTest">
        <test-method status="PASS" signature="testEmpty()[pri:0, instance:org.chocosolver.solver.constraints.set.CardinalityTest@19f1f330]" name="testEmpty" duration-ms="1" started-at="2018-05-26T21:10:02Z" finished-at="2018-05-26T21:10:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmpty -->
        <test-method status="PASS" signature="testNominal()[pri:0, instance:org.chocosolver.solver.constraints.set.CardinalityTest@19f1f330]" name="testNominal" duration-ms="2" started-at="2018-05-26T21:10:02Z" finished-at="2018-05-26T21:10:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNominal -->
        <test-method status="PASS" signature="testTwoVariables()[pri:0, instance:org.chocosolver.solver.constraints.set.CardinalityTest@19f1f330]" name="testTwoVariables" duration-ms="1" started-at="2018-05-26T21:10:02Z" finished-at="2018-05-26T21:10:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwoVariables -->
        <test-method status="PASS" signature="testUnfeasibleLB()[pri:0, instance:org.chocosolver.solver.constraints.set.CardinalityTest@19f1f330]" name="testUnfeasibleLB" duration-ms="1" started-at="2018-05-26T21:10:02Z" finished-at="2018-05-26T21:10:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnfeasibleLB -->
        <test-method status="PASS" signature="testUnfeasibleUB()[pri:0, instance:org.chocosolver.solver.constraints.set.CardinalityTest@19f1f330]" name="testUnfeasibleUB" duration-ms="0" started-at="2018-05-26T21:10:02Z" finished-at="2018-05-26T21:10:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnfeasibleUB -->
      </class> <!-- org.chocosolver.solver.constraints.set.CardinalityTest -->
      <class name="org.chocosolver.util.tools.ArrayUtilsTest">
        <test-method status="PASS" signature="testAppend()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testAppend" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppend -->
        <test-method status="PASS" signature="testAppend3()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testAppend3" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppend3 -->
        <test-method status="PASS" signature="testAppend1()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testAppend1" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppend1 -->
        <test-method status="PASS" signature="testAppend4()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testAppend4" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppend4 -->
        <test-method status="PASS" signature="testArray()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testArray" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArray -->
        <test-method status="PASS" signature="testArray2()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testArray2" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <exception class="java.lang.NegativeArraySizeException">
            <message>
              <![CDATA[Cannot create negative size array : 8 should be <= 5]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NegativeArraySizeException: Cannot create negative size array : 8 should be <= 5
	at org.chocosolver.util.tools.ArrayUtils.array(ArrayUtils.java:40)
	at org.chocosolver.util.tools.ArrayUtilsTest.testArray2(ArrayUtilsTest.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NegativeArraySizeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArray2 -->
        <test-method status="PASS" signature="testArray3()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testArray3" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArray3 -->
        <test-method status="PASS" signature="testBinarySearchInc1()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testBinarySearchInc1" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBinarySearchInc1 -->
        <test-method status="PASS" signature="testContains()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testContains" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method status="PASS" signature="testCreateNonRedundantSortedValues()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testCreateNonRedundantSortedValues" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNonRedundantSortedValues -->
        <test-method status="PASS" signature="testFlatten1()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testFlatten1" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFlatten1 -->
        <test-method status="PASS" signature="testFlatten()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testFlatten" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFlatten -->
        <test-method status="PASS" signature="testFlattenSubMatrix()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testFlattenSubMatrix" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFlattenSubMatrix -->
        <test-method status="PASS" signature="testFlatten2()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testFlatten2" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFlatten2 -->
        <test-method status="PASS" signature="testGet()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testGet" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method status="PASS" signature="testGet1()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testGet1" duration-ms="2" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet1 -->
        <test-method status="PASS" signature="testGetColumn()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testGetColumn" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColumn -->
        <test-method status="PASS" signature="testGetColumn1()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testGetColumn1" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColumn1 -->
        <test-method status="PASS" signature="testGetColumn4()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testGetColumn4" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColumn4 -->
        <test-method status="PASS" signature="testGetColumn3()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testGetColumn3" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColumn3 -->
        <test-method status="PASS" signature="testGetColumn5()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testGetColumn5" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColumn5 -->
        <test-method status="PASS" signature="testGetColumn6()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testGetColumn6" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColumn6 -->
        <test-method status="PASS" signature="testInverseSign()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testInverseSign" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInverseSign -->
        <test-method status="PASS" signature="testLength()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testLength" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLength -->
        <test-method status="PASS" signature="testLinspace()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testLinspace" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLinspace -->
        <test-method status="PASS" signature="testLinspace2()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testLinspace2" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <exception class="java.lang.NegativeArraySizeException">
            <message>
              <![CDATA[Cannot create negative size array]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NegativeArraySizeException: Cannot create negative size array
	at org.chocosolver.util.tools.ArrayUtils.linspace(ArrayUtils.java:66)
	at org.chocosolver.util.tools.ArrayUtilsTest.testLinspace2(ArrayUtilsTest.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NegativeArraySizeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLinspace2 -->
        <test-method status="PASS" signature="testOneToN()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testOneToN" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneToN -->
        <test-method status="PASS" signature="testOneToN2()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testOneToN2" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <exception class="java.lang.NegativeArraySizeException">
            <message>
              <![CDATA[Cannot create negative size array : 1 should be <= -5]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NegativeArraySizeException: Cannot create negative size array : 1 should be <= -5
	at org.chocosolver.util.tools.ArrayUtils.array(ArrayUtils.java:40)
	at org.chocosolver.util.tools.ArrayUtilsTest.testOneToN2(ArrayUtilsTest.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NegativeArraySizeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneToN2 -->
        <test-method status="PASS" signature="testPermutation()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testPermutation" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPermutation -->
        <test-method status="PASS" signature="testReverse()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testReverse" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverse -->
        <test-method status="PASS" signature="testReverse2()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testReverse2" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverse2 -->
        <test-method status="PASS" signature="testReverse1()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testReverse1" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverse1 -->
        <test-method status="PASS" signature="testSort()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testSort" duration-ms="3" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method status="PASS" signature="testSwallowCopy()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testSwallowCopy" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwallowCopy -->
        <test-method status="PASS" signature="testSwallowCopy1()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testSwallowCopy1" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwallowCopy1 -->
        <test-method status="PASS" signature="testTranspose()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testTranspose" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTranspose -->
        <test-method status="PASS" signature="testTranspose1()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testTranspose1" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTranspose1 -->
        <test-method status="PASS" signature="testZeroToN()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testZeroToN" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testZeroToN -->
        <test-method status="PASS" signature="testZeroToN2()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="testZeroToN2" duration-ms="1" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <exception class="java.lang.NegativeArraySizeException">
            <message>
              <![CDATA[Cannot create negative size array : 0 should be <= -2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NegativeArraySizeException: Cannot create negative size array : 0 should be <= -2
	at org.chocosolver.util.tools.ArrayUtils.array(ArrayUtils.java:40)
	at org.chocosolver.util.tools.ArrayUtilsTest.testZeroToN2(ArrayUtilsTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:54)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:44)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NegativeArraySizeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testZeroToN2 -->
        <test-method status="PASS" signature="toArray()[pri:0, instance:org.chocosolver.util.tools.ArrayUtilsTest@5da2966]" name="toArray" duration-ms="0" started-at="2018-05-26T21:00:20Z" finished-at="2018-05-26T21:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toArray -->
      </class> <!-- org.chocosolver.util.tools.ArrayUtilsTest -->
      <class name="org.chocosolver.solver.constraints.binary.ElementTest">
        <test-method status="PASS" signature="test1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="test1" duration-ms="0" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="test1" duration-ms="0" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="test2" duration-ms="0" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test2(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="test2" duration-ms="1" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="test3" duration-ms="4" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test3(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="test3" duration-ms="3" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test4(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="test4" duration-ms="0" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test4(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="test4" duration-ms="1" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test5(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="test5" duration-ms="3" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="test5(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="test5" duration-ms="1" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="testBUG(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testBUG" duration-ms="6" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBUG -->
        <test-method status="PASS" signature="testBUG(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testBUG" duration-ms="3" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBUG -->
        <test-method status="PASS" signature="testDec1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testDec1" duration-ms="2" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDec1 -->
        <test-method status="PASS" signature="testDec1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testDec1" duration-ms="2" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDec1 -->
        <test-method status="PASS" signature="testInc1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testInc1" duration-ms="3" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInc1 -->
        <test-method status="PASS" signature="testInc1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testInc1" duration-ms="2" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInc1 -->
        <test-method status="PASS" signature="testMemberReasoning()[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testMemberReasoning" duration-ms="1" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMemberReasoning -->
        <test-method status="PASS" signature="testModelOrFull(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testModelOrFull" duration-ms="1" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testModelOrFull -->
        <test-method status="PASS" signature="testModelOrFull(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testModelOrFull" duration-ms="1" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testModelOrFull -->
        <test-method status="PASS" signature="testModelOrMin(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testModelOrMin" duration-ms="1" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testModelOrMin -->
        <test-method status="PASS" signature="testModelOrMin(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testModelOrMin" duration-ms="1" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testModelOrMin -->
        <test-method status="PASS" signature="testNeg(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testNeg" duration-ms="9" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNeg -->
        <test-method status="PASS" signature="testNeg(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testNeg" duration-ms="4" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNeg -->
        <test-method status="PASS" signature="testProp2()[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testProp2" duration-ms="1" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProp2 -->
        <test-method status="PASS" signature="testProp1()[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testProp1" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProp1 -->
        <test-method status="PASS" signature="testProp3()[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testProp3" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProp3 -->
        <test-method status="PASS" signature="testProp4()[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testProp4" duration-ms="0" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProp4 -->
        <test-method status="PASS" signature="testProp5()[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testProp5" duration-ms="1" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProp5 -->
        <test-method status="PASS" signature="testProp6()[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testProp6" duration-ms="1" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProp6 -->
        <test-method status="PASS" signature="testProp7()[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testProp7" duration-ms="1" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProp7 -->
        <test-method status="PASS" signature="testProp8()[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testProp8" duration-ms="4" started-at="2018-05-26T20:55:33Z" finished-at="2018-05-26T20:55:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProp8 -->
        <test-method status="PASS" signature="testReg1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testReg1" duration-ms="9" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReg1 -->
        <test-method status="PASS" signature="testReg1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testReg1" duration-ms="6" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReg1 -->
        <test-method status="PASS" signature="testTAR1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testTAR1" duration-ms="3" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTAR1 -->
        <test-method status="PASS" signature="testTAR1(boolean)[pri:0, instance:org.chocosolver.solver.constraints.binary.ElementTest@444c0f9a]" name="testTAR1" duration-ms="1" started-at="2018-05-26T20:55:33Z" data-provider="params" finished-at="2018-05-26T20:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTAR1 -->
      </class> <!-- org.chocosolver.solver.constraints.binary.ElementTest -->
      <class name="org.chocosolver.solver.TestSolveur">
        <test-method status="PASS" signature="fakePigeonHolesTest()[pri:0, instance:org.chocosolver.solver.TestSolveur@25d23478]" name="fakePigeonHolesTest" duration-ms="1" started-at="2018-05-26T21:06:05Z" finished-at="2018-05-26T21:06:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fakePigeonHolesTest -->
        <test-method status="PASS" signature="testBinaryCliqueNeq()[pri:0, instance:org.chocosolver.solver.TestSolveur@25d23478]" name="testBinaryCliqueNeq" duration-ms="290" started-at="2018-05-26T21:06:05Z" finished-at="2018-05-26T21:06:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBinaryCliqueNeq -->
        <test-method status="PASS" signature="testCN3to8()[pri:0, instance:org.chocosolver.solver.TestSolveur@25d23478]" name="testCN3to8" duration-ms="5483" started-at="2018-05-26T21:06:05Z" finished-at="2018-05-26T21:06:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCN3to8 -->
        <test-method status="PASS" signature="testCN9()[pri:0, instance:org.chocosolver.solver.TestSolveur@25d23478]" name="testCN9" duration-ms="126826" started-at="2018-05-26T21:06:11Z" finished-at="2018-05-26T21:08:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCN9 -->
        <test-method status="PASS" signature="testCycleLt()[pri:0, instance:org.chocosolver.solver.TestSolveur@25d23478]" name="testCycleLt" duration-ms="2" started-at="2018-05-26T21:08:18Z" finished-at="2018-05-26T21:08:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCycleLt -->
        <test-method status="PASS" signature="testD3to6()[pri:0, instance:org.chocosolver.solver.TestSolveur@25d23478]" name="testD3to6" duration-ms="1301" started-at="2018-05-26T21:08:18Z" finished-at="2018-05-26T21:08:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD3to6 -->
        <test-method status="PASS" signature="testDO3to6()[pri:0, instance:org.chocosolver.solver.TestSolveur@25d23478]" name="testDO3to6" duration-ms="1307" started-at="2018-05-26T21:08:19Z" finished-at="2018-05-26T21:08:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDO3to6 -->
        <test-method status="PASS" signature="testOneAllDiff()[pri:0, instance:org.chocosolver.solver.TestSolveur@25d23478]" name="testOneAllDiff" duration-ms="56" started-at="2018-05-26T21:08:20Z" finished-at="2018-05-26T21:08:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneAllDiff -->
      </class> <!-- org.chocosolver.solver.TestSolveur -->
      <class name="org.chocosolver.solver.variables.TaskTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:02:39Z" finished-at="2018-05-26T21:02:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testBadDomainFilteringKO()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="testBadDomainFilteringKO" duration-ms="1" started-at="2018-05-26T21:02:39Z" finished-at="2018-05-26T21:02:39Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (org.chocosolver.solver.variables.Task$TaskMonitorEnum@4b481a7a, IV_4 = {5..6}) : new lower bound is greater than upper bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBadDomainFilteringKO -->
        <test-method status="PASS" signature="testBadDomainFilteringOK()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="testBadDomainFilteringOK" duration-ms="1" started-at="2018-05-26T21:02:39Z" finished-at="2018-05-26T21:02:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBadDomainFilteringOK -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:02:39Z" finished-at="2018-05-26T21:02:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:02:39Z" finished-at="2018-05-26T21:02:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testCumulativeConstraint()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="testCumulativeConstraint" duration-ms="1673" started-at="2018-05-26T21:02:39Z" finished-at="2018-05-26T21:02:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCumulativeConstraint -->
        <test-method status="PASS" signature="testCumulativeConstraintKO()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="testCumulativeConstraintKO" duration-ms="1" started-at="2018-05-26T21:02:41Z" finished-at="2018-05-26T21:02:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCumulativeConstraintKO -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:02:41Z" finished-at="2018-05-26T21:02:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testDecreaseDuration()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="testDecreaseDuration" duration-ms="1" started-at="2018-05-26T21:02:41Z" finished-at="2018-05-26T21:02:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDecreaseDuration -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:02:41Z" finished-at="2018-05-26T21:02:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testIncreaseDuration()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="testIncreaseDuration" duration-ms="0" started-at="2018-05-26T21:02:41Z" finished-at="2018-05-26T21:02:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIncreaseDuration -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:02:41Z" finished-at="2018-05-26T21:02:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testNegativeDuration()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="testNegativeDuration" duration-ms="1" started-at="2018-05-26T21:02:41Z" finished-at="2018-05-26T21:02:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeDuration -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:02:41Z" finished-at="2018-05-26T21:02:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:02:41Z" finished-at="2018-05-26T21:02:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRemoveValueSameVariable()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="testRemoveValueSameVariable" duration-ms="1" started-at="2018-05-26T21:02:41Z" finished-at="2018-05-26T21:02:41Z">
          <exception class="org.chocosolver.solver.exception.ContradictionException">
            <full-stacktrace>
              <![CDATA[CONTRADICTION (org.chocosolver.solver.variables.Task$TaskMonitorEnum@654e39d, IV_4 = {-5..-1}) : new upper bound is lesser than lower bound
]]>
            </full-stacktrace>
          </exception> <!-- org.chocosolver.solver.exception.ContradictionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveValueSameVariable -->
        <test-method status="PASS" signature="testUpdateStart()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="testUpdateStart" duration-ms="1" started-at="2018-05-26T21:02:41Z" finished-at="2018-05-26T21:02:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateStart -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.chocosolver.solver.variables.TaskTest@234bfc8c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-26T21:02:41Z" finished-at="2018-05-26T21:02:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- org.chocosolver.solver.variables.TaskTest -->
      <class name="org.chocosolver.solver.constraints.checker.correctness.TestCorrectness">
        <test-method status="PASS" signature="testABSOLUTE()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testABSOLUTE" duration-ms="2108" started-at="2018-05-26T20:48:34Z" finished-at="2018-05-26T20:48:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testABSOLUTE -->
        <test-method status="PASS" signature="testALLDIFFERENT()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testALLDIFFERENT" duration-ms="4985" started-at="2018-05-26T20:48:37Z" finished-at="2018-05-26T20:48:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testALLDIFFERENT -->
        <test-method status="PASS" signature="testAMONG()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testAMONG" duration-ms="5124" started-at="2018-05-26T20:48:42Z" finished-at="2018-05-26T20:48:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAMONG -->
        <test-method status="PASS" signature="testCOUNT()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testCOUNT" duration-ms="4939" started-at="2018-05-26T20:48:47Z" finished-at="2018-05-26T20:48:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCOUNT -->
        <test-method status="PASS" signature="testCircuit()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testCircuit" duration-ms="975" started-at="2018-05-26T20:48:52Z" finished-at="2018-05-26T20:48:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCircuit -->
        <test-method status="PASS" signature="testCumulative()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testCumulative" duration-ms="6042" started-at="2018-05-26T20:48:53Z" finished-at="2018-05-26T20:48:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCumulative -->
        <test-method status="PASS" signature="testDiffn()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testDiffn" duration-ms="8566" started-at="2018-05-26T20:48:59Z" finished-at="2018-05-26T20:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDiffn -->
        <test-method status="PASS" signature="testELEMENT()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testELEMENT" duration-ms="2743" started-at="2018-05-26T20:49:07Z" finished-at="2018-05-26T20:49:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testELEMENT -->
        <test-method status="PASS" signature="testEQ()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testEQ" duration-ms="1479" started-at="2018-05-26T20:49:10Z" finished-at="2018-05-26T20:49:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEQ -->
        <test-method status="PASS" signature="testGCC()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testGCC" duration-ms="11007" started-at="2018-05-26T20:49:11Z" finished-at="2018-05-26T20:49:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGCC -->
        <test-method status="PASS" signature="testINVERSECHANNELING()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testINVERSECHANNELING" duration-ms="10585" started-at="2018-05-26T20:49:22Z" finished-at="2018-05-26T20:49:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testINVERSECHANNELING -->
        <test-method status="PASS" signature="testIncrementalCumulative()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testIncrementalCumulative" duration-ms="6274" started-at="2018-05-26T20:49:33Z" finished-at="2018-05-26T20:49:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIncrementalCumulative -->
        <test-method status="PASS" signature="testIntValuePrecedeChain()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testIntValuePrecedeChain" duration-ms="9512" started-at="2018-05-26T20:49:39Z" finished-at="2018-05-26T20:49:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIntValuePrecedeChain -->
        <test-method status="PASS" signature="testLEX()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testLEX" duration-ms="3597" started-at="2018-05-26T20:49:49Z" finished-at="2018-05-26T20:49:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLEX -->
        <test-method status="PASS" signature="testLEXCH()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testLEXCH" duration-ms="3174" started-at="2018-05-26T20:49:52Z" finished-at="2018-05-26T20:49:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLEXCH -->
        <test-method status="PASS" signature="testMAX()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testMAX" duration-ms="12772" started-at="2018-05-26T20:49:56Z" finished-at="2018-05-26T20:50:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMAX -->
        <test-method status="PASS" signature="testMDD()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testMDD" duration-ms="8913" started-at="2018-05-26T20:50:08Z" finished-at="2018-05-26T20:50:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMDD -->
        <test-method status="PASS" signature="testMIN()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testMIN" duration-ms="10106" started-at="2018-05-26T20:50:17Z" finished-at="2018-05-26T20:50:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMIN -->
        <test-method status="PASS" signature="testNEQ()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testNEQ" duration-ms="460" started-at="2018-05-26T20:50:27Z" finished-at="2018-05-26T20:50:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNEQ -->
        <test-method status="PASS" signature="testNVALUES()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testNVALUES" duration-ms="7850" started-at="2018-05-26T20:50:28Z" finished-at="2018-05-26T20:50:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNVALUES -->
        <test-method status="PASS" signature="testPLUSAC()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testPLUSAC" duration-ms="8566" started-at="2018-05-26T20:50:36Z" finished-at="2018-05-26T20:50:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPLUSAC -->
        <test-method status="PASS" signature="testPLUSBC()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testPLUSBC" duration-ms="652" started-at="2018-05-26T20:50:44Z" finished-at="2018-05-26T20:50:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPLUSBC -->
        <test-method status="PASS" signature="testPath()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testPath" duration-ms="1744" started-at="2018-05-26T20:50:45Z" finished-at="2018-05-26T20:50:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPath -->
        <test-method status="PASS" signature="testSORT()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testSORT" duration-ms="10063" started-at="2018-05-26T20:50:47Z" finished-at="2018-05-26T20:50:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSORT -->
        <test-method status="PASS" signature="testSubcircuit()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testSubcircuit" duration-ms="440" started-at="2018-05-26T20:50:57Z" finished-at="2018-05-26T20:50:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubcircuit -->
        <test-method status="PASS" signature="testTIMES()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testTIMES" duration-ms="2464" started-at="2018-05-26T20:50:57Z" finished-at="2018-05-26T20:51:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTIMES -->
        <test-method status="PASS" signature="testTree()[pri:0, instance:org.chocosolver.solver.constraints.checker.correctness.TestCorrectness@8b1170f]" name="testTree" duration-ms="6361" started-at="2018-05-26T20:51:00Z" finished-at="2018-05-26T20:51:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTree -->
      </class> <!-- org.chocosolver.solver.constraints.checker.correctness.TestCorrectness -->
      <class name="org.chocosolver.util.objects.setDataStructures.backtrackable.StoredIntLinkedListTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.StoredIntLinkedListTest@57f89680]" name="test1" duration-ms="0" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.StoredIntLinkedListTest@57f89680]" name="test2" duration-ms="1" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:org.chocosolver.util.objects.setDataStructures.backtrackable.StoredIntLinkedListTest@57f89680]" name="test3" duration-ms="10952" started-at="2018-05-26T20:51:12Z" finished-at="2018-05-26T20:51:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
      </class> <!-- org.chocosolver.util.objects.setDataStructures.backtrackable.StoredIntLinkedListTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
