<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd">
<suite guice-stage="DEVELOPMENT" verbose="0" name="Failed suite [RedisConnector_IntegrationTest_Suite]">
  <test name="Redis Commands Test Suite">
    <classes>
      <class name="org.ballerinalang.redis.actions.RedisConnectionTest"/>
      <class name="org.ballerinalang.redis.actions.RedisStringCommandTest"/>
      <class name="org.ballerinalang.redis.actions.RedisListCommandTest"/>
      <class name="org.ballerinalang.redis.actions.RedisSetCommandTest"/>
      <class name="org.ballerinalang.redis.actions.RedisSortedSetCommandTest"/>
      <class name="org.ballerinalang.redis.actions.RedisHashCommandsTest"/>
      <class name="org.ballerinalang.redis.actions.RedisKeyCommandTest"/>
    </classes>
  </test> <!-- Redis Commands Test Suite -->
  <test name="Redis Commands Test Suite(failed)">
    <classes>
      <class name="org.ballerinalang.redis.actions.RedisHashCommandsTest">
        <methods>
          <include name="testHSetNxCommand"/>
          <include name="testHKeysCommand"/>
          <include name="setup"/>
          <include name="testHStrlnCommand"/>
          <include name="testHGetAllCommand"/>
          <include name="testHGetCommand"/>
          <include name="testHLenCommand"/>
          <include name="testHDelCommand"/>
          <include name="testHIncrByCommand"/>
          <include name="testHSetCommand"/>
          <include name="testHValsCommand"/>
          <include name="testHIncrByFloatCommand"/>
          <include name="testHExistsCommand"/>
          <include name="testHMSetCommand"/>
          <include name="testHMGetCommand"/>
        </methods>
      </class> <!-- org.ballerinalang.redis.actions.RedisHashCommandsTest -->
      <class name="org.ballerinalang.redis.actions.RedisSortedSetCommandTest">
        <methods>
          <include name="testZCardCommand"/>
          <include name="testZIncrByCommand"/>
          <include name="testZCountCommand"/>
          <include name="testZRemCommand"/>
          <include name="testZRankCommand"/>
          <include name="testZRevRangeByScoreCommand"/>
          <include name="testZRevRankCommand"/>
          <include name="setup"/>
          <include name="testZRemRangeByRankCommand"/>
          <include name="testZRemRangeByLexCommand"/>
          <include name="testZUnionStoreCommand"/>
          <include name="testZInterStoreCommand"/>
          <include name="testZRangeByLexCommand"/>
          <include name="testZAddCommand"/>
          <include name="testZLexCountCommand"/>
          <include name="testZRangeCommand"/>
          <include name="testZRevRangeByLexCommand"/>
          <include name="testZScoreCommand"/>
          <include name="testZRevRangeCommand"/>
          <include name="testZRangeByScoreCommand"/>
          <include name="testZRemRangeByScoreCommand"/>
        </methods>
      </class> <!-- org.ballerinalang.redis.actions.RedisSortedSetCommandTest -->
      <class name="org.ballerinalang.redis.actions.RedisStringCommandTest">
        <methods>
          <include name="testMSetCommand"/>
          <include name="testMSetNxCommand"/>
          <include name="testSetExCommand"/>
          <include name="testGetCommand"/>
          <include name="testSetBitCommand"/>
          <include name="testGetRangeCommand"/>
          <include name="testSetCommand"/>
          <include name="testBitCountCommand"/>
          <include name="testBitOpXorCommand"/>
          <include name="testGetSetCommandNilOutput"/>
          <include name="testDecrByCommand"/>
          <include name="setup"/>
          <include name="testGetCommandNilOutput"/>
          <include name="testIncrCommand"/>
          <include name="testPSetExCommand"/>
          <include name="testIncrByFloatCommand"/>
          <include name="testAppendCommand"/>
          <include name="testGetBitCommand"/>
          <include name="testGetSetCommand"/>
          <include name="testDecrCommand"/>
          <include name="testBitOpNotCommand"/>
          <include name="testIncrByCommand"/>
          <include name="testBitOpAndCommand"/>
          <include name="testStrlnCommand"/>
          <include name="testMGetCommand"/>
          <include name="testSetNxCommand"/>
          <include name="testBitOpOrCommand"/>
          <include name="testSetRangeCommand"/>
        </methods>
      </class> <!-- org.ballerinalang.redis.actions.RedisStringCommandTest -->
      <class name="org.ballerinalang.redis.actions.RedisConnectionTest">
        <methods>
          <include name="setUp"/>
          <include name="testConnectionRelease"/>
          <include name="testInitWithConnectionParams"/>
          <include name="testPing"/>
          <include name="testEcho"/>
          <include name="setup"/>
          <include name="cleanUp"/>
        </methods>
      </class> <!-- org.ballerinalang.redis.actions.RedisConnectionTest -->
      <class name="org.ballerinalang.redis.actions.RedisKeyCommandTest">
        <methods>
          <include name="testExpireCommand"/>
          <include name="testPExpireCommand"/>
          <include name="testSortCommand"/>
          <include name="testRandomKeyCommand"/>
          <include name="testRenameNxCommand"/>
          <include name="testKeysCommand"/>
          <include name="setup"/>
          <include name="testRandomKeyCommandNilOutput"/>
          <include name="testTypeCommand"/>
          <include name="testRenameCommand"/>
          <include name="testDelCommand"/>
          <include name="cleanup"/>
          <include name="testTtlCommand"/>
          <include name="testMoveCommand"/>
          <include name="testPersistCommand"/>
          <include name="testPTtlCommand"/>
          <include name="testExistsCommand"/>
        </methods>
      </class> <!-- org.ballerinalang.redis.actions.RedisKeyCommandTest -->
      <class name="org.ballerinalang.redis.actions.RedisListCommandTest">
        <methods>
          <include name="testLInsertCommand"/>
          <include name="testLLenCommand"/>
          <include name="testBLPopCommand"/>
          <include name="testLPopCommandNilOutput"/>
          <include name="testLSetCommand"/>
          <include name="testBRPopCommand"/>
          <include name="testRPopLPushCommand"/>
          <include name="testBRPopCommandNilOutput"/>
          <include name="testRPushCommand"/>
          <include name="setup"/>
          <include name="testBLPopCommandNilOutput"/>
          <include name="testLRemCommand"/>
          <include name="testLTrimCommand"/>
          <include name="testLPopCommand"/>
          <include name="testLRangeCommand"/>
          <include name="testRPopCommandNilOutput"/>
          <include name="testLPushXCommand"/>
          <include name="testRPopCommand"/>
          <include name="testLPushCommand"/>
          <include name="testLIndexCommand"/>
          <include name="testRPushXCommand"/>
        </methods>
      </class> <!-- org.ballerinalang.redis.actions.RedisListCommandTest -->
      <class name="org.ballerinalang.redis.actions.RedisSetCommandTest">
        <methods>
          <include name="testRandMemberCommandNilOutput"/>
          <include name="testSPopCommandNilOutput"/>
          <include name="testSUnionCommand"/>
          <include name="testSDiffStoreCommand"/>
          <include name="testSRemCommand"/>
          <include name="testSIsMemberCommand"/>
          <include name="testSMembersCommand"/>
          <include name="testSAddCommand"/>
          <include name="testSInterStoreCommand"/>
          <include name="testSPopCommand"/>
          <include name="testSUnionStoreCommand"/>
          <include name="testSDiffCommand"/>
          <include name="setup"/>
          <include name="testSInterCommand"/>
          <include name="testRandMemberCommand"/>
        </methods>
      </class> <!-- org.ballerinalang.redis.actions.RedisSetCommandTest -->
    </classes>
  </test> <!-- Redis Commands Test Suite(failed) -->
</suite> <!-- Failed suite [RedisConnector_IntegrationTest_Suite] -->
