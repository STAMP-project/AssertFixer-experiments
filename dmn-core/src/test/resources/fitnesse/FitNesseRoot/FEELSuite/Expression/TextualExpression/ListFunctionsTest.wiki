# Choose Slim protocol
!define TEST_SYSTEM {slim}

!1 Numeric Functions
!|FEEL Expression Fixture                                  |
|expression                       |scope|output?           |
|list contains([1, 2, 3], 1)      |     |true              |
|count([1, 2, 3])                 |     |3                 |
|min([1, 2, 3])                   |     |1                 |
|min(1, 2, 3)                     |     |1                 |
|max([1, 2, 3])                   |     |3                 |
|max(1, 2, 3)                     |     |3                 |
|sum([1, 2, 3])                   |     |6                 |
|sum(1, 2, 3)                     |     |6                 |
|mean([1, 2, 3])                  |     |2                 |
|mean(1, 2, 3)                    |     |2                 |
|and([true, true, false])         |     |false             |
|and(true, true, false)           |     |false             |
|and([])                          |     |true              |
|and(0)                           |     |null              |
|or([true, true, false])          |     |true              |
|or(true, true, false)            |     |true              |
|or([])                           |     |false             |
|or(0)                            |     |null              |
|sublist([1, 2, 3], 1)            |     |[1, 2, 3]         |
|sublist([1, 2, 3], 2)            |     |[2, 3]            |
|sublist([1, 2, 3], 3)            |     |[3]               |
|sublist([1, 2, 3], -1)           |     |[3]               |
|sublist([1, 2, 3], -2)           |     |[2, 3]            |
|sublist([1, 2, 3], -3)           |     |[1, 2, 3]         |
|sublist([1, 2, 3], 0)            |     |[]                |
|sublist([1, 2, 3], 6)            |     |[]                |
|sublist([1, 2, 3], 1, 2)         |     |[1, 2]            |
|sublist([1, 2, 3], 2, 1)         |     |[2]               |
|sublist([1, 2, 3],-1,1)          |     |[3]               |
|sublist([1, 2, 3],-2,1)          |     |[2]               |
|sublist([1, 2, 3],-2,2)          |     |[2, 3]            |
|append([1, 2, 3], 4)             |     |[1, 2, 3, 4]      |
|append([1, 2, 3], 4, 5)          |     |[1, 2, 3, 4, 5]   |
|concatenate([1, 2, 3], [4, 5, 6])|     |[1, 2, 3, 4, 5, 6]|
|concatenate([1], [2], [3, 4, 5]) |     |[1, 2, 3, 4, 5]   |
|insert before([1, 2, 3], 1, 4)   |     |[4, 1, 2, 3]      |
|insert before([1, 2, 3], -1, 4)  |     |[1, 2, 4, 3]      |
|remove([1, 2, 3], 1)             |     |[2, 3]            |
|reverse([1, 2, 3])               |     |[3, 2, 1]         |
|index of([1, 2, 3], 3)           |     |[3]               |
|union([1, 2, 3], [4, 5, 6])      |     |[1, 2, 3, 4, 5, 6]|
|distinct values([1, 2, 3])       |     |[1, 2, 3]         |
|flatten([1, 2, 3])               |     |[1, 2, 3]         |
|flatten([1, [2], 3])             |     |[1, 2, 3]         |
|flatten([1, [[2]], 3])           |     |[1, 2, 3]         |
|flatten([1, [2, 3]])             |     |[1, 2, 3]         |
