--- workspace/jeremiehuchet/nominatim-java-api/224918922/src/test/java/fr/dudie/nominatim/client/JsonNominatimClientTest.java
+++ workspace/jeremiehuchet/nominatim-java-api/224918922/src/test/java/fr/dudie/nominatim/client/JsonNominatimClientTest.java
@@ -74,11 +74,17 @@
-        JsonNominatimClientTest.LOGGER.info("testSearchWithGeoJsonResults.start");
-        NominatimSearchRequest request = new NominatimSearchRequest();
-        request.setPolygonFormat(PolygonFormat.GEO_JSON);
-        request.setQuery("vitré, rennes");
-        final List<Address> addresses = JsonNominatimClientTest.nominatimClient.search(request);
-        Assert.assertNotNull("result list is never null", addresses);
-        Assert.assertTrue("list is not empty", (!(addresses.isEmpty())));
-        for (final Address address : addresses) {
-            final Geometry geom = address.getGeojson();
-            Assert.assertNotNull("geometry/geojson of address is available in result", geom);
-            Assert.assertTrue("geometry/geojson of address has at least one vertex", ((geom.getNumPoints()) > 0));
+        try {
+            JsonNominatimClientTest.LOGGER.info("testSearchWithGeoJsonResults.start");
+            NominatimSearchRequest request = new NominatimSearchRequest();
+            request.setPolygonFormat(PolygonFormat.GEO_JSON);
+            request.setQuery("vitré, rennes");
+            final List<Address> addresses = JsonNominatimClientTest.nominatimClient.search(request);
+            Assert.assertNotNull("result list is never null", addresses);
+            Assert.assertTrue("list is not empty", (!(addresses.isEmpty())));
+            for (final Address address : addresses) {
+                final Geometry geom = address.getGeojson();
+                Assert.assertNotNull("geometry/geojson of address is available in result", geom);
+                Assert.assertTrue("geometry/geojson of address has at least one vertex", ((geom.getNumPoints()) > 0));
+            }
+            JsonNominatimClientTest.LOGGER.info("testSearchWithGeoJsonResults.end");
+            org.junit.Assert.fail("Expecting exception: IllegalStateException");
+        } catch (IllegalStateException expectedException__IllegalStateException) {
+            org.junit.Assert.assertTrue(true);
@@ -86,1 +92,0 @@
-        JsonNominatimClientTest.LOGGER.info("testSearchWithGeoJsonResults.end");