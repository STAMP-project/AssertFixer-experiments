package com.techmisal.hard;

import org.junit.Assert;
import org.junit.Test;

public class SudokuSolverTest {

	private SudokuSolver sudokuSolver = new SudokuSolver();

	@Test
	public void testSudokuEasy() {
		char[][] board = new char[][] {{'5','3','.','.','7','.','.','.','.'},
			{'6','.','.','1','9','5','.','.','.'},
			{'.','9','8','.','.','.','.','6','.'},
			{'8','.','.','.','6','.','.','.','3'},
			{'4','.','.','8','.','3','.','.','1'},
			{'7','.','.','.','2','.','.','.','6'},
			{'.','6','.','.','.','.','2','8','.'},
			{'.','.','.','4','1','9','.','.','5'},
			{'.','.','.','.','8','.','.','7','9'}};
		char[][] answer = new char[][] {{'5', '3', '4', '6', '7', '8', '9', '1', '2'},
			{'6', '7', '2', '1', '9', '5', '3', '4', '8'},
			{'1', '9', '8', '3', '4', '2', '5', '6', '7'},
			{'8', '5', '9', '7', '6', '1', '4', '2', '3'},
			{'4', '2', '6', '8', '5', '3', '7', '9', '1'},
			{'7', '1', '3', '9', '2', '4', '8', '5', '6'},
			{'9', '6', '1', '5', '3', '7', '2', '8', '4'},
			{'2', '8', '7', '4', '1', '9', '6', '3', '5'},
			{'3', '4', '5', '2', '8', '6', '1', '7', '9'}};
		sudokuSolver.solveSudoku(board);
		Assert.assertArrayEquals(answer, board);
	}
	
	@Test
	public void testSudokuMedium() {
		char[][] board = new char[][] {{'1','.','.','.','.','8','.','.','.'},
			{'.','8','.','7','4','.','1','.','5'},
			{'.','.','7','9','2','.','.','3','.'},
			{'9','.','.','1','.','.','.','.','4'},
			{'2','.','.','.','.','.','.','.','1'},
			{'4','.','.','.','.','5','.','.','3'},
			{'.','2','.','.','5','4','8','.','.'},
			{'8','.','4','.','9','7','.','1','.'},
			{'.','.','.','8','.','.','.','.','6'}};
		char[][] answer = new char[][] {{'1', '3', '2', '5', '6', '8', '4', '7', '9'},
			{'6', '8', '9', '7', '4', '3', '1', '2', '5'},
			{'5', '4', '7', '9', '2', '1', '6', '3', '8'},
			{'9', '7', '3', '1', '8', '6', '2', '5', '4'},
			{'2', '5', '6', '4', '3', '9', '7', '8', '1'},
			{'4', '1', '8', '2', '7', '5', '9', '6', '3'},
			{'3', '2', '1', '6', '5', '4', '8', '9', '7'},
			{'8', '6', '4', '3', '9', '7', '5', '1', '2'},
			{'7', '9', '5', '8', '1', '2', '3', '4', '6'}};
		sudokuSolver.solveSudoku(board);
		Assert.assertArrayEquals(answer, board);
	}
}