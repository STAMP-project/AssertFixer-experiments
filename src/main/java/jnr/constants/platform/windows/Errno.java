// WARNING: This file is autogenerated. DO NOT EDIT!
// Generated Mon Dec 28 13:51:49 +0100 2009
package jnr.constants.platform.windows;
public enum Errno implements jnr.constants.Constant {
E2BIG(7),
// ENOMSG not defined
// ENETDOWN not defined
// ECONNABORTED not defined
ENFILE(23),
// ESHUTDOWN not defined
// ENETUNREACH not defined
EPERM(1),
EDEADLK(36),
EBADF(9),
EMFILE(24),
// EADDRNOTAVAIL not defined
// EREMOTE not defined
// ETIMEDOUT not defined
// EMSGSIZE not defined
ENXIO(6),
// EMULTIHOP not defined
// EHOSTDOWN not defined
// EOPNOTSUPP not defined
ECHILD(10),
ERANGE(34),
// ELOOP not defined
// ESTALE not defined
EBUSY(16),
// ENOBUFS not defined
EAGAIN(11),
// ETIME not defined
// EALREADY not defined
// ETXTBSY not defined
ESPIPE(29),
// EPROTONOSUPPORT not defined
// EPROTO not defined
EFBIG(27),
EINVAL(22),
// ENOTSOCK not defined
// EHOSTUNREACH not defined
// ENOSTR not defined
// ETOOMANYREFS not defined
// EAFNOSUPPORT not defined
EXDEV(18),
// EDESTADDRREQ not defined
// ENOTCONN not defined
EACCES(13),
// ECONNRESET not defined
EIO(5),
// ENOSR not defined
// ENODATA not defined
EDOM(33),
// ENOPROTOOPT not defined
// EINPROGRESS not defined
// EADDRINUSE not defined
ENOTEMPTY(41),
// EWOULDBLOCK not defined
// ENOTBLK not defined
ENOLCK(39),
// EDQUOT not defined
EINTR(4),
ENOTDIR(20),
EROFS(30),
// ECONNREFUSED not defined
// EBADMSG not defined
EISDIR(21),
ENOMEM(12),
ENODEV(19),
ENOSPC(28),
// ENOLINK not defined
// EISCONN not defined
// ESOCKTNOSUPPORT not defined
ENOEXEC(8),
// ENETRESET not defined
// EIDRM not defined
ENOSYS(40),
EEXIST(17),
ENOTTY(25),
ENAMETOOLONG(38),
EPIPE(32),
// EOVERFLOW not defined
// EUSERS not defined
// EPFNOSUPPORT not defined
ESRCH(3),
// EPROTOTYPE not defined
EILSEQ(42),
EFAULT(14),
ENOENT(2),
EMLINK(31);
private final int value;
private Errno(int value) { this.value = value; }
public static final long MIN_VALUE = 1;
public static final long MAX_VALUE = 42;

static final class StringTable {
  public static final java.util.Map<Errno, String> descriptions = generateTable();
  public static final java.util.Map<Errno, String> generateTable() {
    java.util.Map<Errno, String> map = new java.util.EnumMap<Errno, String>(Errno.class);
  map.put(E2BIG, "Arg list too long");
  map.put(ENFILE, "Too many open files in system");
  map.put(EPERM, "Operation not permitted");
  map.put(EDEADLK, "Resource deadlock avoided");
  map.put(EBADF, "Bad file descriptor");
  map.put(EMFILE, "Too many open files");
  map.put(ENXIO, "No such device or address");
  map.put(ECHILD, "No child processes");
  map.put(ERANGE, "Result too large");
  map.put(EBUSY, "Resource device");
  map.put(EAGAIN, "Resource temporarily unavailable");
  map.put(ESPIPE, "Invalid seek");
  map.put(EFBIG, "File too large");
  map.put(EINVAL, "Invalid argument");
  map.put(EXDEV, "Improper link");
  map.put(EACCES, "Permission denied");
  map.put(EIO, "Input/output error");
  map.put(EDOM, "Domain error");
  map.put(ENOTEMPTY, "Directory not empty");
  map.put(ENOLCK, "No locks available");
  map.put(EINTR, "Interrupted function call");
  map.put(ENOTDIR, "Not a directory");
  map.put(EROFS, "Read-only file system");
  map.put(EISDIR, "Is a directory");
  map.put(ENOMEM, "Not enough space");
  map.put(ENODEV, "No such device");
  map.put(ENOSPC, "No space left on device");
  map.put(ENOEXEC, "Exec format error");
  map.put(ENOSYS, "Function not implemented");
  map.put(EEXIST, "File exists");
  map.put(ENOTTY, "Inappropriate I/O control operation");
  map.put(ENAMETOOLONG, "Filename too long");
  map.put(EPIPE, "Broken pipe");
  map.put(ESRCH, "No such process");
  map.put(EILSEQ, "Illegal byte sequence");
  map.put(EFAULT, "Bad address");
  map.put(ENOENT, "No such file or directory");
  map.put(EMLINK, "Too many links");
    return map;
  }
}
public final String toString() { return StringTable.descriptions.get(this); }
public final int value() { return value; }
public final int intValue() { return value; }
public final long longValue() { return value; }
public final boolean defined() { return true; }
}
