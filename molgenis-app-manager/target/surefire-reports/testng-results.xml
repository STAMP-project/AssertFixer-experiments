<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="27" passed="26">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="6354" started-at="2018-06-06T21:46:09Z" finished-at="2018-06-06T21:46:16Z">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="6354" started-at="2018-06-06T21:46:09Z" finished-at="2018-06-06T21:46:16Z">
      <class name="org.molgenis.app.manager.service.AppManagerServiceTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="initMocks" is-config="true" duration-ms="80" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testActivateApp()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="testActivateApp" duration-ms="89" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testActivateApp -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="tearDownAfterMethod" is-config="true" duration-ms="5" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testAppIdDoesNotExist()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="testAppIdDoesNotExist" duration-ms="4" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppIdDoesNotExist -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testAppUriDoesNotExist()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="testAppUriDoesNotExist" duration-ms="6" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppUriDoesNotExist -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testCheckAndObtainConfig()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="testCheckAndObtainConfig" duration-ms="22" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckAndObtainConfig -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testCheckAndObtainConfigAppAlreadyExists()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="testCheckAndObtainConfigAppAlreadyExists" duration-ms="2" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <exception class="org.molgenis.app.manager.exception.AppAlreadyExistsException">
            <message>
              <![CDATA[example2]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.app.manager.exception.AppAlreadyExistsException: FAILED TO FORMAT LOCALIZED MESSAGE FOR ERROR CODE AM08.%nFallback message: example2
	at org.molgenis.app.manager.service.impl.AppManagerServiceImpl.checkAndObtainConfig(AppManagerServiceImpl.java:194)
	at org.molgenis.app.manager.service.AppManagerServiceTest.testCheckAndObtainConfigAppAlreadyExists(AppManagerServiceTest.java:282)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.app.manager.exception.AppAlreadyExistsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckAndObtainConfigAppAlreadyExists -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testCheckAndObtainConfigInvalidJsonConfigFile()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="testCheckAndObtainConfigInvalidJsonConfigFile" duration-ms="1" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <exception class="org.molgenis.app.manager.exception.InvalidAppConfigException">
            <full-stacktrace>
              <![CDATA[org.molgenis.app.manager.exception.InvalidAppConfigException: FAILED TO FORMAT LOCALIZED MESSAGE FOR ERROR CODE AM04.%nFallback message: null
	at org.molgenis.app.manager.service.impl.AppManagerServiceImpl.checkAndObtainConfig(AppManagerServiceImpl.java:183)
	at org.molgenis.app.manager.service.AppManagerServiceTest.testCheckAndObtainConfigInvalidJsonConfigFile(AppManagerServiceTest.java:267)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.app.manager.exception.InvalidAppConfigException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckAndObtainConfigInvalidJsonConfigFile -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testCheckAndObtainConfigMissingRequiredConfigParameters()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="testCheckAndObtainConfigMissingRequiredConfigParameters" duration-ms="1" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <exception class="org.molgenis.app.manager.exception.AppConfigMissingParametersException">
            <message>
              <![CDATA[missingConfigParameters:[label, description, includeMenuAndFooter, uri, version]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.app.manager.exception.AppConfigMissingParametersException: FAILED TO FORMAT LOCALIZED MESSAGE FOR ERROR CODE AM03.%nFallback message: missingConfigParameters:[label, description, includeMenuAndFooter, uri, version]
	at org.molgenis.app.manager.service.impl.AppManagerServiceImpl.checkAndObtainConfig(AppManagerServiceImpl.java:189)
	at org.molgenis.app.manager.service.AppManagerServiceTest.testCheckAndObtainConfigMissingRequiredConfigParameters(AppManagerServiceTest.java:274)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.app.manager.exception.AppConfigMissingParametersException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckAndObtainConfigMissingRequiredConfigParameters -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testConfigureApp()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="testConfigureApp" duration-ms="4" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConfigureApp -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testDeactivateApp()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="testDeactivateApp" duration-ms="2" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeactivateApp -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testDeleteApp()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="testDeleteApp" duration-ms="2" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteApp -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testExtractFileContent()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="testExtractFileContent" duration-ms="1" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtractFileContent -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testGetAppByUri()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="testGetAppByUri" duration-ms="3" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAppByUri -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testGetApps()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="testGetApps" duration-ms="7" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetApps -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testUploadApp()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="testUploadApp" duration-ms="59" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUploadApp -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testUploadAppInvalidZip()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="testUploadAppInvalidZip" duration-ms="4" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <exception class="org.molgenis.app.manager.exception.InvalidAppArchiveException">
            <message>
              <![CDATA[org.molgenis.util.file.UnzipException: java.util.zip.ZipException: Invalid zip]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.app.manager.exception.InvalidAppArchiveException: FAILED TO FORMAT LOCALIZED MESSAGE FOR ERROR CODE AM01.%nFallback message: org.molgenis.util.file.UnzipException: java.util.zip.ZipException: Invalid zip
	at org.molgenis.app.manager.service.impl.AppManagerServiceImpl.tryUnpackArchive(AppManagerServiceImpl.java:172)
	at org.molgenis.app.manager.service.impl.AppManagerServiceImpl.uploadApp(AppManagerServiceImpl.java:148)
	at org.molgenis.app.manager.service.AppManagerServiceTest.testUploadAppInvalidZip(AppManagerServiceTest.java:246)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
Caused by: org.molgenis.util.file.UnzipException: java.util.zip.ZipException: Invalid zip
	at org.molgenis.app.manager.service.impl.AppManagerServiceImpl.tryUnpackArchive(AppManagerServiceImpl.java:168)
	... 31 more
Caused by: java.util.zip.ZipException: Invalid zip
	at org.molgenis.app.manager.service.AppManagerServiceTest.testUploadAppInvalidZip(AppManagerServiceTest.java:244)
	... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.app.manager.exception.InvalidAppArchiveException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUploadAppInvalidZip -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="initMocks" is-config="true" duration-ms="2" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testUploadAppMissingIndexAndConfig()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="testUploadAppMissingIndexAndConfig" duration-ms="2" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <exception class="org.molgenis.app.manager.exception.AppArchiveMissingFilesException">
            <message>
              <![CDATA[missingFromArchive:[index.html, config.json]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.app.manager.exception.AppArchiveMissingFilesException: FAILED TO FORMAT LOCALIZED MESSAGE FOR ERROR CODE AM02.%nFallback message: missingFromArchive:[index.html, config.json]
	at org.molgenis.app.manager.service.impl.AppManagerServiceImpl.uploadApp(AppManagerServiceImpl.java:152)
	at org.molgenis.app.manager.service.AppManagerServiceTest.testUploadAppMissingIndexAndConfig(AppManagerServiceTest.java:232)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.app.manager.exception.AppArchiveMissingFilesException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUploadAppMissingIndexAndConfig -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:org.molgenis.app.manager.service.AppManagerServiceTest@56d6a1b1]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:16Z" finished-at="2018-06-06T23:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- org.molgenis.app.manager.service.AppManagerServiceTest -->
      <class name="org.molgenis.app.manager.controller.AppControllerTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="25" started-at="2018-06-06T23:46:09Z" finished-at="2018-06-06T23:46:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="4703" started-at="2018-06-06T23:46:09Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-06-06T23:46:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="beforeClass" is-config="true" duration-ms="40" started-at="2018-06-06T23:46:14Z" finished-at="2018-06-06T23:46:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2018-06-06T23:46:14Z" finished-at="2018-06-06T23:46:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.app.manager.controller.AppControllerTest.testServeApp() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="beforeMethod" is-config="true" duration-ms="391" started-at="2018-06-06T23:46:14Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testServeApp()[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="testServeApp" duration-ms="186" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testServeApp -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.app.manager.controller.AppControllerTest.testServeApp() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.app.manager.controller.AppControllerTest.testServeAppInactiveApp() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="beforeMethod" is-config="true" duration-ms="35" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testServeAppInactiveApp()[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="testServeAppInactiveApp" duration-ms="83" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testServeAppInactiveApp -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.app.manager.controller.AppControllerTest.testServeAppNoPermissions() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.app.manager.controller.AppControllerTest.testServeAppInactiveApp() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="beforeMethod" is-config="true" duration-ms="44" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testServeAppNoPermissions()[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="testServeAppNoPermissions" duration-ms="17" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testServeAppNoPermissions -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.app.manager.controller.AppControllerTest.testServeAppNoPermissions() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.app.manager.controller.AppControllerTest.testServeAppRedirectToApp() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="beforeMethod" is-config="true" duration-ms="34" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testServeAppRedirectToApp()[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="testServeAppRedirectToApp" duration-ms="6" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testServeAppRedirectToApp -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.app.manager.controller.AppControllerTest.testServeAppRedirectToApp() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.app.manager.controller.AppControllerTest.testServeResource() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="beforeMethod" is-config="true" duration-ms="31" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testServeResource()[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="testServeResource" duration-ms="7" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testServeResource -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.app.manager.controller.AppControllerTest@7e94e331]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.app.manager.controller.AppControllerTest.testServeResource() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
      </class> <!-- org.molgenis.app.manager.controller.AppControllerTest -->
      <class name="org.molgenis.app.manager.controller.AppManagerControllerTest">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.controller.AppManagerControllerTest@23ea8830]" name="beforeMethod" is-config="true" duration-ms="117" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testActivateApp()[pri:0, instance:org.molgenis.app.manager.controller.AppManagerControllerTest@23ea8830]" name="testActivateApp" duration-ms="19" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testActivateApp -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.controller.AppManagerControllerTest@23ea8830]" name="beforeMethod" is-config="true" duration-ms="29" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testDeactivateApp()[pri:0, instance:org.molgenis.app.manager.controller.AppManagerControllerTest@23ea8830]" name="testDeactivateApp" duration-ms="2" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeactivateApp -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.controller.AppManagerControllerTest@23ea8830]" name="beforeMethod" is-config="true" duration-ms="25" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testDeleteApp()[pri:0, instance:org.molgenis.app.manager.controller.AppManagerControllerTest@23ea8830]" name="testDeleteApp" duration-ms="2" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteApp -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.controller.AppManagerControllerTest@23ea8830]" name="beforeMethod" is-config="true" duration-ms="25" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testGetApps()[pri:0, instance:org.molgenis.app.manager.controller.AppManagerControllerTest@23ea8830]" name="testGetApps" duration-ms="44" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetApps -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.controller.AppManagerControllerTest@23ea8830]" name="beforeMethod" is-config="true" duration-ms="28" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testInit()[pri:0, instance:org.molgenis.app.manager.controller.AppManagerControllerTest@23ea8830]" name="testInit" duration-ms="1" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInit -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.app.manager.controller.AppManagerControllerTest@23ea8830]" name="beforeMethod" is-config="true" duration-ms="26" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testUploadApp()[pri:0, instance:org.molgenis.app.manager.controller.AppManagerControllerTest@23ea8830]" name="testUploadApp" duration-ms="60" started-at="2018-06-06T23:46:15Z" finished-at="2018-06-06T23:46:15Z">
          <exception class="org.springframework.web.util.NestedServletException">
            <message>
              <![CDATA[Request processing failed; nested exception is java.lang.NullPointerException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.NullPointerException
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:71)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:166)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:133)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:165)
	at org.molgenis.app.manager.controller.AppManagerControllerTest.testUploadApp(AppManagerControllerTest.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
Caused by: java.lang.NullPointerException
	at org.molgenis.app.manager.controller.AppManagerController.uploadApp(AppManagerController.java:80)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	... 38 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.util.NestedServletException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUploadApp -->
      </class> <!-- org.molgenis.app.manager.controller.AppManagerControllerTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
