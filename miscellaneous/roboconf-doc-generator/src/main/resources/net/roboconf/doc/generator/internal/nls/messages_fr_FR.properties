#######################################################################
# Copyright 2015-2017 Linagora, Universit\u00E9 Joseph Fourier, Floralis
#
# The present code is developed in the scope of the joint LINAGORA -
# Universit\u00E9 Joseph Fourier - Floralis research program and is designated
# as a "Result" pursuant to the terms and conditions of the LINAGORA
# - Universit\u00E9 Joseph Fourier - Floralis research program. Each copyright
# holder of Results enumerated here above fully & independently holds complete
# ownership of the complete Intellectual Property rights applicable to the whole
# of said Results, and may freely exploit it in any manner which does not infringe
# the moral rights of the other copyright holders.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################################################

##
# Single quotes must be doubled to be escaped when used with parameters ({0}).
# See http://stackoverflow.com/questions/4449639/apostrophe-doesnt-get-translated-properly-when-placed-in-a-resource-bundle
##

intro = Ce document répertorie les différentes briques logicielles utilisées dans cette application.
app.name = Nom de l'application
app.qualifier = Version de l'application

components = Composants
components.intro = Cette section liste les briques logicielles utilisées dans cette application. Elle décrit également les différentes relations qui les unissent.
component.installer = Le cycle de vie de ce composant est géré par l''extension {0} de Roboconf.
component.inherits.facets = {0} hérite des facettes suivantes :
component.inherits.properties = {0} hérite de propriétés de ces composants...
component.is.extended.by = {0} est étendu par...
component.no.export = {0} n''exporte aucune variable.
component.exports = {0} exporte...
component.is.root = {0} est un composant racine, ce qui signifie qu''il désigne une cible de déploiement.
component.over = {0} peut être déployé sur des instances de... 
component.children = Des instances des composants suivants peuvent être déployées sur {0}:
component.no.dep = {0} ne dépend d''aucun autre composant.
component.depends.on = {0} dépend de...
component.requires = {0} utilise les variables suivantes (provenant d''autres composants).

introduction = Introduction
overview = Aperçu
inheritance = Héritage
exports = Variables Exportées
hierarchy = Hiérarchie
runtime = Exécution
extra = Informations Supplémentaires
optional = \ (optionnel)
required = \ (requis)
external = \ (variable externe, exportée par une autre application)
injected = \ (injecté par Roboconf)
default = \ (valeur par défaut = {0})

facets = Facettes
facets.intro = Cette section liste les facettes utilisées dans cette recette.
facet.no.export = {0} n''exporte aucune variable.
facet.exports = {0} exporte...

instances = Instances
instances.intro = Cette section liste les instances initiales des briques logicielles utilisées dans cette application.
instances.none = Aucune instance n'a été définie.
instances.sorting = Les instances sont regroupées selon leur hiérarchie.
instances.instance = Instance
instances.component = Composant Associé
instances.installer = Installeur
instances.additional = {0} surcharge ou définit des variables supplémentaires.
