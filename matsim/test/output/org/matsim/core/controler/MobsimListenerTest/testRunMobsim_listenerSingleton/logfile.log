2018-06-01 12:25:41,984  INFO Gbl:59 JVM: 1.8.0_121; Oracle Corporation; mixed mode; 64-bit
2018-06-01 12:25:41,984  INFO Gbl:63 OS: Linux; 3.10.0-862.3.2.el7.x86_64; amd64
2018-06-01 12:25:41,984  INFO Gbl:66 CPU cores: 8
2018-06-01 12:25:41,984  INFO Gbl:67 max. Memory: 622.5MB (652738560B)
2018-06-01 12:25:41,985  INFO Gbl:105 MATSim-Build: r69049987ed166469d11b8a3f6d70346c04935237 (2018-06-01 12:23:42)
2018-06-01 12:25:41,985  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.counts.CountsControlerListener
2018-06-01 12:25:41,985  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ModeStatsControlerListener
2018-06-01 12:25:41,986 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2018-06-01 12:25:41,986  INFO NetworkImpl:167  node # 1
2018-06-01 12:25:41,986  INFO NetworkImpl:167  node # 4
2018-06-01 12:25:41,986  INFO NetworkImpl:163  link # 1
2018-06-01 12:25:41,987  INFO NetworkImpl:163  link # 4
2018-06-01 12:25:41,987  INFO NetworkImpl:163  link # 16
2018-06-01 12:25:41,987  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ScoreStatsControlerListener
2018-06-01 12:25:41,988  INFO ControlerListenerManagerImpl:110 all ControlerStartupListeners called.
2018-06-01 12:25:41,988  INFO ControlerUtils:58 config dump before iterations start
2018-06-01 12:25:41,988  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:41,990  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:41,992  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:41,994  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:41,996  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:41,998  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:42,000  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:42,002  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:42,004  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:42,005  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:42,007  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:42,009  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:42,011  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:42,013  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:42,014  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:42,015  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:42,017  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:42,018  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:42,020  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:42,021  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:42,022  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:42,024  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:42,025  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:42,026  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:42,028  INFO ControlerUtils:62 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>
<!-- ====================================================================== -->
	<module name="JDEQSim" >
		<param name="carSize" value="7.5" />
		<param name="endTime" value="undefined" />
		<param name="flowCapacityFactor" value="1.0" />
		<param name="gapTravelSpeed" value="15.0" />
		<param name="minimumInFlowCapacity" value="1800.0" />
		<param name="squeezeTime" value="1800.0" />
		<param name="storageCapacityFactor" value="1.0" />
	</module>
<!-- ====================================================================== -->
	<module name="TimeAllocationMutator" >
		<!-- Default:true; Defines whether time mutation changes an activity's duration. -->
		<param name="mutationAffectsDuration" value="true" />
		<!-- Default:1800.0; Defines how many seconds a time mutation can maximally shift a time. -->
		<param name="mutationRange" value="1800.0" />
		<!-- false; Use individual settings for each subpopulation. If enabled but no settings are found, regular settings are uses as fallback. -->
		<param name="useIndividualSettingsForSubpopulations" value="false" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="changeMode" >
		<!-- Defines whether car availability is considered be considered or not. An agent has no car only if it has no license, or never access to a car. Default: true -->
		<param name="ignoreCarAvailability" value="true" />
		<!-- Defines the mode switch behavior. Possible values [Lorg.matsim.core.config.groups.ChangeModeConfigGroup$Behavior;@2d01a9ea Default: fromSpecifiedModesToSpecifiedModes. -->
		<param name="modeSwitchBehavior" value="fromSpecifiedModesToSpecifiedModes" />
		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt" />
	</module>
<!-- ====================================================================== -->
	<module name="controler" >
		<!-- Sets whether graphs showing some analyses should automatically be generated during the simulation. The generation of graphs usually takes a small amount of time that does not have any weight in big simulations, but add a significant overhead in smaller runs or in test cases where the graphical output is not even requested. -->
		<param name="createGraphs" value="false" />
		<!-- true if at the end of a run, plans, network, config etc should be dumped to a file -->
		<param name="dumpDataAtEnd" value="false" />
		<!-- Default=false. If enabled, the router takes travel times needed for turning moves into account. Cannot be used if the (Fast)AStarLandmarks routing or TravelTimeCalculator.separateModes is enabled. -->
		<param name="enableLinkToLinkRouting" value="false" />
		<!-- Default=xml; Specifies the file format for writing events. Currently supported: xml.
		Multiple values can be specified separated by commas (','). -->
		<param name="eventsFileFormat" value="xml" />
		<!-- Default=0;  -->
		<param name="firstIteration" value="0" />
		<!-- Default=1000;  -->
		<param name="lastIteration" value="1" />
		<!-- Defines which mobility simulation will be used. Currently supported: qsim JDEQSim 
		Depending on the chosen mobsim, you'll have to add additional config modules to configure the corresponding mobsim.
		For 'qsim', add a module 'qsim' to the config. -->
		<param name="mobsim" value="qsim" />
		<param name="outputDirectory" value="test/output/org/matsim/core/controler/MobsimListenerTest/testRunMobsim_listenerSingleton/" />
		<!-- Possible values: failIfDirectoryExists, overwriteExistingFiles, deleteDirectoryIfExists -->
		<param name="overwriteFiles" value="failIfDirectoryExists" />
		<!-- The type of routing (least cost path) algorithm used, may have the values: Dijkstra, FastDijkstra, AStarLandmarks or FastAStarLandmarks -->
		<param name="routingAlgorithmType" value="Dijkstra" />
		<!-- An identifier for the current run which is used as prefix for output files and mentioned in output xml files etc. -->
		<param name="runId" value="null" />
		<!-- Comma-separated list of visualizer output file formats. `transims', `googleearth', and `otfvis'. -->
		<param name="snapshotFormat" value="transims" />
		<!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
		<param name="writeEventsInterval" value="0" />
		<!-- iterationNumber % writePlansInterval == 0 defines (hopefully) in which iterations plans are written to a file. `0' disables plans writing completely.  Some plans in early iterations are always written -->
		<param name="writePlansInterval" value="0" />
		<!-- iterationNumber % writeSnapshotsInterval == 0 defines in which iterations snapshots are written to a file. `0' disables snapshots writing completely -->
		<param name="writeSnapshotsInterval" value="1" />
	</module>
<!-- ====================================================================== -->
	<module name="counts" >
		<!-- Transport modes that will be respected for the counts comparison. 'car' is default, which includes also bussed from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the counts comparison. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeCountsInterval -->
		<param name="averageCountsOverIterations" value="5" />
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- If true, link counts from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- input file name to counts package -->
		<param name="inputCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="txt" />
		<!-- Specifies how often the counts comparison should be calculated and written. -->
		<param name="writeCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="facilities" >
		<!-- If set to 'true', empty activity option will be created. -->
		<param name="addEmptyActivityOption" value="false" />
		<!-- Default is 'true'. In the case that a facility has no link assigned, the ActivityFacility can be assigned to the closest link. If there should be only one ActivityFacility per link and if no link-assignment should be done, set to 'false'.This will create a new ActivityFacility at the coordinate and the facility will not be assigned to a link. -->
		<param name="assigningLinksToFacilitiesIfMissing" value="true" />
		<!-- If set to 'true', opening time will be assigned to activity facilities from ActivityParams. Default is false. This will NOT override option 'addEmptyActivityOption'. -->
		<param name="assigningOpeningTime" value="false" />
		<!-- This defines how facilities should be created. Possible values: none fromFile setInScenario onePerActivityLocationInPlansFile  -->
		<param name="facilitiesSource" value="fromFile" />
		<!-- A prefix to be used in activityFacility id. -->
		<param name="idPrefix" value="" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputFacilitiesFile" value="facilities.xml" />
		<param name="inputFacilityAttributesFile" value="null" />
		<!-- Sets whether all activities on a link should be collected within one ActivityFacility. Default is 'true'. If set to 'false', for each coordinate found in the population's activities a separate ActivityFacility will be created. -->
		<param name="oneFacilityPerLink" value="true" />
		<!-- If set to 'true' (which is the default), the link and coordinate attributes are replaced by null reference in the activities, as this information is now available via the facility. -->
		<param name="removingLinksAndCoordinates" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="global" >
		<param name="coordinateSystem" value="Atlantis" />
		<param name="insistingOnDeprecatedConfigVersion" value="true" />
		<!-- "global" number of threads.  This number is used, e.g., for replanning, but NOT in the mobsim.  This can typically be set to as many cores as you have available, or possibly even slightly more. -->
		<param name="numberOfThreads" value="2" />
		<param name="randomSeed" value="4711" />
	</module>
<!-- ====================================================================== -->
	<module name="households" >
		<param name="inputFile" value="null" />
		<param name="inputHouseholdAttributesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="linkStats" >
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the link statistics. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeLinkStatsInterval -->
		<param name="averageLinkStatsOverIterations" value="5" />
		<!-- Specifies how often the link stats should be calculated and written. Use 0 to disable the generation of link stats. -->
		<param name="writeLinkStatsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="network" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputChangeEventsFile" value="null" />
		<param name="inputNetworkFile" value="network.xml" />
		<param name="laneDefinitionsFile" value="null" />
		<param name="timeVariantNetwork" value="false" />
	</module>
<!-- ====================================================================== -->
	<module name="parallelEventHandling" >
		<!-- Estimated number of events during mobsim run. An optional optimization hint for the framework. -->
		<param name="estimatedNumberOfEvents" value="null" />
		<!-- Number of threads for parallel events handler. _null_ means the framework decides by itself. 0 is currently not possible. -->
		<param name="numberOfThreads" value="null" />
		<!-- If enabled, each event handler is assigned to its own thread. Note that enabling this feature disabled the numberOfThreads option! This feature is still experimental! -->
		<param name="oneThreadPerHandler" value="false" />
		<!-- If enabled, it is ensured that all events that are created during a time step of the mobility simulation are processed before the next time step is simulated. E.g. neccessary when within-day replanning is used. -->
		<param name="synchronizeOnSimSteps" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="planCalcScore" >
		<!-- logit model scale parameter. default: 1.  Has name and default value for historical reasons (see Bryan Raney's phd thesis). -->
		<param name="BrainExpBeta" value="2.0" />
		<param name="PathSizeLogitBeta" value="1.0" />
		<!-- fraction of iterations at which MSA score averaging is started. The matsim theory department suggests to use this together with switching off choice set innovation (where a similar switch exists), but it has not been tested yet. -->
		<param name="fractionOfIterationsToStartScoreMSA" value="null" />
		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />
		<!-- There used to be a plateau between duration=0 and duration=zeroUtilityDuration. This caused durations to evolve to zero once they were below zeroUtilityDuration, causing problems.  Only use this switch if you need to be backwards compatible with some old results.  (changed nov'13) -->
		<param name="usingOldScoringBelowZeroUtilityDuration" value="false" />
		<!-- write a plans file in each iteration directory which contains what each agent actually did, and the score it received. -->
		<param name="writeExperiencedPlans" value="false" />
		<parameterset type="scoringParameters" >
			<param name="earlyDeparture" value="-0.0" />
			<param name="lateArrival" value="-18.0" />
			<param name="marginalUtilityOfMoney" value="1.0" />
			<param name="performing" value="6.0" />
			<param name="subpopulation" value="null" />
			<param name="utilityOfLineSwitch" value="-1.0" />
			<param name="waiting" value="-0.0" />
			<param name="waitingPt" value="-6.0" />
			<parameterset type="activityParams" >
				<param name="activityType" value="dummy" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="02:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="car interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="pt interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="bike interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="other interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="walk interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="h" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="08:00:00" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="12:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="w" />
				<param name="closingTime" value="18:00:00" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="09:00:00" />
				<param name="minimalDuration" value="06:00:00" />
				<param name="openingTime" value="07:00:00" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="08:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="car" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="pt" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="walk" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="bike" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="ride" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="other" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="plans" >
		<!-- String: minOfDurationAndEndTime tryEndTimeThenDuration endTimeOnly. Anything besides minOfDurationAndEndTime will internally use a different (simpler) version of the TimeAllocationMutator. -->
		<param name="activityDurationInterpretation" value="tryEndTimeThenDuration" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- Path to a file containing person attributes (required file format: ObjectAttributes). -->
		<param name="inputPersonAttributesFile" value="null" />
		<param name="inputPlansFile" value="plans1.xml" />
		<!-- Defines how routes are stored in memory. Currently supported: LinkNetworkRoute, CompressedNetworkRoute. -->
		<param name="networkRouteType" value="LinkNetworkRoute" />
		<!-- (not tested) will remove plan attributes that are presumably not used, such as activityStartTime. default=false -->
		<param name="removingUnnecessaryPlanAttributes" value="false" />
		<!-- Name of the (Object)Attribute defining the subpopulation to which pertains a Person (as freight, through traffic, etc.). The attribute must be of String type.  Change away from default only in desperate situations. -->
		<param name="subpopulationAttributeName" value="subpopulation" />
	</module>
<!-- ====================================================================== -->
	<module name="planscalcroute" >
		<!-- All the modes for which the router is supposed to generate network routes (like car) -->
		<param name="networkModes" value="car" />
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="bike" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="4.166666666666667" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="access_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="egress_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="undefined" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="13.88888888888889" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="ride" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="1.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="pt" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="2.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="ptCounts" >
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- input file containing the alighting (getting off) counts for pt -->
		<param name="inputAlightCountsFile" value="null" />
		<!-- input file containing the boarding (getting on) counts for pt -->
		<param name="inputBoardCountsFile" value="null" />
		<!-- input file containing the occupancy counts for pt -->
		<param name="inputOccupancyCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="null" />
		<!-- every how many iterations (starting with 0) counts comparisons are generated -->
		<param name="ptCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="qsim" >
		<!-- If set to true, creates a vehicle for each person corresponding to every network mode. However, this will be overridden if vehicle source is fromVehiclesData. -->
		<param name="creatingVehiclesForAllNetworkModes" value="true" />
		<param name="endTime" value="00:00:00" />
		<param name="flowCapacityFactor" value="1.0" />
		<!-- decides if waiting vehicles enter the network after or before the already driving vehicles were moved. Default: false -->
		<param name="insertingWaitingVehiclesBeforeDrivingVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set to false if all seep modes should perform seepage. Default is true (better option). -->
		<param name="isRestrictingSeepage" value="true" />
		<!-- If link dynamics is set as SeepageQ, set to true if seep mode do not consumes any space on the link. Default is false. -->
		<param name="isSeepModeStorageFree" value="false" />
		<!-- default: FIFO; options: FIFO PassingQ SeepageQ -->
		<param name="linkDynamics" value="FIFO" />
		<!-- The (initial) width of the links of the network. Use positive floating point values. This is used only for visualisation. -->
		<param name="linkWidth" value="30.0" />
		<!-- [comma-separated list] Defines which modes are congested modes. Technically, these are the modes that the departure handler of the netsimengine handles.  Effective cell size, effective lane width, flow capacity factor, and storage capacity factor need to be set with diligence.  Need to be vehicular modes to make sense. -->
		<param name="mainMode" value="car" />
		<!-- Shortens a link in the visualization, i.e. its start and end point are moved into towards the center. Does not affect traffic flow.  -->
		<param name="nodeOffset" value="0.0" />
		<!-- Number of threads used for the QSim.  Note that this setting is independent from the "global" threads setting.  In contrast to earlier versions, the non-parallel special version is no longer there. -->
		<param name="numberOfThreads" value="1" />
		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set a seep mode. Default is bike. -->
		<param name="seepMode" value="bike" />
		<!-- Possible values: minOfEndtimeAndMobsimFinished, onlyUseEndtime -->
		<param name="simEndtimeInterpretation" value="null" />
		<!-- Options: maxOfStarttimeAndEarliestActivityEnd onlyUseStarttime  -->
		<param name="simStarttimeInterpretation" value="maxOfStarttimeAndEarliestActivityEnd" />
		<!-- snapshotStyle. One of: equiDist queue withHoles withHolesAndShowHoles kinematicWaves  -->
		<param name="snapshotStyle" value="equiDist" />
		<param name="snapshotperiod" value="00:00:00" />
		<param name="startTime" value="00:00:00" />
		<param name="storageCapacityFactor" value="1.0" />
		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="10.0" />
		<param name="timeStepSize" value="00:00:01" />
		<!-- options: queue withHoles kinematicWaves  -->
		<param name="trafficDynamics" value="queue" />
		<!-- Set this parameter to true if lanes should be used, false if not. -->
		<param name="useLanes" value="false" />
		<!-- If a route does not reference a vehicle, agents will use the vehicle with the same id as their own. -->
		<param name="usePersonIdForMissingVehicleId" value="true" />
		<!-- If false, the qsim accumulates fractional flows up to one flow unit in every time step.  If true, flows are updated only if an agent wants to enter the link or an agent is added to buffer. Default is true. -->
		<param name="usingFastCapacityUpdate" value="true" />
		<!-- if the qsim should use as many runners as there are threads (Christoph's dissertation version) or more of them, together with a thread pool (seems to be faster in some situations, but is not tested). -->
		<param name="usingThreadpool" value="true" />
		<!-- Defines what happens if an agent wants to depart, but the specified vehicle is not available. One of: teleport wait exception  -->
		<param name="vehicleBehavior" value="teleport" />
		<!-- If vehicles should all be the same default vehicle, or come from the vehicles file, or something else.  Possible values:  defaultVehicle modeVehicleTypesFromVehiclesData fromVehiclesData -->
		<param name="vehiclesSource" value="defaultVehicle" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="strategy" >
		<!-- the external executable will be called with a config file as argument.  This is the pathname to a possible skeleton config, to which additional information will be added.  Can be null. -->
		<param name="ExternalExeConfigTemplate" value="null" />
		<!-- time out value (in seconds) after which matsim will consider the external strategy as failed -->
		<param name="ExternalExeTimeOut" value="3600" />
		<!-- root directory for temporary files generated by the external executable. Provided as a service; I don't think this is used by MATSim. -->
		<param name="ExternalExeTmpFileRootDir" value="null" />
		<!-- fraction of iterations where innovative strategies are switched off.  Something link 0.8 should be good.  E.g. if you run from iteration 400 to iteration 500, innovation is switched off at iteration 480 -->
		<param name="fractionOfIterationsToDisableInnovation" value="Infinity" />
		<!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
		<param name="maxAgentPlanMemorySize" value="5" />
		<!-- strategyName of PlanSelector for plans removal.  Possible defaults: WorstPlanSelector SelectRandom SelectExpBetaForRemoval ChangeExpBetaForRemoval PathSizeLogitSelectorForRemoval . The current default, WorstPlanSelector is not a good choice from a discrete choice theoretical perspective. Alternatives, however, have not been systematically tested. kai, feb'12 -->
		<param name="planSelectorForRemoval" value="WorstPlanSelector" />
		<parameterset type="strategysettings" >
			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />
			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRouteTimeAllocationMutatorTimeAllocationMutator_ReRouteChangeSingleTripModeChangeTripModeSubtourModeChoice (innovative strategies). -->
			<param name="strategyName" value="BestScore" />
			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.9" />
		</parameterset>
		<parameterset type="strategysettings" >
			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />
			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRouteTimeAllocationMutatorTimeAllocationMutator_ReRouteChangeSingleTripModeChangeTripModeSubtourModeChoice (innovative strategies). -->
			<param name="strategyName" value="ReRoute" />
			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.1" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="subtourModeChoice" >
		<!-- Only for backwards compatibility.  Defines if only trips from modes list should change mode, or all trips.  Options: fromAllModesToSpecifiedModes fromSpecifiedModesToSpecifiedModes  -->
		<param name="behavior" value="fromSpecifiedModesToSpecifiedModes" />
		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car,bike" />
		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="false" />
		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt,bike,walk" />
	</module>
<!-- ====================================================================== -->
	<module name="transit" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputScheduleCRS" value="null" />
		<!-- Optional input file containing additional attributes for transit lines, stored as ObjectAttributes. -->
		<param name="transitLinesAttributesFile" value="null" />
		<!-- Comma-separated list of transportation modes that are handled as transit. Defaults to 'pt'. -->
		<param name="transitModes" value="pt" />
		<!-- Input file containing the transit schedule to be simulated. -->
		<param name="transitScheduleFile" value="null" />
		<!-- Optional input file containing additional attributes for transit stop facilities, stored as ObjectAttributes. -->
		<param name="transitStopsAttributesFile" value="null" />
		<!-- Set this parameter to true if transit should be simulated, false if not. -->
		<param name="useTransit" value="false" />
		<!-- Input file containing the vehicles used by the departures in the transit schedule. -->
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="transitRouter" >
		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />
		<!-- Factor with which direct walk generalized cost is multiplied before it is compared to the pt generalized cost.  Set to a very high value to reduce direct walk results. -->
		<param name="directWalkFactor" value="1.0" />
		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="200.0" />
		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="100.0" />
		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1000.0" />
	</module>
<!-- ====================================================================== -->
	<module name="travelTimeCalculator" >
		<!-- Transport modes that will be respected by the travel time collector. 'car' is default, which includes also busses from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<param name="calculateLinkToLinkTravelTimes" value="false" />
		<param name="calculateLinkTravelTimes" value="true" />
		<!-- If true, link travel times from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The lenght (in sec) of the time period that is splited into time bins; an additional time bin is created to aggregate all travel times collected after maxTime -->
		<param name="maxTime" value="108000" />
		<!-- If true, link travel times are measured and calculated separately for each mode in analyzedModes. Other modes are ignored. If true, filterModes has no effect. -->
		<param name="separateModes" value="false" />
		<!-- How to deal with congested time bins that have no link entry events. `optimistic' assumes free speed (too optimistic); 'experimental_LastMile' is experimental and probably too pessimistic. -->
		<param name="travelTimeAggregator" value="optimistic" />
		<!-- The size of the time bin (in sec) into which the link travel times are aggregated for the router -->
		<param name="travelTimeBinSize" value="900" />
		<!-- possible values: TravelTimeCalculatorArray TravelTimeCalculatorHashMap  -->
		<param name="travelTimeCalculator" value="TravelTimeCalculatorArray" />
		<!-- How to deal with link entry times at different positions during the time bin. Currently supported: average, linearinterpolation -->
		<param name="travelTimeGetter" value="average" />
	</module>
<!-- ====================================================================== -->
	<module name="vehicles" >
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="vspExperimental" >
		<!-- (do not use except of you have to) There was a problem with pt interaction scoring.  Some people solved it by overwriting the parameters of the pt interaction activity type.  Doing this now throws an Exception.  If you still insist on doing this, set the following to true. -->
		<param name="isAbleToOverwritePtInteractionParams" value="false" />
		<param name="isGeneratingBoardingDeniedEvent" value="false" />
		<!-- if an approximation of the opportunity cost of time is included into the radius calculation for location choice.`true' will be faster, but it is an approximation.  Default is `true'; `false' is available for backwards compatibility. -->
		<param name="isUsingOpportunityCostOfTimeForLocationChoice" value="true" />
		<param name="logitScaleParamForPlansRemoval" value="1.0" />
		<!-- Options: | ignore | info | warn | abort | .  When violating VSP defaults, this results in nothing, logfile infos, logfile warnings, or aborts.  Members of VSP should use `abort' or talk to kai. -->
		<param name="vspDefaultsCheckingLevel" value="ignore" />
		<!-- if true then writes output_events in output directory.  default is `false'. Will only work when lastIteration is multiple of events writing interval -->
		<param name="writingOutputEvents" value="true" />
	</module>
<!-- ====================================================================== -->

</config>

2018-06-01 12:25:42,028  INFO ControlerUtils:63 Complete config dump done.
2018-06-01 12:25:42,029  INFO ControlerUtils:64 Checking consistency of config...
2018-06-01 12:25:42,029  INFO VspConfigConsistencyCheckerImpl:58 NOT running vsp config consistency check because vsp defaults checking level is set to IGNORE
2018-06-01 12:25:42,029  INFO ControlerUtils:66 Checking consistency of config done.
2018-06-01 12:25:42,029 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2018-06-01 12:25:42,029 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2018-06-01 12:25:42,030  INFO Counter:70 [PersonPrepareForSim] handled person # 1
2018-06-01 12:25:42,031  INFO Counter:76 [PersonPrepareForSim] handled person # 1
2018-06-01 12:25:42,031  INFO Counter:70  vehicles # 1
2018-06-01 12:25:42,031  INFO AbstractController:121 ###################################################
2018-06-01 12:25:42,032  INFO AbstractController:122 ### ITERATION 0 BEGINS
2018-06-01 12:25:42,032  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2018-06-01 12:25:42,032  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2018-06-01 12:25:42,032  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2018-06-01 12:25:42,032  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2018-06-01 12:25:42,033  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2018-06-01 12:25:42,033  INFO ControlerListenerManagerImpl:148 [it.0] all ControlerIterationStartsListeners called.
2018-06-01 12:25:42,033  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-06-01 12:25:42,033  INFO EventsManagerImpl:170 resetting Event-Handlers
2018-06-01 12:25:42,034  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2018-06-01 12:25:42,034  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2018-06-01 12:25:42,034  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2018-06-01 12:25:42,034  INFO EventsManagerImpl:177   org.matsim.core.events.algorithms.Vehicle2DriverEventHandler
2018-06-01 12:25:42,034  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2018-06-01 12:25:42,035  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2018-06-01 12:25:42,035  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2018-06-01 12:25:42,035  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2018-06-01 12:25:42,035  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2018-06-01 12:25:42,035  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2018-06-01 12:25:42,036  INFO ControlerListenerManagerImpl:232 [it.0] all ControlerBeforeMobsimListeners called.
2018-06-01 12:25:42,040  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2018-06-01 12:25:42,041  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.controler.MobsimListenerTest$SingletonCountingMobsimListener
2018-06-01 12:25:42,041  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2018-06-01 12:25:42,042  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2018-06-01 12:25:42,042  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2018-06-01 12:25:42,042  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2018-06-01 12:25:42,043  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2018-06-01 12:25:42,043  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2018-06-01 12:25:42,043  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2018-06-01 12:25:42,044  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2018-06-01 12:25:42,044  INFO Injector:81 === printInjector start ===
2018-06-01 12:25:42,044  INFO Injector:85 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2018-06-01 12:25:42,045  INFO Injector:86   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2018-06-01 12:25:42,045  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2018-06-01 12:25:42,045  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:42,045  INFO Injector:94   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler, annotation=[none]], source=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25), scope=eager singleton, provider=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]]}
2018-06-01 12:25:42,045  INFO Injector:96 
2018-06-01 12:25:42,046  INFO Injector:85 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2018-06-01 12:25:42,046  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@333c6f1e}[Scopes.SINGLETON]
2018-06-01 12:25:42,046  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2018-06-01 12:25:42,046  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:42,047  INFO Injector:92   --> target: Key[type=org.matsim.core.mobsim.qsim.agents.DefaultAgentFactory, annotation=[none]]
2018-06-01 12:25:42,047  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], source=org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30), scope=eager singleton, target=Key[type=org.matsim.core.mobsim.qsim.agents.DefaultAgentFactory, annotation=[none]]}
2018-06-01 12:25:42,047  INFO Injector:96 
2018-06-01 12:25:42,047  INFO Injector:85 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2018-06-01 12:25:42,047  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2046bef9[Scopes.SINGLETON]}
2018-06-01 12:25:42,048  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2018-06-01 12:25:42,048  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:42,048  INFO Injector:92   --> target: Key[type=org.matsim.core.mobsim.qsim.QSim, annotation=[none]]
2018-06-01 12:25:42,048  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], source=org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.mobsim.qsim.QSim, annotation=[none]]}
2018-06-01 12:25:42,048  INFO Injector:96 
2018-06-01 12:25:42,049  INFO Injector:85 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2018-06-01 12:25:42,049  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@64b0a84d[Scopes.SINGLETON]
2018-06-01 12:25:42,049  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2018-06-01 12:25:42,049  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:42,050  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.jdeqsim.MessageQueue, annotation=[none]], source=org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24), scope=eager singleton}
2018-06-01 12:25:42,050  INFO Injector:96 
2018-06-01 12:25:42,050  INFO Injector:85 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2018-06-01 12:25:42,050  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@736610fd[Scopes.SINGLETON]
2018-06-01 12:25:42,050  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2018-06-01 12:25:42,051  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:42,051  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler, annotation=[none]], source=org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25), scope=eager singleton}
2018-06-01 12:25:42,051  INFO Injector:96 
2018-06-01 12:25:42,051  INFO Injector:85 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2018-06-01 12:25:42,052  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@18e81e30[Scopes.SINGLETON]
2018-06-01 12:25:42,052  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2018-06-01 12:25:42,052  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:42,052  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine, annotation=[none]], source=org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26), scope=eager singleton}
2018-06-01 12:25:42,052  INFO Injector:96 
2018-06-01 12:25:42,053  INFO Injector:85 org.matsim.core.mobsim.qsim.ActivityEngine 
2018-06-01 12:25:42,053  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@15aecc4f[Scopes.SINGLETON]
2018-06-01 12:25:42,053  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2018-06-01 12:25:42,053  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:42,054  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.ActivityEngine, annotation=[none]], source=org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23), scope=eager singleton}
2018-06-01 12:25:42,054  INFO Injector:96 
2018-06-01 12:25:42,054  INFO Injector:85 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2018-06-01 12:25:42,054  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2a1699f0[Scopes.SINGLETON]
2018-06-01 12:25:42,054  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2018-06-01 12:25:42,055  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:42,055  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine, annotation=[none]], source=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24), scope=eager singleton}
2018-06-01 12:25:42,055  INFO Injector:96 
2018-06-01 12:25:42,055  INFO Injector:85 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2018-06-01 12:25:42,055  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@12a21500[Scopes.SINGLETON]
2018-06-01 12:25:42,056  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2018-06-01 12:25:42,056  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:42,056  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.DefaultTeleportationEngine, annotation=[none]], source=org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21), scope=eager singleton}
2018-06-01 12:25:42,056  INFO Injector:96 
2018-06-01 12:25:42,057  INFO Injector:85 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2018-06-01 12:25:42,057  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5230fac9[Scopes.SINGLETON]
2018-06-01 12:25:42,057  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2018-06-01 12:25:42,057  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:42,057  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.agents.PopulationAgentSource, annotation=[none]], source=org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26), scope=eager singleton}
2018-06-01 12:25:42,058  INFO Injector:96 
2018-06-01 12:25:42,058  INFO Injector:85 org.matsim.core.mobsim.qsim.QSim 
2018-06-01 12:25:42,058  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2046bef9[Scopes.SINGLETON]
2018-06-01 12:25:42,058  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2018-06-01 12:25:42,059  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:42,059  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.QSim, annotation=[none]], source=org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64), scope=eager singleton}
2018-06-01 12:25:42,059  INFO Injector:96 
2018-06-01 12:25:42,059  INFO Injector:99 === printInjector end ===
2018-06-01 12:25:42,059  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2018-06-01 12:25:42,060  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2018-06-01 12:25:42,060  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2018-06-01 12:25:42,060  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2018-06-01 12:25:42,061  INFO QNetsimEngine:507 Assigned 15 nodes and 23 links to QSimEngineRunner #0
2018-06-01 12:25:42,061  INFO EventsManagerImpl:134  event # 1
2018-06-01 12:25:42,061  INFO EventsManagerImpl:134  event # 4
2018-06-01 12:25:42,061  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 06:00:00 : #links=0 #nodes=1
2018-06-01 12:25:42,062  INFO QSim:506 SIMULATION (NEW QSim) AT 06:00:00 : #Veh=1 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2018-06-01 12:25:42,062  INFO Gbl:54 used RAM: 305240864B = 298086kB = 291MB  free: 240018656B = 228MB  total: 545259520B = 520MB
2018-06-01 12:25:42,176  INFO EventsManagerImpl:134  event # 16
2018-06-01 12:25:42,344  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 07:00:00 : #links=0 #nodes=0
2018-06-01 12:25:42,344  INFO QSim:506 SIMULATION (NEW QSim) AT 07:00:00 : #Veh=1 lost=0 simT=3600.0s realT=0s; (s/r): Infinity
2018-06-01 12:25:42,345  INFO Gbl:54 used RAM: 305240864B = 298086kB = 291MB  free: 240018656B = 228MB  total: 545259520B = 520MB
2018-06-01 12:25:42,634  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 08:00:00 : #links=0 #nodes=0
2018-06-01 12:25:42,634  INFO QSim:506 SIMULATION (NEW QSim) AT 08:00:00 : #Veh=1 lost=0 simT=7200.0s realT=0s; (s/r): Infinity
2018-06-01 12:25:42,635  INFO Gbl:54 used RAM: 305240864B = 298086kB = 291MB  free: 240018656B = 228MB  total: 545259520B = 520MB
2018-06-01 12:25:42,922  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 09:00:00 : #links=0 #nodes=0
2018-06-01 12:25:42,923  INFO QSim:506 SIMULATION (NEW QSim) AT 09:00:00 : #Veh=1 lost=0 simT=10800.0s realT=0s; (s/r): Infinity
2018-06-01 12:25:42,923  INFO Gbl:54 used RAM: 309199408B = 301952kB = 294MB  free: 236060112B = 225MB  total: 545259520B = 520MB
2018-06-01 12:25:43,203  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 10:00:00 : #links=1 #nodes=0
2018-06-01 12:25:43,204  INFO QSim:506 SIMULATION (NEW QSim) AT 10:00:00 : #Veh=1 lost=0 simT=14400.0s realT=1s; (s/r): 14400.0
2018-06-01 12:25:43,204  INFO Gbl:54 used RAM: 309199408B = 301952kB = 294MB  free: 236060112B = 225MB  total: 545259520B = 520MB
2018-06-01 12:25:43,374  INFO AbstractController$8:210 ### ITERATION 0 fires after mobsim event
2018-06-01 12:25:43,374  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.30435946sec
2018-06-01 12:25:43,374  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2018-06-01 12:25:43,375  INFO LegTimesControlerListener:50 [0] average trip (probably: leg) duration is: 1080 seconds = 00:18:00
2018-06-01 12:25:43,375  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2018-06-01 12:25:43,375  INFO ControlerListenerManagerImpl:251 [it.0] all ControlerAfterMobsimListeners called.
2018-06-01 12:25:43,376  INFO AbstractController$4:147 ### ITERATION 0 fires scoring event
2018-06-01 12:25:43,376  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2018-06-01 12:25:43,376  INFO NewScoreAssignerImpl:36 it: 0 msaStart: null
2018-06-01 12:25:43,376  INFO ControlerListenerManagerImpl:194 [it.0] all ControlerScoringListeners called.
2018-06-01 12:25:43,376  INFO AbstractController$5:155 ### ITERATION 0 fires iteration end event
2018-06-01 12:25:43,377  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-06-01 12:25:43,377  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2018-06-01 12:25:43,377  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2018-06-01 12:25:43,377  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2018-06-01 12:25:43,377  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2018-06-01 12:25:43,378  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2018-06-01 12:25:43,378  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2018-06-01 12:25:43,378  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2018-06-01 12:25:43,378  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2018-06-01 12:25:43,378  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2018-06-01 12:25:43,378  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2018-06-01 12:25:43,379  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 52.88175378702982
2018-06-01 12:25:43,379  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 52.88175378702982
2018-06-01 12:25:43,379  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 52.88175378702982
2018-06-01 12:25:43,379  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 52.88175378702982
2018-06-01 12:25:43,379  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2018-06-01 12:25:43,380  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2018-06-01 12:25:43,380  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2018-06-01 12:25:43,380  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 30000.0
2018-06-01 12:25:43,380  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2018-06-01 12:25:43,381  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2018-06-01 12:25:43,381  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2018-06-01 12:25:43,382  INFO LegHistogramListener:72 number of legs:	3	100%
2018-06-01 12:25:43,383  INFO LegHistogramListener:79 number of car legs:	3	100.0%
2018-06-01 12:25:43,383  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2018-06-01 12:25:43,383  INFO ControlerListenerManagerImpl:171 [it.0] all ControlerIterationEndsListeners called.
2018-06-01 12:25:43,383  INFO AbstractController:165 ### ITERATION 0 ENDS
2018-06-01 12:25:43,384  INFO AbstractController:166 ###################################################
2018-06-01 12:25:43,384  INFO AbstractController:121 ###################################################
2018-06-01 12:25:43,384  INFO AbstractController:122 ### ITERATION 1 BEGINS
2018-06-01 12:25:43,384  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2018-06-01 12:25:43,384  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2018-06-01 12:25:43,385  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2018-06-01 12:25:43,385  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2018-06-01 12:25:43,385  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2018-06-01 12:25:43,385  INFO ControlerListenerManagerImpl:148 [it.1] all ControlerIterationStartsListeners called.
2018-06-01 12:25:43,385  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2018-06-01 12:25:43,385 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2018-06-01 12:25:43,386 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2018-06-01 12:25:43,386  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 1 plans handled. Strategy: BestPlanSelector
2018-06-01 12:25:43,386  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 0 plans
2018-06-01 12:25:43,387  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2018-06-01 12:25:43,387  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 0 plans handled. Strategy: RandomPlanSelector_ReRoute
2018-06-01 12:25:43,387  INFO ControlerListenerManagerImpl:213 [it.1] all ControlerReplanningListeners called.
2018-06-01 12:25:43,387  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-06-01 12:25:43,387  INFO EventsManagerImpl:170 resetting Event-Handlers
2018-06-01 12:25:43,387  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2018-06-01 12:25:43,388  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2018-06-01 12:25:43,388  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2018-06-01 12:25:43,388  INFO EventsManagerImpl:177   org.matsim.core.events.algorithms.Vehicle2DriverEventHandler
2018-06-01 12:25:43,388  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2018-06-01 12:25:43,388  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2018-06-01 12:25:43,388  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2018-06-01 12:25:43,389  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2018-06-01 12:25:43,389  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2018-06-01 12:25:43,389  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2018-06-01 12:25:43,389  INFO ControlerListenerManagerImpl:232 [it.1] all ControlerBeforeMobsimListeners called.
2018-06-01 12:25:43,392  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2018-06-01 12:25:43,393  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.controler.MobsimListenerTest$SingletonCountingMobsimListener
2018-06-01 12:25:43,393  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2018-06-01 12:25:43,393  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2018-06-01 12:25:43,393  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2018-06-01 12:25:43,394  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2018-06-01 12:25:43,394  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2018-06-01 12:25:43,394  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2018-06-01 12:25:43,394  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2018-06-01 12:25:43,395  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2018-06-01 12:25:43,395  INFO Injector:81 === printInjector start ===
2018-06-01 12:25:43,395  INFO Injector:85 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2018-06-01 12:25:43,396  INFO Injector:86   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2018-06-01 12:25:43,396  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2018-06-01 12:25:43,396  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,396  INFO Injector:94   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler, annotation=[none]], source=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25), scope=eager singleton, provider=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]]}
2018-06-01 12:25:43,396  INFO Injector:96 
2018-06-01 12:25:43,396  INFO Injector:85 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2018-06-01 12:25:43,397  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@114183c8}[Scopes.SINGLETON]
2018-06-01 12:25:43,397  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2018-06-01 12:25:43,397  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,397  INFO Injector:92   --> target: Key[type=org.matsim.core.mobsim.qsim.agents.DefaultAgentFactory, annotation=[none]]
2018-06-01 12:25:43,397  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], source=org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30), scope=eager singleton, target=Key[type=org.matsim.core.mobsim.qsim.agents.DefaultAgentFactory, annotation=[none]]}
2018-06-01 12:25:43,397  INFO Injector:96 
2018-06-01 12:25:43,398  INFO Injector:85 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2018-06-01 12:25:43,398  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@5a5a36f0[Scopes.SINGLETON]}
2018-06-01 12:25:43,398  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2018-06-01 12:25:43,398  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,398  INFO Injector:92   --> target: Key[type=org.matsim.core.mobsim.qsim.QSim, annotation=[none]]
2018-06-01 12:25:43,398  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], source=org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.mobsim.qsim.QSim, annotation=[none]]}
2018-06-01 12:25:43,399  INFO Injector:96 
2018-06-01 12:25:43,399  INFO Injector:85 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2018-06-01 12:25:43,399  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2579a31c[Scopes.SINGLETON]
2018-06-01 12:25:43,399  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2018-06-01 12:25:43,399  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,400  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.jdeqsim.MessageQueue, annotation=[none]], source=org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24), scope=eager singleton}
2018-06-01 12:25:43,400  INFO Injector:96 
2018-06-01 12:25:43,400  INFO Injector:85 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2018-06-01 12:25:43,400  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@12562e3[Scopes.SINGLETON]
2018-06-01 12:25:43,400  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2018-06-01 12:25:43,400  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,401  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler, annotation=[none]], source=org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25), scope=eager singleton}
2018-06-01 12:25:43,401  INFO Injector:96 
2018-06-01 12:25:43,401  INFO Injector:85 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2018-06-01 12:25:43,401  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@53e49144[Scopes.SINGLETON]
2018-06-01 12:25:43,401  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2018-06-01 12:25:43,401  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,402  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine, annotation=[none]], source=org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26), scope=eager singleton}
2018-06-01 12:25:43,402  INFO Injector:96 
2018-06-01 12:25:43,402  INFO Injector:85 org.matsim.core.mobsim.qsim.ActivityEngine 
2018-06-01 12:25:43,402  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@23ec8152[Scopes.SINGLETON]
2018-06-01 12:25:43,402  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2018-06-01 12:25:43,402  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,403  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.ActivityEngine, annotation=[none]], source=org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23), scope=eager singleton}
2018-06-01 12:25:43,403  INFO Injector:96 
2018-06-01 12:25:43,403  INFO Injector:85 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2018-06-01 12:25:43,403  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@3378d7b1[Scopes.SINGLETON]
2018-06-01 12:25:43,403  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2018-06-01 12:25:43,403  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,404  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine, annotation=[none]], source=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24), scope=eager singleton}
2018-06-01 12:25:43,404  INFO Injector:96 
2018-06-01 12:25:43,404  INFO Injector:85 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2018-06-01 12:25:43,404  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@8d88392[Scopes.SINGLETON]
2018-06-01 12:25:43,404  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2018-06-01 12:25:43,404  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,405  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.DefaultTeleportationEngine, annotation=[none]], source=org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21), scope=eager singleton}
2018-06-01 12:25:43,405  INFO Injector:96 
2018-06-01 12:25:43,405  INFO Injector:85 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2018-06-01 12:25:43,405  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@782d260a[Scopes.SINGLETON]
2018-06-01 12:25:43,405  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2018-06-01 12:25:43,405  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,406  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.agents.PopulationAgentSource, annotation=[none]], source=org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26), scope=eager singleton}
2018-06-01 12:25:43,406  INFO Injector:96 
2018-06-01 12:25:43,406  INFO Injector:85 org.matsim.core.mobsim.qsim.QSim 
2018-06-01 12:25:43,406  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5a5a36f0[Scopes.SINGLETON]
2018-06-01 12:25:43,406  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2018-06-01 12:25:43,406  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,407  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.QSim, annotation=[none]], source=org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64), scope=eager singleton}
2018-06-01 12:25:43,407  INFO Injector:96 
2018-06-01 12:25:43,407  INFO Injector:99 === printInjector end ===
2018-06-01 12:25:43,407  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2018-06-01 12:25:43,407  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2018-06-01 12:25:43,408  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2018-06-01 12:25:43,408  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2018-06-01 12:25:43,408  INFO QNetsimEngine:507 Assigned 15 nodes and 23 links to QSimEngineRunner #0
2018-06-01 12:25:43,409 ERROR AbstractController:198 Mobsim did not complete normally! afterMobsimListeners will be called anyway.
java.lang.RuntimeException: This mobsim listener ran more than once.
	at org.matsim.core.controler.MobsimListenerTest$SingletonCountingMobsimListener.notifyMobsimInitialized(MobsimListenerTest.java:98)
	at org.matsim.core.mobsim.qsim.MobsimListenerManager.fireQueueSimulationInitializedEvent(MobsimListenerManager.java:74)
	at org.matsim.core.mobsim.qsim.QSim.run(QSim.java:222)
	at org.matsim.core.controler.NewControler.runMobSim(NewControler.java:111)
	at org.matsim.core.controler.AbstractController$7.run(AbstractController.java:187)
	at org.matsim.core.controler.AbstractController.iterationStep(AbstractController.java:219)
	at org.matsim.core.controler.AbstractController.mobsim(AbstractController.java:183)
	at org.matsim.core.controler.AbstractController.iteration(AbstractController.java:142)
	at org.matsim.core.controler.AbstractController.doIterations(AbstractController.java:110)
	at org.matsim.core.controler.AbstractController.access$000(AbstractController.java:28)
	at org.matsim.core.controler.AbstractController$1.run(AbstractController.java:80)
	at org.matsim.core.controler.MatsimRuntimeModifications.run(MatsimRuntimeModifications.java:48)
	at org.matsim.core.controler.MatsimRuntimeModifications.run(MatsimRuntimeModifications.java:31)
	at org.matsim.core.controler.AbstractController.run(AbstractController.java:88)
	at org.matsim.core.controler.NewControler.run(NewControler.java:75)
	at org.matsim.core.controler.Controler.run(Controler.java:204)
	at org.matsim.core.controler.MobsimListenerTest.testRunMobsim_listenerSingleton(MobsimListenerTest.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:19)
	at org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:53)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:344)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:269)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:240)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:184)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
2018-06-01 12:25:43,409  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=2.03589E-4sec
2018-06-01 12:25:43,409  INFO AbstractController$8:210 ### ITERATION 1 fires after mobsim event
2018-06-01 12:25:43,410  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2018-06-01 12:25:43,410  INFO LegTimesControlerListener:50 [1] average trip (probably: leg) duration is: 0 seconds = 00:00:00
2018-06-01 12:25:43,411  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2018-06-01 12:25:43,411  INFO ControlerListenerManagerImpl:251 [it.1] all ControlerAfterMobsimListeners called.
2018-06-01 12:25:43,411 ERROR MatsimRuntimeModifications:54 Getting uncaught Exception in Thread main
java.lang.RuntimeException: This mobsim listener ran more than once.
	at org.matsim.core.controler.MobsimListenerTest$SingletonCountingMobsimListener.notifyMobsimInitialized(MobsimListenerTest.java:98)
	at org.matsim.core.mobsim.qsim.MobsimListenerManager.fireQueueSimulationInitializedEvent(MobsimListenerManager.java:74)
	at org.matsim.core.mobsim.qsim.QSim.run(QSim.java:222)
	at org.matsim.core.controler.NewControler.runMobSim(NewControler.java:111)
	at org.matsim.core.controler.AbstractController$7.run(AbstractController.java:187)
	at org.matsim.core.controler.AbstractController.iterationStep(AbstractController.java:219)
	at org.matsim.core.controler.AbstractController.mobsim(AbstractController.java:183)
	at org.matsim.core.controler.AbstractController.iteration(AbstractController.java:142)
	at org.matsim.core.controler.AbstractController.doIterations(AbstractController.java:110)
	at org.matsim.core.controler.AbstractController.access$000(AbstractController.java:28)
	at org.matsim.core.controler.AbstractController$1.run(AbstractController.java:80)
	at org.matsim.core.controler.MatsimRuntimeModifications.run(MatsimRuntimeModifications.java:48)
	at org.matsim.core.controler.MatsimRuntimeModifications.run(MatsimRuntimeModifications.java:31)
	at org.matsim.core.controler.AbstractController.run(AbstractController.java:88)
	at org.matsim.core.controler.NewControler.run(NewControler.java:75)
	at org.matsim.core.controler.Controler.run(Controler.java:204)
	at org.matsim.core.controler.MobsimListenerTest.testRunMobsim_listenerSingleton(MobsimListenerTest.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:19)
	at org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:53)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:344)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:269)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:240)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:184)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
2018-06-01 12:25:43,411  INFO MatsimRuntimeModifications:58 S H U T D O W N   ---   start shutdown.
2018-06-01 12:25:43,412 ERROR MatsimRuntimeModifications:60 ERROR --- This is an unexpected shutdown!
2018-06-01 12:25:43,412 ERROR MatsimRuntimeModifications:63 Shutdown possibly caused by the following Exception:
java.lang.RuntimeException: This mobsim listener ran more than once.
	at org.matsim.core.controler.MobsimListenerTest$SingletonCountingMobsimListener.notifyMobsimInitialized(MobsimListenerTest.java:98)
	at org.matsim.core.mobsim.qsim.MobsimListenerManager.fireQueueSimulationInitializedEvent(MobsimListenerManager.java:74)
	at org.matsim.core.mobsim.qsim.QSim.run(QSim.java:222)
	at org.matsim.core.controler.NewControler.runMobSim(NewControler.java:111)
	at org.matsim.core.controler.AbstractController$7.run(AbstractController.java:187)
	at org.matsim.core.controler.AbstractController.iterationStep(AbstractController.java:219)
	at org.matsim.core.controler.AbstractController.mobsim(AbstractController.java:183)
	at org.matsim.core.controler.AbstractController.iteration(AbstractController.java:142)
	at org.matsim.core.controler.AbstractController.doIterations(AbstractController.java:110)
	at org.matsim.core.controler.AbstractController.access$000(AbstractController.java:28)
	at org.matsim.core.controler.AbstractController$1.run(AbstractController.java:80)
	at org.matsim.core.controler.MatsimRuntimeModifications.run(MatsimRuntimeModifications.java:48)
	at org.matsim.core.controler.MatsimRuntimeModifications.run(MatsimRuntimeModifications.java:31)
	at org.matsim.core.controler.AbstractController.run(AbstractController.java:88)
	at org.matsim.core.controler.NewControler.run(NewControler.java:75)
	at org.matsim.core.controler.Controler.run(Controler.java:204)
	at org.matsim.core.controler.MobsimListenerTest.testRunMobsim_listenerSingleton(MobsimListenerTest.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:19)
	at org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:53)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:344)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:269)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:240)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:184)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
2018-06-01 12:25:43,413  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-06-01 12:25:43,413  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ModeStatsControlerListener
2018-06-01 12:25:43,413  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ScoreStatsControlerListener
2018-06-01 12:25:43,414  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.TravelDistanceStatsControlerListener
2018-06-01 12:25:43,414  INFO ControlerListenerManagerImpl:129 all ControlerShutdownListeners called.
2018-06-01 12:25:43,414 ERROR MatsimRuntimeModifications:78 ERROR --- MATSim unexpectedly terminated. Please check the output or the logfile with warnings and errors for hints.
2018-06-01 12:25:43,414 ERROR MatsimRuntimeModifications:79 ERROR --- results should not be used for further analysis.
2018-06-01 12:25:43,415  INFO MatsimRuntimeModifications:81 S H U T D O W N   ---   shutdown completed.
2018-06-01 12:25:43,415 ERROR MatsimRuntimeModifications:83 ERROR --- This was an unexpected shutdown! See the log file for a possible reason.
2018-06-01 12:25:43,416  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,418  INFO MatsimXmlParser:155 starting to parse xml from url file:/root/workspace/matsim-org/matsim/386581390/examples/target/classes/test/scenarios/equil/config_plans1.xml ...
2018-06-01 12:25:43,420  INFO ConfigReader:102 using config_v2-reader
2018-06-01 12:25:43,421  INFO MatsimXmlParser:307 Using local DTD from classpath:dtd/config_v2.dtd
2018-06-01 12:25:43,422  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/examples/target/classes/test/scenarios/equil/config_plans1.xml]
2018-06-01 12:25:43,537 DEBUG ScenarioLoaderImpl:85 setting {}
2018-06-01 12:25:43,538  INFO ScenarioLoaderImpl:108 loading scenario from base directory: /root/workspace/matsim-org/matsim/386581390/matsim/
2018-06-01 12:25:43,538  INFO ScenarioLoaderImpl:130 loading network from file:/root/workspace/matsim-org/matsim/386581390/examples/target/classes/test/scenarios/equil/network.xml
2018-06-01 12:25:43,538  INFO MatsimXmlParser:155 starting to parse xml from url file:/root/workspace/matsim-org/matsim/386581390/examples/target/classes/test/scenarios/equil/network.xml ...
2018-06-01 12:25:43,540  INFO MatsimNetworkReader:90 using network_v1-reader.
2018-06-01 12:25:43,540  INFO MatsimXmlParser:307 Using local DTD from classpath:dtd/network_v1.dtd
2018-06-01 12:25:43,541  INFO NetworkImpl:167  node # 1
2018-06-01 12:25:43,541  INFO NetworkImpl:167  node # 4
2018-06-01 12:25:43,541  INFO NetworkImpl:163  link # 1
2018-06-01 12:25:43,542  INFO NetworkImpl:163  link # 4
2018-06-01 12:25:43,542  INFO NetworkImpl:163  link # 16
2018-06-01 12:25:43,543  INFO ScenarioLoaderImpl:161 loading facilities from file:/root/workspace/matsim-org/matsim/386581390/examples/target/classes/test/scenarios/equil/facilities.xml
2018-06-01 12:25:43,543  INFO MatsimXmlParser:155 starting to parse xml from url file:/root/workspace/matsim-org/matsim/386581390/examples/target/classes/test/scenarios/equil/facilities.xml ...
2018-06-01 12:25:43,544  INFO MatsimFacilitiesReader:119 using facilities_v1-reader.
2018-06-01 12:25:43,545  INFO MatsimXmlParser:307 Using local DTD from classpath:dtd/facilities_v1.dtd
2018-06-01 12:25:43,546  INFO ScenarioLoaderImpl:179 loaded 23 facilities from file:/root/workspace/matsim-org/matsim/386581390/examples/target/classes/test/scenarios/equil/facilities.xml
2018-06-01 12:25:43,546  INFO ScenarioLoaderImpl:192 no facility-attributes file set in config, not loading any facility attributes
2018-06-01 12:25:43,547  INFO ScenarioLoaderImpl:199 loading population from file:/root/workspace/matsim-org/matsim/386581390/examples/target/classes/test/scenarios/equil/plans1.xml
2018-06-01 12:25:43,547  INFO MatsimXmlParser:155 starting to parse xml from url file:/root/workspace/matsim-org/matsim/386581390/examples/target/classes/test/scenarios/equil/plans1.xml ...
2018-06-01 12:25:43,548  INFO PopulationReader:124 using plans_v4-reader.
2018-06-01 12:25:43,549  INFO MatsimXmlParser:307 Using local DTD from classpath:dtd/plans_v4.dtd
2018-06-01 12:25:43,550  INFO ParallelPopulationReaderMatsimV4:138 Start parallel population reading...
2018-06-01 12:25:43,551  INFO PopulationImpl:112  person # 1
2018-06-01 12:25:43,551  INFO ParallelPopulationReaderMatsimV4:188 Finished parallel population reading...
2018-06-01 12:25:43,552  INFO PopulationUtils:992  person # 1
2018-06-01 12:25:43,552  INFO ScenarioLoaderImpl:235 no person-attributes file set in config, not loading any person attributes
2018-06-01 12:25:43,552  INFO ScenarioLoaderImpl:247 no households file set in config, not loading households
2018-06-01 12:25:43,552  INFO ScenarioLoaderImpl:258 no household-attributes file set in config, not loading any household attributes
2018-06-01 12:25:43,552  INFO ScenarioLoaderImpl:284 no transit schedule file set in config, not loading any transit schedule
2018-06-01 12:25:43,553  INFO ScenarioLoaderImpl:311 no transit vehicles file set in config, not loading any transit vehicles
2018-06-01 12:25:43,553  INFO SimStepParallelEventsManagerImpl:79 number of threads=1
2018-06-01 12:25:43,553  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.trafficmonitoring.TravelTimeCalculator
2018-06-01 12:25:43,553  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkEnterEventHandler
2018-06-01 12:25:43,554  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkEnterEvent
2018-06-01 12:25:43,554  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkLeaveEventHandler
2018-06-01 12:25:43,554  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkLeaveEvent
2018-06-01 12:25:43,554  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-06-01 12:25:43,555  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-06-01 12:25:43,555  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleLeavesTrafficEventHandler
2018-06-01 12:25:43,555  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleLeavesTrafficEvent
2018-06-01 12:25:43,555  INFO EventsManagerImpl:148   org.matsim.core.api.experimental.events.handler.VehicleArrivesAtFacilityEventHandler
2018-06-01 12:25:43,556  INFO EventsManagerImpl:207     > org.matsim.core.api.experimental.events.VehicleArrivesAtFacilityEvent
2018-06-01 12:25:43,556  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleAbortsEventHandler
2018-06-01 12:25:43,556  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleAbortsEvent
2018-06-01 12:25:43,556  INFO EventsManagerImpl:156 
2018-06-01 12:25:43,557  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.trafficmonitoring.TravelTimeCalculator
2018-06-01 12:25:43,557  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkEnterEventHandler
2018-06-01 12:25:43,557  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkEnterEvent
2018-06-01 12:25:43,557  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkLeaveEventHandler
2018-06-01 12:25:43,557  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkLeaveEvent
2018-06-01 12:25:43,558  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-06-01 12:25:43,558  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-06-01 12:25:43,558  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleLeavesTrafficEventHandler
2018-06-01 12:25:43,558  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleLeavesTrafficEvent
2018-06-01 12:25:43,559  INFO EventsManagerImpl:148   org.matsim.core.api.experimental.events.handler.VehicleArrivesAtFacilityEventHandler
2018-06-01 12:25:43,559  INFO EventsManagerImpl:207     > org.matsim.core.api.experimental.events.VehicleArrivesAtFacilityEvent
2018-06-01 12:25:43,559  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleAbortsEventHandler
2018-06-01 12:25:43,559  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleAbortsEvent
2018-06-01 12:25:43,560  INFO EventsManagerImpl:156 
2018-06-01 12:25:43,561  INFO StrategyManager:62 global innovation switch off after iteration: 0
2018-06-01 12:25:43,561  INFO GenericStrategyManager:331 added change request:  iteration=1 newWeight=0.0 strategy=RandomPlanSelector_ReRoute
2018-06-01 12:25:43,562  INFO GenericStrategyManager:363 setting PlanSelectorForRemoval to class org.matsim.core.replanning.selectors.WorstPlanForRemovalSelector
2018-06-01 12:25:43,562  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.scoring.EventsToActivities
2018-06-01 12:25:43,562  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityStartEventHandler
2018-06-01 12:25:43,563  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityStartEvent
2018-06-01 12:25:43,563  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityEndEventHandler
2018-06-01 12:25:43,563  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityEndEvent
2018-06-01 12:25:43,563  INFO EventsManagerImpl:156 
2018-06-01 12:25:43,564  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.scoring.EventsToActivities
2018-06-01 12:25:43,564  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityStartEventHandler
2018-06-01 12:25:43,564  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityStartEvent
2018-06-01 12:25:43,565  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityEndEventHandler
2018-06-01 12:25:43,565  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityEndEvent
2018-06-01 12:25:43,565  INFO EventsManagerImpl:156 
2018-06-01 12:25:43,565  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.scoring.EventsToLegs
2018-06-01 12:25:43,566  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonDepartureEventHandler
2018-06-01 12:25:43,566  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonDepartureEvent
2018-06-01 12:25:43,566  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonArrivalEventHandler
2018-06-01 12:25:43,567  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonArrivalEvent
2018-06-01 12:25:43,567  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkLeaveEventHandler
2018-06-01 12:25:43,567  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkLeaveEvent
2018-06-01 12:25:43,568  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkEnterEventHandler
2018-06-01 12:25:43,568  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkEnterEvent
2018-06-01 12:25:43,568  INFO EventsManagerImpl:148   org.matsim.core.api.experimental.events.handler.TeleportationArrivalEventHandler
2018-06-01 12:25:43,568  INFO EventsManagerImpl:207     > org.matsim.core.api.experimental.events.TeleportationArrivalEvent
2018-06-01 12:25:43,569  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.TransitDriverStartsEventHandler
2018-06-01 12:25:43,569  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.TransitDriverStartsEvent
2018-06-01 12:25:43,569  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonEntersVehicleEventHandler
2018-06-01 12:25:43,570  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonEntersVehicleEvent
2018-06-01 12:25:43,570  INFO EventsManagerImpl:148   org.matsim.core.api.experimental.events.handler.VehicleArrivesAtFacilityEventHandler
2018-06-01 12:25:43,570  INFO EventsManagerImpl:207     > org.matsim.core.api.experimental.events.VehicleArrivesAtFacilityEvent
2018-06-01 12:25:43,571  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-06-01 12:25:43,571  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-06-01 12:25:43,571  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleLeavesTrafficEventHandler
2018-06-01 12:25:43,572  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleLeavesTrafficEvent
2018-06-01 12:25:43,572  INFO EventsManagerImpl:156 
2018-06-01 12:25:43,572  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.scoring.EventsToLegs
2018-06-01 12:25:43,573  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonDepartureEventHandler
2018-06-01 12:25:43,573  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonDepartureEvent
2018-06-01 12:25:43,573  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonArrivalEventHandler
2018-06-01 12:25:43,573  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonArrivalEvent
2018-06-01 12:25:43,574  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkLeaveEventHandler
2018-06-01 12:25:43,574  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkLeaveEvent
2018-06-01 12:25:43,574  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkEnterEventHandler
2018-06-01 12:25:43,575  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkEnterEvent
2018-06-01 12:25:43,575  INFO EventsManagerImpl:148   org.matsim.core.api.experimental.events.handler.TeleportationArrivalEventHandler
2018-06-01 12:25:43,575  INFO EventsManagerImpl:207     > org.matsim.core.api.experimental.events.TeleportationArrivalEvent
2018-06-01 12:25:43,576  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.TransitDriverStartsEventHandler
2018-06-01 12:25:43,576  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.TransitDriverStartsEvent
2018-06-01 12:25:43,576  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonEntersVehicleEventHandler
2018-06-01 12:25:43,576  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonEntersVehicleEvent
2018-06-01 12:25:43,577  INFO EventsManagerImpl:148   org.matsim.core.api.experimental.events.handler.VehicleArrivesAtFacilityEventHandler
2018-06-01 12:25:43,577  INFO EventsManagerImpl:207     > org.matsim.core.api.experimental.events.VehicleArrivesAtFacilityEvent
2018-06-01 12:25:43,577  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-06-01 12:25:43,578  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-06-01 12:25:43,578  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleLeavesTrafficEventHandler
2018-06-01 12:25:43,578  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleLeavesTrafficEvent
2018-06-01 12:25:43,579  INFO EventsManagerImpl:156 
2018-06-01 12:25:43,579  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.scoring.ScoringFunctionsForPopulation
2018-06-01 12:25:43,579  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2018-06-01 12:25:43,579  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2018-06-01 12:25:43,580  INFO EventsManagerImpl:148   org.matsim.core.scoring.EventsToLegs$LegHandler
2018-06-01 12:25:43,580  INFO EventsManagerImpl:148   org.matsim.core.scoring.EventsToActivities$ActivityHandler
2018-06-01 12:25:43,580  INFO EventsManagerImpl:156 
2018-06-01 12:25:43,581  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.scoring.ScoringFunctionsForPopulation
2018-06-01 12:25:43,581  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2018-06-01 12:25:43,581  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2018-06-01 12:25:43,581  INFO EventsManagerImpl:148   org.matsim.core.scoring.EventsToLegs$LegHandler
2018-06-01 12:25:43,581  INFO EventsManagerImpl:148   org.matsim.core.scoring.EventsToActivities$ActivityHandler
2018-06-01 12:25:43,582  INFO EventsManagerImpl:156 
2018-06-01 12:25:43,582  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.Vehicle2DriverEventHandler
2018-06-01 12:25:43,582  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-06-01 12:25:43,582  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-06-01 12:25:43,583  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleLeavesTrafficEventHandler
2018-06-01 12:25:43,583  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleLeavesTrafficEvent
2018-06-01 12:25:43,583  INFO EventsManagerImpl:156 
2018-06-01 12:25:43,583  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.Vehicle2DriverEventHandler
2018-06-01 12:25:43,584  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-06-01 12:25:43,584  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-06-01 12:25:43,584  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleLeavesTrafficEventHandler
2018-06-01 12:25:43,585  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleLeavesTrafficEvent
2018-06-01 12:25:43,585  INFO EventsManagerImpl:156 
2018-06-01 12:25:43,585  INFO CalcLinkStats:151  resetting `count' to zero.  This info is here since we want to check when this is happening during normal simulation runs.  kai, jan'11
2018-06-01 12:25:43,586  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.analysis.VolumesAnalyzer
2018-06-01 12:25:43,586  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkLeaveEventHandler
2018-06-01 12:25:43,586  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkLeaveEvent
2018-06-01 12:25:43,587  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-06-01 12:25:43,587  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-06-01 12:25:43,587  INFO EventsManagerImpl:156 
2018-06-01 12:25:43,588  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.analysis.VolumesAnalyzer
2018-06-01 12:25:43,588  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkLeaveEventHandler
2018-06-01 12:25:43,588  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkLeaveEvent
2018-06-01 12:25:43,589  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-06-01 12:25:43,589  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-06-01 12:25:43,589  INFO EventsManagerImpl:156 
2018-06-01 12:25:43,590  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.analysis.LegHistogram
2018-06-01 12:25:43,590  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonDepartureEventHandler
2018-06-01 12:25:43,590  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonDepartureEvent
2018-06-01 12:25:43,590  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonArrivalEventHandler
2018-06-01 12:25:43,591  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonArrivalEvent
2018-06-01 12:25:43,591  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonStuckEventHandler
2018-06-01 12:25:43,591  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonStuckEvent
2018-06-01 12:25:43,592  INFO EventsManagerImpl:156 
2018-06-01 12:25:43,592  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.analysis.LegHistogram
2018-06-01 12:25:43,592  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonDepartureEventHandler
2018-06-01 12:25:43,592  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonDepartureEvent
2018-06-01 12:25:43,593  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonArrivalEventHandler
2018-06-01 12:25:43,593  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonArrivalEvent
2018-06-01 12:25:43,593  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonStuckEventHandler
2018-06-01 12:25:43,593  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonStuckEvent
2018-06-01 12:25:43,594  INFO EventsManagerImpl:156 
2018-06-01 12:25:43,594  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.analysis.CalcLegTimes
2018-06-01 12:25:43,594  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonDepartureEventHandler
2018-06-01 12:25:43,595  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonDepartureEvent
2018-06-01 12:25:43,595  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonArrivalEventHandler
2018-06-01 12:25:43,595  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonArrivalEvent
2018-06-01 12:25:43,595  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityEndEventHandler
2018-06-01 12:25:43,596  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityEndEvent
2018-06-01 12:25:43,596  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityStartEventHandler
2018-06-01 12:25:43,596  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityStartEvent
2018-06-01 12:25:43,596  INFO EventsManagerImpl:156 
2018-06-01 12:25:43,597  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.analysis.CalcLegTimes
2018-06-01 12:25:43,597  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonDepartureEventHandler
2018-06-01 12:25:43,597  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonDepartureEvent
2018-06-01 12:25:43,597  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonArrivalEventHandler
2018-06-01 12:25:43,598  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonArrivalEvent
2018-06-01 12:25:43,598  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityEndEventHandler
2018-06-01 12:25:43,598  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityEndEvent
2018-06-01 12:25:43,598  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityStartEventHandler
2018-06-01 12:25:43,598  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityStartEvent
2018-06-01 12:25:43,599  INFO EventsManagerImpl:156 
2018-06-01 12:25:43,599  INFO AbstractController:52 Used Controler-Class: org.matsim.core.controler.NewControler
2018-06-01 12:25:43,600  INFO Config:535 ConfigConsistencyChecker with runtime type=class org.matsim.core.config.consistency.ConfigConsistencyCheckerImpl was already added; not adding it a second time
2018-06-01 12:25:43,600  INFO Injector:81 === printInjector start ===
2018-06-01 12:25:43,600  INFO Injector:85 org.matsim.core.mobsim.framework.Mobsim 
2018-06-01 12:25:43,600  INFO Injector:86   --> provider: org.matsim.core.controler.ControlerMobsimIntegrationTest$1$1@5cd26687
2018-06-01 12:25:43,600  INFO Injector:87   --> source: org.matsim.core.controler.ControlerMobsimIntegrationTest$1.install(ControlerMobsimIntegrationTest.java:56)
2018-06-01 12:25:43,601  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,601  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.mobsim.framework.Mobsim, annotation=[none]], source=org.matsim.core.controler.ControlerMobsimIntegrationTest$1.install(ControlerMobsimIntegrationTest.java:56), scope=Scopes.NO_SCOPE, provider=org.matsim.core.controler.ControlerMobsimIntegrationTest$1$1@5cd26687}
2018-06-01 12:25:43,601  INFO Injector:96 
2018-06-01 12:25:43,601  INFO Injector:85 org.matsim.core.scenario.ScenarioLoaderImpl 
2018-06-01 12:25:43,601  INFO Injector:86   --> provider: of(org.matsim.core.scenario.ScenarioLoaderImpl@7f12ed2d)
2018-06-01 12:25:43,601  INFO Injector:87   --> source: org.matsim.core.scenario.ScenarioByConfigModule.install(ScenarioByConfigModule.java:12)
2018-06-01 12:25:43,602  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,602  INFO Injector:94   ==full==> InstanceBinding{key=Key[type=org.matsim.core.scenario.ScenarioLoaderImpl, annotation=[none]], source=org.matsim.core.scenario.ScenarioByConfigModule.install(ScenarioByConfigModule.java:12), instance=org.matsim.core.scenario.ScenarioLoaderImpl@7f12ed2d}
2018-06-01 12:25:43,602  INFO Injector:96 
2018-06-01 12:25:43,602  INFO Injector:85 org.matsim.api.core.v01.network.Network 
2018-06-01 12:25:43,602  INFO Injector:86   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(ScenarioByInstanceModule.java:39)
2018-06-01 12:25:43,602  INFO Injector:87   --> source: org.matsim.api.core.v01.network.Network org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(org.matsim.api.core.v01.Scenario)
2018-06-01 12:25:43,602  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,603  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.network.Network, annotation=[none]], source=org.matsim.api.core.v01.network.Network org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(ScenarioByInstanceModule.java:39)}
2018-06-01 12:25:43,603  INFO Injector:96 
2018-06-01 12:25:43,603  INFO Injector:85 org.matsim.api.core.v01.population.Population 
2018-06-01 12:25:43,603  INFO Injector:86   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(ScenarioByInstanceModule.java:43)
2018-06-01 12:25:43,603  INFO Injector:87   --> source: org.matsim.api.core.v01.population.Population org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(org.matsim.api.core.v01.Scenario)
2018-06-01 12:25:43,603  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,604  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.population.Population, annotation=[none]], source=org.matsim.api.core.v01.population.Population org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(ScenarioByInstanceModule.java:43)}
2018-06-01 12:25:43,604  INFO Injector:96 
2018-06-01 12:25:43,604  INFO Injector:85 org.matsim.api.core.v01.population.PopulationFactory 
2018-06-01 12:25:43,604  INFO Injector:86   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(ScenarioByInstanceModule.java:47)
2018-06-01 12:25:43,604  INFO Injector:87   --> source: org.matsim.api.core.v01.population.PopulationFactory org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(org.matsim.api.core.v01.population.Population)
2018-06-01 12:25:43,604  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,604  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.population.PopulationFactory, annotation=[none]], source=org.matsim.api.core.v01.population.PopulationFactory org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(org.matsim.api.core.v01.population.Population), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(ScenarioByInstanceModule.java:47)}
2018-06-01 12:25:43,605  INFO Injector:96 
2018-06-01 12:25:43,605  INFO Injector:85 org.matsim.facilities.ActivityFacilities 
2018-06-01 12:25:43,605  INFO Injector:86   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(ScenarioByInstanceModule.java:51)
2018-06-01 12:25:43,605  INFO Injector:87   --> source: org.matsim.facilities.ActivityFacilities org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(org.matsim.api.core.v01.Scenario)
2018-06-01 12:25:43,605  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,605  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.facilities.ActivityFacilities, annotation=[none]], source=org.matsim.facilities.ActivityFacilities org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(ScenarioByInstanceModule.java:51)}
2018-06-01 12:25:43,606  INFO Injector:96 
2018-06-01 12:25:43,606  INFO Injector:85 org.matsim.households.Households 
2018-06-01 12:25:43,606  INFO Injector:86   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(ScenarioByInstanceModule.java:56)
2018-06-01 12:25:43,606  INFO Injector:87   --> source: org.matsim.households.Households org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(org.matsim.api.core.v01.Scenario)
2018-06-01 12:25:43,606  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,606  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.households.Households, annotation=[none]], source=org.matsim.households.Households org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(ScenarioByInstanceModule.java:56)}
2018-06-01 12:25:43,606  INFO Injector:96 
2018-06-01 12:25:43,607  INFO Injector:85 org.matsim.vehicles.Vehicles 
2018-06-01 12:25:43,607  INFO Injector:86   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(ScenarioByInstanceModule.java:61)
2018-06-01 12:25:43,607  INFO Injector:87   --> source: org.matsim.vehicles.Vehicles org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(org.matsim.api.core.v01.Scenario)
2018-06-01 12:25:43,607  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,607  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.vehicles.Vehicles, annotation=[none]], source=org.matsim.vehicles.Vehicles org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(ScenarioByInstanceModule.java:61)}
2018-06-01 12:25:43,607  INFO Injector:96 
2018-06-01 12:25:43,608  INFO Injector:85 org.matsim.lanes.data.Lanes 
2018-06-01 12:25:43,608  INFO Injector:86   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(ScenarioByInstanceModule.java:66)
2018-06-01 12:25:43,608  INFO Injector:87   --> source: org.matsim.lanes.data.Lanes org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(org.matsim.api.core.v01.Scenario)
2018-06-01 12:25:43,608  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,608  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.lanes.data.Lanes, annotation=[none]], source=org.matsim.lanes.data.Lanes org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(ScenarioByInstanceModule.java:66)}
2018-06-01 12:25:43,608  INFO Injector:96 
2018-06-01 12:25:43,608  INFO Injector:85 org.matsim.api.core.v01.Scenario 
2018-06-01 12:25:43,609  INFO Injector:86   --> provider: @Provides org.matsim.core.scenario.ScenarioByConfigModule.createScenario(ScenarioByConfigModule.java:9)[Scopes.SINGLETON]
2018-06-01 12:25:43,609  INFO Injector:87   --> source: private org.matsim.api.core.v01.Scenario org.matsim.core.scenario.ScenarioByConfigModule.createScenario(org.matsim.core.scenario.ScenarioLoaderImpl)
2018-06-01 12:25:43,609  INFO Injector:89   --> scope: Scopes.SINGLETON
2018-06-01 12:25:43,609  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.Scenario, annotation=[none]], source=private org.matsim.api.core.v01.Scenario org.matsim.core.scenario.ScenarioByConfigModule.createScenario(org.matsim.core.scenario.ScenarioLoaderImpl), scope=Scopes.SINGLETON, provider=@Provides org.matsim.core.scenario.ScenarioByConfigModule.createScenario(ScenarioByConfigModule.java:9)}
2018-06-01 12:25:43,609  INFO Injector:96 
2018-06-01 12:25:43,609  INFO Injector:85 org.matsim.core.controler.ControlerI 
2018-06-01 12:25:43,610  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.ControlerI, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@302fc2d5}[Scopes.SINGLETON]
2018-06-01 12:25:43,610  INFO Injector:87   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:8)
2018-06-01 12:25:43,610  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,610  INFO Injector:92   --> target: Key[type=org.matsim.core.controler.NewControler, annotation=[none]]
2018-06-01 12:25:43,610  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.ControlerI, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:8), scope=eager singleton, target=Key[type=org.matsim.core.controler.NewControler, annotation=[none]]}
2018-06-01 12:25:43,610  INFO Injector:96 
2018-06-01 12:25:43,610  INFO Injector:85 org.matsim.core.controler.ControlerListenerManager 
2018-06-01 12:25:43,611  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.ControlerListenerManager, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@6e05fa32[Scopes.SINGLETON]}
2018-06-01 12:25:43,611  INFO Injector:87   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:10)
2018-06-01 12:25:43,611  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,611  INFO Injector:92   --> target: Key[type=org.matsim.core.controler.ControlerListenerManagerImpl, annotation=[none]]
2018-06-01 12:25:43,611  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.ControlerListenerManager, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:10), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.ControlerListenerManagerImpl, annotation=[none]]}
2018-06-01 12:25:43,611  INFO Injector:96 
2018-06-01 12:25:43,612  INFO Injector:85 org.matsim.core.controler.PrepareForSim 
2018-06-01 12:25:43,612  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.PrepareForSim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2e37373b}
2018-06-01 12:25:43,612  INFO Injector:87   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:11)
2018-06-01 12:25:43,612  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,612  INFO Injector:92   --> target: Key[type=org.matsim.core.controler.PrepareForSimImpl, annotation=[none]]
2018-06-01 12:25:43,612  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.PrepareForSim, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:11), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.PrepareForSimImpl, annotation=[none]]}
2018-06-01 12:25:43,612  INFO Injector:96 
2018-06-01 12:25:43,613  INFO Injector:85 org.matsim.core.controler.TerminationCriterion 
2018-06-01 12:25:43,613  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.TerminationCriterion, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@67db3fb7}
2018-06-01 12:25:43,613  INFO Injector:87   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:14)
2018-06-01 12:25:43,613  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,613  INFO Injector:92   --> target: Key[type=org.matsim.core.controler.TerminateAtFixedIterationNumber, annotation=[none]]
2018-06-01 12:25:43,613  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.TerminationCriterion, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:14), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.TerminateAtFixedIterationNumber, annotation=[none]]}
2018-06-01 12:25:43,614  INFO Injector:96 
2018-06-01 12:25:43,614  INFO Injector:85 org.matsim.core.controler.MatsimServices 
2018-06-01 12:25:43,614  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.MatsimServices, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@15c6a560}
2018-06-01 12:25:43,614  INFO Injector:87   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:15)
2018-06-01 12:25:43,614  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,614  INFO Injector:92   --> target: Key[type=org.matsim.core.controler.MatsimServicesImpl, annotation=[none]]
2018-06-01 12:25:43,614  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.MatsimServices, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:15), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.MatsimServicesImpl, annotation=[none]]}
2018-06-01 12:25:43,615  INFO Injector:96 
2018-06-01 12:25:43,615  INFO Injector:85 org.matsim.core.controler.corelisteners.PlansScoring 
2018-06-01 12:25:43,615  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansScoring, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4781a0b5[Scopes.SINGLETON]}
2018-06-01 12:25:43,615  INFO Injector:87   --> source: org.matsim.core.scoring.PlansScoringModule.install(PlansScoringModule.java:11)
2018-06-01 12:25:43,615  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,615  INFO Injector:92   --> target: Key[type=org.matsim.core.scoring.PlansScoringImpl, annotation=[none]]
2018-06-01 12:25:43,615  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.PlansScoring, annotation=[none]], source=org.matsim.core.scoring.PlansScoringModule.install(PlansScoringModule.java:11), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.scoring.PlansScoringImpl, annotation=[none]]}
2018-06-01 12:25:43,616  INFO Injector:96 
2018-06-01 12:25:43,616  INFO Injector:85 org.matsim.core.controler.corelisteners.PlansReplanning 
2018-06-01 12:25:43,616  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansReplanning, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@74e8403b[Scopes.SINGLETON]}
2018-06-01 12:25:43,616  INFO Injector:87   --> source: org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:38)
2018-06-01 12:25:43,616  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,616  INFO Injector:92   --> target: Key[type=org.matsim.core.controler.corelisteners.PlansReplanningImpl, annotation=[none]]
2018-06-01 12:25:43,616  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.PlansReplanning, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:38), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.PlansReplanningImpl, annotation=[none]]}
2018-06-01 12:25:43,617  INFO Injector:96 
2018-06-01 12:25:43,617  INFO Injector:85 org.matsim.core.controler.corelisteners.PlansDumping 
2018-06-01 12:25:43,617  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansDumping, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@67bceef7[Scopes.SINGLETON]}
2018-06-01 12:25:43,617  INFO Injector:87   --> source: org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:39)
2018-06-01 12:25:43,617  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,617  INFO Injector:92   --> target: Key[type=org.matsim.core.controler.corelisteners.PlansDumpingImpl, annotation=[none]]
2018-06-01 12:25:43,617  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.PlansDumping, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:39), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.PlansDumpingImpl, annotation=[none]]}
2018-06-01 12:25:43,618  INFO Injector:96 
2018-06-01 12:25:43,618  INFO Injector:85 org.matsim.core.controler.corelisteners.EventsHandling 
2018-06-01 12:25:43,618  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.EventsHandling, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2896f3c5[Scopes.SINGLETON]}
2018-06-01 12:25:43,618  INFO Injector:87   --> source: org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:40)
2018-06-01 12:25:43,618  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,618  INFO Injector:92   --> target: Key[type=org.matsim.core.controler.corelisteners.EventsHandlingImpl, annotation=[none]]
2018-06-01 12:25:43,619  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.EventsHandling, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:40), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.EventsHandlingImpl, annotation=[none]]}
2018-06-01 12:25:43,619  INFO Injector:96 
2018-06-01 12:25:43,619  INFO Injector:85 org.matsim.core.controler.corelisteners.DumpDataAtEnd 
2018-06-01 12:25:43,619  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.DumpDataAtEnd, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2f6a7a9d[Scopes.SINGLETON]}
2018-06-01 12:25:43,619  INFO Injector:87   --> source: org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:41)
2018-06-01 12:25:43,619  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,619  INFO Injector:92   --> target: Key[type=org.matsim.core.controler.corelisteners.DumpDataAtEndImpl, annotation=[none]]
2018-06-01 12:25:43,620  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.DumpDataAtEnd, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:41), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.DumpDataAtEndImpl, annotation=[none]]}
2018-06-01 12:25:43,620  INFO Injector:96 
2018-06-01 12:25:43,620  INFO Injector:85 org.matsim.core.api.experimental.events.EventsManager 
2018-06-01 12:25:43,620  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.api.experimental.events.EventsManager, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@5807d}[Scopes.SINGLETON]
2018-06-01 12:25:43,620  INFO Injector:87   --> source: org.matsim.core.events.EventsManagerModule.install(EventsManagerModule.java:23)
2018-06-01 12:25:43,620  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,620  INFO Injector:92   --> target: Key[type=org.matsim.core.events.SimStepParallelEventsManagerImpl, annotation=[none]]
2018-06-01 12:25:43,621  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.api.experimental.events.EventsManager, annotation=[none]], source=org.matsim.core.events.EventsManagerModule.install(EventsManagerModule.java:23), scope=eager singleton, target=Key[type=org.matsim.core.events.SimStepParallelEventsManagerImpl, annotation=[none]]}
2018-06-01 12:25:43,621  INFO Injector:96 
2018-06-01 12:25:43,621  INFO Injector:85 org.matsim.core.router.util.TravelTime @com.google.inject.name.Named(value=car)
2018-06-01 12:25:43,621  INFO Injector:86   --> provider: Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]
2018-06-01 12:25:43,621  INFO Injector:87   --> source: org.matsim.core.trafficmonitoring.TravelTimeCalculatorModule.install(TravelTimeCalculatorModule.java:81)
2018-06-01 12:25:43,621  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,621  INFO Injector:94   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.name.Named(value=car)], source=org.matsim.core.trafficmonitoring.TravelTimeCalculatorModule.install(TravelTimeCalculatorModule.java:81), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]}
2018-06-01 12:25:43,622  INFO Injector:96 
2018-06-01 12:25:43,622  INFO Injector:85 org.matsim.core.router.costcalculators.TravelDisutilityFactory @com.google.inject.name.Named(value=car)
2018-06-01 12:25:43,622  INFO Injector:86   --> provider: of(org.matsim.core.router.costcalculators.RandomizingTimeDistanceTravelDisutilityFactory@5e3f61)
2018-06-01 12:25:43,622  INFO Injector:87   --> source: org.matsim.core.router.costcalculators.TravelDisutilityModule.install(TravelDisutilityModule.java:34)
2018-06-01 12:25:43,622  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,622  INFO Injector:94   ==full==> InstanceBinding{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.name.Named(value=car)], source=org.matsim.core.router.costcalculators.TravelDisutilityModule.install(TravelDisutilityModule.java:34), instance=org.matsim.core.router.costcalculators.RandomizingTimeDistanceTravelDisutilityFactory@5e3f61}
2018-06-01 12:25:43,623  INFO Injector:96 
2018-06-01 12:25:43,623  INFO Injector:85 org.matsim.core.scoring.ScoringFunctionFactory 
2018-06-01 12:25:43,623  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.scoring.ScoringFunctionFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1b5e8a1a}
2018-06-01 12:25:43,623  INFO Injector:87   --> source: org.matsim.core.scoring.functions.CharyparNagelScoringFunctionModule.install(CharyparNagelScoringFunctionModule.java:36)
2018-06-01 12:25:43,623  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,623  INFO Injector:92   --> target: Key[type=org.matsim.core.scoring.functions.CharyparNagelScoringFunctionFactory, annotation=[none]]
2018-06-01 12:25:43,623  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.scoring.ScoringFunctionFactory, annotation=[none]], source=org.matsim.core.scoring.functions.CharyparNagelScoringFunctionModule.install(CharyparNagelScoringFunctionModule.java:36), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.scoring.functions.CharyparNagelScoringFunctionFactory, annotation=[none]]}
2018-06-01 12:25:43,624  INFO Injector:96 
2018-06-01 12:25:43,624  INFO Injector:85 org.matsim.core.scoring.functions.ScoringParametersForPerson 
2018-06-01 12:25:43,624  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.scoring.functions.ScoringParametersForPerson, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@3c50036d}
2018-06-01 12:25:43,624  INFO Injector:87   --> source: org.matsim.core.scoring.functions.CharyparNagelScoringFunctionModule.install(CharyparNagelScoringFunctionModule.java:37)
2018-06-01 12:25:43,624  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,624  INFO Injector:92   --> target: Key[type=org.matsim.core.scoring.functions.SubpopulationScoringParameters, annotation=[none]]
2018-06-01 12:25:43,625  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.scoring.functions.ScoringParametersForPerson, annotation=[none]], source=org.matsim.core.scoring.functions.CharyparNagelScoringFunctionModule.install(CharyparNagelScoringFunctionModule.java:37), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.scoring.functions.SubpopulationScoringParameters, annotation=[none]]}
2018-06-01 12:25:43,625  INFO Injector:96 
2018-06-01 12:25:43,625  INFO Injector:85 org.matsim.core.scoring.ExperiencedPlansService 
2018-06-01 12:25:43,625  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.scoring.ExperiencedPlansService, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@6b1bc98c}[Scopes.SINGLETON]
2018-06-01 12:25:43,625  INFO Injector:87   --> source: org.matsim.core.scoring.ExperiencedPlansModule.install(ExperiencedPlansModule.java:10)
2018-06-01 12:25:43,625  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,625  INFO Injector:92   --> target: Key[type=org.matsim.core.scoring.ExperiencedPlansServiceImpl, annotation=[none]]
2018-06-01 12:25:43,626  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.scoring.ExperiencedPlansService, annotation=[none]], source=org.matsim.core.scoring.ExperiencedPlansModule.install(ExperiencedPlansModule.java:10), scope=eager singleton, target=Key[type=org.matsim.core.scoring.ExperiencedPlansServiceImpl, annotation=[none]]}
2018-06-01 12:25:43,626  INFO Injector:96 
2018-06-01 12:25:43,626  INFO Injector:85 org.matsim.core.router.MainModeIdentifier 
2018-06-01 12:25:43,626  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.MainModeIdentifier, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@7c4520bc}
2018-06-01 12:25:43,626  INFO Injector:87   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:44)
2018-06-01 12:25:43,626  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,627  INFO Injector:92   --> target: Key[type=org.matsim.core.router.MainModeIdentifierImpl, annotation=[none]]
2018-06-01 12:25:43,627  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.MainModeIdentifier, annotation=[none]], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:44), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.MainModeIdentifierImpl, annotation=[none]]}
2018-06-01 12:25:43,627  INFO Injector:96 
2018-06-01 12:25:43,627  INFO Injector:85 org.matsim.core.router.util.LeastCostPathCalculatorFactory 
2018-06-01 12:25:43,627  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.util.LeastCostPathCalculatorFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1470a44d[Scopes.SINGLETON]}
2018-06-01 12:25:43,627  INFO Injector:87   --> source: org.matsim.core.router.LeastCostPathCalculatorModule.install(LeastCostPathCalculatorModule.java:40)
2018-06-01 12:25:43,627  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,628  INFO Injector:92   --> target: Key[type=org.matsim.core.router.DijkstraFactory, annotation=[none]]
2018-06-01 12:25:43,628  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.util.LeastCostPathCalculatorFactory, annotation=[none]], source=org.matsim.core.router.LeastCostPathCalculatorModule.install(LeastCostPathCalculatorModule.java:40), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.DijkstraFactory, annotation=[none]]}
2018-06-01 12:25:43,628  INFO Injector:96 
2018-06-01 12:25:43,628  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=ride)
2018-06-01 12:25:43,628  INFO Injector:86   --> provider: org.matsim.core.router.FreespeedFactorRouting@d2cfa40
2018-06-01 12:25:43,628  INFO Injector:87   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:55)
2018-06-01 12:25:43,628  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,629  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=ride)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:55), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.FreespeedFactorRouting@d2cfa40}
2018-06-01 12:25:43,629  INFO Injector:96 
2018-06-01 12:25:43,629  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=pt)
2018-06-01 12:25:43,629  INFO Injector:86   --> provider: org.matsim.core.router.FreespeedFactorRouting@c36b9fc
2018-06-01 12:25:43,629  INFO Injector:87   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:55)
2018-06-01 12:25:43,629  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,629  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=pt)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:55), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.FreespeedFactorRouting@c36b9fc}
2018-06-01 12:25:43,630  INFO Injector:96 
2018-06-01 12:25:43,630  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=bike)
2018-06-01 12:25:43,630  INFO Injector:86   --> provider: org.matsim.core.router.BeelineTeleportationRouting@51a9e142
2018-06-01 12:25:43,630  INFO Injector:87   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58)
2018-06-01 12:25:43,630  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,630  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=bike)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@51a9e142}
2018-06-01 12:25:43,631  INFO Injector:96 
2018-06-01 12:25:43,631  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=walk)
2018-06-01 12:25:43,631  INFO Injector:86   --> provider: org.matsim.core.router.BeelineTeleportationRouting@39ba05df
2018-06-01 12:25:43,631  INFO Injector:87   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58)
2018-06-01 12:25:43,631  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,631  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=walk)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@39ba05df}
2018-06-01 12:25:43,631  INFO Injector:96 
2018-06-01 12:25:43,632  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=access_walk)
2018-06-01 12:25:43,632  INFO Injector:86   --> provider: org.matsim.core.router.BeelineTeleportationRouting@532e1652
2018-06-01 12:25:43,632  INFO Injector:87   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58)
2018-06-01 12:25:43,632  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,632  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=access_walk)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@532e1652}
2018-06-01 12:25:43,632  INFO Injector:96 
2018-06-01 12:25:43,633  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=egress_walk)
2018-06-01 12:25:43,633  INFO Injector:86   --> provider: org.matsim.core.router.BeelineTeleportationRouting@6a6eac92
2018-06-01 12:25:43,633  INFO Injector:87   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58)
2018-06-01 12:25:43,633  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,633  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=egress_walk)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@6a6eac92}
2018-06-01 12:25:43,633  INFO Injector:96 
2018-06-01 12:25:43,633  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=undefined)
2018-06-01 12:25:43,634  INFO Injector:86   --> provider: org.matsim.core.router.BeelineTeleportationRouting@7453f36c
2018-06-01 12:25:43,634  INFO Injector:87   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58)
2018-06-01 12:25:43,634  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,634  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=undefined)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@7453f36c}
2018-06-01 12:25:43,634  INFO Injector:96 
2018-06-01 12:25:43,634  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=car)
2018-06-01 12:25:43,634  INFO Injector:86   --> provider: org.matsim.core.router.NetworkRoutingProvider@1dae84c4
2018-06-01 12:25:43,635  INFO Injector:87   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:66)
2018-06-01 12:25:43,635  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,635  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=car)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:66), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.NetworkRoutingProvider@1dae84c4}
2018-06-01 12:25:43,635  INFO Injector:96 
2018-06-01 12:25:43,635  INFO Injector:85 org.matsim.core.replanning.selectors.PlanSelector<org.matsim.api.core.v01.population.Plan, org.matsim.api.core.v01.population.Person> 
2018-06-01 12:25:43,635  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.replanning.selectors.PlanSelector<org.matsim.api.core.v01.population.Plan, org.matsim.api.core.v01.population.Person>, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@21fd96d0}
2018-06-01 12:25:43,635  INFO Injector:87   --> source: org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:51)
2018-06-01 12:25:43,636  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,636  INFO Injector:92   --> target: Key[type=org.matsim.core.replanning.selectors.WorstPlanForRemovalSelector, annotation=[none]]
2018-06-01 12:25:43,636  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.selectors.PlanSelector<org.matsim.api.core.v01.population.Plan, org.matsim.api.core.v01.population.Person>, annotation=[none]], source=org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:51), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.replanning.selectors.WorstPlanForRemovalSelector, annotation=[none]]}
2018-06-01 12:25:43,636  INFO Injector:96 
2018-06-01 12:25:43,636  INFO Injector:85 org.matsim.core.replanning.PlanStrategy @com.google.inject.name.Named(value=BestScore)
2018-06-01 12:25:43,636  INFO Injector:86   --> provider: Key[type=org.matsim.core.replanning.strategies.SelectBest, annotation=[none]]
2018-06-01 12:25:43,637  INFO Injector:87   --> source: org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:81)
2018-06-01 12:25:43,637  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,637  INFO Injector:94   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=BestScore)], source=org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:81), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.replanning.strategies.SelectBest, annotation=[none]]}
2018-06-01 12:25:43,637  INFO Injector:96 
2018-06-01 12:25:43,637  INFO Injector:85 org.matsim.core.replanning.PlanStrategy @com.google.inject.name.Named(value=ReRoute)
2018-06-01 12:25:43,637  INFO Injector:86   --> provider: Key[type=org.matsim.core.replanning.strategies.ReRoute, annotation=[none]]
2018-06-01 12:25:43,637  INFO Injector:87   --> source: org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:100)
2018-06-01 12:25:43,638  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,638  INFO Injector:94   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=ReRoute)], source=org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:100), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.replanning.strategies.ReRoute, annotation=[none]]}
2018-06-01 12:25:43,638  INFO Injector:96 
2018-06-01 12:25:43,638  INFO Injector:85 org.matsim.core.replanning.ReplanningContext 
2018-06-01 12:25:43,638  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.replanning.ReplanningContext, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@e444dc5[Scopes.SINGLETON]}[Scopes.SINGLETON]
2018-06-01 12:25:43,638  INFO Injector:87   --> source: org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:52)
2018-06-01 12:25:43,638  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,639  INFO Injector:92   --> target: Key[type=org.matsim.core.replanning.ReplanningContextImpl, annotation=[none]]
2018-06-01 12:25:43,639  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.ReplanningContext, annotation=[none]], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:52), scope=eager singleton, target=Key[type=org.matsim.core.replanning.ReplanningContextImpl, annotation=[none]]}
2018-06-01 12:25:43,639  INFO Injector:96 
2018-06-01 12:25:43,639  INFO Injector:85 org.matsim.core.replanning.PlanStrategy @com.google.inject.multibindings.Element(setName=,uniqueId=3918, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)
2018-06-01 12:25:43,639  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3918, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], provider=Key[type=org.matsim.core.replanning.strategies.SelectBest, annotation=[none]]}
2018-06-01 12:25:43,639  INFO Injector:87   --> source: org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:85)
2018-06-01 12:25:43,640  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,640  INFO Injector:92   --> target: Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=BestScore)]
2018-06-01 12:25:43,640  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3918, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:85), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=BestScore)]}
2018-06-01 12:25:43,640  INFO Injector:96 
2018-06-01 12:25:43,640  INFO Injector:85 org.matsim.core.replanning.PlanStrategy @com.google.inject.multibindings.Element(setName=,uniqueId=3920, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)
2018-06-01 12:25:43,640  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3920, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], provider=Key[type=org.matsim.core.replanning.strategies.ReRoute, annotation=[none]]}
2018-06-01 12:25:43,641  INFO Injector:87   --> source: org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:85)
2018-06-01 12:25:43,641  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,641  INFO Injector:92   --> target: Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=ReRoute)]
2018-06-01 12:25:43,641  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3920, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:85), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=ReRoute)]}
2018-06-01 12:25:43,641  INFO Injector:96 
2018-06-01 12:25:43,641  INFO Injector:85 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=3922, type=MULTIBINDER, keyType=)
2018-06-01 12:25:43,641  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3922, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@36a7f23e[Scopes.SINGLETON]}
2018-06-01 12:25:43,642  INFO Injector:87   --> source: org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:47)
2018-06-01 12:25:43,642  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,642  INFO Injector:92   --> target: Key[type=org.matsim.analysis.LinkStatsControlerListener, annotation=[none]]
2018-06-01 12:25:43,642  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3922, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:47), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.LinkStatsControlerListener, annotation=[none]]}
2018-06-01 12:25:43,642  INFO Injector:96 
2018-06-01 12:25:43,642  INFO Injector:85 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=3923, type=MULTIBINDER, keyType=)
2018-06-01 12:25:43,642  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3923, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2f6fb07d}
2018-06-01 12:25:43,643  INFO Injector:87   --> source: org.matsim.analysis.LegHistogramModule.install(LegHistogramModule.java:31)
2018-06-01 12:25:43,643  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,643  INFO Injector:92   --> target: Key[type=org.matsim.analysis.LegHistogramListener, annotation=[none]]
2018-06-01 12:25:43,643  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3923, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.LegHistogramModule.install(LegHistogramModule.java:31), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.LegHistogramListener, annotation=[none]]}
2018-06-01 12:25:43,643  INFO Injector:96 
2018-06-01 12:25:43,643  INFO Injector:85 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=3924, type=MULTIBINDER, keyType=)
2018-06-01 12:25:43,643  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3924, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@22dbbe72}
2018-06-01 12:25:43,644  INFO Injector:87   --> source: org.matsim.analysis.LegTimesModule.install(LegTimesModule.java:32)
2018-06-01 12:25:43,644  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,644  INFO Injector:92   --> target: Key[type=org.matsim.analysis.LegTimesControlerListener, annotation=[none]]
2018-06-01 12:25:43,644  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3924, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.LegTimesModule.install(LegTimesModule.java:32), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.LegTimesControlerListener, annotation=[none]]}
2018-06-01 12:25:43,644  INFO Injector:96 
2018-06-01 12:25:43,644  INFO Injector:85 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=3925, type=MULTIBINDER, keyType=)
2018-06-01 12:25:43,644  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3925, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@553bad33}
2018-06-01 12:25:43,645  INFO Injector:87   --> source: org.matsim.analysis.TravelDistanceStatsModule.install(TravelDistanceStatsModule.java:11)
2018-06-01 12:25:43,645  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,645  INFO Injector:92   --> target: Key[type=org.matsim.analysis.TravelDistanceStatsControlerListener, annotation=[none]]
2018-06-01 12:25:43,645  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3925, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.TravelDistanceStatsModule.install(TravelDistanceStatsModule.java:11), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.TravelDistanceStatsControlerListener, annotation=[none]]}
2018-06-01 12:25:43,645  INFO Injector:96 
2018-06-01 12:25:43,645  INFO Injector:85 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=3926, type=MULTIBINDER, keyType=)
2018-06-01 12:25:43,645  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3926, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@49df6998[Scopes.SINGLETON]}
2018-06-01 12:25:43,645  INFO Injector:87   --> source: org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:32)
2018-06-01 12:25:43,646  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,646  INFO Injector:92   --> target: Key[type=org.matsim.analysis.ScoreStatsControlerListener, annotation=[none]]
2018-06-01 12:25:43,646  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3926, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:32), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.ScoreStatsControlerListener, annotation=[none]]}
2018-06-01 12:25:43,646  INFO Injector:96 
2018-06-01 12:25:43,646  INFO Injector:85 org.matsim.analysis.ScoreStats 
2018-06-01 12:25:43,646  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.analysis.ScoreStats, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@49df6998[Scopes.SINGLETON]}
2018-06-01 12:25:43,646  INFO Injector:87   --> source: org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:33)
2018-06-01 12:25:43,646  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,647  INFO Injector:92   --> target: Key[type=org.matsim.analysis.ScoreStatsControlerListener, annotation=[none]]
2018-06-01 12:25:43,647  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.analysis.ScoreStats, annotation=[none]], source=org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:33), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.ScoreStatsControlerListener, annotation=[none]]}
2018-06-01 12:25:43,647  INFO Injector:96 
2018-06-01 12:25:43,647  INFO Injector:85 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=3927, type=MULTIBINDER, keyType=)
2018-06-01 12:25:43,647  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3927, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2e3e663[Scopes.SINGLETON]}
2018-06-01 12:25:43,647  INFO Injector:87   --> source: org.matsim.analysis.ModeStatsModule.install(ModeStatsModule.java:32)
2018-06-01 12:25:43,647  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,647  INFO Injector:92   --> target: Key[type=org.matsim.analysis.ModeStatsControlerListener, annotation=[none]]
2018-06-01 12:25:43,648  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3927, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.ModeStatsModule.install(ModeStatsModule.java:32), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.ModeStatsControlerListener, annotation=[none]]}
2018-06-01 12:25:43,648  INFO Injector:96 
2018-06-01 12:25:43,648  INFO Injector:85 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=3928, type=MULTIBINDER, keyType=)
2018-06-01 12:25:43,648  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3928, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@476064b3}
2018-06-01 12:25:43,648  INFO Injector:87   --> source: org.matsim.counts.CountsModule.install(CountsModule.java:42)
2018-06-01 12:25:43,648  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,649  INFO Injector:92   --> target: Key[type=org.matsim.counts.CountsControlerListener, annotation=[none]]
2018-06-01 12:25:43,649  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3928, type=MULTIBINDER, keyType=)], source=org.matsim.counts.CountsModule.install(CountsModule.java:42), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.counts.CountsControlerListener, annotation=[none]]}
2018-06-01 12:25:43,649  INFO Injector:96 
2018-06-01 12:25:43,649  INFO Injector:85 org.matsim.counts.Counts<org.matsim.api.core.v01.network.Link> 
2018-06-01 12:25:43,649  INFO Injector:86   --> provider: @Provides org.matsim.counts.CountsModule.provideLinkCounts(CountsModule.java:63)[Scopes.SINGLETON]
2018-06-01 12:25:43,649  INFO Injector:87   --> source: org.matsim.counts.Counts org.matsim.counts.CountsModule.provideLinkCounts(org.matsim.api.core.v01.Scenario,org.matsim.core.config.groups.CountsConfigGroup)
2018-06-01 12:25:43,649  INFO Injector:89   --> scope: Scopes.SINGLETON
2018-06-01 12:25:43,650  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.counts.Counts<org.matsim.api.core.v01.network.Link>, annotation=[none]], source=org.matsim.counts.Counts org.matsim.counts.CountsModule.provideLinkCounts(org.matsim.api.core.v01.Scenario,org.matsim.core.config.groups.CountsConfigGroup), scope=Scopes.SINGLETON, provider=@Provides org.matsim.counts.CountsModule.provideLinkCounts(CountsModule.java:63)}
2018-06-01 12:25:43,650  INFO Injector:96 
2018-06-01 12:25:43,650  INFO Injector:85 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=3929, type=MULTIBINDER, keyType=)
2018-06-01 12:25:43,650  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3929, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@68ed64e2}
2018-06-01 12:25:43,650  INFO Injector:87   --> source: org.matsim.core.population.VspPlansCleanerModule.install(VspPlansCleanerModule.java:34)
2018-06-01 12:25:43,650  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,650  INFO Injector:92   --> target: Key[type=org.matsim.core.population.VspPlansCleaner, annotation=[none]]
2018-06-01 12:25:43,651  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3929, type=MULTIBINDER, keyType=)], source=org.matsim.core.population.VspPlansCleanerModule.install(VspPlansCleanerModule.java:34), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.population.VspPlansCleaner, annotation=[none]]}
2018-06-01 12:25:43,651  INFO Injector:96 
2018-06-01 12:25:43,651  INFO Injector:85 org.matsim.vis.snapshotwriters.SnapshotWriter @com.google.inject.multibindings.Element(setName=,uniqueId=3930, type=MULTIBINDER, keyType=)
2018-06-01 12:25:43,651  INFO Injector:86   --> provider: Key[type=org.matsim.vis.snapshotwriters.TransimsSnapshotWriterFactory, annotation=[none]]
2018-06-01 12:25:43,651  INFO Injector:87   --> source: org.matsim.vis.snapshotwriters.SnapshotWritersModule.install(SnapshotWritersModule.java:42)
2018-06-01 12:25:43,651  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,651  INFO Injector:94   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.vis.snapshotwriters.SnapshotWriter, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3930, type=MULTIBINDER, keyType=)], source=org.matsim.vis.snapshotwriters.SnapshotWritersModule.install(SnapshotWritersModule.java:42), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.vis.snapshotwriters.TransimsSnapshotWriterFactory, annotation=[none]]}
2018-06-01 12:25:43,652  INFO Injector:96 
2018-06-01 12:25:43,652  INFO Injector:85 org.matsim.core.mobsim.framework.listeners.MobsimListener @com.google.inject.multibindings.Element(setName=,uniqueId=3931, type=MULTIBINDER, keyType=)
2018-06-01 12:25:43,652  INFO Injector:86   --> provider: Key[type=org.matsim.vis.snapshotwriters.SnapshotWritersModule$SnapshotWriterManagerProvider, annotation=[none]]
2018-06-01 12:25:43,652  INFO Injector:87   --> source: org.matsim.vis.snapshotwriters.SnapshotWritersModule.install(SnapshotWritersModule.java:46)
2018-06-01 12:25:43,652  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,652  INFO Injector:94   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.mobsim.framework.listeners.MobsimListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3931, type=MULTIBINDER, keyType=)], source=org.matsim.vis.snapshotwriters.SnapshotWritersModule.install(SnapshotWritersModule.java:46), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.vis.snapshotwriters.SnapshotWritersModule$SnapshotWriterManagerProvider, annotation=[none]]}
2018-06-01 12:25:43,653  INFO Injector:96 
2018-06-01 12:25:43,653  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=3932, type=MAPBINDER, keyType=java.lang.String)
2018-06-01 12:25:43,653  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3932, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@6a6eac92}
2018-06-01 12:25:43,653  INFO Injector:87   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:129)
2018-06-01 12:25:43,653  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,653  INFO Injector:92   --> target: Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=egress_walk)]
2018-06-01 12:25:43,653  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3932, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:129), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=egress_walk)]}
2018-06-01 12:25:43,654  INFO Injector:96 
2018-06-01 12:25:43,654  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=3934, type=MAPBINDER, keyType=java.lang.String)
2018-06-01 12:25:43,654  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3934, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.FreespeedFactorRouting@c36b9fc}
2018-06-01 12:25:43,654  INFO Injector:87   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:129)
2018-06-01 12:25:43,654  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,654  INFO Injector:92   --> target: Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=pt)]
2018-06-01 12:25:43,654  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3934, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:129), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=pt)]}
2018-06-01 12:25:43,655  INFO Injector:96 
2018-06-01 12:25:43,655  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=3936, type=MAPBINDER, keyType=java.lang.String)
2018-06-01 12:25:43,655  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3936, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.NetworkRoutingProvider@1dae84c4}
2018-06-01 12:25:43,655  INFO Injector:87   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:129)
2018-06-01 12:25:43,655  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,655  INFO Injector:92   --> target: Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=car)]
2018-06-01 12:25:43,656  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3936, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:129), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=car)]}
2018-06-01 12:25:43,656  INFO Injector:96 
2018-06-01 12:25:43,656  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=3938, type=MAPBINDER, keyType=java.lang.String)
2018-06-01 12:25:43,656  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3938, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@532e1652}
2018-06-01 12:25:43,656  INFO Injector:87   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:129)
2018-06-01 12:25:43,656  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,656  INFO Injector:92   --> target: Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=access_walk)]
2018-06-01 12:25:43,657  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3938, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:129), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=access_walk)]}
2018-06-01 12:25:43,657  INFO Injector:96 
2018-06-01 12:25:43,657  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=3940, type=MAPBINDER, keyType=java.lang.String)
2018-06-01 12:25:43,657  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3940, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.FreespeedFactorRouting@d2cfa40}
2018-06-01 12:25:43,657  INFO Injector:87   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:129)
2018-06-01 12:25:43,657  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,657  INFO Injector:92   --> target: Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=ride)]
2018-06-01 12:25:43,658  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3940, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:129), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=ride)]}
2018-06-01 12:25:43,658  INFO Injector:96 
2018-06-01 12:25:43,658  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=3942, type=MAPBINDER, keyType=java.lang.String)
2018-06-01 12:25:43,658  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3942, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@39ba05df}
2018-06-01 12:25:43,658  INFO Injector:87   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:129)
2018-06-01 12:25:43,658  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,659  INFO Injector:92   --> target: Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=walk)]
2018-06-01 12:25:43,659  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3942, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:129), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=walk)]}
2018-06-01 12:25:43,659  INFO Injector:96 
2018-06-01 12:25:43,659  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=3944, type=MAPBINDER, keyType=java.lang.String)
2018-06-01 12:25:43,659  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3944, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@51a9e142}
2018-06-01 12:25:43,659  INFO Injector:87   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:129)
2018-06-01 12:25:43,659  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,660  INFO Injector:92   --> target: Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=bike)]
2018-06-01 12:25:43,660  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3944, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:129), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=bike)]}
2018-06-01 12:25:43,660  INFO Injector:96 
2018-06-01 12:25:43,660  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=3946, type=MAPBINDER, keyType=java.lang.String)
2018-06-01 12:25:43,660  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3946, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@7453f36c}
2018-06-01 12:25:43,660  INFO Injector:87   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:129)
2018-06-01 12:25:43,660  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,661  INFO Injector:92   --> target: Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=undefined)]
2018-06-01 12:25:43,661  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3946, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:129), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=undefined)]}
2018-06-01 12:25:43,661  INFO Injector:96 
2018-06-01 12:25:43,661  INFO Injector:85 org.matsim.core.router.util.TravelTime @com.google.inject.multibindings.Element(setName=,uniqueId=3948, type=MAPBINDER, keyType=java.lang.String)
2018-06-01 12:25:43,661  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3948, type=MAPBINDER, keyType=java.lang.String)], provider=Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]}
2018-06-01 12:25:43,661  INFO Injector:87   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:129)
2018-06-01 12:25:43,662  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,662  INFO Injector:92   --> target: Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.name.Named(value=car)]
2018-06-01 12:25:43,662  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3948, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:129), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.name.Named(value=car)]}
2018-06-01 12:25:43,662  INFO Injector:96 
2018-06-01 12:25:43,662  INFO Injector:85 org.matsim.core.router.costcalculators.TravelDisutilityFactory @com.google.inject.multibindings.Element(setName=,uniqueId=3950, type=MAPBINDER, keyType=java.lang.String)
2018-06-01 12:25:43,662  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3950, type=MAPBINDER, keyType=java.lang.String)], provider=ConstantFactory{value=org.matsim.core.router.costcalculators.RandomizingTimeDistanceTravelDisutilityFactory@5e3f61}[Scopes.SINGLETON]}
2018-06-01 12:25:43,662  INFO Injector:87   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:129)
2018-06-01 12:25:43,663  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,663  INFO Injector:92   --> target: Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.name.Named(value=car)]
2018-06-01 12:25:43,663  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=3950, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:129), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.name.Named(value=car)]}
2018-06-01 12:25:43,663  INFO Injector:96 
2018-06-01 12:25:43,663  INFO Injector:85 org.matsim.core.controler.ControlerListenerManagerImpl 
2018-06-01 12:25:43,663  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6e05fa32[Scopes.SINGLETON]
2018-06-01 12:25:43,664  INFO Injector:87   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:9)
2018-06-01 12:25:43,664  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,664  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.controler.ControlerListenerManagerImpl, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:9), scope=eager singleton}
2018-06-01 12:25:43,664  INFO Injector:96 
2018-06-01 12:25:43,664  INFO Injector:85 org.matsim.analysis.IterationStopWatch 
2018-06-01 12:25:43,664  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1968285a[Scopes.SINGLETON]
2018-06-01 12:25:43,664  INFO Injector:87   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:12)
2018-06-01 12:25:43,665  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,665  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.IterationStopWatch, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:12), scope=eager singleton}
2018-06-01 12:25:43,665  INFO Injector:96 
2018-06-01 12:25:43,665  INFO Injector:85 org.matsim.core.controler.OutputDirectoryHierarchy 
2018-06-01 12:25:43,665  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@44811edb[Scopes.SINGLETON]
2018-06-01 12:25:43,665  INFO Injector:87   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:13)
2018-06-01 12:25:43,665  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,666  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.controler.OutputDirectoryHierarchy, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:13), scope=eager singleton}
2018-06-01 12:25:43,666  INFO Injector:96 
2018-06-01 12:25:43,666  INFO Injector:85 org.matsim.core.scoring.ScoringFunctionsForPopulation 
2018-06-01 12:25:43,666  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5f97d692[Scopes.SINGLETON]
2018-06-01 12:25:43,666  INFO Injector:87   --> source: org.matsim.core.scoring.PlansScoringModule.install(PlansScoringModule.java:10)
2018-06-01 12:25:43,666  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,667  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.scoring.ScoringFunctionsForPopulation, annotation=[none]], source=org.matsim.core.scoring.PlansScoringModule.install(PlansScoringModule.java:10), scope=eager singleton}
2018-06-01 12:25:43,667  INFO Injector:96 
2018-06-01 12:25:43,667  INFO Injector:85 org.matsim.core.events.EventsManagerModule$EventHandlerRegistrator 
2018-06-01 12:25:43,667  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@cdee14[Scopes.SINGLETON]
2018-06-01 12:25:43,667  INFO Injector:87   --> source: org.matsim.core.events.EventsManagerModule.install(EventsManagerModule.java:25)
2018-06-01 12:25:43,667  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,667  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.events.EventsManagerModule$EventHandlerRegistrator, annotation=[none]], source=org.matsim.core.events.EventsManagerModule.install(EventsManagerModule.java:25), scope=eager singleton}
2018-06-01 12:25:43,668  INFO Injector:96 
2018-06-01 12:25:43,668  INFO Injector:85 org.matsim.core.trafficmonitoring.TravelTimeCalculator 
2018-06-01 12:25:43,668  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6646ed5[Scopes.SINGLETON]
2018-06-01 12:25:43,668  INFO Injector:87   --> source: org.matsim.core.trafficmonitoring.TravelTimeCalculatorModule.install(TravelTimeCalculatorModule.java:76)
2018-06-01 12:25:43,668  INFO Injector:89   --> scope: Scopes.SINGLETON
2018-06-01 12:25:43,668  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.trafficmonitoring.TravelTimeCalculator, annotation=[none]], source=org.matsim.core.trafficmonitoring.TravelTimeCalculatorModule.install(TravelTimeCalculatorModule.java:76), scope=Scopes.SINGLETON}
2018-06-01 12:25:43,668  INFO Injector:96 
2018-06-01 12:25:43,669  INFO Injector:85 org.matsim.core.scoring.EventsToActivities 
2018-06-01 12:25:43,669  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@19714548[Scopes.SINGLETON]
2018-06-01 12:25:43,669  INFO Injector:87   --> source: org.matsim.core.scoring.ExperiencedPlanElementsModule.install(ExperiencedPlanElementsModule.java:12)
2018-06-01 12:25:43,669  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,669  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.scoring.EventsToActivities, annotation=[none]], source=org.matsim.core.scoring.ExperiencedPlanElementsModule.install(ExperiencedPlanElementsModule.java:12), scope=eager singleton}
2018-06-01 12:25:43,669  INFO Injector:96 
2018-06-01 12:25:43,669  INFO Injector:85 org.matsim.core.scoring.EventsToLegs 
2018-06-01 12:25:43,670  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@73b3366b[Scopes.SINGLETON]
2018-06-01 12:25:43,670  INFO Injector:87   --> source: org.matsim.core.scoring.ExperiencedPlanElementsModule.install(ExperiencedPlanElementsModule.java:13)
2018-06-01 12:25:43,670  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,670  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.scoring.EventsToLegs, annotation=[none]], source=org.matsim.core.scoring.ExperiencedPlanElementsModule.install(ExperiencedPlanElementsModule.java:13), scope=eager singleton}
2018-06-01 12:25:43,670  INFO Injector:96 
2018-06-01 12:25:43,670  INFO Injector:85 org.matsim.core.router.TripRouter 
2018-06-01 12:25:43,671  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@68685279
2018-06-01 12:25:43,678  INFO Injector:87   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:43)
2018-06-01 12:25:43,678  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,678  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.router.TripRouter, annotation=[none]], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:43), scope=Scopes.NO_SCOPE}
2018-06-01 12:25:43,678  INFO Injector:96 
2018-06-01 12:25:43,678  INFO Injector:85 org.matsim.core.router.SingleModeNetworksCache 
2018-06-01 12:25:43,678  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4da6fb73[Scopes.SINGLETON]
2018-06-01 12:25:43,679  INFO Injector:87   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:47)
2018-06-01 12:25:43,679  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,679  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.router.SingleModeNetworksCache, annotation=[none]], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:47), scope=eager singleton}
2018-06-01 12:25:43,679  INFO Injector:96 
2018-06-01 12:25:43,679  INFO Injector:85 org.matsim.core.replanning.StrategyManager 
2018-06-01 12:25:43,679  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@f65aa97[Scopes.SINGLETON]
2018-06-01 12:25:43,679  INFO Injector:87   --> source: org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:51)
2018-06-01 12:25:43,680  INFO Injector:89   --> scope: Scopes.SINGLETON
2018-06-01 12:25:43,680  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.replanning.StrategyManager, annotation=[none]], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:51), scope=Scopes.SINGLETON}
2018-06-01 12:25:43,680  INFO Injector:96 
2018-06-01 12:25:43,680  INFO Injector:85 org.matsim.analysis.CalcLinkStats 
2018-06-01 12:25:43,680  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@74ba4e0c[Scopes.SINGLETON]
2018-06-01 12:25:43,680  INFO Injector:87   --> source: org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:37)
2018-06-01 12:25:43,680  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,681  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.CalcLinkStats, annotation=[none]], source=org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:37), scope=eager singleton}
2018-06-01 12:25:43,681  INFO Injector:96 
2018-06-01 12:25:43,681  INFO Injector:85 org.matsim.analysis.LinkStatsControlerListener 
2018-06-01 12:25:43,681  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@36a7f23e[Scopes.SINGLETON]
2018-06-01 12:25:43,681  INFO Injector:87   --> source: org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:46)
2018-06-01 12:25:43,681  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,682  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.LinkStatsControlerListener, annotation=[none]], source=org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:46), scope=eager singleton}
2018-06-01 12:25:43,682  INFO Injector:96 
2018-06-01 12:25:43,682  INFO Injector:85 org.matsim.analysis.VolumesAnalyzer 
2018-06-01 12:25:43,682  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5e1662c0[Scopes.SINGLETON]
2018-06-01 12:25:43,682  INFO Injector:87   --> source: org.matsim.analysis.VolumesAnalyzerModule.install(VolumesAnalyzerModule.java:31)
2018-06-01 12:25:43,682  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,682  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.VolumesAnalyzer, annotation=[none]], source=org.matsim.analysis.VolumesAnalyzerModule.install(VolumesAnalyzerModule.java:31), scope=eager singleton}
2018-06-01 12:25:43,683  INFO Injector:96 
2018-06-01 12:25:43,683  INFO Injector:85 org.matsim.analysis.LegHistogram 
2018-06-01 12:25:43,683  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@8eaf335
2018-06-01 12:25:43,683  INFO Injector:87   --> source: org.matsim.analysis.LegHistogramModule.install(LegHistogramModule.java:30)
2018-06-01 12:25:43,683  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:25:43,683  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.LegHistogram, annotation=[none]], source=org.matsim.analysis.LegHistogramModule.install(LegHistogramModule.java:30), scope=Scopes.NO_SCOPE}
2018-06-01 12:25:43,683  INFO Injector:96 
2018-06-01 12:25:43,684  INFO Injector:85 org.matsim.analysis.CalcLegTimes 
2018-06-01 12:25:43,684  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6cc4ad22[Scopes.SINGLETON]
2018-06-01 12:25:43,684  INFO Injector:87   --> source: org.matsim.analysis.LegTimesModule.install(LegTimesModule.java:31)
2018-06-01 12:25:43,684  INFO Injector:89   --> scope: Scopes.SINGLETON
2018-06-01 12:25:43,684  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.CalcLegTimes, annotation=[none]], source=org.matsim.analysis.LegTimesModule.install(LegTimesModule.java:31), scope=Scopes.SINGLETON}
2018-06-01 12:25:43,684  INFO Injector:96 
2018-06-01 12:25:43,684  INFO Injector:85 org.matsim.analysis.TravelDistanceStats 
2018-06-01 12:25:43,685  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6fcaf3b9[Scopes.SINGLETON]
2018-06-01 12:25:43,685  INFO Injector:87   --> source: org.matsim.analysis.TravelDistanceStatsModule.install(TravelDistanceStatsModule.java:10)
2018-06-01 12:25:43,685  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,685  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.TravelDistanceStats, annotation=[none]], source=org.matsim.analysis.TravelDistanceStatsModule.install(TravelDistanceStatsModule.java:10), scope=eager singleton}
2018-06-01 12:25:43,685  INFO Injector:96 
2018-06-01 12:25:43,685  INFO Injector:85 org.matsim.analysis.ScoreStatsControlerListener 
2018-06-01 12:25:43,686  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@49df6998[Scopes.SINGLETON]
2018-06-01 12:25:43,686  INFO Injector:87   --> source: org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:31)
2018-06-01 12:25:43,686  INFO Injector:89   --> scope: Scopes.SINGLETON
2018-06-01 12:25:43,686  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.ScoreStatsControlerListener, annotation=[none]], source=org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:31), scope=Scopes.SINGLETON}
2018-06-01 12:25:43,686  INFO Injector:96 
2018-06-01 12:25:43,686  INFO Injector:85 org.matsim.analysis.ModeStatsControlerListener 
2018-06-01 12:25:43,686  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2e3e663[Scopes.SINGLETON]
2018-06-01 12:25:43,687  INFO Injector:87   --> source: org.matsim.analysis.ModeStatsModule.install(ModeStatsModule.java:31)
2018-06-01 12:25:43,687  INFO Injector:89   --> scope: Scopes.SINGLETON
2018-06-01 12:25:43,687  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.ModeStatsControlerListener, annotation=[none]], source=org.matsim.analysis.ModeStatsModule.install(ModeStatsModule.java:31), scope=Scopes.SINGLETON}
2018-06-01 12:25:43,687  INFO Injector:96 
2018-06-01 12:25:43,687  INFO Injector:85 org.matsim.counts.CountsModule$CountsInitializer 
2018-06-01 12:25:43,687  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@196d710d[Scopes.SINGLETON]
2018-06-01 12:25:43,687  INFO Injector:87   --> source: org.matsim.counts.CountsModule.install(CountsModule.java:43)
2018-06-01 12:25:43,688  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:25:43,688  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.counts.CountsModule$CountsInitializer, annotation=[none]], source=org.matsim.counts.CountsModule.install(CountsModule.java:43), scope=eager singleton}
2018-06-01 12:25:43,688  INFO Injector:96 
2018-06-01 12:25:43,688  INFO Injector:99 === printInjector end ===
2018-06-01 12:25:43,688  INFO Gbl:59 JVM: 1.8.0_121; Oracle Corporation; mixed mode; 64-bit
2018-06-01 12:25:43,689  INFO Gbl:63 OS: Linux; 3.10.0-862.3.2.el7.x86_64; amd64
2018-06-01 12:25:43,689  INFO Gbl:66 CPU cores: 8
2018-06-01 12:25:43,689  INFO Gbl:67 max. Memory: 622.5MB (652738560B)
2018-06-01 12:25:43,689  INFO Gbl:105 MATSim-Build: r69049987ed166469d11b8a3f6d70346c04935237 (2018-06-01 12:23:42)
2018-06-01 12:25:43,690  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.counts.CountsControlerListener
2018-06-01 12:25:43,690  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ModeStatsControlerListener
2018-06-01 12:25:43,690 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2018-06-01 12:25:43,690  INFO NetworkImpl:167  node # 1
2018-06-01 12:25:43,691  INFO NetworkImpl:167  node # 4
2018-06-01 12:25:43,691  INFO NetworkImpl:163  link # 1
2018-06-01 12:25:43,691  INFO NetworkImpl:163  link # 4
2018-06-01 12:25:43,691  INFO NetworkImpl:163  link # 16
2018-06-01 12:25:43,692  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ScoreStatsControlerListener
2018-06-01 12:25:43,692  INFO ControlerListenerManagerImpl:110 all ControlerStartupListeners called.
2018-06-01 12:25:43,692  INFO ControlerUtils:58 config dump before iterations start
2018-06-01 12:25:43,692  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,694  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,695  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,697  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,698  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,700  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,701  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,703  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,705  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,706  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,708  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,709  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,712  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,715  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,717  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,719  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,722  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,724  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,726  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,727  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,728  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,730  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,731  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,733  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581390/matsim/]
2018-06-01 12:25:43,734  INFO ControlerUtils:62 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>
<!-- ====================================================================== -->
	<module name="JDEQSim" >
		<param name="carSize" value="7.5" />
		<param name="endTime" value="undefined" />
		<param name="flowCapacityFactor" value="1.0" />
		<param name="gapTravelSpeed" value="15.0" />
		<param name="minimumInFlowCapacity" value="1800.0" />
		<param name="squeezeTime" value="1800.0" />
		<param name="storageCapacityFactor" value="1.0" />
	</module>
<!-- ====================================================================== -->
	<module name="TimeAllocationMutator" >
		<!-- Default:true; Defines whether time mutation changes an activity's duration. -->
		<param name="mutationAffectsDuration" value="true" />
		<!-- Default:1800.0; Defines how many seconds a time mutation can maximally shift a time. -->
		<param name="mutationRange" value="1800.0" />
		<!-- false; Use individual settings for each subpopulation. If enabled but no settings are found, regular settings are uses as fallback. -->
		<param name="useIndividualSettingsForSubpopulations" value="false" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="changeMode" >
		<!-- Defines whether car availability is considered be considered or not. An agent has no car only if it has no license, or never access to a car. Default: true -->
		<param name="ignoreCarAvailability" value="true" />
		<!-- Defines the mode switch behavior. Possible values [Lorg.matsim.core.config.groups.ChangeModeConfigGroup$Behavior;@2136feee Default: fromSpecifiedModesToSpecifiedModes. -->
		<param name="modeSwitchBehavior" value="fromSpecifiedModesToSpecifiedModes" />
		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt" />
	</module>
<!-- ====================================================================== -->
	<module name="controler" >
		<!-- Sets whether graphs showing some analyses should automatically be generated during the simulation. The generation of graphs usually takes a small amount of time that does not have any weight in big simulations, but add a significant overhead in smaller runs or in test cases where the graphical output is not even requested. -->
		<param name="createGraphs" value="false" />
		<!-- true if at the end of a run, plans, network, config etc should be dumped to a file -->
		<param name="dumpDataAtEnd" value="false" />
		<!-- Default=false. If enabled, the router takes travel times needed for turning moves into account. Cannot be used if the (Fast)AStarLandmarks routing or TravelTimeCalculator.separateModes is enabled. -->
		<param name="enableLinkToLinkRouting" value="false" />
		<!-- Default=xml; Specifies the file format for writing events. Currently supported: xml.
		Multiple values can be specified separated by commas (','). -->
		<param name="eventsFileFormat" value="xml" />
		<!-- Default=0;  -->
		<param name="firstIteration" value="0" />
		<!-- Default=1000;  -->
		<param name="lastIteration" value="0" />
		<!-- Defines which mobility simulation will be used. Currently supported: qsim JDEQSim 
		Depending on the chosen mobsim, you'll have to add additional config modules to configure the corresponding mobsim.
		For 'qsim', add a module 'qsim' to the config. -->
		<param name="mobsim" value="counting" />
		<param name="outputDirectory" value="test/output/org/matsim/core/controler/ControlerMobsimIntegrationTest/testRunMobsim_customMobsim/" />
		<!-- Possible values: failIfDirectoryExists, overwriteExistingFiles, deleteDirectoryIfExists -->
		<param name="overwriteFiles" value="failIfDirectoryExists" />
		<!-- The type of routing (least cost path) algorithm used, may have the values: Dijkstra, FastDijkstra, AStarLandmarks or FastAStarLandmarks -->
		<param name="routingAlgorithmType" value="Dijkstra" />
		<!-- An identifier for the current run which is used as prefix for output files and mentioned in output xml files etc. -->
		<param name="runId" value="null" />
		<!-- Comma-separated list of visualizer output file formats. `transims', `googleearth', and `otfvis'. -->
		<param name="snapshotFormat" value="transims" />
		<!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
		<param name="writeEventsInterval" value="0" />
		<!-- iterationNumber % writePlansInterval == 0 defines (hopefully) in which iterations plans are written to a file. `0' disables plans writing completely.  Some plans in early iterations are always written -->
		<param name="writePlansInterval" value="0" />
		<!-- iterationNumber % writeSnapshotsInterval == 0 defines in which iterations snapshots are written to a file. `0' disables snapshots writing completely -->
		<param name="writeSnapshotsInterval" value="1" />
	</module>
<!-- ====================================================================== -->
	<module name="counts" >
		<!-- Transport modes that will be respected for the counts comparison. 'car' is default, which includes also bussed from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the counts comparison. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeCountsInterval -->
		<param name="averageCountsOverIterations" value="5" />
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- If true, link counts from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- input file name to counts package -->
		<param name="inputCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="txt" />
		<!-- Specifies how often the counts comparison should be calculated and written. -->
		<param name="writeCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="facilities" >
		<!-- If set to 'true', empty activity option will be created. -->
		<param name="addEmptyActivityOption" value="false" />
		<!-- Default is 'true'. In the case that a facility has no link assigned, the ActivityFacility can be assigned to the closest link. If there should be only one ActivityFacility per link and if no link-assignment should be done, set to 'false'.This will create a new ActivityFacility at the coordinate and the facility will not be assigned to a link. -->
		<param name="assigningLinksToFacilitiesIfMissing" value="true" />
		<!-- If set to 'true', opening time will be assigned to activity facilities from ActivityParams. Default is false. This will NOT override option 'addEmptyActivityOption'. -->
		<param name="assigningOpeningTime" value="false" />
		<!-- This defines how facilities should be created. Possible values: none fromFile setInScenario onePerActivityLocationInPlansFile  -->
		<param name="facilitiesSource" value="fromFile" />
		<!-- A prefix to be used in activityFacility id. -->
		<param name="idPrefix" value="" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputFacilitiesFile" value="facilities.xml" />
		<param name="inputFacilityAttributesFile" value="null" />
		<!-- Sets whether all activities on a link should be collected within one ActivityFacility. Default is 'true'. If set to 'false', for each coordinate found in the population's activities a separate ActivityFacility will be created. -->
		<param name="oneFacilityPerLink" value="true" />
		<!-- If set to 'true' (which is the default), the link and coordinate attributes are replaced by null reference in the activities, as this information is now available via the facility. -->
		<param name="removingLinksAndCoordinates" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="global" >
		<param name="coordinateSystem" value="Atlantis" />
		<param name="insistingOnDeprecatedConfigVersion" value="true" />
		<!-- "global" number of threads.  This number is used, e.g., for replanning, but NOT in the mobsim.  This can typically be set to as many cores as you have available, or possibly even slightly more. -->
		<param name="numberOfThreads" value="2" />
		<param name="randomSeed" value="4711" />
	</module>
<!-- ====================================================================== -->
	<module name="households" >
		<param name="inputFile" value="null" />
		<param name="inputHouseholdAttributesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="linkStats" >
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the link statistics. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeLinkStatsInterval -->
		<param name="averageLinkStatsOverIterations" value="5" />
		<!-- Specifies how often the link stats should be calculated and written. Use 0 to disable the generation of link stats. -->
		<param name="writeLinkStatsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="network" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputChangeEventsFile" value="null" />
		<param name="inputNetworkFile" value="network.xml" />
		<param name="laneDefinitionsFile" value="null" />
		<param name="timeVariantNetwork" value="false" />
	</module>
<!-- ====================================================================== -->
	<module name="parallelEventHandling" >
		<!-- Estimated number of events during mobsim run. An optional optimization hint for the framework. -->
		<param name="estimatedNumberOfEvents" value="null" />
		<!-- Number of threads for parallel events handler. _null_ means the framework decides by itself. 0 is currently not possible. -->
		<param name="numberOfThreads" value="null" />
		<!-- If enabled, each event handler is assigned to its own thread. Note that enabling this feature disabled the numberOfThreads option! This feature is still experimental! -->
		<param name="oneThreadPerHandler" value="false" />
		<!-- If enabled, it is ensured that all events that are created during a time step of the mobility simulation are processed before the next time step is simulated. E.g. neccessary when within-day replanning is used. -->
		<param name="synchronizeOnSimSteps" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="planCalcScore" >
		<!-- logit model scale parameter. default: 1.  Has name and default value for historical reasons (see Bryan Raney's phd thesis). -->
		<param name="BrainExpBeta" value="2.0" />
		<param name="PathSizeLogitBeta" value="1.0" />
		<!-- fraction of iterations at which MSA score averaging is started. The matsim theory department suggests to use this together with switching off choice set innovation (where a similar switch exists), but it has not been tested yet. -->
		<param name="fractionOfIterationsToStartScoreMSA" value="null" />
		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />
		<!-- There used to be a plateau between duration=0 and duration=zeroUtilityDuration. This caused durations to evolve to zero once they were below zeroUtilityDuration, causing problems.  Only use this switch if you need to be backwards compatible with some old results.  (changed nov'13) -->
		<param name="usingOldScoringBelowZeroUtilityDuration" value="false" />
		<!-- write a plans file in each iteration directory which contains what each agent actually did, and the score it received. -->
		<param name="writeExperiencedPlans" value="false" />
		<parameterset type="scoringParameters" >
			<param name="earlyDeparture" value="-0.0" />
			<param name="lateArrival" value="-18.0" />
			<param name="marginalUtilityOfMoney" value="1.0" />
			<param name="performing" value="6.0" />
			<param name="subpopulation" value="null" />
			<param name="utilityOfLineSwitch" value="-1.0" />
			<param name="waiting" value="-0.0" />
			<param name="waitingPt" value="-6.0" />
			<parameterset type="activityParams" >
				<param name="activityType" value="dummy" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="02:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="car interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="pt interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="bike interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="other interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="walk interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="h" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="08:00:00" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="12:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="w" />
				<param name="closingTime" value="18:00:00" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="09:00:00" />
				<param name="minimalDuration" value="06:00:00" />
				<param name="openingTime" value="07:00:00" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="08:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="car" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="pt" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="walk" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="bike" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="ride" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="other" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="plans" >
		<!-- String: minOfDurationAndEndTime tryEndTimeThenDuration endTimeOnly. Anything besides minOfDurationAndEndTime will internally use a different (simpler) version of the TimeAllocationMutator. -->
		<param name="activityDurationInterpretation" value="tryEndTimeThenDuration" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- Path to a file containing person attributes (required file format: ObjectAttributes). -->
		<param name="inputPersonAttributesFile" value="null" />
		<param name="inputPlansFile" value="plans1.xml" />
		<!-- Defines how routes are stored in memory. Currently supported: LinkNetworkRoute, CompressedNetworkRoute. -->
		<param name="networkRouteType" value="LinkNetworkRoute" />
		<!-- (not tested) will remove plan attributes that are presumably not used, such as activityStartTime. default=false -->
		<param name="removingUnnecessaryPlanAttributes" value="false" />
		<!-- Name of the (Object)Attribute defining the subpopulation to which pertains a Person (as freight, through traffic, etc.). The attribute must be of String type.  Change away from default only in desperate situations. -->
		<param name="subpopulationAttributeName" value="subpopulation" />
	</module>
<!-- ====================================================================== -->
	<module name="planscalcroute" >
		<!-- All the modes for which the router is supposed to generate network routes (like car) -->
		<param name="networkModes" value="car" />
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="bike" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="4.166666666666667" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="access_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="egress_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="undefined" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="13.88888888888889" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="ride" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="1.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="pt" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="2.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="ptCounts" >
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- input file containing the alighting (getting off) counts for pt -->
		<param name="inputAlightCountsFile" value="null" />
		<!-- input file containing the boarding (getting on) counts for pt -->
		<param name="inputBoardCountsFile" value="null" />
		<!-- input file containing the occupancy counts for pt -->
		<param name="inputOccupancyCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="null" />
		<!-- every how many iterations (starting with 0) counts comparisons are generated -->
		<param name="ptCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="qsim" >
		<!-- If set to true, creates a vehicle for each person corresponding to every network mode. However, this will be overridden if vehicle source is fromVehiclesData. -->
		<param name="creatingVehiclesForAllNetworkModes" value="true" />
		<param name="endTime" value="00:00:00" />
		<param name="flowCapacityFactor" value="1.0" />
		<!-- decides if waiting vehicles enter the network after or before the already driving vehicles were moved. Default: false -->
		<param name="insertingWaitingVehiclesBeforeDrivingVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set to false if all seep modes should perform seepage. Default is true (better option). -->
		<param name="isRestrictingSeepage" value="true" />
		<!-- If link dynamics is set as SeepageQ, set to true if seep mode do not consumes any space on the link. Default is false. -->
		<param name="isSeepModeStorageFree" value="false" />
		<!-- default: FIFO; options: FIFO PassingQ SeepageQ -->
		<param name="linkDynamics" value="FIFO" />
		<!-- The (initial) width of the links of the network. Use positive floating point values. This is used only for visualisation. -->
		<param name="linkWidth" value="30.0" />
		<!-- [comma-separated list] Defines which modes are congested modes. Technically, these are the modes that the departure handler of the netsimengine handles.  Effective cell size, effective lane width, flow capacity factor, and storage capacity factor need to be set with diligence.  Need to be vehicular modes to make sense. -->
		<param name="mainMode" value="car" />
		<!-- Shortens a link in the visualization, i.e. its start and end point are moved into towards the center. Does not affect traffic flow.  -->
		<param name="nodeOffset" value="0.0" />
		<!-- Number of threads used for the QSim.  Note that this setting is independent from the "global" threads setting.  In contrast to earlier versions, the non-parallel special version is no longer there. -->
		<param name="numberOfThreads" value="1" />
		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set a seep mode. Default is bike. -->
		<param name="seepMode" value="bike" />
		<!-- Possible values: minOfEndtimeAndMobsimFinished, onlyUseEndtime -->
		<param name="simEndtimeInterpretation" value="null" />
		<!-- Options: maxOfStarttimeAndEarliestActivityEnd onlyUseStarttime  -->
		<param name="simStarttimeInterpretation" value="maxOfStarttimeAndEarliestActivityEnd" />
		<!-- snapshotStyle. One of: equiDist queue withHoles withHolesAndShowHoles kinematicWaves  -->
		<param name="snapshotStyle" value="equiDist" />
		<param name="snapshotperiod" value="00:00:00" />
		<param name="startTime" value="00:00:00" />
		<param name="storageCapacityFactor" value="1.0" />
		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="10.0" />
		<param name="timeStepSize" value="00:00:01" />
		<!-- options: queue withHoles kinematicWaves  -->
		<param name="trafficDynamics" value="queue" />
		<!-- Set this parameter to true if lanes should be used, false if not. -->
		<param name="useLanes" value="false" />
		<!-- If a route does not reference a vehicle, agents will use the vehicle with the same id as their own. -->
		<param name="usePersonIdForMissingVehicleId" value="true" />
		<!-- If false, the qsim accumulates fractional flows up to one flow unit in every time step.  If true, flows are updated only if an agent wants to enter the link or an agent is added to buffer. Default is true. -->
		<param name="usingFastCapacityUpdate" value="true" />
		<!-- if the qsim should use as many runners as there are threads (Christoph's dissertation version) or more of them, together with a thread pool (seems to be faster in some situations, but is not tested). -->
		<param name="usingThreadpool" value="true" />
		<!-- Defines what happens if an agent wants to depart, but the specified vehicle is not available. One of: teleport wait exception  -->
		<param name="vehicleBehavior" value="teleport" />
		<!-- If vehicles should all be the same default vehicle, or come from the vehicles file, or something else.  Possible values:  defaultVehicle modeVehicleTypesFromVehiclesData fromVehiclesData -->
		<param name="vehiclesSource" value="defaultVehicle" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="strategy" >
		<!-- the external executable will be called with a config file as argument.  This is the pathname to a possible skeleton config, to which additional information will be added.  Can be null. -->
		<param name="ExternalExeConfigTemplate" value="null" />
		<!-- time out value (in seconds) after which matsim will consider the external strategy as failed -->
		<param name="ExternalExeTimeOut" value="3600" />
		<!-- root directory for temporary files generated by the external executable. Provided as a service; I don't think this is used by MATSim. -->
		<param name="ExternalExeTmpFileRootDir" value="null" />
		<!-- fraction of iterations where innovative strategies are switched off.  Something link 0.8 should be good.  E.g. if you run from iteration 400 to iteration 500, innovation is switched off at iteration 480 -->
		<param name="fractionOfIterationsToDisableInnovation" value="Infinity" />
		<!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
		<param name="maxAgentPlanMemorySize" value="5" />
		<!-- strategyName of PlanSelector for plans removal.  Possible defaults: WorstPlanSelector SelectRandom SelectExpBetaForRemoval ChangeExpBetaForRemoval PathSizeLogitSelectorForRemoval . The current default, WorstPlanSelector is not a good choice from a discrete choice theoretical perspective. Alternatives, however, have not been systematically tested. kai, feb'12 -->
		<param name="planSelectorForRemoval" value="WorstPlanSelector" />
		<parameterset type="strategysettings" >
			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />
			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRouteTimeAllocationMutatorTimeAllocationMutator_ReRouteChangeSingleTripModeChangeTripModeSubtourModeChoice (innovative strategies). -->
			<param name="strategyName" value="BestScore" />
			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.9" />
		</parameterset>
		<parameterset type="strategysettings" >
			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />
			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRouteTimeAllocationMutatorTimeAllocationMutator_ReRouteChangeSingleTripModeChangeTripModeSubtourModeChoice (innovative strategies). -->
			<param name="strategyName" value="ReRoute" />
			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.1" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="subtourModeChoice" >
		<!-- Only for backwards compatibility.  Defines if only trips from modes list should change mode, or all trips.  Options: fromAllModesToSpecifiedModes fromSpecifiedModesToSpecifiedModes  -->
		<param name="behavior" value="fromSpecifiedModesToSpecifiedModes" />
		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car,bike" />
		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="false" />
		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt,bike,walk" />
	</module>
<!-- ====================================================================== -->
	<module name="transit" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputScheduleCRS" value="null" />
		<!-- Optional input file containing additional attributes for transit lines, stored as ObjectAttributes. -->
		<param name="transitLinesAttributesFile" value="null" />
		<!-- Comma-separated list of transportation modes that are handled as transit. Defaults to 'pt'. -->
		<param name="transitModes" value="pt" />
		<!-- Input file containing the transit schedule to be simulated. -->
		<param name="transitScheduleFile" value="null" />
		<!-- Optional input file containing additional attributes for transit stop facilities, stored as ObjectAttributes. -->
		<param name="transitStopsAttributesFile" value="null" />
		<!-- Set this parameter to true if transit should be simulated, false if not. -->
		<param name="useTransit" value="false" />
		<!-- Input file containing the vehicles used by the departures in the transit schedule. -->
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="transitRouter" >
		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />
		<!-- Factor with which direct walk generalized cost is multiplied before it is compared to the pt generalized cost.  Set to a very high value to reduce direct walk results. -->
		<param name="directWalkFactor" value="1.0" />
		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="200.0" />
		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="100.0" />
		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1000.0" />
	</module>
<!-- ====================================================================== -->
	<module name="travelTimeCalculator" >
		<!-- Transport modes that will be respected by the travel time collector. 'car' is default, which includes also busses from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<param name="calculateLinkToLinkTravelTimes" value="false" />
		<param name="calculateLinkTravelTimes" value="true" />
		<!-- If true, link travel times from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The lenght (in sec) of the time period that is splited into time bins; an additional time bin is created to aggregate all travel times collected after maxTime -->
		<param name="maxTime" value="108000" />
		<!-- If true, link travel times are measured and calculated separately for each mode in analyzedModes. Other modes are ignored. If true, filterModes has no effect. -->
		<param name="separateModes" value="false" />
		<!-- How to deal with congested time bins that have no link entry events. `optimistic' assumes free speed (too optimistic); 'experimental_LastMile' is experimental and probably too pessimistic. -->
		<param name="travelTimeAggregator" value="optimistic" />
		<!-- The size of the time bin (in sec) into which the link travel times are aggregated for the router -->
		<param name="travelTimeBinSize" value="900" />
		<!-- possible values: TravelTimeCalculatorArray TravelTimeCalculatorHashMap  -->
		<param name="travelTimeCalculator" value="TravelTimeCalculatorArray" />
		<!-- How to deal with link entry times at different positions during the time bin. Currently supported: average, linearinterpolation -->
		<param name="travelTimeGetter" value="average" />
	</module>
<!-- ====================================================================== -->
	<module name="vehicles" >
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="vspExperimental" >
		<!-- (do not use except of you have to) There was a problem with pt interaction scoring.  Some people solved it by overwriting the parameters of the pt interaction activity type.  Doing this now throws an Exception.  If you still insist on doing this, set the following to true. -->
		<param name="isAbleToOverwritePtInteractionParams" value="false" />
		<param name="isGeneratingBoardingDeniedEvent" value="false" />
		<!-- if an approximation of the opportunity cost of time is included into the radius calculation for location choice.`true' will be faster, but it is an approximation.  Default is `true'; `false' is available for backwards compatibility. -->
		<param name="isUsingOpportunityCostOfTimeForLocationChoice" value="true" />
		<param name="logitScaleParamForPlansRemoval" value="1.0" />
		<!-- Options: | ignore | info | warn | abort | .  When violating VSP defaults, this results in nothing, logfile infos, logfile warnings, or aborts.  Members of VSP should use `abort' or talk to kai. -->
		<param name="vspDefaultsCheckingLevel" value="ignore" />
		<!-- if true then writes output_events in output directory.  default is `false'. Will only work when lastIteration is multiple of events writing interval -->
		<param name="writingOutputEvents" value="true" />
	</module>
<!-- ====================================================================== -->

</config>

2018-06-01 12:25:43,735  INFO ControlerUtils:63 Complete config dump done.
2018-06-01 12:25:43,736  INFO ControlerUtils:64 Checking consistency of config...
2018-06-01 12:25:43,736  INFO VspConfigConsistencyCheckerImpl:58 NOT running vsp config consistency check because vsp defaults checking level is set to IGNORE
2018-06-01 12:25:43,736  INFO ControlerUtils:66 Checking consistency of config done.
2018-06-01 12:25:43,737 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2018-06-01 12:25:43,737 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2018-06-01 12:25:43,739  INFO Counter:70 [PersonPrepareForSim] handled person # 1
2018-06-01 12:25:43,740  INFO Counter:76 [PersonPrepareForSim] handled person # 1
2018-06-01 12:25:43,741  INFO Counter:70  vehicles # 1
2018-06-01 12:25:43,741  INFO AbstractController:121 ###################################################
2018-06-01 12:25:43,741  INFO AbstractController:122 ### ITERATION 0 BEGINS
2018-06-01 12:25:43,742  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2018-06-01 12:25:43,742  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2018-06-01 12:25:43,742  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2018-06-01 12:25:43,742  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2018-06-01 12:25:43,742  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2018-06-01 12:25:43,742  INFO ControlerListenerManagerImpl:148 [it.0] all ControlerIterationStartsListeners called.
2018-06-01 12:25:43,743  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-06-01 12:25:43,743  INFO EventsManagerImpl:170 resetting Event-Handlers
2018-06-01 12:25:43,743  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2018-06-01 12:25:43,743  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2018-06-01 12:25:43,743  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2018-06-01 12:25:43,744  INFO EventsManagerImpl:177   org.matsim.core.events.algorithms.Vehicle2DriverEventHandler
2018-06-01 12:25:43,744  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2018-06-01 12:25:43,744  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2018-06-01 12:25:43,744  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2018-06-01 12:25:43,744  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2018-06-01 12:25:43,745  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2018-06-01 12:25:43,745  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2018-06-01 12:25:43,745  INFO ControlerListenerManagerImpl:232 [it.0] all ControlerBeforeMobsimListeners called.
2018-06-01 12:25:43,746  INFO AbstractController$8:210 ### ITERATION 0 fires after mobsim event
2018-06-01 12:25:43,746  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2018-06-01 12:25:43,746  INFO LegTimesControlerListener:50 [0] average trip (probably: leg) duration is: 0 seconds = 00:00:00
2018-06-01 12:25:43,746  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2018-06-01 12:25:43,746  INFO ControlerListenerManagerImpl:251 [it.0] all ControlerAfterMobsimListeners called.
2018-06-01 12:25:43,747  INFO AbstractController$4:147 ### ITERATION 0 fires scoring event
2018-06-01 12:25:43,747  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2018-06-01 12:25:43,747  INFO NewScoreAssignerImpl:36 it: 0 msaStart: null
2018-06-01 12:25:43,747  INFO ControlerListenerManagerImpl:194 [it.0] all ControlerScoringListeners called.
2018-06-01 12:25:43,747  INFO AbstractController$5:155 ### ITERATION 0 fires iteration end event
2018-06-01 12:25:43,748  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-06-01 12:25:43,748  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2018-06-01 12:25:43,748  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2018-06-01 12:25:43,748  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2018-06-01 12:25:43,748  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2018-06-01 12:25:43,749  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2018-06-01 12:25:43,749  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2018-06-01 12:25:43,749  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2018-06-01 12:25:43,749  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2018-06-01 12:25:43,749  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2018-06-01 12:25:43,750  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2018-06-01 12:25:43,750  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 0.0
2018-06-01 12:25:43,750  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 0.0
2018-06-01 12:25:43,750  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 0.0
2018-06-01 12:25:43,750  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 0.0
2018-06-01 12:25:43,750  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2018-06-01 12:25:43,751  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2018-06-01 12:25:43,751  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2018-06-01 12:25:43,752  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 0.0
2018-06-01 12:25:43,752  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2018-06-01 12:25:43,752  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2018-06-01 12:25:43,752  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2018-06-01 12:25:43,753  INFO LegHistogramListener:72 number of legs:	0	100%
2018-06-01 12:25:43,753  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2018-06-01 12:25:43,753  INFO ControlerListenerManagerImpl:171 [it.0] all ControlerIterationEndsListeners called.
2018-06-01 12:25:43,754  INFO AbstractController:165 ### ITERATION 0 ENDS
2018-06-01 12:25:43,754  INFO AbstractController:166 ###################################################
2018-06-01 12:25:43,754  INFO MatsimRuntimeModifications:58 S H U T D O W N   ---   start shutdown.
2018-06-01 12:25:43,754  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-06-01 12:25:43,755  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ModeStatsControlerListener
2018-06-01 12:25:43,755  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ScoreStatsControlerListener
2018-06-01 12:25:43,755  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.TravelDistanceStatsControlerListener
2018-06-01 12:25:43,755  INFO ControlerListenerManagerImpl:129 all ControlerShutdownListeners called.
2018-06-01 12:25:43,755  INFO MatsimRuntimeModifications:81 S H U T D O W N   ---   shutdown completed.
2018-06-01 12:25:43,755  INFO OutputDirectoryLogging:146 closing the logfile, i.e. messages sent to the logger after this message are not written to the logfile.
