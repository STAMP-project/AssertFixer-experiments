2018-06-01 12:24:53,320  INFO Gbl:59 JVM: 1.8.0_121; Oracle Corporation; mixed mode; 64-bit
2018-06-01 12:24:53,321  INFO Gbl:63 OS: Linux; 3.10.0-862.3.2.el7.x86_64; amd64
2018-06-01 12:24:53,321  INFO Gbl:66 CPU cores: 8
2018-06-01 12:24:53,321  INFO Gbl:67 max. Memory: 622.5MB (652738560B)
2018-06-01 12:24:53,321  INFO Gbl:105 MATSim-Build: r2e2cc5d2634abc1948159b0b26915d39f57850c6 (2018-06-01 12:23:51)
2018-06-01 12:24:53,322  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.counts.CountsControlerListener
2018-06-01 12:24:53,322  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ModeStatsControlerListener
2018-06-01 12:24:53,322 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2018-06-01 12:24:53,322  INFO NetworkImpl:167  node # 1
2018-06-01 12:24:53,323  INFO NetworkImpl:167  node # 4
2018-06-01 12:24:53,323  INFO NetworkImpl:163  link # 1
2018-06-01 12:24:53,323  INFO NetworkImpl:163  link # 4
2018-06-01 12:24:53,323  INFO NetworkImpl:163  link # 16
2018-06-01 12:24:53,324  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ScoreStatsControlerListener
2018-06-01 12:24:53,324  INFO ControlerListenerManagerImpl:110 all ControlerStartupListeners called.
2018-06-01 12:24:53,324  INFO ControlerUtils:58 config dump before iterations start
2018-06-01 12:24:53,324  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,326  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,327  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,329  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,330  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,332  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,334  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,336  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,338  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,340  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,342  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,344  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,347  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,349  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,352  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,354  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,356  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,358  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,360  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,362  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,364  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,366  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,368  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,370  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:53,373  INFO ControlerUtils:62 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>
<!-- ====================================================================== -->
	<module name="JDEQSim" >
		<param name="carSize" value="7.5" />
		<param name="endTime" value="undefined" />
		<param name="flowCapacityFactor" value="1.0" />
		<param name="gapTravelSpeed" value="15.0" />
		<param name="minimumInFlowCapacity" value="1800.0" />
		<param name="squeezeTime" value="1800.0" />
		<param name="storageCapacityFactor" value="1.0" />
	</module>
<!-- ====================================================================== -->
	<module name="TimeAllocationMutator" >
		<!-- Default:true; Defines whether time mutation changes an activity's duration. -->
		<param name="mutationAffectsDuration" value="true" />
		<!-- Default:1800.0; Defines how many seconds a time mutation can maximally shift a time. -->
		<param name="mutationRange" value="1800.0" />
		<!-- false; Use individual settings for each subpopulation. If enabled but no settings are found, regular settings are uses as fallback. -->
		<param name="useIndividualSettingsForSubpopulations" value="false" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="changeMode" >
		<!-- Defines whether car availability is considered be considered or not. An agent has no car only if it has no license, or never access to a car. Default: true -->
		<param name="ignoreCarAvailability" value="true" />
		<!-- Defines the mode switch behavior. Possible values [Lorg.matsim.core.config.groups.ChangeModeConfigGroup$Behavior;@7f1f6c22 Default: fromSpecifiedModesToSpecifiedModes. -->
		<param name="modeSwitchBehavior" value="fromSpecifiedModesToSpecifiedModes" />
		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt" />
	</module>
<!-- ====================================================================== -->
	<module name="controler" >
		<!-- Sets whether graphs showing some analyses should automatically be generated during the simulation. The generation of graphs usually takes a small amount of time that does not have any weight in big simulations, but add a significant overhead in smaller runs or in test cases where the graphical output is not even requested. -->
		<param name="createGraphs" value="false" />
		<!-- true if at the end of a run, plans, network, config etc should be dumped to a file -->
		<param name="dumpDataAtEnd" value="false" />
		<!-- Default=false. If enabled, the router takes travel times needed for turning moves into account. Cannot be used if the (Fast)AStarLandmarks routing or TravelTimeCalculator.separateModes is enabled. -->
		<param name="enableLinkToLinkRouting" value="false" />
		<!-- Default=xml; Specifies the file format for writing events. Currently supported: xml.
		Multiple values can be specified separated by commas (','). -->
		<param name="eventsFileFormat" value="xml" />
		<!-- Default=0;  -->
		<param name="firstIteration" value="0" />
		<!-- Default=1000;  -->
		<param name="lastIteration" value="1" />
		<!-- Defines which mobility simulation will be used. Currently supported: qsim JDEQSim 
		Depending on the chosen mobsim, you'll have to add additional config modules to configure the corresponding mobsim.
		For 'qsim', add a module 'qsim' to the config. -->
		<param name="mobsim" value="qsim" />
		<param name="outputDirectory" value="test/output/org/matsim/core/controler/MobsimListenerTest/testRunMobsim_listenerSingleton/" />
		<!-- Possible values: failIfDirectoryExists, overwriteExistingFiles, deleteDirectoryIfExists -->
		<param name="overwriteFiles" value="failIfDirectoryExists" />
		<!-- The type of routing (least cost path) algorithm used, may have the values: Dijkstra, FastDijkstra, AStarLandmarks or FastAStarLandmarks -->
		<param name="routingAlgorithmType" value="Dijkstra" />
		<!-- An identifier for the current run which is used as prefix for output files and mentioned in output xml files etc. -->
		<param name="runId" value="null" />
		<!-- Comma-separated list of visualizer output file formats. `transims', `googleearth', and `otfvis'. -->
		<param name="snapshotFormat" value="transims" />
		<!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
		<param name="writeEventsInterval" value="0" />
		<!-- iterationNumber % writePlansInterval == 0 defines (hopefully) in which iterations plans are written to a file. `0' disables plans writing completely.  Some plans in early iterations are always written -->
		<param name="writePlansInterval" value="0" />
		<!-- iterationNumber % writeSnapshotsInterval == 0 defines in which iterations snapshots are written to a file. `0' disables snapshots writing completely -->
		<param name="writeSnapshotsInterval" value="1" />
	</module>
<!-- ====================================================================== -->
	<module name="counts" >
		<!-- Transport modes that will be respected for the counts comparison. 'car' is default, which includes also bussed from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the counts comparison. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeCountsInterval -->
		<param name="averageCountsOverIterations" value="5" />
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- If true, link counts from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- input file name to counts package -->
		<param name="inputCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="txt" />
		<!-- Specifies how often the counts comparison should be calculated and written. -->
		<param name="writeCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="facilities" >
		<!-- If set to 'true', empty activity option will be created. -->
		<param name="addEmptyActivityOption" value="false" />
		<!-- Default is 'true'. In the case that a facility has no link assigned, the ActivityFacility can be assigned to the closest link. If there should be only one ActivityFacility per link and if no link-assignment should be done, set to 'false'.This will create a new ActivityFacility at the coordinate and the facility will not be assigned to a link. -->
		<param name="assigningLinksToFacilitiesIfMissing" value="true" />
		<!-- If set to 'true', opening time will be assigned to activity facilities from ActivityParams. Default is false. This will NOT override option 'addEmptyActivityOption'. -->
		<param name="assigningOpeningTime" value="false" />
		<!-- This defines how facilities should be created. Possible values: none fromFile setInScenario onePerActivityLocationInPlansFile  -->
		<param name="facilitiesSource" value="fromFile" />
		<!-- A prefix to be used in activityFacility id. -->
		<param name="idPrefix" value="" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputFacilitiesFile" value="facilities.xml" />
		<param name="inputFacilityAttributesFile" value="null" />
		<!-- Sets whether all activities on a link should be collected within one ActivityFacility. Default is 'true'. If set to 'false', for each coordinate found in the population's activities a separate ActivityFacility will be created. -->
		<param name="oneFacilityPerLink" value="true" />
		<!-- If set to 'true' (which is the default), the link and coordinate attributes are replaced by null reference in the activities, as this information is now available via the facility. -->
		<param name="removingLinksAndCoordinates" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="global" >
		<param name="coordinateSystem" value="Atlantis" />
		<param name="insistingOnDeprecatedConfigVersion" value="true" />
		<!-- "global" number of threads.  This number is used, e.g., for replanning, but NOT in the mobsim.  This can typically be set to as many cores as you have available, or possibly even slightly more. -->
		<param name="numberOfThreads" value="2" />
		<param name="randomSeed" value="4711" />
	</module>
<!-- ====================================================================== -->
	<module name="households" >
		<param name="inputFile" value="null" />
		<param name="inputHouseholdAttributesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="linkStats" >
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the link statistics. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeLinkStatsInterval -->
		<param name="averageLinkStatsOverIterations" value="5" />
		<!-- Specifies how often the link stats should be calculated and written. Use 0 to disable the generation of link stats. -->
		<param name="writeLinkStatsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="network" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputChangeEventsFile" value="null" />
		<param name="inputNetworkFile" value="network.xml" />
		<param name="laneDefinitionsFile" value="null" />
		<param name="timeVariantNetwork" value="false" />
	</module>
<!-- ====================================================================== -->
	<module name="parallelEventHandling" >
		<!-- Estimated number of events during mobsim run. An optional optimization hint for the framework. -->
		<param name="estimatedNumberOfEvents" value="null" />
		<!-- Number of threads for parallel events handler. _null_ means the framework decides by itself. 0 is currently not possible. -->
		<param name="numberOfThreads" value="null" />
		<!-- If enabled, each event handler is assigned to its own thread. Note that enabling this feature disabled the numberOfThreads option! This feature is still experimental! -->
		<param name="oneThreadPerHandler" value="false" />
		<!-- If enabled, it is ensured that all events that are created during a time step of the mobility simulation are processed before the next time step is simulated. E.g. neccessary when within-day replanning is used. -->
		<param name="synchronizeOnSimSteps" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="planCalcScore" >
		<!-- logit model scale parameter. default: 1.  Has name and default value for historical reasons (see Bryan Raney's phd thesis). -->
		<param name="BrainExpBeta" value="2.0" />
		<param name="PathSizeLogitBeta" value="1.0" />
		<!-- fraction of iterations at which MSA score averaging is started. The matsim theory department suggests to use this together with switching off choice set innovation (where a similar switch exists), but it has not been tested yet. -->
		<param name="fractionOfIterationsToStartScoreMSA" value="null" />
		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />
		<!-- There used to be a plateau between duration=0 and duration=zeroUtilityDuration. This caused durations to evolve to zero once they were below zeroUtilityDuration, causing problems.  Only use this switch if you need to be backwards compatible with some old results.  (changed nov'13) -->
		<param name="usingOldScoringBelowZeroUtilityDuration" value="false" />
		<!-- write a plans file in each iteration directory which contains what each agent actually did, and the score it received. -->
		<param name="writeExperiencedPlans" value="false" />
		<parameterset type="scoringParameters" >
			<param name="earlyDeparture" value="-0.0" />
			<param name="lateArrival" value="-18.0" />
			<param name="marginalUtilityOfMoney" value="1.0" />
			<param name="performing" value="6.0" />
			<param name="subpopulation" value="null" />
			<param name="utilityOfLineSwitch" value="-1.0" />
			<param name="waiting" value="-0.0" />
			<param name="waitingPt" value="-6.0" />
			<parameterset type="activityParams" >
				<param name="activityType" value="dummy" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="02:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="car interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="pt interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="bike interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="other interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="walk interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="h" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="08:00:00" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="12:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="w" />
				<param name="closingTime" value="18:00:00" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="09:00:00" />
				<param name="minimalDuration" value="06:00:00" />
				<param name="openingTime" value="07:00:00" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="08:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="car" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="pt" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="walk" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="bike" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="ride" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="other" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="plans" >
		<!-- String: minOfDurationAndEndTime tryEndTimeThenDuration endTimeOnly. Anything besides minOfDurationAndEndTime will internally use a different (simpler) version of the TimeAllocationMutator. -->
		<param name="activityDurationInterpretation" value="tryEndTimeThenDuration" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- Path to a file containing person attributes (required file format: ObjectAttributes). -->
		<param name="inputPersonAttributesFile" value="null" />
		<param name="inputPlansFile" value="plans1.xml" />
		<!-- Defines how routes are stored in memory. Currently supported: LinkNetworkRoute, CompressedNetworkRoute. -->
		<param name="networkRouteType" value="LinkNetworkRoute" />
		<!-- (not tested) will remove plan attributes that are presumably not used, such as activityStartTime. default=false -->
		<param name="removingUnnecessaryPlanAttributes" value="false" />
		<!-- Name of the (Object)Attribute defining the subpopulation to which pertains a Person (as freight, through traffic, etc.). The attribute must be of String type.  Change away from default only in desperate situations. -->
		<param name="subpopulationAttributeName" value="subpopulation" />
	</module>
<!-- ====================================================================== -->
	<module name="planscalcroute" >
		<!-- All the modes for which the router is supposed to generate network routes (like car) -->
		<param name="networkModes" value="car" />
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="bike" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="4.166666666666667" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="access_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="egress_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="undefined" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="13.88888888888889" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="ride" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="1.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="pt" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="2.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="ptCounts" >
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- input file containing the alighting (getting off) counts for pt -->
		<param name="inputAlightCountsFile" value="null" />
		<!-- input file containing the boarding (getting on) counts for pt -->
		<param name="inputBoardCountsFile" value="null" />
		<!-- input file containing the occupancy counts for pt -->
		<param name="inputOccupancyCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="null" />
		<!-- every how many iterations (starting with 0) counts comparisons are generated -->
		<param name="ptCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="qsim" >
		<!-- If set to true, creates a vehicle for each person corresponding to every network mode. However, this will be overridden if vehicle source is fromVehiclesData. -->
		<param name="creatingVehiclesForAllNetworkModes" value="true" />
		<param name="endTime" value="00:00:00" />
		<param name="flowCapacityFactor" value="1.0" />
		<!-- decides if waiting vehicles enter the network after or before the already driving vehicles were moved. Default: false -->
		<param name="insertingWaitingVehiclesBeforeDrivingVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set to false if all seep modes should perform seepage. Default is true (better option). -->
		<param name="isRestrictingSeepage" value="true" />
		<!-- If link dynamics is set as SeepageQ, set to true if seep mode do not consumes any space on the link. Default is false. -->
		<param name="isSeepModeStorageFree" value="false" />
		<!-- default: FIFO; options: FIFO PassingQ SeepageQ -->
		<param name="linkDynamics" value="FIFO" />
		<!-- The (initial) width of the links of the network. Use positive floating point values. This is used only for visualisation. -->
		<param name="linkWidth" value="30.0" />
		<!-- [comma-separated list] Defines which modes are congested modes. Technically, these are the modes that the departure handler of the netsimengine handles.  Effective cell size, effective lane width, flow capacity factor, and storage capacity factor need to be set with diligence.  Need to be vehicular modes to make sense. -->
		<param name="mainMode" value="car" />
		<!-- Shortens a link in the visualization, i.e. its start and end point are moved into towards the center. Does not affect traffic flow.  -->
		<param name="nodeOffset" value="0.0" />
		<!-- Number of threads used for the QSim.  Note that this setting is independent from the "global" threads setting.  In contrast to earlier versions, the non-parallel special version is no longer there. -->
		<param name="numberOfThreads" value="1" />
		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set a seep mode. Default is bike. -->
		<param name="seepMode" value="bike" />
		<!-- Possible values: minOfEndtimeAndMobsimFinished, onlyUseEndtime -->
		<param name="simEndtimeInterpretation" value="null" />
		<!-- Options: maxOfStarttimeAndEarliestActivityEnd onlyUseStarttime  -->
		<param name="simStarttimeInterpretation" value="maxOfStarttimeAndEarliestActivityEnd" />
		<!-- snapshotStyle. One of: equiDist queue withHoles withHolesAndShowHoles kinematicWaves  -->
		<param name="snapshotStyle" value="equiDist" />
		<param name="snapshotperiod" value="00:00:00" />
		<param name="startTime" value="00:00:00" />
		<param name="storageCapacityFactor" value="1.0" />
		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="10.0" />
		<param name="timeStepSize" value="00:00:01" />
		<!-- options: queue withHoles kinematicWaves  -->
		<param name="trafficDynamics" value="queue" />
		<!-- Set this parameter to true if lanes should be used, false if not. -->
		<param name="useLanes" value="false" />
		<!-- If a route does not reference a vehicle, agents will use the vehicle with the same id as their own. -->
		<param name="usePersonIdForMissingVehicleId" value="true" />
		<!-- If false, the qsim accumulates fractional flows up to one flow unit in every time step.  If true, flows are updated only if an agent wants to enter the link or an agent is added to buffer. Default is true. -->
		<param name="usingFastCapacityUpdate" value="true" />
		<!-- if the qsim should use as many runners as there are threads (Christoph's dissertation version) or more of them, together with a thread pool (seems to be faster in some situations, but is not tested). -->
		<param name="usingThreadpool" value="true" />
		<!-- Defines what happens if an agent wants to depart, but the specified vehicle is not available. One of: teleport wait exception  -->
		<param name="vehicleBehavior" value="teleport" />
		<!-- If vehicles should all be the same default vehicle, or come from the vehicles file, or something else.  Possible values:  defaultVehicle modeVehicleTypesFromVehiclesData fromVehiclesData -->
		<param name="vehiclesSource" value="defaultVehicle" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="strategy" >
		<!-- the external executable will be called with a config file as argument.  This is the pathname to a possible skeleton config, to which additional information will be added.  Can be null. -->
		<param name="ExternalExeConfigTemplate" value="null" />
		<!-- time out value (in seconds) after which matsim will consider the external strategy as failed -->
		<param name="ExternalExeTimeOut" value="3600" />
		<!-- root directory for temporary files generated by the external executable. Provided as a service; I don't think this is used by MATSim. -->
		<param name="ExternalExeTmpFileRootDir" value="null" />
		<!-- fraction of iterations where innovative strategies are switched off.  Something link 0.8 should be good.  E.g. if you run from iteration 400 to iteration 500, innovation is switched off at iteration 480 -->
		<param name="fractionOfIterationsToDisableInnovation" value="Infinity" />
		<!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
		<param name="maxAgentPlanMemorySize" value="5" />
		<!-- strategyName of PlanSelector for plans removal.  Possible defaults: WorstPlanSelector SelectRandom SelectExpBetaForRemoval ChangeExpBetaForRemoval PathSizeLogitSelectorForRemoval . The current default, WorstPlanSelector is not a good choice from a discrete choice theoretical perspective. Alternatives, however, have not been systematically tested. kai, feb'12 -->
		<param name="planSelectorForRemoval" value="WorstPlanSelector" />
		<parameterset type="strategysettings" >
			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />
			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRouteTimeAllocationMutatorTimeAllocationMutator_ReRouteChangeSingleTripModeChangeTripModeSubtourModeChoice (innovative strategies). -->
			<param name="strategyName" value="BestScore" />
			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.9" />
		</parameterset>
		<parameterset type="strategysettings" >
			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />
			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRouteTimeAllocationMutatorTimeAllocationMutator_ReRouteChangeSingleTripModeChangeTripModeSubtourModeChoice (innovative strategies). -->
			<param name="strategyName" value="ReRoute" />
			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.1" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="subtourModeChoice" >
		<!-- Only for backwards compatibility.  Defines if only trips from modes list should change mode, or all trips.  Options: fromAllModesToSpecifiedModes fromSpecifiedModesToSpecifiedModes  -->
		<param name="behavior" value="fromSpecifiedModesToSpecifiedModes" />
		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car,bike" />
		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="false" />
		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt,bike,walk" />
	</module>
<!-- ====================================================================== -->
	<module name="transit" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputScheduleCRS" value="null" />
		<!-- Optional input file containing additional attributes for transit lines, stored as ObjectAttributes. -->
		<param name="transitLinesAttributesFile" value="null" />
		<!-- Comma-separated list of transportation modes that are handled as transit. Defaults to 'pt'. -->
		<param name="transitModes" value="pt" />
		<!-- Input file containing the transit schedule to be simulated. -->
		<param name="transitScheduleFile" value="null" />
		<!-- Optional input file containing additional attributes for transit stop facilities, stored as ObjectAttributes. -->
		<param name="transitStopsAttributesFile" value="null" />
		<!-- Set this parameter to true if transit should be simulated, false if not. -->
		<param name="useTransit" value="false" />
		<!-- Input file containing the vehicles used by the departures in the transit schedule. -->
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="transitRouter" >
		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />
		<!-- Factor with which direct walk generalized cost is multiplied before it is compared to the pt generalized cost.  Set to a very high value to reduce direct walk results. -->
		<param name="directWalkFactor" value="1.0" />
		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="200.0" />
		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="100.0" />
		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1000.0" />
	</module>
<!-- ====================================================================== -->
	<module name="travelTimeCalculator" >
		<!-- Transport modes that will be respected by the travel time collector. 'car' is default, which includes also busses from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<param name="calculateLinkToLinkTravelTimes" value="false" />
		<param name="calculateLinkTravelTimes" value="true" />
		<!-- If true, link travel times from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The lenght (in sec) of the time period that is splited into time bins; an additional time bin is created to aggregate all travel times collected after maxTime -->
		<param name="maxTime" value="108000" />
		<!-- If true, link travel times are measured and calculated separately for each mode in analyzedModes. Other modes are ignored. If true, filterModes has no effect. -->
		<param name="separateModes" value="false" />
		<!-- How to deal with congested time bins that have no link entry events. `optimistic' assumes free speed (too optimistic); 'experimental_LastMile' is experimental and probably too pessimistic. -->
		<param name="travelTimeAggregator" value="optimistic" />
		<!-- The size of the time bin (in sec) into which the link travel times are aggregated for the router -->
		<param name="travelTimeBinSize" value="900" />
		<!-- possible values: TravelTimeCalculatorArray TravelTimeCalculatorHashMap  -->
		<param name="travelTimeCalculator" value="TravelTimeCalculatorArray" />
		<!-- How to deal with link entry times at different positions during the time bin. Currently supported: average, linearinterpolation -->
		<param name="travelTimeGetter" value="average" />
	</module>
<!-- ====================================================================== -->
	<module name="vehicles" >
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="vspExperimental" >
		<!-- (do not use except of you have to) There was a problem with pt interaction scoring.  Some people solved it by overwriting the parameters of the pt interaction activity type.  Doing this now throws an Exception.  If you still insist on doing this, set the following to true. -->
		<param name="isAbleToOverwritePtInteractionParams" value="false" />
		<param name="isGeneratingBoardingDeniedEvent" value="false" />
		<!-- if an approximation of the opportunity cost of time is included into the radius calculation for location choice.`true' will be faster, but it is an approximation.  Default is `true'; `false' is available for backwards compatibility. -->
		<param name="isUsingOpportunityCostOfTimeForLocationChoice" value="true" />
		<param name="logitScaleParamForPlansRemoval" value="1.0" />
		<!-- Options: | ignore | info | warn | abort | .  When violating VSP defaults, this results in nothing, logfile infos, logfile warnings, or aborts.  Members of VSP should use `abort' or talk to kai. -->
		<param name="vspDefaultsCheckingLevel" value="ignore" />
		<!-- if true then writes output_events in output directory.  default is `false'. Will only work when lastIteration is multiple of events writing interval -->
		<param name="writingOutputEvents" value="true" />
	</module>
<!-- ====================================================================== -->

</config>

2018-06-01 12:24:53,374  INFO ControlerUtils:63 Complete config dump done.
2018-06-01 12:24:53,374  INFO ControlerUtils:64 Checking consistency of config...
2018-06-01 12:24:53,375  INFO VspConfigConsistencyCheckerImpl:58 NOT running vsp config consistency check because vsp defaults checking level is set to IGNORE
2018-06-01 12:24:53,375  INFO ControlerUtils:66 Checking consistency of config done.
2018-06-01 12:24:53,375 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2018-06-01 12:24:53,376 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2018-06-01 12:24:53,376  INFO Counter:70 [PersonPrepareForSim] handled person # 1
2018-06-01 12:24:53,379  INFO Counter:76 [PersonPrepareForSim] handled person # 1
2018-06-01 12:24:53,382  INFO Counter:70  vehicles # 1
2018-06-01 12:24:53,382  INFO AbstractController:121 ###################################################
2018-06-01 12:24:53,382  INFO AbstractController:122 ### ITERATION 0 BEGINS
2018-06-01 12:24:53,383  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2018-06-01 12:24:53,383  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2018-06-01 12:24:53,383  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2018-06-01 12:24:53,383  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2018-06-01 12:24:53,383  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2018-06-01 12:24:53,384  INFO ControlerListenerManagerImpl:148 [it.0] all ControlerIterationStartsListeners called.
2018-06-01 12:24:53,384  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-06-01 12:24:53,384  INFO EventsManagerImpl:170 resetting Event-Handlers
2018-06-01 12:24:53,384  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2018-06-01 12:24:53,385  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2018-06-01 12:24:53,385  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2018-06-01 12:24:53,385  INFO EventsManagerImpl:177   org.matsim.core.events.algorithms.Vehicle2DriverEventHandler
2018-06-01 12:24:53,385  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2018-06-01 12:24:53,385  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2018-06-01 12:24:53,386  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2018-06-01 12:24:53,386  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2018-06-01 12:24:53,386  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2018-06-01 12:24:53,386  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2018-06-01 12:24:53,387  INFO ControlerListenerManagerImpl:232 [it.0] all ControlerBeforeMobsimListeners called.
2018-06-01 12:24:53,393  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2018-06-01 12:24:53,393  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.controler.MobsimListenerTest$SingletonCountingMobsimListener
2018-06-01 12:24:53,394  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2018-06-01 12:24:53,394  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2018-06-01 12:24:53,394  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2018-06-01 12:24:53,395  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2018-06-01 12:24:53,395  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2018-06-01 12:24:53,395  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2018-06-01 12:24:53,396  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2018-06-01 12:24:53,396  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2018-06-01 12:24:53,397  INFO Injector:81 === printInjector start ===
2018-06-01 12:24:53,398  INFO Injector:85 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2018-06-01 12:24:53,398  INFO Injector:86   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2018-06-01 12:24:53,398  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2018-06-01 12:24:53,398  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:53,399  INFO Injector:94   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler, annotation=[none]], source=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25), scope=eager singleton, provider=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]]}
2018-06-01 12:24:53,399  INFO Injector:96 
2018-06-01 12:24:53,399  INFO Injector:85 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2018-06-01 12:24:53,399  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@12cb9eda}[Scopes.SINGLETON]
2018-06-01 12:24:53,400  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2018-06-01 12:24:53,400  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:53,400  INFO Injector:92   --> target: Key[type=org.matsim.core.mobsim.qsim.agents.DefaultAgentFactory, annotation=[none]]
2018-06-01 12:24:53,400  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], source=org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30), scope=eager singleton, target=Key[type=org.matsim.core.mobsim.qsim.agents.DefaultAgentFactory, annotation=[none]]}
2018-06-01 12:24:53,400  INFO Injector:96 
2018-06-01 12:24:53,401  INFO Injector:85 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2018-06-01 12:24:53,401  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@7c9e149[Scopes.SINGLETON]}
2018-06-01 12:24:53,401  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2018-06-01 12:24:53,401  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:53,402  INFO Injector:92   --> target: Key[type=org.matsim.core.mobsim.qsim.QSim, annotation=[none]]
2018-06-01 12:24:53,402  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], source=org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.mobsim.qsim.QSim, annotation=[none]]}
2018-06-01 12:24:53,402  INFO Injector:96 
2018-06-01 12:24:53,402  INFO Injector:85 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2018-06-01 12:24:53,403  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1f93cdc0[Scopes.SINGLETON]
2018-06-01 12:24:53,403  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2018-06-01 12:24:53,403  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:53,403  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.jdeqsim.MessageQueue, annotation=[none]], source=org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24), scope=eager singleton}
2018-06-01 12:24:53,404  INFO Injector:96 
2018-06-01 12:24:53,404  INFO Injector:85 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2018-06-01 12:24:53,404  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@7def2e4f[Scopes.SINGLETON]
2018-06-01 12:24:53,404  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2018-06-01 12:24:53,405  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:53,405  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler, annotation=[none]], source=org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25), scope=eager singleton}
2018-06-01 12:24:53,405  INFO Injector:96 
2018-06-01 12:24:53,405  INFO Injector:85 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2018-06-01 12:24:53,405  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@23b456ac[Scopes.SINGLETON]
2018-06-01 12:24:53,406  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2018-06-01 12:24:53,406  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:53,406  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine, annotation=[none]], source=org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26), scope=eager singleton}
2018-06-01 12:24:53,406  INFO Injector:96 
2018-06-01 12:24:53,407  INFO Injector:85 org.matsim.core.mobsim.qsim.ActivityEngine 
2018-06-01 12:24:53,407  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@497c267a[Scopes.SINGLETON]
2018-06-01 12:24:53,407  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2018-06-01 12:24:53,407  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:53,408  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.ActivityEngine, annotation=[none]], source=org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23), scope=eager singleton}
2018-06-01 12:24:53,408  INFO Injector:96 
2018-06-01 12:24:53,408  INFO Injector:85 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2018-06-01 12:24:53,408  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@200eaca[Scopes.SINGLETON]
2018-06-01 12:24:53,409  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2018-06-01 12:24:53,409  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:53,409  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine, annotation=[none]], source=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24), scope=eager singleton}
2018-06-01 12:24:53,409  INFO Injector:96 
2018-06-01 12:24:53,410  INFO Injector:85 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2018-06-01 12:24:53,410  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@3e095ba6[Scopes.SINGLETON]
2018-06-01 12:24:53,410  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2018-06-01 12:24:53,410  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:53,410  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.DefaultTeleportationEngine, annotation=[none]], source=org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21), scope=eager singleton}
2018-06-01 12:24:53,411  INFO Injector:96 
2018-06-01 12:24:53,411  INFO Injector:85 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2018-06-01 12:24:53,411  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4a084cf0[Scopes.SINGLETON]
2018-06-01 12:24:53,411  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2018-06-01 12:24:53,412  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:53,412  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.agents.PopulationAgentSource, annotation=[none]], source=org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26), scope=eager singleton}
2018-06-01 12:24:53,412  INFO Injector:96 
2018-06-01 12:24:53,412  INFO Injector:85 org.matsim.core.mobsim.qsim.QSim 
2018-06-01 12:24:53,413  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@7c9e149[Scopes.SINGLETON]
2018-06-01 12:24:53,413  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2018-06-01 12:24:53,413  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:53,413  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.QSim, annotation=[none]], source=org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64), scope=eager singleton}
2018-06-01 12:24:53,414  INFO Injector:96 
2018-06-01 12:24:53,414  INFO Injector:99 === printInjector end ===
2018-06-01 12:24:53,414  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2018-06-01 12:24:53,414  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2018-06-01 12:24:53,415  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2018-06-01 12:24:53,415  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2018-06-01 12:24:53,416  INFO QNetsimEngine:507 Assigned 15 nodes and 23 links to QSimEngineRunner #0
2018-06-01 12:24:53,416  INFO EventsManagerImpl:134  event # 1
2018-06-01 12:24:53,416  INFO EventsManagerImpl:134  event # 4
2018-06-01 12:24:53,416  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 06:00:00 : #links=0 #nodes=1
2018-06-01 12:24:53,418  INFO QSim:506 SIMULATION (NEW QSim) AT 06:00:00 : #Veh=1 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2018-06-01 12:24:53,418  INFO Gbl:54 used RAM: 208822240B = 203927kB = 199MB  free: 148742176B = 141MB  total: 357564416B = 341MB
2018-06-01 12:24:53,538  INFO EventsManagerImpl:134  event # 16
2018-06-01 12:24:53,711  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 07:00:00 : #links=0 #nodes=0
2018-06-01 12:24:53,711  INFO QSim:506 SIMULATION (NEW QSim) AT 07:00:00 : #Veh=1 lost=0 simT=3600.0s realT=0s; (s/r): Infinity
2018-06-01 12:24:53,711  INFO Gbl:54 used RAM: 208822240B = 203927kB = 199MB  free: 148742176B = 141MB  total: 357564416B = 341MB
2018-06-01 12:24:54,003  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 08:00:00 : #links=0 #nodes=0
2018-06-01 12:24:54,004  INFO QSim:506 SIMULATION (NEW QSim) AT 08:00:00 : #Veh=1 lost=0 simT=7200.0s realT=0s; (s/r): Infinity
2018-06-01 12:24:54,004  INFO Gbl:54 used RAM: 213088728B = 208094kB = 203MB  free: 144475688B = 137MB  total: 357564416B = 341MB
2018-06-01 12:24:54,281  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 09:00:00 : #links=0 #nodes=0
2018-06-01 12:24:54,281  INFO QSim:506 SIMULATION (NEW QSim) AT 09:00:00 : #Veh=1 lost=0 simT=10800.0s realT=0s; (s/r): Infinity
2018-06-01 12:24:54,281  INFO Gbl:54 used RAM: 213088728B = 208094kB = 203MB  free: 144475688B = 137MB  total: 357564416B = 341MB
2018-06-01 12:24:54,580  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 10:00:00 : #links=1 #nodes=0
2018-06-01 12:24:54,580  INFO QSim:506 SIMULATION (NEW QSim) AT 10:00:00 : #Veh=1 lost=0 simT=14400.0s realT=1s; (s/r): 14400.0
2018-06-01 12:24:54,580  INFO Gbl:54 used RAM: 214581232B = 209551kB = 204MB  free: 142983184B = 136MB  total: 357564416B = 341MB
2018-06-01 12:24:54,747  INFO AbstractController$8:210 ### ITERATION 0 fires after mobsim event
2018-06-01 12:24:54,747  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.315834684sec
2018-06-01 12:24:54,747  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2018-06-01 12:24:54,748  INFO LegTimesControlerListener:50 [0] average trip (probably: leg) duration is: 1080 seconds = 00:18:00
2018-06-01 12:24:54,748  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2018-06-01 12:24:54,748  INFO ControlerListenerManagerImpl:251 [it.0] all ControlerAfterMobsimListeners called.
2018-06-01 12:24:54,749  INFO AbstractController$4:147 ### ITERATION 0 fires scoring event
2018-06-01 12:24:54,749  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2018-06-01 12:24:54,749  INFO NewScoreAssignerImpl:36 it: 0 msaStart: null
2018-06-01 12:24:54,749  INFO ControlerListenerManagerImpl:194 [it.0] all ControlerScoringListeners called.
2018-06-01 12:24:54,749  INFO AbstractController$5:155 ### ITERATION 0 fires iteration end event
2018-06-01 12:24:54,749  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-06-01 12:24:54,749  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2018-06-01 12:24:54,750  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2018-06-01 12:24:54,750  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2018-06-01 12:24:54,750  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2018-06-01 12:24:54,750  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2018-06-01 12:24:54,750  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2018-06-01 12:24:54,750  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2018-06-01 12:24:54,751  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2018-06-01 12:24:54,751  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2018-06-01 12:24:54,751  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2018-06-01 12:24:54,751  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 52.88175378702982
2018-06-01 12:24:54,751  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 52.88175378702982
2018-06-01 12:24:54,751  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 52.88175378702982
2018-06-01 12:24:54,751  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 52.88175378702982
2018-06-01 12:24:54,752  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2018-06-01 12:24:54,752  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2018-06-01 12:24:54,752  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2018-06-01 12:24:54,752  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 30000.0
2018-06-01 12:24:54,753  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2018-06-01 12:24:54,753  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2018-06-01 12:24:54,753  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2018-06-01 12:24:54,754  INFO LegHistogramListener:72 number of legs:	3	100%
2018-06-01 12:24:54,754  INFO LegHistogramListener:79 number of car legs:	3	100.0%
2018-06-01 12:24:54,755  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2018-06-01 12:24:54,755  INFO ControlerListenerManagerImpl:171 [it.0] all ControlerIterationEndsListeners called.
2018-06-01 12:24:54,755  INFO AbstractController:165 ### ITERATION 0 ENDS
2018-06-01 12:24:54,756  INFO AbstractController:166 ###################################################
2018-06-01 12:24:54,756  INFO AbstractController:121 ###################################################
2018-06-01 12:24:54,756  INFO AbstractController:122 ### ITERATION 1 BEGINS
2018-06-01 12:24:54,756  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2018-06-01 12:24:54,756  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2018-06-01 12:24:54,757  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2018-06-01 12:24:54,757  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2018-06-01 12:24:54,757  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2018-06-01 12:24:54,757  INFO ControlerListenerManagerImpl:148 [it.1] all ControlerIterationStartsListeners called.
2018-06-01 12:24:54,757  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2018-06-01 12:24:54,758 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2018-06-01 12:24:54,758 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2018-06-01 12:24:54,758  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 1 plans handled. Strategy: BestPlanSelector
2018-06-01 12:24:54,758  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 0 plans
2018-06-01 12:24:54,759  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2018-06-01 12:24:54,759  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 0 plans handled. Strategy: RandomPlanSelector_ReRoute
2018-06-01 12:24:54,759  INFO ControlerListenerManagerImpl:213 [it.1] all ControlerReplanningListeners called.
2018-06-01 12:24:54,759  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-06-01 12:24:54,759  INFO EventsManagerImpl:170 resetting Event-Handlers
2018-06-01 12:24:54,759  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2018-06-01 12:24:54,760  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2018-06-01 12:24:54,760  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2018-06-01 12:24:54,760  INFO EventsManagerImpl:177   org.matsim.core.events.algorithms.Vehicle2DriverEventHandler
2018-06-01 12:24:54,760  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2018-06-01 12:24:54,760  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2018-06-01 12:24:54,760  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2018-06-01 12:24:54,760  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2018-06-01 12:24:54,761  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2018-06-01 12:24:54,761  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2018-06-01 12:24:54,761  INFO ControlerListenerManagerImpl:232 [it.1] all ControlerBeforeMobsimListeners called.
2018-06-01 12:24:54,765  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2018-06-01 12:24:54,765  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.controler.MobsimListenerTest$SingletonCountingMobsimListener
2018-06-01 12:24:54,765  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2018-06-01 12:24:54,765  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2018-06-01 12:24:54,766  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2018-06-01 12:24:54,766  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2018-06-01 12:24:54,766  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2018-06-01 12:24:54,766  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2018-06-01 12:24:54,767  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2018-06-01 12:24:54,767  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2018-06-01 12:24:54,768  INFO Injector:81 === printInjector start ===
2018-06-01 12:24:54,768  INFO Injector:85 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2018-06-01 12:24:54,768  INFO Injector:86   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2018-06-01 12:24:54,768  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2018-06-01 12:24:54,769  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:54,769  INFO Injector:94   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler, annotation=[none]], source=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25), scope=eager singleton, provider=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]]}
2018-06-01 12:24:54,769  INFO Injector:96 
2018-06-01 12:24:54,769  INFO Injector:85 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2018-06-01 12:24:54,769  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@6f535d77}[Scopes.SINGLETON]
2018-06-01 12:24:54,769  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2018-06-01 12:24:54,769  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:54,770  INFO Injector:92   --> target: Key[type=org.matsim.core.mobsim.qsim.agents.DefaultAgentFactory, annotation=[none]]
2018-06-01 12:24:54,770  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], source=org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30), scope=eager singleton, target=Key[type=org.matsim.core.mobsim.qsim.agents.DefaultAgentFactory, annotation=[none]]}
2018-06-01 12:24:54,770  INFO Injector:96 
2018-06-01 12:24:54,770  INFO Injector:85 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2018-06-01 12:24:54,770  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@61736817[Scopes.SINGLETON]}
2018-06-01 12:24:54,770  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2018-06-01 12:24:54,771  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,771  INFO Injector:92   --> target: Key[type=org.matsim.core.mobsim.qsim.QSim, annotation=[none]]
2018-06-01 12:24:54,771  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], source=org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.mobsim.qsim.QSim, annotation=[none]]}
2018-06-01 12:24:54,771  INFO Injector:96 
2018-06-01 12:24:54,771  INFO Injector:85 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2018-06-01 12:24:54,771  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@f912cf3[Scopes.SINGLETON]
2018-06-01 12:24:54,771  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2018-06-01 12:24:54,772  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:54,772  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.jdeqsim.MessageQueue, annotation=[none]], source=org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24), scope=eager singleton}
2018-06-01 12:24:54,772  INFO Injector:96 
2018-06-01 12:24:54,772  INFO Injector:85 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2018-06-01 12:24:54,772  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@13acb4[Scopes.SINGLETON]
2018-06-01 12:24:54,772  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2018-06-01 12:24:54,773  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:54,773  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler, annotation=[none]], source=org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25), scope=eager singleton}
2018-06-01 12:24:54,773  INFO Injector:96 
2018-06-01 12:24:54,773  INFO Injector:85 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2018-06-01 12:24:54,773  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@79aab764[Scopes.SINGLETON]
2018-06-01 12:24:54,773  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2018-06-01 12:24:54,773  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:54,774  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine, annotation=[none]], source=org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26), scope=eager singleton}
2018-06-01 12:24:54,774  INFO Injector:96 
2018-06-01 12:24:54,774  INFO Injector:85 org.matsim.core.mobsim.qsim.ActivityEngine 
2018-06-01 12:24:54,774  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6066a3f[Scopes.SINGLETON]
2018-06-01 12:24:54,774  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2018-06-01 12:24:54,774  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:54,775  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.ActivityEngine, annotation=[none]], source=org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23), scope=eager singleton}
2018-06-01 12:24:54,775  INFO Injector:96 
2018-06-01 12:24:54,775  INFO Injector:85 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2018-06-01 12:24:54,775  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@3c6c7782[Scopes.SINGLETON]
2018-06-01 12:24:54,775  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2018-06-01 12:24:54,775  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:54,775  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine, annotation=[none]], source=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24), scope=eager singleton}
2018-06-01 12:24:54,776  INFO Injector:96 
2018-06-01 12:24:54,776  INFO Injector:85 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2018-06-01 12:24:54,776  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@80ca2c3[Scopes.SINGLETON]
2018-06-01 12:24:54,776  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2018-06-01 12:24:54,776  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:54,776  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.DefaultTeleportationEngine, annotation=[none]], source=org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21), scope=eager singleton}
2018-06-01 12:24:54,777  INFO Injector:96 
2018-06-01 12:24:54,777  INFO Injector:85 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2018-06-01 12:24:54,777  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1c537671[Scopes.SINGLETON]
2018-06-01 12:24:54,777  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2018-06-01 12:24:54,777  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:54,777  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.agents.PopulationAgentSource, annotation=[none]], source=org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26), scope=eager singleton}
2018-06-01 12:24:54,777  INFO Injector:96 
2018-06-01 12:24:54,778  INFO Injector:85 org.matsim.core.mobsim.qsim.QSim 
2018-06-01 12:24:54,778  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@61736817[Scopes.SINGLETON]
2018-06-01 12:24:54,778  INFO Injector:87   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2018-06-01 12:24:54,778  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:54,778  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.mobsim.qsim.QSim, annotation=[none]], source=org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64), scope=eager singleton}
2018-06-01 12:24:54,778  INFO Injector:96 
2018-06-01 12:24:54,779  INFO Injector:99 === printInjector end ===
2018-06-01 12:24:54,779  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2018-06-01 12:24:54,779  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2018-06-01 12:24:54,779  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2018-06-01 12:24:54,779  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2018-06-01 12:24:54,780  INFO QNetsimEngine:507 Assigned 15 nodes and 23 links to QSimEngineRunner #0
2018-06-01 12:24:54,780 ERROR AbstractController:198 Mobsim did not complete normally! afterMobsimListeners will be called anyway.
java.lang.RuntimeException: This mobsim listener ran more than once.
	at org.matsim.core.controler.MobsimListenerTest$SingletonCountingMobsimListener.notifyMobsimInitialized(MobsimListenerTest.java:98)
	at org.matsim.core.mobsim.qsim.MobsimListenerManager.fireQueueSimulationInitializedEvent(MobsimListenerManager.java:74)
	at org.matsim.core.mobsim.qsim.QSim.run(QSim.java:222)
	at org.matsim.core.controler.NewControler.runMobSim(NewControler.java:111)
	at org.matsim.core.controler.AbstractController$7.run(AbstractController.java:187)
	at org.matsim.core.controler.AbstractController.iterationStep(AbstractController.java:219)
	at org.matsim.core.controler.AbstractController.mobsim(AbstractController.java:183)
	at org.matsim.core.controler.AbstractController.iteration(AbstractController.java:142)
	at org.matsim.core.controler.AbstractController.doIterations(AbstractController.java:110)
	at org.matsim.core.controler.AbstractController.access$000(AbstractController.java:28)
	at org.matsim.core.controler.AbstractController$1.run(AbstractController.java:80)
	at org.matsim.core.controler.MatsimRuntimeModifications.run(MatsimRuntimeModifications.java:48)
	at org.matsim.core.controler.MatsimRuntimeModifications.run(MatsimRuntimeModifications.java:31)
	at org.matsim.core.controler.AbstractController.run(AbstractController.java:88)
	at org.matsim.core.controler.NewControler.run(NewControler.java:75)
	at org.matsim.core.controler.Controler.run(Controler.java:204)
	at org.matsim.core.controler.MobsimListenerTest.testRunMobsim_listenerSingleton(MobsimListenerTest.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:19)
	at org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:53)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:344)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:269)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:240)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:184)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
2018-06-01 12:24:54,781  INFO AbstractController$8:210 ### ITERATION 1 fires after mobsim event
2018-06-01 12:24:54,781  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2018-06-01 12:24:54,780  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=1.92054E-4sec
2018-06-01 12:24:54,781  INFO LegTimesControlerListener:50 [1] average trip (probably: leg) duration is: 0 seconds = 00:00:00
2018-06-01 12:24:54,782  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2018-06-01 12:24:54,782  INFO ControlerListenerManagerImpl:251 [it.1] all ControlerAfterMobsimListeners called.
2018-06-01 12:24:54,782 ERROR MatsimRuntimeModifications:54 Getting uncaught Exception in Thread main
java.lang.RuntimeException: This mobsim listener ran more than once.
	at org.matsim.core.controler.MobsimListenerTest$SingletonCountingMobsimListener.notifyMobsimInitialized(MobsimListenerTest.java:98)
	at org.matsim.core.mobsim.qsim.MobsimListenerManager.fireQueueSimulationInitializedEvent(MobsimListenerManager.java:74)
	at org.matsim.core.mobsim.qsim.QSim.run(QSim.java:222)
	at org.matsim.core.controler.NewControler.runMobSim(NewControler.java:111)
	at org.matsim.core.controler.AbstractController$7.run(AbstractController.java:187)
	at org.matsim.core.controler.AbstractController.iterationStep(AbstractController.java:219)
	at org.matsim.core.controler.AbstractController.mobsim(AbstractController.java:183)
	at org.matsim.core.controler.AbstractController.iteration(AbstractController.java:142)
	at org.matsim.core.controler.AbstractController.doIterations(AbstractController.java:110)
	at org.matsim.core.controler.AbstractController.access$000(AbstractController.java:28)
	at org.matsim.core.controler.AbstractController$1.run(AbstractController.java:80)
	at org.matsim.core.controler.MatsimRuntimeModifications.run(MatsimRuntimeModifications.java:48)
	at org.matsim.core.controler.MatsimRuntimeModifications.run(MatsimRuntimeModifications.java:31)
	at org.matsim.core.controler.AbstractController.run(AbstractController.java:88)
	at org.matsim.core.controler.NewControler.run(NewControler.java:75)
	at org.matsim.core.controler.Controler.run(Controler.java:204)
	at org.matsim.core.controler.MobsimListenerTest.testRunMobsim_listenerSingleton(MobsimListenerTest.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:19)
	at org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:53)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:344)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:269)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:240)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:184)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
2018-06-01 12:24:54,782  INFO MatsimRuntimeModifications:58 S H U T D O W N   ---   start shutdown.
2018-06-01 12:24:54,782 ERROR MatsimRuntimeModifications:60 ERROR --- This is an unexpected shutdown!
2018-06-01 12:24:54,782 ERROR MatsimRuntimeModifications:63 Shutdown possibly caused by the following Exception:
java.lang.RuntimeException: This mobsim listener ran more than once.
	at org.matsim.core.controler.MobsimListenerTest$SingletonCountingMobsimListener.notifyMobsimInitialized(MobsimListenerTest.java:98)
	at org.matsim.core.mobsim.qsim.MobsimListenerManager.fireQueueSimulationInitializedEvent(MobsimListenerManager.java:74)
	at org.matsim.core.mobsim.qsim.QSim.run(QSim.java:222)
	at org.matsim.core.controler.NewControler.runMobSim(NewControler.java:111)
	at org.matsim.core.controler.AbstractController$7.run(AbstractController.java:187)
	at org.matsim.core.controler.AbstractController.iterationStep(AbstractController.java:219)
	at org.matsim.core.controler.AbstractController.mobsim(AbstractController.java:183)
	at org.matsim.core.controler.AbstractController.iteration(AbstractController.java:142)
	at org.matsim.core.controler.AbstractController.doIterations(AbstractController.java:110)
	at org.matsim.core.controler.AbstractController.access$000(AbstractController.java:28)
	at org.matsim.core.controler.AbstractController$1.run(AbstractController.java:80)
	at org.matsim.core.controler.MatsimRuntimeModifications.run(MatsimRuntimeModifications.java:48)
	at org.matsim.core.controler.MatsimRuntimeModifications.run(MatsimRuntimeModifications.java:31)
	at org.matsim.core.controler.AbstractController.run(AbstractController.java:88)
	at org.matsim.core.controler.NewControler.run(NewControler.java:75)
	at org.matsim.core.controler.Controler.run(Controler.java:204)
	at org.matsim.core.controler.MobsimListenerTest.testRunMobsim_listenerSingleton(MobsimListenerTest.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:19)
	at org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:53)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:344)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:269)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:240)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:184)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
2018-06-01 12:24:54,783  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-06-01 12:24:54,783  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ModeStatsControlerListener
2018-06-01 12:24:54,783  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ScoreStatsControlerListener
2018-06-01 12:24:54,783  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.TravelDistanceStatsControlerListener
2018-06-01 12:24:54,784  INFO ControlerListenerManagerImpl:129 all ControlerShutdownListeners called.
2018-06-01 12:24:54,784 ERROR MatsimRuntimeModifications:78 ERROR --- MATSim unexpectedly terminated. Please check the output or the logfile with warnings and errors for hints.
2018-06-01 12:24:54,784 ERROR MatsimRuntimeModifications:79 ERROR --- results should not be used for further analysis.
2018-06-01 12:24:54,784  INFO MatsimRuntimeModifications:81 S H U T D O W N   ---   shutdown completed.
2018-06-01 12:24:54,784 ERROR MatsimRuntimeModifications:83 ERROR --- This was an unexpected shutdown! See the log file for a possible reason.
2018-06-01 12:24:54,786  WARN OutputDirectoryHierarchy:186 ###########################################################
2018-06-01 12:24:54,786  WARN OutputDirectoryHierarchy:187 ### THE CONTROLER WILL OVERWRITE FILES IN:
2018-06-01 12:24:54,786  WARN OutputDirectoryHierarchy:188 ### test/output/org/matsim/core/controler/OutputDirectoryHierarchyTest/testOverrideIfDirectoryExists
2018-06-01 12:24:54,787  WARN OutputDirectoryHierarchy:189 ###########################################################
2018-06-01 12:24:54,788  INFO OutputDirectoryHierarchy:197 ###########################################################
2018-06-01 12:24:54,788  INFO OutputDirectoryHierarchy:198 ### THE CONTROLER WILL DELETE THE EXISTING OUTPUT DIRECTORY:
2018-06-01 12:24:54,789  INFO OutputDirectoryHierarchy:199 ### test/output/org/matsim/core/controler/OutputDirectoryHierarchyTest/testDeleteIfDirectoryExists
2018-06-01 12:24:54,789  INFO OutputDirectoryHierarchy:200 ###########################################################
2018-06-01 12:24:54,790  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:54,791  INFO MatsimXmlParser:155 starting to parse xml from url file:/root/workspace/matsim-org/matsim/386581902/examples/target/classes/test/scenarios/equil/config_plans1.xml ...
2018-06-01 12:24:54,793  INFO ConfigReader:102 using config_v2-reader
2018-06-01 12:24:54,793  INFO MatsimXmlParser:307 Using local DTD from classpath:dtd/config_v2.dtd
2018-06-01 12:24:54,794  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/examples/target/classes/test/scenarios/equil/config_plans1.xml]
2018-06-01 12:24:54,904 DEBUG ScenarioLoaderImpl:85 setting {}
2018-06-01 12:24:54,905  INFO ScenarioLoaderImpl:108 loading scenario from base directory: /root/workspace/matsim-org/matsim/386581902/matsim/
2018-06-01 12:24:54,905  INFO ScenarioLoaderImpl:130 loading network from file:/root/workspace/matsim-org/matsim/386581902/examples/target/classes/test/scenarios/equil/network.xml
2018-06-01 12:24:54,905  INFO MatsimXmlParser:155 starting to parse xml from url file:/root/workspace/matsim-org/matsim/386581902/examples/target/classes/test/scenarios/equil/network.xml ...
2018-06-01 12:24:54,907  INFO MatsimNetworkReader:90 using network_v1-reader.
2018-06-01 12:24:54,908  INFO MatsimXmlParser:307 Using local DTD from classpath:dtd/network_v1.dtd
2018-06-01 12:24:54,908  INFO NetworkImpl:167  node # 1
2018-06-01 12:24:54,909  INFO NetworkImpl:167  node # 4
2018-06-01 12:24:54,909  INFO NetworkImpl:163  link # 1
2018-06-01 12:24:54,909  INFO NetworkImpl:163  link # 4
2018-06-01 12:24:54,910  INFO NetworkImpl:163  link # 16
2018-06-01 12:24:54,910  INFO ScenarioLoaderImpl:161 loading facilities from file:/root/workspace/matsim-org/matsim/386581902/examples/target/classes/test/scenarios/equil/facilities.xml
2018-06-01 12:24:54,910  INFO MatsimXmlParser:155 starting to parse xml from url file:/root/workspace/matsim-org/matsim/386581902/examples/target/classes/test/scenarios/equil/facilities.xml ...
2018-06-01 12:24:54,912  INFO MatsimFacilitiesReader:119 using facilities_v1-reader.
2018-06-01 12:24:54,912  INFO MatsimXmlParser:307 Using local DTD from classpath:dtd/facilities_v1.dtd
2018-06-01 12:24:54,914  INFO ScenarioLoaderImpl:179 loaded 23 facilities from file:/root/workspace/matsim-org/matsim/386581902/examples/target/classes/test/scenarios/equil/facilities.xml
2018-06-01 12:24:54,914  INFO ScenarioLoaderImpl:192 no facility-attributes file set in config, not loading any facility attributes
2018-06-01 12:24:54,915  INFO ScenarioLoaderImpl:199 loading population from file:/root/workspace/matsim-org/matsim/386581902/examples/target/classes/test/scenarios/equil/plans1.xml
2018-06-01 12:24:54,915  INFO MatsimXmlParser:155 starting to parse xml from url file:/root/workspace/matsim-org/matsim/386581902/examples/target/classes/test/scenarios/equil/plans1.xml ...
2018-06-01 12:24:54,917  INFO PopulationReader:124 using plans_v4-reader.
2018-06-01 12:24:54,917  INFO MatsimXmlParser:307 Using local DTD from classpath:dtd/plans_v4.dtd
2018-06-01 12:24:54,918  INFO ParallelPopulationReaderMatsimV4:138 Start parallel population reading...
2018-06-01 12:24:54,919  INFO PopulationImpl:112  person # 1
2018-06-01 12:24:54,920  INFO ParallelPopulationReaderMatsimV4:188 Finished parallel population reading...
2018-06-01 12:24:54,920  INFO PopulationUtils:992  person # 1
2018-06-01 12:24:54,920  INFO ScenarioLoaderImpl:235 no person-attributes file set in config, not loading any person attributes
2018-06-01 12:24:54,920  INFO ScenarioLoaderImpl:247 no households file set in config, not loading households
2018-06-01 12:24:54,921  INFO ScenarioLoaderImpl:258 no household-attributes file set in config, not loading any household attributes
2018-06-01 12:24:54,921  INFO ScenarioLoaderImpl:284 no transit schedule file set in config, not loading any transit schedule
2018-06-01 12:24:54,921  INFO ScenarioLoaderImpl:311 no transit vehicles file set in config, not loading any transit vehicles
2018-06-01 12:24:54,922  INFO SimStepParallelEventsManagerImpl:79 number of threads=1
2018-06-01 12:24:54,922  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.trafficmonitoring.TravelTimeCalculator
2018-06-01 12:24:54,922  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkEnterEventHandler
2018-06-01 12:24:54,922  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkEnterEvent
2018-06-01 12:24:54,923  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkLeaveEventHandler
2018-06-01 12:24:54,923  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkLeaveEvent
2018-06-01 12:24:54,923  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-06-01 12:24:54,923  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-06-01 12:24:54,924  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleLeavesTrafficEventHandler
2018-06-01 12:24:54,924  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleLeavesTrafficEvent
2018-06-01 12:24:54,924  INFO EventsManagerImpl:148   org.matsim.core.api.experimental.events.handler.VehicleArrivesAtFacilityEventHandler
2018-06-01 12:24:54,924  INFO EventsManagerImpl:207     > org.matsim.core.api.experimental.events.VehicleArrivesAtFacilityEvent
2018-06-01 12:24:54,925  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleAbortsEventHandler
2018-06-01 12:24:54,925  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleAbortsEvent
2018-06-01 12:24:54,925  INFO EventsManagerImpl:156 
2018-06-01 12:24:54,925  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.trafficmonitoring.TravelTimeCalculator
2018-06-01 12:24:54,925  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkEnterEventHandler
2018-06-01 12:24:54,926  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkEnterEvent
2018-06-01 12:24:54,926  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkLeaveEventHandler
2018-06-01 12:24:54,926  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkLeaveEvent
2018-06-01 12:24:54,926  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-06-01 12:24:54,927  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-06-01 12:24:54,927  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleLeavesTrafficEventHandler
2018-06-01 12:24:54,927  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleLeavesTrafficEvent
2018-06-01 12:24:54,927  INFO EventsManagerImpl:148   org.matsim.core.api.experimental.events.handler.VehicleArrivesAtFacilityEventHandler
2018-06-01 12:24:54,928  INFO EventsManagerImpl:207     > org.matsim.core.api.experimental.events.VehicleArrivesAtFacilityEvent
2018-06-01 12:24:54,928  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleAbortsEventHandler
2018-06-01 12:24:54,928  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleAbortsEvent
2018-06-01 12:24:54,928  INFO EventsManagerImpl:156 
2018-06-01 12:24:54,930  INFO StrategyManager:62 global innovation switch off after iteration: 0
2018-06-01 12:24:54,930  INFO GenericStrategyManager:331 added change request:  iteration=1 newWeight=0.0 strategy=RandomPlanSelector_ReRoute
2018-06-01 12:24:54,930  INFO GenericStrategyManager:363 setting PlanSelectorForRemoval to class org.matsim.core.replanning.selectors.WorstPlanForRemovalSelector
2018-06-01 12:24:54,930  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.scoring.EventsToActivities
2018-06-01 12:24:54,931  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityStartEventHandler
2018-06-01 12:24:54,931  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityStartEvent
2018-06-01 12:24:54,931  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityEndEventHandler
2018-06-01 12:24:54,931  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityEndEvent
2018-06-01 12:24:54,932  INFO EventsManagerImpl:156 
2018-06-01 12:24:54,932  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.scoring.EventsToActivities
2018-06-01 12:24:54,932  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityStartEventHandler
2018-06-01 12:24:54,932  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityStartEvent
2018-06-01 12:24:54,933  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityEndEventHandler
2018-06-01 12:24:54,933  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityEndEvent
2018-06-01 12:24:54,933  INFO EventsManagerImpl:156 
2018-06-01 12:24:54,933  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.scoring.EventsToLegs
2018-06-01 12:24:54,934  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonDepartureEventHandler
2018-06-01 12:24:54,934  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonDepartureEvent
2018-06-01 12:24:54,934  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonArrivalEventHandler
2018-06-01 12:24:54,934  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonArrivalEvent
2018-06-01 12:24:54,935  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkLeaveEventHandler
2018-06-01 12:24:54,935  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkLeaveEvent
2018-06-01 12:24:54,935  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkEnterEventHandler
2018-06-01 12:24:54,935  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkEnterEvent
2018-06-01 12:24:54,936  INFO EventsManagerImpl:148   org.matsim.core.api.experimental.events.handler.TeleportationArrivalEventHandler
2018-06-01 12:24:54,936  INFO EventsManagerImpl:207     > org.matsim.core.api.experimental.events.TeleportationArrivalEvent
2018-06-01 12:24:54,936  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.TransitDriverStartsEventHandler
2018-06-01 12:24:54,936  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.TransitDriverStartsEvent
2018-06-01 12:24:54,937  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonEntersVehicleEventHandler
2018-06-01 12:24:54,937  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonEntersVehicleEvent
2018-06-01 12:24:54,937  INFO EventsManagerImpl:148   org.matsim.core.api.experimental.events.handler.VehicleArrivesAtFacilityEventHandler
2018-06-01 12:24:54,937  INFO EventsManagerImpl:207     > org.matsim.core.api.experimental.events.VehicleArrivesAtFacilityEvent
2018-06-01 12:24:54,938  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-06-01 12:24:54,938  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-06-01 12:24:54,938  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleLeavesTrafficEventHandler
2018-06-01 12:24:54,938  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleLeavesTrafficEvent
2018-06-01 12:24:54,939  INFO EventsManagerImpl:156 
2018-06-01 12:24:54,939  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.scoring.EventsToLegs
2018-06-01 12:24:54,939  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonDepartureEventHandler
2018-06-01 12:24:54,939  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonDepartureEvent
2018-06-01 12:24:54,940  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonArrivalEventHandler
2018-06-01 12:24:54,940  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonArrivalEvent
2018-06-01 12:24:54,940  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkLeaveEventHandler
2018-06-01 12:24:54,940  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkLeaveEvent
2018-06-01 12:24:54,941  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkEnterEventHandler
2018-06-01 12:24:54,941  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkEnterEvent
2018-06-01 12:24:54,941  INFO EventsManagerImpl:148   org.matsim.core.api.experimental.events.handler.TeleportationArrivalEventHandler
2018-06-01 12:24:54,941  INFO EventsManagerImpl:207     > org.matsim.core.api.experimental.events.TeleportationArrivalEvent
2018-06-01 12:24:54,942  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.TransitDriverStartsEventHandler
2018-06-01 12:24:54,942  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.TransitDriverStartsEvent
2018-06-01 12:24:54,942  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonEntersVehicleEventHandler
2018-06-01 12:24:54,942  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonEntersVehicleEvent
2018-06-01 12:24:54,943  INFO EventsManagerImpl:148   org.matsim.core.api.experimental.events.handler.VehicleArrivesAtFacilityEventHandler
2018-06-01 12:24:54,943  INFO EventsManagerImpl:207     > org.matsim.core.api.experimental.events.VehicleArrivesAtFacilityEvent
2018-06-01 12:24:54,943  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-06-01 12:24:54,943  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-06-01 12:24:54,944  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleLeavesTrafficEventHandler
2018-06-01 12:24:54,944  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleLeavesTrafficEvent
2018-06-01 12:24:54,944  INFO EventsManagerImpl:156 
2018-06-01 12:24:54,944  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.scoring.ScoringFunctionsForPopulation
2018-06-01 12:24:54,945  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2018-06-01 12:24:54,945  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2018-06-01 12:24:54,945  INFO EventsManagerImpl:148   org.matsim.core.scoring.EventsToLegs$LegHandler
2018-06-01 12:24:54,945  INFO EventsManagerImpl:148   org.matsim.core.scoring.EventsToActivities$ActivityHandler
2018-06-01 12:24:54,946  INFO EventsManagerImpl:156 
2018-06-01 12:24:54,946  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.scoring.ScoringFunctionsForPopulation
2018-06-01 12:24:54,946  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2018-06-01 12:24:54,946  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2018-06-01 12:24:54,946  INFO EventsManagerImpl:148   org.matsim.core.scoring.EventsToLegs$LegHandler
2018-06-01 12:24:54,947  INFO EventsManagerImpl:148   org.matsim.core.scoring.EventsToActivities$ActivityHandler
2018-06-01 12:24:54,947  INFO EventsManagerImpl:156 
2018-06-01 12:24:54,947  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.Vehicle2DriverEventHandler
2018-06-01 12:24:54,947  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-06-01 12:24:54,948  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-06-01 12:24:54,948  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleLeavesTrafficEventHandler
2018-06-01 12:24:54,948  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleLeavesTrafficEvent
2018-06-01 12:24:54,948  INFO EventsManagerImpl:156 
2018-06-01 12:24:54,949  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.Vehicle2DriverEventHandler
2018-06-01 12:24:54,949  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-06-01 12:24:54,949  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-06-01 12:24:54,949  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleLeavesTrafficEventHandler
2018-06-01 12:24:54,949  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleLeavesTrafficEvent
2018-06-01 12:24:54,950  INFO EventsManagerImpl:156 
2018-06-01 12:24:54,951  INFO CalcLinkStats:151  resetting `count' to zero.  This info is here since we want to check when this is happening during normal simulation runs.  kai, jan'11
2018-06-01 12:24:54,951  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.analysis.VolumesAnalyzer
2018-06-01 12:24:54,951  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkLeaveEventHandler
2018-06-01 12:24:54,952  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkLeaveEvent
2018-06-01 12:24:54,952  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-06-01 12:24:54,952  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-06-01 12:24:54,953  INFO EventsManagerImpl:156 
2018-06-01 12:24:54,953  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.analysis.VolumesAnalyzer
2018-06-01 12:24:54,953  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.LinkLeaveEventHandler
2018-06-01 12:24:54,953  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.LinkLeaveEvent
2018-06-01 12:24:54,954  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.VehicleEntersTrafficEventHandler
2018-06-01 12:24:54,954  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.VehicleEntersTrafficEvent
2018-06-01 12:24:54,954  INFO EventsManagerImpl:156 
2018-06-01 12:24:54,955  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.analysis.LegHistogram
2018-06-01 12:24:54,955  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonDepartureEventHandler
2018-06-01 12:24:54,955  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonDepartureEvent
2018-06-01 12:24:54,955  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonArrivalEventHandler
2018-06-01 12:24:54,955  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonArrivalEvent
2018-06-01 12:24:54,956  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonStuckEventHandler
2018-06-01 12:24:54,956  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonStuckEvent
2018-06-01 12:24:54,956  INFO EventsManagerImpl:156 
2018-06-01 12:24:54,956  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.analysis.LegHistogram
2018-06-01 12:24:54,957  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonDepartureEventHandler
2018-06-01 12:24:54,957  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonDepartureEvent
2018-06-01 12:24:54,957  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonArrivalEventHandler
2018-06-01 12:24:54,957  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonArrivalEvent
2018-06-01 12:24:54,958  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonStuckEventHandler
2018-06-01 12:24:54,958  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonStuckEvent
2018-06-01 12:24:54,958  INFO EventsManagerImpl:156 
2018-06-01 12:24:54,959  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.analysis.CalcLegTimes
2018-06-01 12:24:54,959  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonDepartureEventHandler
2018-06-01 12:24:54,959  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonDepartureEvent
2018-06-01 12:24:54,959  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonArrivalEventHandler
2018-06-01 12:24:54,960  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonArrivalEvent
2018-06-01 12:24:54,960  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityEndEventHandler
2018-06-01 12:24:54,960  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityEndEvent
2018-06-01 12:24:54,960  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityStartEventHandler
2018-06-01 12:24:54,961  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityStartEvent
2018-06-01 12:24:54,961  INFO EventsManagerImpl:156 
2018-06-01 12:24:54,961  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.analysis.CalcLegTimes
2018-06-01 12:24:54,961  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonDepartureEventHandler
2018-06-01 12:24:54,962  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonDepartureEvent
2018-06-01 12:24:54,962  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.PersonArrivalEventHandler
2018-06-01 12:24:54,962  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.PersonArrivalEvent
2018-06-01 12:24:54,962  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityEndEventHandler
2018-06-01 12:24:54,963  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityEndEvent
2018-06-01 12:24:54,963  INFO EventsManagerImpl:148   org.matsim.api.core.v01.events.handler.ActivityStartEventHandler
2018-06-01 12:24:54,963  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.ActivityStartEvent
2018-06-01 12:24:54,963  INFO EventsManagerImpl:156 
2018-06-01 12:24:54,964  INFO AbstractController:52 Used Controler-Class: org.matsim.core.controler.NewControler
2018-06-01 12:24:54,964  INFO Config:535 ConfigConsistencyChecker with runtime type=class org.matsim.core.config.consistency.ConfigConsistencyCheckerImpl was already added; not adding it a second time
2018-06-01 12:24:54,965  INFO Injector:81 === printInjector start ===
2018-06-01 12:24:54,965  INFO Injector:85 org.matsim.core.mobsim.framework.Mobsim 
2018-06-01 12:24:54,965  INFO Injector:86   --> provider: org.matsim.core.controler.ControlerMobsimIntegrationTest$1$1@6697389c
2018-06-01 12:24:54,965  INFO Injector:87   --> source: org.matsim.core.controler.ControlerMobsimIntegrationTest$1.install(ControlerMobsimIntegrationTest.java:56)
2018-06-01 12:24:54,966  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,966  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.mobsim.framework.Mobsim, annotation=[none]], source=org.matsim.core.controler.ControlerMobsimIntegrationTest$1.install(ControlerMobsimIntegrationTest.java:56), scope=Scopes.NO_SCOPE, provider=org.matsim.core.controler.ControlerMobsimIntegrationTest$1$1@6697389c}
2018-06-01 12:24:54,966  INFO Injector:96 
2018-06-01 12:24:54,966  INFO Injector:85 org.matsim.core.scenario.ScenarioLoaderImpl 
2018-06-01 12:24:54,966  INFO Injector:86   --> provider: of(org.matsim.core.scenario.ScenarioLoaderImpl@16454a28)
2018-06-01 12:24:54,966  INFO Injector:87   --> source: org.matsim.core.scenario.ScenarioByConfigModule.install(ScenarioByConfigModule.java:12)
2018-06-01 12:24:54,967  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:54,967  INFO Injector:94   ==full==> InstanceBinding{key=Key[type=org.matsim.core.scenario.ScenarioLoaderImpl, annotation=[none]], source=org.matsim.core.scenario.ScenarioByConfigModule.install(ScenarioByConfigModule.java:12), instance=org.matsim.core.scenario.ScenarioLoaderImpl@16454a28}
2018-06-01 12:24:54,967  INFO Injector:96 
2018-06-01 12:24:54,967  INFO Injector:85 org.matsim.api.core.v01.population.PopulationFactory 
2018-06-01 12:24:54,967  INFO Injector:86   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(ScenarioByInstanceModule.java:47)
2018-06-01 12:24:54,968  INFO Injector:87   --> source: org.matsim.api.core.v01.population.PopulationFactory org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(org.matsim.api.core.v01.population.Population)
2018-06-01 12:24:54,968  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,968  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.population.PopulationFactory, annotation=[none]], source=org.matsim.api.core.v01.population.PopulationFactory org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(org.matsim.api.core.v01.population.Population), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(ScenarioByInstanceModule.java:47)}
2018-06-01 12:24:54,968  INFO Injector:96 
2018-06-01 12:24:54,968  INFO Injector:85 org.matsim.vehicles.Vehicles 
2018-06-01 12:24:54,969  INFO Injector:86   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(ScenarioByInstanceModule.java:61)
2018-06-01 12:24:54,969  INFO Injector:87   --> source: org.matsim.vehicles.Vehicles org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(org.matsim.api.core.v01.Scenario)
2018-06-01 12:24:54,969  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,969  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.vehicles.Vehicles, annotation=[none]], source=org.matsim.vehicles.Vehicles org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(ScenarioByInstanceModule.java:61)}
2018-06-01 12:24:54,969  INFO Injector:96 
2018-06-01 12:24:54,969  INFO Injector:85 org.matsim.facilities.ActivityFacilities 
2018-06-01 12:24:54,970  INFO Injector:86   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(ScenarioByInstanceModule.java:51)
2018-06-01 12:24:54,970  INFO Injector:87   --> source: org.matsim.facilities.ActivityFacilities org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(org.matsim.api.core.v01.Scenario)
2018-06-01 12:24:54,970  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,970  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.facilities.ActivityFacilities, annotation=[none]], source=org.matsim.facilities.ActivityFacilities org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(ScenarioByInstanceModule.java:51)}
2018-06-01 12:24:54,970  INFO Injector:96 
2018-06-01 12:24:54,970  INFO Injector:85 org.matsim.households.Households 
2018-06-01 12:24:54,971  INFO Injector:86   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(ScenarioByInstanceModule.java:56)
2018-06-01 12:24:54,971  INFO Injector:87   --> source: org.matsim.households.Households org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(org.matsim.api.core.v01.Scenario)
2018-06-01 12:24:54,971  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,971  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.households.Households, annotation=[none]], source=org.matsim.households.Households org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(ScenarioByInstanceModule.java:56)}
2018-06-01 12:24:54,971  INFO Injector:96 
2018-06-01 12:24:54,971  INFO Injector:85 org.matsim.lanes.data.Lanes 
2018-06-01 12:24:54,972  INFO Injector:86   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(ScenarioByInstanceModule.java:66)
2018-06-01 12:24:54,972  INFO Injector:87   --> source: org.matsim.lanes.data.Lanes org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(org.matsim.api.core.v01.Scenario)
2018-06-01 12:24:54,972  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,972  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.lanes.data.Lanes, annotation=[none]], source=org.matsim.lanes.data.Lanes org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(ScenarioByInstanceModule.java:66)}
2018-06-01 12:24:54,972  INFO Injector:96 
2018-06-01 12:24:54,972  INFO Injector:85 org.matsim.api.core.v01.network.Network 
2018-06-01 12:24:54,973  INFO Injector:86   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(ScenarioByInstanceModule.java:39)
2018-06-01 12:24:54,973  INFO Injector:87   --> source: org.matsim.api.core.v01.network.Network org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(org.matsim.api.core.v01.Scenario)
2018-06-01 12:24:54,973  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,973  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.network.Network, annotation=[none]], source=org.matsim.api.core.v01.network.Network org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(ScenarioByInstanceModule.java:39)}
2018-06-01 12:24:54,973  INFO Injector:96 
2018-06-01 12:24:54,974  INFO Injector:85 org.matsim.api.core.v01.population.Population 
2018-06-01 12:24:54,974  INFO Injector:86   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(ScenarioByInstanceModule.java:43)
2018-06-01 12:24:54,974  INFO Injector:87   --> source: org.matsim.api.core.v01.population.Population org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(org.matsim.api.core.v01.Scenario)
2018-06-01 12:24:54,974  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,974  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.population.Population, annotation=[none]], source=org.matsim.api.core.v01.population.Population org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(ScenarioByInstanceModule.java:43)}
2018-06-01 12:24:54,974  INFO Injector:96 
2018-06-01 12:24:54,975  INFO Injector:85 org.matsim.api.core.v01.Scenario 
2018-06-01 12:24:54,975  INFO Injector:86   --> provider: @Provides org.matsim.core.scenario.ScenarioByConfigModule.createScenario(ScenarioByConfigModule.java:9)[Scopes.SINGLETON]
2018-06-01 12:24:54,975  INFO Injector:87   --> source: private org.matsim.api.core.v01.Scenario org.matsim.core.scenario.ScenarioByConfigModule.createScenario(org.matsim.core.scenario.ScenarioLoaderImpl)
2018-06-01 12:24:54,975  INFO Injector:89   --> scope: Scopes.SINGLETON
2018-06-01 12:24:54,975  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.Scenario, annotation=[none]], source=private org.matsim.api.core.v01.Scenario org.matsim.core.scenario.ScenarioByConfigModule.createScenario(org.matsim.core.scenario.ScenarioLoaderImpl), scope=Scopes.SINGLETON, provider=@Provides org.matsim.core.scenario.ScenarioByConfigModule.createScenario(ScenarioByConfigModule.java:9)}
2018-06-01 12:24:54,976  INFO Injector:96 
2018-06-01 12:24:54,976  INFO Injector:85 org.matsim.core.controler.ControlerI 
2018-06-01 12:24:54,976  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.ControlerI, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@7df63a2d}[Scopes.SINGLETON]
2018-06-01 12:24:54,976  INFO Injector:87   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:8)
2018-06-01 12:24:54,976  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:54,976  INFO Injector:92   --> target: Key[type=org.matsim.core.controler.NewControler, annotation=[none]]
2018-06-01 12:24:54,977  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.ControlerI, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:8), scope=eager singleton, target=Key[type=org.matsim.core.controler.NewControler, annotation=[none]]}
2018-06-01 12:24:54,977  INFO Injector:96 
2018-06-01 12:24:54,977  INFO Injector:85 org.matsim.core.controler.ControlerListenerManager 
2018-06-01 12:24:54,977  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.ControlerListenerManager, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@6f46764d[Scopes.SINGLETON]}
2018-06-01 12:24:54,977  INFO Injector:87   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:10)
2018-06-01 12:24:54,977  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,978  INFO Injector:92   --> target: Key[type=org.matsim.core.controler.ControlerListenerManagerImpl, annotation=[none]]
2018-06-01 12:24:54,978  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.ControlerListenerManager, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:10), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.ControlerListenerManagerImpl, annotation=[none]]}
2018-06-01 12:24:54,978  INFO Injector:96 
2018-06-01 12:24:54,978  INFO Injector:85 org.matsim.core.controler.PrepareForSim 
2018-06-01 12:24:54,978  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.PrepareForSim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@34eb24e2}
2018-06-01 12:24:54,978  INFO Injector:87   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:11)
2018-06-01 12:24:54,979  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,979  INFO Injector:92   --> target: Key[type=org.matsim.core.controler.PrepareForSimImpl, annotation=[none]]
2018-06-01 12:24:54,979  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.PrepareForSim, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:11), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.PrepareForSimImpl, annotation=[none]]}
2018-06-01 12:24:54,979  INFO Injector:96 
2018-06-01 12:24:54,979  INFO Injector:85 org.matsim.core.controler.TerminationCriterion 
2018-06-01 12:24:54,979  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.TerminationCriterion, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@39b8313d}
2018-06-01 12:24:54,980  INFO Injector:87   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:14)
2018-06-01 12:24:54,980  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,980  INFO Injector:92   --> target: Key[type=org.matsim.core.controler.TerminateAtFixedIterationNumber, annotation=[none]]
2018-06-01 12:24:54,980  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.TerminationCriterion, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:14), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.TerminateAtFixedIterationNumber, annotation=[none]]}
2018-06-01 12:24:54,980  INFO Injector:96 
2018-06-01 12:24:54,980  INFO Injector:85 org.matsim.core.controler.MatsimServices 
2018-06-01 12:24:54,981  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.MatsimServices, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@bab7179}
2018-06-01 12:24:54,981  INFO Injector:87   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:15)
2018-06-01 12:24:54,981  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,981  INFO Injector:92   --> target: Key[type=org.matsim.core.controler.MatsimServicesImpl, annotation=[none]]
2018-06-01 12:24:54,981  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.MatsimServices, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:15), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.MatsimServicesImpl, annotation=[none]]}
2018-06-01 12:24:54,982  INFO Injector:96 
2018-06-01 12:24:54,982  INFO Injector:85 org.matsim.core.controler.corelisteners.PlansScoring 
2018-06-01 12:24:54,982  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansScoring, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4159113f[Scopes.SINGLETON]}
2018-06-01 12:24:54,982  INFO Injector:87   --> source: org.matsim.core.scoring.PlansScoringModule.install(PlansScoringModule.java:11)
2018-06-01 12:24:54,982  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,982  INFO Injector:92   --> target: Key[type=org.matsim.core.scoring.PlansScoringImpl, annotation=[none]]
2018-06-01 12:24:54,983  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.PlansScoring, annotation=[none]], source=org.matsim.core.scoring.PlansScoringModule.install(PlansScoringModule.java:11), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.scoring.PlansScoringImpl, annotation=[none]]}
2018-06-01 12:24:54,983  INFO Injector:96 
2018-06-01 12:24:54,983  INFO Injector:85 org.matsim.core.controler.corelisteners.PlansReplanning 
2018-06-01 12:24:54,983  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansReplanning, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2728e166[Scopes.SINGLETON]}
2018-06-01 12:24:54,983  INFO Injector:87   --> source: org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:38)
2018-06-01 12:24:54,983  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,984  INFO Injector:92   --> target: Key[type=org.matsim.core.controler.corelisteners.PlansReplanningImpl, annotation=[none]]
2018-06-01 12:24:54,984  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.PlansReplanning, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:38), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.PlansReplanningImpl, annotation=[none]]}
2018-06-01 12:24:54,984  INFO Injector:96 
2018-06-01 12:24:54,984  INFO Injector:85 org.matsim.core.controler.corelisteners.PlansDumping 
2018-06-01 12:24:54,984  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansDumping, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@400b61cc[Scopes.SINGLETON]}
2018-06-01 12:24:54,984  INFO Injector:87   --> source: org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:39)
2018-06-01 12:24:54,985  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,985  INFO Injector:92   --> target: Key[type=org.matsim.core.controler.corelisteners.PlansDumpingImpl, annotation=[none]]
2018-06-01 12:24:54,985  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.PlansDumping, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:39), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.PlansDumpingImpl, annotation=[none]]}
2018-06-01 12:24:54,985  INFO Injector:96 
2018-06-01 12:24:54,985  INFO Injector:85 org.matsim.core.controler.corelisteners.EventsHandling 
2018-06-01 12:24:54,986  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.EventsHandling, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@24cc60ef[Scopes.SINGLETON]}
2018-06-01 12:24:54,986  INFO Injector:87   --> source: org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:40)
2018-06-01 12:24:54,986  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,986  INFO Injector:92   --> target: Key[type=org.matsim.core.controler.corelisteners.EventsHandlingImpl, annotation=[none]]
2018-06-01 12:24:54,986  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.EventsHandling, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:40), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.EventsHandlingImpl, annotation=[none]]}
2018-06-01 12:24:54,986  INFO Injector:96 
2018-06-01 12:24:54,987  INFO Injector:85 org.matsim.core.controler.corelisteners.DumpDataAtEnd 
2018-06-01 12:24:54,987  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.DumpDataAtEnd, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2429a26f[Scopes.SINGLETON]}
2018-06-01 12:24:54,987  INFO Injector:87   --> source: org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:41)
2018-06-01 12:24:54,987  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,987  INFO Injector:92   --> target: Key[type=org.matsim.core.controler.corelisteners.DumpDataAtEndImpl, annotation=[none]]
2018-06-01 12:24:54,987  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.DumpDataAtEnd, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:41), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.DumpDataAtEndImpl, annotation=[none]]}
2018-06-01 12:24:54,988  INFO Injector:96 
2018-06-01 12:24:54,988  INFO Injector:85 org.matsim.core.api.experimental.events.EventsManager 
2018-06-01 12:24:54,988  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.api.experimental.events.EventsManager, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1a5d08c5}[Scopes.SINGLETON]
2018-06-01 12:24:54,988  INFO Injector:87   --> source: org.matsim.core.events.EventsManagerModule.install(EventsManagerModule.java:23)
2018-06-01 12:24:54,988  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:54,988  INFO Injector:92   --> target: Key[type=org.matsim.core.events.SimStepParallelEventsManagerImpl, annotation=[none]]
2018-06-01 12:24:54,989  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.api.experimental.events.EventsManager, annotation=[none]], source=org.matsim.core.events.EventsManagerModule.install(EventsManagerModule.java:23), scope=eager singleton, target=Key[type=org.matsim.core.events.SimStepParallelEventsManagerImpl, annotation=[none]]}
2018-06-01 12:24:54,989  INFO Injector:96 
2018-06-01 12:24:54,989  INFO Injector:85 org.matsim.core.router.util.TravelTime @com.google.inject.name.Named(value=car)
2018-06-01 12:24:54,989  INFO Injector:86   --> provider: Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]
2018-06-01 12:24:54,989  INFO Injector:87   --> source: org.matsim.core.trafficmonitoring.TravelTimeCalculatorModule.install(TravelTimeCalculatorModule.java:81)
2018-06-01 12:24:54,989  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,990  INFO Injector:94   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.name.Named(value=car)], source=org.matsim.core.trafficmonitoring.TravelTimeCalculatorModule.install(TravelTimeCalculatorModule.java:81), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]}
2018-06-01 12:24:54,990  INFO Injector:96 
2018-06-01 12:24:54,990  INFO Injector:85 org.matsim.core.router.costcalculators.TravelDisutilityFactory @com.google.inject.name.Named(value=car)
2018-06-01 12:24:54,990  INFO Injector:86   --> provider: of(org.matsim.core.router.costcalculators.RandomizingTimeDistanceTravelDisutilityFactory@7ec00f98)
2018-06-01 12:24:54,990  INFO Injector:87   --> source: org.matsim.core.router.costcalculators.TravelDisutilityModule.install(TravelDisutilityModule.java:34)
2018-06-01 12:24:54,990  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:54,991  INFO Injector:94   ==full==> InstanceBinding{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.name.Named(value=car)], source=org.matsim.core.router.costcalculators.TravelDisutilityModule.install(TravelDisutilityModule.java:34), instance=org.matsim.core.router.costcalculators.RandomizingTimeDistanceTravelDisutilityFactory@7ec00f98}
2018-06-01 12:24:54,991  INFO Injector:96 
2018-06-01 12:24:54,991  INFO Injector:85 org.matsim.core.scoring.ScoringFunctionFactory 
2018-06-01 12:24:54,991  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.scoring.ScoringFunctionFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4f2e6db7}
2018-06-01 12:24:54,991  INFO Injector:87   --> source: org.matsim.core.scoring.functions.CharyparNagelScoringFunctionModule.install(CharyparNagelScoringFunctionModule.java:36)
2018-06-01 12:24:54,991  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,992  INFO Injector:92   --> target: Key[type=org.matsim.core.scoring.functions.CharyparNagelScoringFunctionFactory, annotation=[none]]
2018-06-01 12:24:54,992  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.scoring.ScoringFunctionFactory, annotation=[none]], source=org.matsim.core.scoring.functions.CharyparNagelScoringFunctionModule.install(CharyparNagelScoringFunctionModule.java:36), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.scoring.functions.CharyparNagelScoringFunctionFactory, annotation=[none]]}
2018-06-01 12:24:54,992  INFO Injector:96 
2018-06-01 12:24:54,992  INFO Injector:85 org.matsim.core.scoring.functions.ScoringParametersForPerson 
2018-06-01 12:24:54,992  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.scoring.functions.ScoringParametersForPerson, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@7f05d2bf}
2018-06-01 12:24:54,992  INFO Injector:87   --> source: org.matsim.core.scoring.functions.CharyparNagelScoringFunctionModule.install(CharyparNagelScoringFunctionModule.java:37)
2018-06-01 12:24:54,993  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,993  INFO Injector:92   --> target: Key[type=org.matsim.core.scoring.functions.SubpopulationScoringParameters, annotation=[none]]
2018-06-01 12:24:54,993  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.scoring.functions.ScoringParametersForPerson, annotation=[none]], source=org.matsim.core.scoring.functions.CharyparNagelScoringFunctionModule.install(CharyparNagelScoringFunctionModule.java:37), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.scoring.functions.SubpopulationScoringParameters, annotation=[none]]}
2018-06-01 12:24:54,993  INFO Injector:96 
2018-06-01 12:24:54,993  INFO Injector:85 org.matsim.core.scoring.ExperiencedPlansService 
2018-06-01 12:24:54,994  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.scoring.ExperiencedPlansService, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@16914a63}[Scopes.SINGLETON]
2018-06-01 12:24:54,994  INFO Injector:87   --> source: org.matsim.core.scoring.ExperiencedPlansModule.install(ExperiencedPlansModule.java:10)
2018-06-01 12:24:54,994  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:54,994  INFO Injector:92   --> target: Key[type=org.matsim.core.scoring.ExperiencedPlansServiceImpl, annotation=[none]]
2018-06-01 12:24:54,994  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.scoring.ExperiencedPlansService, annotation=[none]], source=org.matsim.core.scoring.ExperiencedPlansModule.install(ExperiencedPlansModule.java:10), scope=eager singleton, target=Key[type=org.matsim.core.scoring.ExperiencedPlansServiceImpl, annotation=[none]]}
2018-06-01 12:24:54,994  INFO Injector:96 
2018-06-01 12:24:54,995  INFO Injector:85 org.matsim.core.router.MainModeIdentifier 
2018-06-01 12:24:54,995  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.MainModeIdentifier, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@6ad259d}
2018-06-01 12:24:54,995  INFO Injector:87   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:44)
2018-06-01 12:24:54,995  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,995  INFO Injector:92   --> target: Key[type=org.matsim.core.router.MainModeIdentifierImpl, annotation=[none]]
2018-06-01 12:24:54,995  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.MainModeIdentifier, annotation=[none]], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:44), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.MainModeIdentifierImpl, annotation=[none]]}
2018-06-01 12:24:54,996  INFO Injector:96 
2018-06-01 12:24:54,996  INFO Injector:85 org.matsim.core.router.util.LeastCostPathCalculatorFactory 
2018-06-01 12:24:54,996  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.util.LeastCostPathCalculatorFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@35595f1[Scopes.SINGLETON]}
2018-06-01 12:24:54,996  INFO Injector:87   --> source: org.matsim.core.router.LeastCostPathCalculatorModule.install(LeastCostPathCalculatorModule.java:40)
2018-06-01 12:24:54,996  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,996  INFO Injector:92   --> target: Key[type=org.matsim.core.router.DijkstraFactory, annotation=[none]]
2018-06-01 12:24:54,997  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.util.LeastCostPathCalculatorFactory, annotation=[none]], source=org.matsim.core.router.LeastCostPathCalculatorModule.install(LeastCostPathCalculatorModule.java:40), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.DijkstraFactory, annotation=[none]]}
2018-06-01 12:24:54,997  INFO Injector:96 
2018-06-01 12:24:54,997  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=ride)
2018-06-01 12:24:54,997  INFO Injector:86   --> provider: org.matsim.core.router.FreespeedFactorRouting@4970b93d
2018-06-01 12:24:54,997  INFO Injector:87   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:55)
2018-06-01 12:24:54,997  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,998  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=ride)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:55), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.FreespeedFactorRouting@4970b93d}
2018-06-01 12:24:54,998  INFO Injector:96 
2018-06-01 12:24:54,998  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=pt)
2018-06-01 12:24:54,998  INFO Injector:86   --> provider: org.matsim.core.router.FreespeedFactorRouting@2c43da32
2018-06-01 12:24:54,998  INFO Injector:87   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:55)
2018-06-01 12:24:54,998  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:54,999  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=pt)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:55), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.FreespeedFactorRouting@2c43da32}
2018-06-01 12:24:54,999  INFO Injector:96 
2018-06-01 12:24:54,999  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=bike)
2018-06-01 12:24:54,999  INFO Injector:86   --> provider: org.matsim.core.router.BeelineTeleportationRouting@39e16443
2018-06-01 12:24:54,999  INFO Injector:87   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58)
2018-06-01 12:24:54,999  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,000  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=bike)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@39e16443}
2018-06-01 12:24:55,000  INFO Injector:96 
2018-06-01 12:24:55,000  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=walk)
2018-06-01 12:24:55,000  INFO Injector:86   --> provider: org.matsim.core.router.BeelineTeleportationRouting@5c97d5d
2018-06-01 12:24:55,000  INFO Injector:87   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58)
2018-06-01 12:24:55,000  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,001  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=walk)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@5c97d5d}
2018-06-01 12:24:55,001  INFO Injector:96 
2018-06-01 12:24:55,001  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=access_walk)
2018-06-01 12:24:55,001  INFO Injector:86   --> provider: org.matsim.core.router.BeelineTeleportationRouting@49bc9588
2018-06-01 12:24:55,001  INFO Injector:87   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58)
2018-06-01 12:24:55,002  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,002  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=access_walk)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@49bc9588}
2018-06-01 12:24:55,002  INFO Injector:96 
2018-06-01 12:24:55,002  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=egress_walk)
2018-06-01 12:24:55,002  INFO Injector:86   --> provider: org.matsim.core.router.BeelineTeleportationRouting@7b9c54c7
2018-06-01 12:24:55,002  INFO Injector:87   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58)
2018-06-01 12:24:55,002  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,003  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=egress_walk)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@7b9c54c7}
2018-06-01 12:24:55,003  INFO Injector:96 
2018-06-01 12:24:55,003  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=undefined)
2018-06-01 12:24:55,003  INFO Injector:86   --> provider: org.matsim.core.router.BeelineTeleportationRouting@496de48b
2018-06-01 12:24:55,003  INFO Injector:87   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58)
2018-06-01 12:24:55,003  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,004  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=undefined)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@496de48b}
2018-06-01 12:24:55,004  INFO Injector:96 
2018-06-01 12:24:55,004  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=car)
2018-06-01 12:24:55,004  INFO Injector:86   --> provider: org.matsim.core.router.NetworkRoutingProvider@7005b6e
2018-06-01 12:24:55,004  INFO Injector:87   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:66)
2018-06-01 12:24:55,004  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,005  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=car)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:66), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.NetworkRoutingProvider@7005b6e}
2018-06-01 12:24:55,005  INFO Injector:96 
2018-06-01 12:24:55,005  INFO Injector:85 org.matsim.core.replanning.selectors.PlanSelector<org.matsim.api.core.v01.population.Plan, org.matsim.api.core.v01.population.Person> 
2018-06-01 12:24:55,005  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.replanning.selectors.PlanSelector<org.matsim.api.core.v01.population.Plan, org.matsim.api.core.v01.population.Person>, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@ce1c5f3}
2018-06-01 12:24:55,005  INFO Injector:87   --> source: org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:51)
2018-06-01 12:24:55,005  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,005  INFO Injector:92   --> target: Key[type=org.matsim.core.replanning.selectors.WorstPlanForRemovalSelector, annotation=[none]]
2018-06-01 12:24:55,006  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.selectors.PlanSelector<org.matsim.api.core.v01.population.Plan, org.matsim.api.core.v01.population.Person>, annotation=[none]], source=org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:51), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.replanning.selectors.WorstPlanForRemovalSelector, annotation=[none]]}
2018-06-01 12:24:55,006  INFO Injector:96 
2018-06-01 12:24:55,006  INFO Injector:85 org.matsim.core.replanning.PlanStrategy @com.google.inject.name.Named(value=BestScore)
2018-06-01 12:24:55,006  INFO Injector:86   --> provider: Key[type=org.matsim.core.replanning.strategies.SelectBest, annotation=[none]]
2018-06-01 12:24:55,006  INFO Injector:87   --> source: org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:81)
2018-06-01 12:24:55,006  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,007  INFO Injector:94   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=BestScore)], source=org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:81), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.replanning.strategies.SelectBest, annotation=[none]]}
2018-06-01 12:24:55,007  INFO Injector:96 
2018-06-01 12:24:55,007  INFO Injector:85 org.matsim.core.replanning.PlanStrategy @com.google.inject.name.Named(value=ReRoute)
2018-06-01 12:24:55,007  INFO Injector:86   --> provider: Key[type=org.matsim.core.replanning.strategies.ReRoute, annotation=[none]]
2018-06-01 12:24:55,007  INFO Injector:87   --> source: org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:100)
2018-06-01 12:24:55,007  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,008  INFO Injector:94   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=ReRoute)], source=org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:100), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.replanning.strategies.ReRoute, annotation=[none]]}
2018-06-01 12:24:55,008  INFO Injector:96 
2018-06-01 12:24:55,008  INFO Injector:85 org.matsim.core.replanning.ReplanningContext 
2018-06-01 12:24:55,008  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.replanning.ReplanningContext, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@3d731475[Scopes.SINGLETON]}[Scopes.SINGLETON]
2018-06-01 12:24:55,008  INFO Injector:87   --> source: org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:52)
2018-06-01 12:24:55,008  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:55,008  INFO Injector:92   --> target: Key[type=org.matsim.core.replanning.ReplanningContextImpl, annotation=[none]]
2018-06-01 12:24:55,009  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.ReplanningContext, annotation=[none]], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:52), scope=eager singleton, target=Key[type=org.matsim.core.replanning.ReplanningContextImpl, annotation=[none]]}
2018-06-01 12:24:55,009  INFO Injector:96 
2018-06-01 12:24:55,009  INFO Injector:85 org.matsim.core.replanning.PlanStrategy @com.google.inject.multibindings.Element(setName=,uniqueId=1200, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)
2018-06-01 12:24:55,009  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1200, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], provider=Key[type=org.matsim.core.replanning.strategies.SelectBest, annotation=[none]]}
2018-06-01 12:24:55,009  INFO Injector:87   --> source: org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:85)
2018-06-01 12:24:55,009  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,010  INFO Injector:92   --> target: Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=BestScore)]
2018-06-01 12:24:55,010  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1200, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:85), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=BestScore)]}
2018-06-01 12:24:55,010  INFO Injector:96 
2018-06-01 12:24:55,010  INFO Injector:85 org.matsim.core.replanning.PlanStrategy @com.google.inject.multibindings.Element(setName=,uniqueId=1202, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)
2018-06-01 12:24:55,010  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1202, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], provider=Key[type=org.matsim.core.replanning.strategies.ReRoute, annotation=[none]]}
2018-06-01 12:24:55,010  INFO Injector:87   --> source: org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:85)
2018-06-01 12:24:55,011  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,011  INFO Injector:92   --> target: Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=ReRoute)]
2018-06-01 12:24:55,011  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1202, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:85), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=ReRoute)]}
2018-06-01 12:24:55,011  INFO Injector:96 
2018-06-01 12:24:55,011  INFO Injector:85 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=1204, type=MULTIBINDER, keyType=)
2018-06-01 12:24:55,011  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1204, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@5a880dbe[Scopes.SINGLETON]}
2018-06-01 12:24:55,012  INFO Injector:87   --> source: org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:47)
2018-06-01 12:24:55,012  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,012  INFO Injector:92   --> target: Key[type=org.matsim.analysis.LinkStatsControlerListener, annotation=[none]]
2018-06-01 12:24:55,012  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1204, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:47), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.LinkStatsControlerListener, annotation=[none]]}
2018-06-01 12:24:55,012  INFO Injector:96 
2018-06-01 12:24:55,012  INFO Injector:85 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=1205, type=MULTIBINDER, keyType=)
2018-06-01 12:24:55,013  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1205, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4bc76331}
2018-06-01 12:24:55,013  INFO Injector:87   --> source: org.matsim.analysis.LegHistogramModule.install(LegHistogramModule.java:31)
2018-06-01 12:24:55,013  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,013  INFO Injector:92   --> target: Key[type=org.matsim.analysis.LegHistogramListener, annotation=[none]]
2018-06-01 12:24:55,013  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1205, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.LegHistogramModule.install(LegHistogramModule.java:31), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.LegHistogramListener, annotation=[none]]}
2018-06-01 12:24:55,013  INFO Injector:96 
2018-06-01 12:24:55,014  INFO Injector:85 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=1206, type=MULTIBINDER, keyType=)
2018-06-01 12:24:55,014  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1206, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@7b3fd68e}
2018-06-01 12:24:55,014  INFO Injector:87   --> source: org.matsim.analysis.LegTimesModule.install(LegTimesModule.java:32)
2018-06-01 12:24:55,014  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,014  INFO Injector:92   --> target: Key[type=org.matsim.analysis.LegTimesControlerListener, annotation=[none]]
2018-06-01 12:24:55,014  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1206, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.LegTimesModule.install(LegTimesModule.java:32), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.LegTimesControlerListener, annotation=[none]]}
2018-06-01 12:24:55,014  INFO Injector:96 
2018-06-01 12:24:55,015  INFO Injector:85 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=1207, type=MULTIBINDER, keyType=)
2018-06-01 12:24:55,015  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1207, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2f9b33f1}
2018-06-01 12:24:55,015  INFO Injector:87   --> source: org.matsim.analysis.TravelDistanceStatsModule.install(TravelDistanceStatsModule.java:11)
2018-06-01 12:24:55,015  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,015  INFO Injector:92   --> target: Key[type=org.matsim.analysis.TravelDistanceStatsControlerListener, annotation=[none]]
2018-06-01 12:24:55,015  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1207, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.TravelDistanceStatsModule.install(TravelDistanceStatsModule.java:11), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.TravelDistanceStatsControlerListener, annotation=[none]]}
2018-06-01 12:24:55,015  INFO Injector:96 
2018-06-01 12:24:55,015  INFO Injector:85 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=1208, type=MULTIBINDER, keyType=)
2018-06-01 12:24:55,016  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1208, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1b4695a[Scopes.SINGLETON]}
2018-06-01 12:24:55,016  INFO Injector:87   --> source: org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:32)
2018-06-01 12:24:55,016  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,016  INFO Injector:92   --> target: Key[type=org.matsim.analysis.ScoreStatsControlerListener, annotation=[none]]
2018-06-01 12:24:55,016  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1208, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:32), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.ScoreStatsControlerListener, annotation=[none]]}
2018-06-01 12:24:55,016  INFO Injector:96 
2018-06-01 12:24:55,016  INFO Injector:85 org.matsim.analysis.ScoreStats 
2018-06-01 12:24:55,017  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.analysis.ScoreStats, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1b4695a[Scopes.SINGLETON]}
2018-06-01 12:24:55,017  INFO Injector:87   --> source: org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:33)
2018-06-01 12:24:55,017  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,017  INFO Injector:92   --> target: Key[type=org.matsim.analysis.ScoreStatsControlerListener, annotation=[none]]
2018-06-01 12:24:55,017  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.analysis.ScoreStats, annotation=[none]], source=org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:33), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.ScoreStatsControlerListener, annotation=[none]]}
2018-06-01 12:24:55,017  INFO Injector:96 
2018-06-01 12:24:55,017  INFO Injector:85 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=1209, type=MULTIBINDER, keyType=)
2018-06-01 12:24:55,017  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1209, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@30e2c9dc[Scopes.SINGLETON]}
2018-06-01 12:24:55,018  INFO Injector:87   --> source: org.matsim.analysis.ModeStatsModule.install(ModeStatsModule.java:32)
2018-06-01 12:24:55,018  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,018  INFO Injector:92   --> target: Key[type=org.matsim.analysis.ModeStatsControlerListener, annotation=[none]]
2018-06-01 12:24:55,018  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1209, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.ModeStatsModule.install(ModeStatsModule.java:32), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.ModeStatsControlerListener, annotation=[none]]}
2018-06-01 12:24:55,018  INFO Injector:96 
2018-06-01 12:24:55,018  INFO Injector:85 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=1210, type=MULTIBINDER, keyType=)
2018-06-01 12:24:55,018  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1210, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@3531c23a}
2018-06-01 12:24:55,018  INFO Injector:87   --> source: org.matsim.counts.CountsModule.install(CountsModule.java:42)
2018-06-01 12:24:55,019  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,019  INFO Injector:92   --> target: Key[type=org.matsim.counts.CountsControlerListener, annotation=[none]]
2018-06-01 12:24:55,019  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1210, type=MULTIBINDER, keyType=)], source=org.matsim.counts.CountsModule.install(CountsModule.java:42), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.counts.CountsControlerListener, annotation=[none]]}
2018-06-01 12:24:55,019  INFO Injector:96 
2018-06-01 12:24:55,019  INFO Injector:85 org.matsim.counts.Counts<org.matsim.api.core.v01.network.Link> 
2018-06-01 12:24:55,019  INFO Injector:86   --> provider: @Provides org.matsim.counts.CountsModule.provideLinkCounts(CountsModule.java:63)[Scopes.SINGLETON]
2018-06-01 12:24:55,019  INFO Injector:87   --> source: org.matsim.counts.Counts org.matsim.counts.CountsModule.provideLinkCounts(org.matsim.api.core.v01.Scenario,org.matsim.core.config.groups.CountsConfigGroup)
2018-06-01 12:24:55,020  INFO Injector:89   --> scope: Scopes.SINGLETON
2018-06-01 12:24:55,020  INFO Injector:94   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.counts.Counts<org.matsim.api.core.v01.network.Link>, annotation=[none]], source=org.matsim.counts.Counts org.matsim.counts.CountsModule.provideLinkCounts(org.matsim.api.core.v01.Scenario,org.matsim.core.config.groups.CountsConfigGroup), scope=Scopes.SINGLETON, provider=@Provides org.matsim.counts.CountsModule.provideLinkCounts(CountsModule.java:63)}
2018-06-01 12:24:55,020  INFO Injector:96 
2018-06-01 12:24:55,020  INFO Injector:85 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=1211, type=MULTIBINDER, keyType=)
2018-06-01 12:24:55,020  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1211, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1793ed9d}
2018-06-01 12:24:55,020  INFO Injector:87   --> source: org.matsim.core.population.VspPlansCleanerModule.install(VspPlansCleanerModule.java:34)
2018-06-01 12:24:55,020  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,020  INFO Injector:92   --> target: Key[type=org.matsim.core.population.VspPlansCleaner, annotation=[none]]
2018-06-01 12:24:55,021  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1211, type=MULTIBINDER, keyType=)], source=org.matsim.core.population.VspPlansCleanerModule.install(VspPlansCleanerModule.java:34), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.population.VspPlansCleaner, annotation=[none]]}
2018-06-01 12:24:55,021  INFO Injector:96 
2018-06-01 12:24:55,021  INFO Injector:85 org.matsim.vis.snapshotwriters.SnapshotWriter @com.google.inject.multibindings.Element(setName=,uniqueId=1212, type=MULTIBINDER, keyType=)
2018-06-01 12:24:55,021  INFO Injector:86   --> provider: Key[type=org.matsim.vis.snapshotwriters.TransimsSnapshotWriterFactory, annotation=[none]]
2018-06-01 12:24:55,021  INFO Injector:87   --> source: org.matsim.vis.snapshotwriters.SnapshotWritersModule.install(SnapshotWritersModule.java:42)
2018-06-01 12:24:55,021  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,021  INFO Injector:94   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.vis.snapshotwriters.SnapshotWriter, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1212, type=MULTIBINDER, keyType=)], source=org.matsim.vis.snapshotwriters.SnapshotWritersModule.install(SnapshotWritersModule.java:42), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.vis.snapshotwriters.TransimsSnapshotWriterFactory, annotation=[none]]}
2018-06-01 12:24:55,021  INFO Injector:96 
2018-06-01 12:24:55,022  INFO Injector:85 org.matsim.core.mobsim.framework.listeners.MobsimListener @com.google.inject.multibindings.Element(setName=,uniqueId=1213, type=MULTIBINDER, keyType=)
2018-06-01 12:24:55,022  INFO Injector:86   --> provider: Key[type=org.matsim.vis.snapshotwriters.SnapshotWritersModule$SnapshotWriterManagerProvider, annotation=[none]]
2018-06-01 12:24:55,022  INFO Injector:87   --> source: org.matsim.vis.snapshotwriters.SnapshotWritersModule.install(SnapshotWritersModule.java:46)
2018-06-01 12:24:55,022  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,022  INFO Injector:94   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.mobsim.framework.listeners.MobsimListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1213, type=MULTIBINDER, keyType=)], source=org.matsim.vis.snapshotwriters.SnapshotWritersModule.install(SnapshotWritersModule.java:46), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.vis.snapshotwriters.SnapshotWritersModule$SnapshotWriterManagerProvider, annotation=[none]]}
2018-06-01 12:24:55,022  INFO Injector:96 
2018-06-01 12:24:55,022  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=1214, type=MAPBINDER, keyType=java.lang.String)
2018-06-01 12:24:55,022  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1214, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@7b9c54c7}
2018-06-01 12:24:55,023  INFO Injector:87   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:129)
2018-06-01 12:24:55,023  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,023  INFO Injector:92   --> target: Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=egress_walk)]
2018-06-01 12:24:55,023  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1214, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:129), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=egress_walk)]}
2018-06-01 12:24:55,023  INFO Injector:96 
2018-06-01 12:24:55,023  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=1216, type=MAPBINDER, keyType=java.lang.String)
2018-06-01 12:24:55,023  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1216, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.FreespeedFactorRouting@2c43da32}
2018-06-01 12:24:55,024  INFO Injector:87   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:129)
2018-06-01 12:24:55,024  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,024  INFO Injector:92   --> target: Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=pt)]
2018-06-01 12:24:55,024  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1216, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:129), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=pt)]}
2018-06-01 12:24:55,024  INFO Injector:96 
2018-06-01 12:24:55,024  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=1218, type=MAPBINDER, keyType=java.lang.String)
2018-06-01 12:24:55,024  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1218, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.NetworkRoutingProvider@7005b6e}
2018-06-01 12:24:55,024  INFO Injector:87   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:129)
2018-06-01 12:24:55,025  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,025  INFO Injector:92   --> target: Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=car)]
2018-06-01 12:24:55,025  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1218, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:129), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=car)]}
2018-06-01 12:24:55,025  INFO Injector:96 
2018-06-01 12:24:55,025  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=1220, type=MAPBINDER, keyType=java.lang.String)
2018-06-01 12:24:55,025  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1220, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@49bc9588}
2018-06-01 12:24:55,025  INFO Injector:87   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:129)
2018-06-01 12:24:55,025  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,026  INFO Injector:92   --> target: Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=access_walk)]
2018-06-01 12:24:55,026  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1220, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:129), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=access_walk)]}
2018-06-01 12:24:55,026  INFO Injector:96 
2018-06-01 12:24:55,026  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=1222, type=MAPBINDER, keyType=java.lang.String)
2018-06-01 12:24:55,026  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1222, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.FreespeedFactorRouting@4970b93d}
2018-06-01 12:24:55,026  INFO Injector:87   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:129)
2018-06-01 12:24:55,026  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,026  INFO Injector:92   --> target: Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=ride)]
2018-06-01 12:24:55,027  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1222, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:129), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=ride)]}
2018-06-01 12:24:55,027  INFO Injector:96 
2018-06-01 12:24:55,027  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=1224, type=MAPBINDER, keyType=java.lang.String)
2018-06-01 12:24:55,027  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1224, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@5c97d5d}
2018-06-01 12:24:55,027  INFO Injector:87   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:129)
2018-06-01 12:24:55,027  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,027  INFO Injector:92   --> target: Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=walk)]
2018-06-01 12:24:55,027  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1224, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:129), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=walk)]}
2018-06-01 12:24:55,028  INFO Injector:96 
2018-06-01 12:24:55,028  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=1226, type=MAPBINDER, keyType=java.lang.String)
2018-06-01 12:24:55,028  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1226, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@39e16443}
2018-06-01 12:24:55,028  INFO Injector:87   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:129)
2018-06-01 12:24:55,028  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,028  INFO Injector:92   --> target: Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=bike)]
2018-06-01 12:24:55,028  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1226, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:129), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=bike)]}
2018-06-01 12:24:55,028  INFO Injector:96 
2018-06-01 12:24:55,029  INFO Injector:85 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=1228, type=MAPBINDER, keyType=java.lang.String)
2018-06-01 12:24:55,029  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1228, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@496de48b}
2018-06-01 12:24:55,029  INFO Injector:87   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:129)
2018-06-01 12:24:55,029  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,029  INFO Injector:92   --> target: Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=undefined)]
2018-06-01 12:24:55,029  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1228, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:129), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=undefined)]}
2018-06-01 12:24:55,029  INFO Injector:96 
2018-06-01 12:24:55,030  INFO Injector:85 org.matsim.core.router.util.TravelTime @com.google.inject.multibindings.Element(setName=,uniqueId=1230, type=MAPBINDER, keyType=java.lang.String)
2018-06-01 12:24:55,030  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1230, type=MAPBINDER, keyType=java.lang.String)], provider=Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]}
2018-06-01 12:24:55,030  INFO Injector:87   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:129)
2018-06-01 12:24:55,030  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,030  INFO Injector:92   --> target: Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.name.Named(value=car)]
2018-06-01 12:24:55,030  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1230, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:129), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.name.Named(value=car)]}
2018-06-01 12:24:55,030  INFO Injector:96 
2018-06-01 12:24:55,030  INFO Injector:85 org.matsim.core.router.costcalculators.TravelDisutilityFactory @com.google.inject.multibindings.Element(setName=,uniqueId=1232, type=MAPBINDER, keyType=java.lang.String)
2018-06-01 12:24:55,031  INFO Injector:86   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1232, type=MAPBINDER, keyType=java.lang.String)], provider=ConstantFactory{value=org.matsim.core.router.costcalculators.RandomizingTimeDistanceTravelDisutilityFactory@7ec00f98}[Scopes.SINGLETON]}
2018-06-01 12:24:55,031  INFO Injector:87   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:129)
2018-06-01 12:24:55,031  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,031  INFO Injector:92   --> target: Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.name.Named(value=car)]
2018-06-01 12:24:55,031  INFO Injector:94   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=1232, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:129), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.name.Named(value=car)]}
2018-06-01 12:24:55,031  INFO Injector:96 
2018-06-01 12:24:55,031  INFO Injector:85 org.matsim.core.controler.ControlerListenerManagerImpl 
2018-06-01 12:24:55,031  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6f46764d[Scopes.SINGLETON]
2018-06-01 12:24:55,032  INFO Injector:87   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:9)
2018-06-01 12:24:55,032  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:55,032  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.controler.ControlerListenerManagerImpl, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:9), scope=eager singleton}
2018-06-01 12:24:55,032  INFO Injector:96 
2018-06-01 12:24:55,032  INFO Injector:85 org.matsim.analysis.IterationStopWatch 
2018-06-01 12:24:55,032  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@260d5273[Scopes.SINGLETON]
2018-06-01 12:24:55,032  INFO Injector:87   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:12)
2018-06-01 12:24:55,032  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:55,033  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.IterationStopWatch, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:12), scope=eager singleton}
2018-06-01 12:24:55,033  INFO Injector:96 
2018-06-01 12:24:55,033  INFO Injector:85 org.matsim.core.controler.OutputDirectoryHierarchy 
2018-06-01 12:24:55,033  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1e366736[Scopes.SINGLETON]
2018-06-01 12:24:55,033  INFO Injector:87   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:13)
2018-06-01 12:24:55,033  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:55,033  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.controler.OutputDirectoryHierarchy, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:13), scope=eager singleton}
2018-06-01 12:24:55,033  INFO Injector:96 
2018-06-01 12:24:55,034  INFO Injector:85 org.matsim.core.scoring.ScoringFunctionsForPopulation 
2018-06-01 12:24:55,034  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@74832e40[Scopes.SINGLETON]
2018-06-01 12:24:55,034  INFO Injector:87   --> source: org.matsim.core.scoring.PlansScoringModule.install(PlansScoringModule.java:10)
2018-06-01 12:24:55,034  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:55,034  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.scoring.ScoringFunctionsForPopulation, annotation=[none]], source=org.matsim.core.scoring.PlansScoringModule.install(PlansScoringModule.java:10), scope=eager singleton}
2018-06-01 12:24:55,034  INFO Injector:96 
2018-06-01 12:24:55,034  INFO Injector:85 org.matsim.core.events.EventsManagerModule$EventHandlerRegistrator 
2018-06-01 12:24:55,035  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@17debee7[Scopes.SINGLETON]
2018-06-01 12:24:55,035  INFO Injector:87   --> source: org.matsim.core.events.EventsManagerModule.install(EventsManagerModule.java:25)
2018-06-01 12:24:55,035  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:55,035  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.events.EventsManagerModule$EventHandlerRegistrator, annotation=[none]], source=org.matsim.core.events.EventsManagerModule.install(EventsManagerModule.java:25), scope=eager singleton}
2018-06-01 12:24:55,035  INFO Injector:96 
2018-06-01 12:24:55,035  INFO Injector:85 org.matsim.core.trafficmonitoring.TravelTimeCalculator 
2018-06-01 12:24:55,035  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2fa1f38b[Scopes.SINGLETON]
2018-06-01 12:24:55,035  INFO Injector:87   --> source: org.matsim.core.trafficmonitoring.TravelTimeCalculatorModule.install(TravelTimeCalculatorModule.java:76)
2018-06-01 12:24:55,036  INFO Injector:89   --> scope: Scopes.SINGLETON
2018-06-01 12:24:55,036  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.trafficmonitoring.TravelTimeCalculator, annotation=[none]], source=org.matsim.core.trafficmonitoring.TravelTimeCalculatorModule.install(TravelTimeCalculatorModule.java:76), scope=Scopes.SINGLETON}
2018-06-01 12:24:55,036  INFO Injector:96 
2018-06-01 12:24:55,036  INFO Injector:85 org.matsim.core.scoring.EventsToActivities 
2018-06-01 12:24:55,036  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1740a7b0[Scopes.SINGLETON]
2018-06-01 12:24:55,036  INFO Injector:87   --> source: org.matsim.core.scoring.ExperiencedPlanElementsModule.install(ExperiencedPlanElementsModule.java:12)
2018-06-01 12:24:55,036  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:55,036  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.scoring.EventsToActivities, annotation=[none]], source=org.matsim.core.scoring.ExperiencedPlanElementsModule.install(ExperiencedPlanElementsModule.java:12), scope=eager singleton}
2018-06-01 12:24:55,037  INFO Injector:96 
2018-06-01 12:24:55,037  INFO Injector:85 org.matsim.core.scoring.EventsToLegs 
2018-06-01 12:24:55,037  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5b5b5011[Scopes.SINGLETON]
2018-06-01 12:24:55,037  INFO Injector:87   --> source: org.matsim.core.scoring.ExperiencedPlanElementsModule.install(ExperiencedPlanElementsModule.java:13)
2018-06-01 12:24:55,037  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:55,037  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.scoring.EventsToLegs, annotation=[none]], source=org.matsim.core.scoring.ExperiencedPlanElementsModule.install(ExperiencedPlanElementsModule.java:13), scope=eager singleton}
2018-06-01 12:24:55,037  INFO Injector:96 
2018-06-01 12:24:55,037  INFO Injector:85 org.matsim.core.router.TripRouter 
2018-06-01 12:24:55,038  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5eab0592
2018-06-01 12:24:55,038  INFO Injector:87   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:43)
2018-06-01 12:24:55,038  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,038  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.router.TripRouter, annotation=[none]], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:43), scope=Scopes.NO_SCOPE}
2018-06-01 12:24:55,038  INFO Injector:96 
2018-06-01 12:24:55,038  INFO Injector:85 org.matsim.core.router.SingleModeNetworksCache 
2018-06-01 12:24:55,038  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@7ce00985[Scopes.SINGLETON]
2018-06-01 12:24:55,038  INFO Injector:87   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:47)
2018-06-01 12:24:55,039  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:55,039  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.router.SingleModeNetworksCache, annotation=[none]], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:47), scope=eager singleton}
2018-06-01 12:24:55,039  INFO Injector:96 
2018-06-01 12:24:55,039  INFO Injector:85 org.matsim.core.replanning.StrategyManager 
2018-06-01 12:24:55,039  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@47f74d8f[Scopes.SINGLETON]
2018-06-01 12:24:55,039  INFO Injector:87   --> source: org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:51)
2018-06-01 12:24:55,039  INFO Injector:89   --> scope: Scopes.SINGLETON
2018-06-01 12:24:55,039  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.replanning.StrategyManager, annotation=[none]], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:51), scope=Scopes.SINGLETON}
2018-06-01 12:24:55,040  INFO Injector:96 
2018-06-01 12:24:55,040  INFO Injector:85 org.matsim.analysis.CalcLinkStats 
2018-06-01 12:24:55,040  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@67c6b166[Scopes.SINGLETON]
2018-06-01 12:24:55,040  INFO Injector:87   --> source: org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:37)
2018-06-01 12:24:55,040  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:55,040  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.CalcLinkStats, annotation=[none]], source=org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:37), scope=eager singleton}
2018-06-01 12:24:55,040  INFO Injector:96 
2018-06-01 12:24:55,040  INFO Injector:85 org.matsim.analysis.LinkStatsControlerListener 
2018-06-01 12:24:55,041  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5a880dbe[Scopes.SINGLETON]
2018-06-01 12:24:55,041  INFO Injector:87   --> source: org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:46)
2018-06-01 12:24:55,041  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:55,041  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.LinkStatsControlerListener, annotation=[none]], source=org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:46), scope=eager singleton}
2018-06-01 12:24:55,041  INFO Injector:96 
2018-06-01 12:24:55,041  INFO Injector:85 org.matsim.analysis.VolumesAnalyzer 
2018-06-01 12:24:55,041  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@3bf8b423[Scopes.SINGLETON]
2018-06-01 12:24:55,041  INFO Injector:87   --> source: org.matsim.analysis.VolumesAnalyzerModule.install(VolumesAnalyzerModule.java:31)
2018-06-01 12:24:55,042  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:55,042  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.VolumesAnalyzer, annotation=[none]], source=org.matsim.analysis.VolumesAnalyzerModule.install(VolumesAnalyzerModule.java:31), scope=eager singleton}
2018-06-01 12:24:55,042  INFO Injector:96 
2018-06-01 12:24:55,042  INFO Injector:85 org.matsim.analysis.LegHistogram 
2018-06-01 12:24:55,042  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4299feea
2018-06-01 12:24:55,042  INFO Injector:87   --> source: org.matsim.analysis.LegHistogramModule.install(LegHistogramModule.java:30)
2018-06-01 12:24:55,042  INFO Injector:89   --> scope: Scopes.NO_SCOPE
2018-06-01 12:24:55,042  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.LegHistogram, annotation=[none]], source=org.matsim.analysis.LegHistogramModule.install(LegHistogramModule.java:30), scope=Scopes.NO_SCOPE}
2018-06-01 12:24:55,043  INFO Injector:96 
2018-06-01 12:24:55,043  INFO Injector:85 org.matsim.analysis.CalcLegTimes 
2018-06-01 12:24:55,043  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@b536551[Scopes.SINGLETON]
2018-06-01 12:24:55,043  INFO Injector:87   --> source: org.matsim.analysis.LegTimesModule.install(LegTimesModule.java:31)
2018-06-01 12:24:55,043  INFO Injector:89   --> scope: Scopes.SINGLETON
2018-06-01 12:24:55,043  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.CalcLegTimes, annotation=[none]], source=org.matsim.analysis.LegTimesModule.install(LegTimesModule.java:31), scope=Scopes.SINGLETON}
2018-06-01 12:24:55,043  INFO Injector:96 
2018-06-01 12:24:55,043  INFO Injector:85 org.matsim.analysis.TravelDistanceStats 
2018-06-01 12:24:55,044  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@ff5aa42[Scopes.SINGLETON]
2018-06-01 12:24:55,044  INFO Injector:87   --> source: org.matsim.analysis.TravelDistanceStatsModule.install(TravelDistanceStatsModule.java:10)
2018-06-01 12:24:55,044  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:55,044  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.TravelDistanceStats, annotation=[none]], source=org.matsim.analysis.TravelDistanceStatsModule.install(TravelDistanceStatsModule.java:10), scope=eager singleton}
2018-06-01 12:24:55,044  INFO Injector:96 
2018-06-01 12:24:55,044  INFO Injector:85 org.matsim.analysis.ScoreStatsControlerListener 
2018-06-01 12:24:55,044  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1b4695a[Scopes.SINGLETON]
2018-06-01 12:24:55,044  INFO Injector:87   --> source: org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:31)
2018-06-01 12:24:55,045  INFO Injector:89   --> scope: Scopes.SINGLETON
2018-06-01 12:24:55,045  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.ScoreStatsControlerListener, annotation=[none]], source=org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:31), scope=Scopes.SINGLETON}
2018-06-01 12:24:55,045  INFO Injector:96 
2018-06-01 12:24:55,045  INFO Injector:85 org.matsim.analysis.ModeStatsControlerListener 
2018-06-01 12:24:55,045  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@30e2c9dc[Scopes.SINGLETON]
2018-06-01 12:24:55,045  INFO Injector:87   --> source: org.matsim.analysis.ModeStatsModule.install(ModeStatsModule.java:31)
2018-06-01 12:24:55,045  INFO Injector:89   --> scope: Scopes.SINGLETON
2018-06-01 12:24:55,046  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.ModeStatsControlerListener, annotation=[none]], source=org.matsim.analysis.ModeStatsModule.install(ModeStatsModule.java:31), scope=Scopes.SINGLETON}
2018-06-01 12:24:55,046  INFO Injector:96 
2018-06-01 12:24:55,046  INFO Injector:85 org.matsim.counts.CountsModule$CountsInitializer 
2018-06-01 12:24:55,046  INFO Injector:86   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@27d7ee42[Scopes.SINGLETON]
2018-06-01 12:24:55,046  INFO Injector:87   --> source: org.matsim.counts.CountsModule.install(CountsModule.java:43)
2018-06-01 12:24:55,046  INFO Injector:89   --> scope: eager singleton
2018-06-01 12:24:55,046  INFO Injector:94   ==full==> ConstructorBinding{key=Key[type=org.matsim.counts.CountsModule$CountsInitializer, annotation=[none]], source=org.matsim.counts.CountsModule.install(CountsModule.java:43), scope=eager singleton}
2018-06-01 12:24:55,046  INFO Injector:96 
2018-06-01 12:24:55,047  INFO Injector:99 === printInjector end ===
2018-06-01 12:24:55,047  INFO Gbl:59 JVM: 1.8.0_121; Oracle Corporation; mixed mode; 64-bit
2018-06-01 12:24:55,047  INFO Gbl:63 OS: Linux; 3.10.0-862.3.2.el7.x86_64; amd64
2018-06-01 12:24:55,047  INFO Gbl:66 CPU cores: 8
2018-06-01 12:24:55,048  INFO Gbl:67 max. Memory: 622.5MB (652738560B)
2018-06-01 12:24:55,048  INFO Gbl:105 MATSim-Build: r2e2cc5d2634abc1948159b0b26915d39f57850c6 (2018-06-01 12:23:51)
2018-06-01 12:24:55,048  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.counts.CountsControlerListener
2018-06-01 12:24:55,048  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ModeStatsControlerListener
2018-06-01 12:24:55,049 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2018-06-01 12:24:55,049  INFO NetworkImpl:167  node # 1
2018-06-01 12:24:55,049  INFO NetworkImpl:167  node # 4
2018-06-01 12:24:55,049  INFO NetworkImpl:163  link # 1
2018-06-01 12:24:55,049  INFO NetworkImpl:163  link # 4
2018-06-01 12:24:55,050  INFO NetworkImpl:163  link # 16
2018-06-01 12:24:55,050  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ScoreStatsControlerListener
2018-06-01 12:24:55,050  INFO ControlerListenerManagerImpl:110 all ControlerStartupListeners called.
2018-06-01 12:24:55,050  INFO ControlerUtils:58 config dump before iterations start
2018-06-01 12:24:55,050  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,052  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,053  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,054  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,055  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,057  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,058  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,059  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,060  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,061  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,063  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,065  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,066  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,067  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,069  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,070  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,071  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,072  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,074  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,075  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,076  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,077  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,079  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,080  INFO Config:563 setting context tofile:/root/workspace/matsim-org/matsim/386581902/matsim/]
2018-06-01 12:24:55,081  INFO ControlerUtils:62 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>
<!-- ====================================================================== -->
	<module name="JDEQSim" >
		<param name="carSize" value="7.5" />
		<param name="endTime" value="undefined" />
		<param name="flowCapacityFactor" value="1.0" />
		<param name="gapTravelSpeed" value="15.0" />
		<param name="minimumInFlowCapacity" value="1800.0" />
		<param name="squeezeTime" value="1800.0" />
		<param name="storageCapacityFactor" value="1.0" />
	</module>
<!-- ====================================================================== -->
	<module name="TimeAllocationMutator" >
		<!-- Default:true; Defines whether time mutation changes an activity's duration. -->
		<param name="mutationAffectsDuration" value="true" />
		<!-- Default:1800.0; Defines how many seconds a time mutation can maximally shift a time. -->
		<param name="mutationRange" value="1800.0" />
		<!-- false; Use individual settings for each subpopulation. If enabled but no settings are found, regular settings are uses as fallback. -->
		<param name="useIndividualSettingsForSubpopulations" value="false" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="changeMode" >
		<!-- Defines whether car availability is considered be considered or not. An agent has no car only if it has no license, or never access to a car. Default: true -->
		<param name="ignoreCarAvailability" value="true" />
		<!-- Defines the mode switch behavior. Possible values [Lorg.matsim.core.config.groups.ChangeModeConfigGroup$Behavior;@57cc535 Default: fromSpecifiedModesToSpecifiedModes. -->
		<param name="modeSwitchBehavior" value="fromSpecifiedModesToSpecifiedModes" />
		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt" />
	</module>
<!-- ====================================================================== -->
	<module name="controler" >
		<!-- Sets whether graphs showing some analyses should automatically be generated during the simulation. The generation of graphs usually takes a small amount of time that does not have any weight in big simulations, but add a significant overhead in smaller runs or in test cases where the graphical output is not even requested. -->
		<param name="createGraphs" value="false" />
		<!-- true if at the end of a run, plans, network, config etc should be dumped to a file -->
		<param name="dumpDataAtEnd" value="false" />
		<!-- Default=false. If enabled, the router takes travel times needed for turning moves into account. Cannot be used if the (Fast)AStarLandmarks routing or TravelTimeCalculator.separateModes is enabled. -->
		<param name="enableLinkToLinkRouting" value="false" />
		<!-- Default=xml; Specifies the file format for writing events. Currently supported: xml.
		Multiple values can be specified separated by commas (','). -->
		<param name="eventsFileFormat" value="xml" />
		<!-- Default=0;  -->
		<param name="firstIteration" value="0" />
		<!-- Default=1000;  -->
		<param name="lastIteration" value="0" />
		<!-- Defines which mobility simulation will be used. Currently supported: qsim JDEQSim 
		Depending on the chosen mobsim, you'll have to add additional config modules to configure the corresponding mobsim.
		For 'qsim', add a module 'qsim' to the config. -->
		<param name="mobsim" value="counting" />
		<param name="outputDirectory" value="test/output/org/matsim/core/controler/ControlerMobsimIntegrationTest/testRunMobsim_customMobsim/" />
		<!-- Possible values: failIfDirectoryExists, overwriteExistingFiles, deleteDirectoryIfExists -->
		<param name="overwriteFiles" value="failIfDirectoryExists" />
		<!-- The type of routing (least cost path) algorithm used, may have the values: Dijkstra, FastDijkstra, AStarLandmarks or FastAStarLandmarks -->
		<param name="routingAlgorithmType" value="Dijkstra" />
		<!-- An identifier for the current run which is used as prefix for output files and mentioned in output xml files etc. -->
		<param name="runId" value="null" />
		<!-- Comma-separated list of visualizer output file formats. `transims', `googleearth', and `otfvis'. -->
		<param name="snapshotFormat" value="transims" />
		<!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
		<param name="writeEventsInterval" value="0" />
		<!-- iterationNumber % writePlansInterval == 0 defines (hopefully) in which iterations plans are written to a file. `0' disables plans writing completely.  Some plans in early iterations are always written -->
		<param name="writePlansInterval" value="0" />
		<!-- iterationNumber % writeSnapshotsInterval == 0 defines in which iterations snapshots are written to a file. `0' disables snapshots writing completely -->
		<param name="writeSnapshotsInterval" value="1" />
	</module>
<!-- ====================================================================== -->
	<module name="counts" >
		<!-- Transport modes that will be respected for the counts comparison. 'car' is default, which includes also bussed from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the counts comparison. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeCountsInterval -->
		<param name="averageCountsOverIterations" value="5" />
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- If true, link counts from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- input file name to counts package -->
		<param name="inputCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="txt" />
		<!-- Specifies how often the counts comparison should be calculated and written. -->
		<param name="writeCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="facilities" >
		<!-- If set to 'true', empty activity option will be created. -->
		<param name="addEmptyActivityOption" value="false" />
		<!-- Default is 'true'. In the case that a facility has no link assigned, the ActivityFacility can be assigned to the closest link. If there should be only one ActivityFacility per link and if no link-assignment should be done, set to 'false'.This will create a new ActivityFacility at the coordinate and the facility will not be assigned to a link. -->
		<param name="assigningLinksToFacilitiesIfMissing" value="true" />
		<!-- If set to 'true', opening time will be assigned to activity facilities from ActivityParams. Default is false. This will NOT override option 'addEmptyActivityOption'. -->
		<param name="assigningOpeningTime" value="false" />
		<!-- This defines how facilities should be created. Possible values: none fromFile setInScenario onePerActivityLocationInPlansFile  -->
		<param name="facilitiesSource" value="fromFile" />
		<!-- A prefix to be used in activityFacility id. -->
		<param name="idPrefix" value="" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputFacilitiesFile" value="facilities.xml" />
		<param name="inputFacilityAttributesFile" value="null" />
		<!-- Sets whether all activities on a link should be collected within one ActivityFacility. Default is 'true'. If set to 'false', for each coordinate found in the population's activities a separate ActivityFacility will be created. -->
		<param name="oneFacilityPerLink" value="true" />
		<!-- If set to 'true' (which is the default), the link and coordinate attributes are replaced by null reference in the activities, as this information is now available via the facility. -->
		<param name="removingLinksAndCoordinates" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="global" >
		<param name="coordinateSystem" value="Atlantis" />
		<param name="insistingOnDeprecatedConfigVersion" value="true" />
		<!-- "global" number of threads.  This number is used, e.g., for replanning, but NOT in the mobsim.  This can typically be set to as many cores as you have available, or possibly even slightly more. -->
		<param name="numberOfThreads" value="2" />
		<param name="randomSeed" value="4711" />
	</module>
<!-- ====================================================================== -->
	<module name="households" >
		<param name="inputFile" value="null" />
		<param name="inputHouseholdAttributesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="linkStats" >
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the link statistics. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeLinkStatsInterval -->
		<param name="averageLinkStatsOverIterations" value="5" />
		<!-- Specifies how often the link stats should be calculated and written. Use 0 to disable the generation of link stats. -->
		<param name="writeLinkStatsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="network" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputChangeEventsFile" value="null" />
		<param name="inputNetworkFile" value="network.xml" />
		<param name="laneDefinitionsFile" value="null" />
		<param name="timeVariantNetwork" value="false" />
	</module>
<!-- ====================================================================== -->
	<module name="parallelEventHandling" >
		<!-- Estimated number of events during mobsim run. An optional optimization hint for the framework. -->
		<param name="estimatedNumberOfEvents" value="null" />
		<!-- Number of threads for parallel events handler. _null_ means the framework decides by itself. 0 is currently not possible. -->
		<param name="numberOfThreads" value="null" />
		<!-- If enabled, each event handler is assigned to its own thread. Note that enabling this feature disabled the numberOfThreads option! This feature is still experimental! -->
		<param name="oneThreadPerHandler" value="false" />
		<!-- If enabled, it is ensured that all events that are created during a time step of the mobility simulation are processed before the next time step is simulated. E.g. neccessary when within-day replanning is used. -->
		<param name="synchronizeOnSimSteps" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="planCalcScore" >
		<!-- logit model scale parameter. default: 1.  Has name and default value for historical reasons (see Bryan Raney's phd thesis). -->
		<param name="BrainExpBeta" value="2.0" />
		<param name="PathSizeLogitBeta" value="1.0" />
		<!-- fraction of iterations at which MSA score averaging is started. The matsim theory department suggests to use this together with switching off choice set innovation (where a similar switch exists), but it has not been tested yet. -->
		<param name="fractionOfIterationsToStartScoreMSA" value="null" />
		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />
		<!-- There used to be a plateau between duration=0 and duration=zeroUtilityDuration. This caused durations to evolve to zero once they were below zeroUtilityDuration, causing problems.  Only use this switch if you need to be backwards compatible with some old results.  (changed nov'13) -->
		<param name="usingOldScoringBelowZeroUtilityDuration" value="false" />
		<!-- write a plans file in each iteration directory which contains what each agent actually did, and the score it received. -->
		<param name="writeExperiencedPlans" value="false" />
		<parameterset type="scoringParameters" >
			<param name="earlyDeparture" value="-0.0" />
			<param name="lateArrival" value="-18.0" />
			<param name="marginalUtilityOfMoney" value="1.0" />
			<param name="performing" value="6.0" />
			<param name="subpopulation" value="null" />
			<param name="utilityOfLineSwitch" value="-1.0" />
			<param name="waiting" value="-0.0" />
			<param name="waitingPt" value="-6.0" />
			<parameterset type="activityParams" >
				<param name="activityType" value="dummy" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="02:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="car interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="pt interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="bike interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="other interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="walk interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="h" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="08:00:00" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="12:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="w" />
				<param name="closingTime" value="18:00:00" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="09:00:00" />
				<param name="minimalDuration" value="06:00:00" />
				<param name="openingTime" value="07:00:00" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="08:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="car" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="pt" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="walk" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="bike" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="ride" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="other" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="plans" >
		<!-- String: minOfDurationAndEndTime tryEndTimeThenDuration endTimeOnly. Anything besides minOfDurationAndEndTime will internally use a different (simpler) version of the TimeAllocationMutator. -->
		<param name="activityDurationInterpretation" value="tryEndTimeThenDuration" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- Path to a file containing person attributes (required file format: ObjectAttributes). -->
		<param name="inputPersonAttributesFile" value="null" />
		<param name="inputPlansFile" value="plans1.xml" />
		<!-- Defines how routes are stored in memory. Currently supported: LinkNetworkRoute, CompressedNetworkRoute. -->
		<param name="networkRouteType" value="LinkNetworkRoute" />
		<!-- (not tested) will remove plan attributes that are presumably not used, such as activityStartTime. default=false -->
		<param name="removingUnnecessaryPlanAttributes" value="false" />
		<!-- Name of the (Object)Attribute defining the subpopulation to which pertains a Person (as freight, through traffic, etc.). The attribute must be of String type.  Change away from default only in desperate situations. -->
		<param name="subpopulationAttributeName" value="subpopulation" />
	</module>
<!-- ====================================================================== -->
	<module name="planscalcroute" >
		<!-- All the modes for which the router is supposed to generate network routes (like car) -->
		<param name="networkModes" value="car" />
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="bike" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="4.166666666666667" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="access_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="egress_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="undefined" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="13.88888888888889" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="ride" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="1.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="pt" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="2.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="ptCounts" >
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- input file containing the alighting (getting off) counts for pt -->
		<param name="inputAlightCountsFile" value="null" />
		<!-- input file containing the boarding (getting on) counts for pt -->
		<param name="inputBoardCountsFile" value="null" />
		<!-- input file containing the occupancy counts for pt -->
		<param name="inputOccupancyCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="null" />
		<!-- every how many iterations (starting with 0) counts comparisons are generated -->
		<param name="ptCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="qsim" >
		<!-- If set to true, creates a vehicle for each person corresponding to every network mode. However, this will be overridden if vehicle source is fromVehiclesData. -->
		<param name="creatingVehiclesForAllNetworkModes" value="true" />
		<param name="endTime" value="00:00:00" />
		<param name="flowCapacityFactor" value="1.0" />
		<!-- decides if waiting vehicles enter the network after or before the already driving vehicles were moved. Default: false -->
		<param name="insertingWaitingVehiclesBeforeDrivingVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set to false if all seep modes should perform seepage. Default is true (better option). -->
		<param name="isRestrictingSeepage" value="true" />
		<!-- If link dynamics is set as SeepageQ, set to true if seep mode do not consumes any space on the link. Default is false. -->
		<param name="isSeepModeStorageFree" value="false" />
		<!-- default: FIFO; options: FIFO PassingQ SeepageQ -->
		<param name="linkDynamics" value="FIFO" />
		<!-- The (initial) width of the links of the network. Use positive floating point values. This is used only for visualisation. -->
		<param name="linkWidth" value="30.0" />
		<!-- [comma-separated list] Defines which modes are congested modes. Technically, these are the modes that the departure handler of the netsimengine handles.  Effective cell size, effective lane width, flow capacity factor, and storage capacity factor need to be set with diligence.  Need to be vehicular modes to make sense. -->
		<param name="mainMode" value="car" />
		<!-- Shortens a link in the visualization, i.e. its start and end point are moved into towards the center. Does not affect traffic flow.  -->
		<param name="nodeOffset" value="0.0" />
		<!-- Number of threads used for the QSim.  Note that this setting is independent from the "global" threads setting.  In contrast to earlier versions, the non-parallel special version is no longer there. -->
		<param name="numberOfThreads" value="1" />
		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set a seep mode. Default is bike. -->
		<param name="seepMode" value="bike" />
		<!-- Possible values: minOfEndtimeAndMobsimFinished, onlyUseEndtime -->
		<param name="simEndtimeInterpretation" value="null" />
		<!-- Options: maxOfStarttimeAndEarliestActivityEnd onlyUseStarttime  -->
		<param name="simStarttimeInterpretation" value="maxOfStarttimeAndEarliestActivityEnd" />
		<!-- snapshotStyle. One of: equiDist queue withHoles withHolesAndShowHoles kinematicWaves  -->
		<param name="snapshotStyle" value="equiDist" />
		<param name="snapshotperiod" value="00:00:00" />
		<param name="startTime" value="00:00:00" />
		<param name="storageCapacityFactor" value="1.0" />
		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="10.0" />
		<param name="timeStepSize" value="00:00:01" />
		<!-- options: queue withHoles kinematicWaves  -->
		<param name="trafficDynamics" value="queue" />
		<!-- Set this parameter to true if lanes should be used, false if not. -->
		<param name="useLanes" value="false" />
		<!-- If a route does not reference a vehicle, agents will use the vehicle with the same id as their own. -->
		<param name="usePersonIdForMissingVehicleId" value="true" />
		<!-- If false, the qsim accumulates fractional flows up to one flow unit in every time step.  If true, flows are updated only if an agent wants to enter the link or an agent is added to buffer. Default is true. -->
		<param name="usingFastCapacityUpdate" value="true" />
		<!-- if the qsim should use as many runners as there are threads (Christoph's dissertation version) or more of them, together with a thread pool (seems to be faster in some situations, but is not tested). -->
		<param name="usingThreadpool" value="true" />
		<!-- Defines what happens if an agent wants to depart, but the specified vehicle is not available. One of: teleport wait exception  -->
		<param name="vehicleBehavior" value="teleport" />
		<!-- If vehicles should all be the same default vehicle, or come from the vehicles file, or something else.  Possible values:  defaultVehicle modeVehicleTypesFromVehiclesData fromVehiclesData -->
		<param name="vehiclesSource" value="defaultVehicle" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="strategy" >
		<!-- the external executable will be called with a config file as argument.  This is the pathname to a possible skeleton config, to which additional information will be added.  Can be null. -->
		<param name="ExternalExeConfigTemplate" value="null" />
		<!-- time out value (in seconds) after which matsim will consider the external strategy as failed -->
		<param name="ExternalExeTimeOut" value="3600" />
		<!-- root directory for temporary files generated by the external executable. Provided as a service; I don't think this is used by MATSim. -->
		<param name="ExternalExeTmpFileRootDir" value="null" />
		<!-- fraction of iterations where innovative strategies are switched off.  Something link 0.8 should be good.  E.g. if you run from iteration 400 to iteration 500, innovation is switched off at iteration 480 -->
		<param name="fractionOfIterationsToDisableInnovation" value="Infinity" />
		<!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
		<param name="maxAgentPlanMemorySize" value="5" />
		<!-- strategyName of PlanSelector for plans removal.  Possible defaults: WorstPlanSelector SelectRandom SelectExpBetaForRemoval ChangeExpBetaForRemoval PathSizeLogitSelectorForRemoval . The current default, WorstPlanSelector is not a good choice from a discrete choice theoretical perspective. Alternatives, however, have not been systematically tested. kai, feb'12 -->
		<param name="planSelectorForRemoval" value="WorstPlanSelector" />
		<parameterset type="strategysettings" >
			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />
			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRouteTimeAllocationMutatorTimeAllocationMutator_ReRouteChangeSingleTripModeChangeTripModeSubtourModeChoice (innovative strategies). -->
			<param name="strategyName" value="BestScore" />
			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.9" />
		</parameterset>
		<parameterset type="strategysettings" >
			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />
			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRouteTimeAllocationMutatorTimeAllocationMutator_ReRouteChangeSingleTripModeChangeTripModeSubtourModeChoice (innovative strategies). -->
			<param name="strategyName" value="ReRoute" />
			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.1" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="subtourModeChoice" >
		<!-- Only for backwards compatibility.  Defines if only trips from modes list should change mode, or all trips.  Options: fromAllModesToSpecifiedModes fromSpecifiedModesToSpecifiedModes  -->
		<param name="behavior" value="fromSpecifiedModesToSpecifiedModes" />
		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car,bike" />
		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="false" />
		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt,bike,walk" />
	</module>
<!-- ====================================================================== -->
	<module name="transit" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputScheduleCRS" value="null" />
		<!-- Optional input file containing additional attributes for transit lines, stored as ObjectAttributes. -->
		<param name="transitLinesAttributesFile" value="null" />
		<!-- Comma-separated list of transportation modes that are handled as transit. Defaults to 'pt'. -->
		<param name="transitModes" value="pt" />
		<!-- Input file containing the transit schedule to be simulated. -->
		<param name="transitScheduleFile" value="null" />
		<!-- Optional input file containing additional attributes for transit stop facilities, stored as ObjectAttributes. -->
		<param name="transitStopsAttributesFile" value="null" />
		<!-- Set this parameter to true if transit should be simulated, false if not. -->
		<param name="useTransit" value="false" />
		<!-- Input file containing the vehicles used by the departures in the transit schedule. -->
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="transitRouter" >
		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />
		<!-- Factor with which direct walk generalized cost is multiplied before it is compared to the pt generalized cost.  Set to a very high value to reduce direct walk results. -->
		<param name="directWalkFactor" value="1.0" />
		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="200.0" />
		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="100.0" />
		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1000.0" />
	</module>
<!-- ====================================================================== -->
	<module name="travelTimeCalculator" >
		<!-- Transport modes that will be respected by the travel time collector. 'car' is default, which includes also busses from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<param name="calculateLinkToLinkTravelTimes" value="false" />
		<param name="calculateLinkTravelTimes" value="true" />
		<!-- If true, link travel times from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The lenght (in sec) of the time period that is splited into time bins; an additional time bin is created to aggregate all travel times collected after maxTime -->
		<param name="maxTime" value="108000" />
		<!-- If true, link travel times are measured and calculated separately for each mode in analyzedModes. Other modes are ignored. If true, filterModes has no effect. -->
		<param name="separateModes" value="false" />
		<!-- How to deal with congested time bins that have no link entry events. `optimistic' assumes free speed (too optimistic); 'experimental_LastMile' is experimental and probably too pessimistic. -->
		<param name="travelTimeAggregator" value="optimistic" />
		<!-- The size of the time bin (in sec) into which the link travel times are aggregated for the router -->
		<param name="travelTimeBinSize" value="900" />
		<!-- possible values: TravelTimeCalculatorArray TravelTimeCalculatorHashMap  -->
		<param name="travelTimeCalculator" value="TravelTimeCalculatorArray" />
		<!-- How to deal with link entry times at different positions during the time bin. Currently supported: average, linearinterpolation -->
		<param name="travelTimeGetter" value="average" />
	</module>
<!-- ====================================================================== -->
	<module name="vehicles" >
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="vspExperimental" >
		<!-- (do not use except of you have to) There was a problem with pt interaction scoring.  Some people solved it by overwriting the parameters of the pt interaction activity type.  Doing this now throws an Exception.  If you still insist on doing this, set the following to true. -->
		<param name="isAbleToOverwritePtInteractionParams" value="false" />
		<param name="isGeneratingBoardingDeniedEvent" value="false" />
		<!-- if an approximation of the opportunity cost of time is included into the radius calculation for location choice.`true' will be faster, but it is an approximation.  Default is `true'; `false' is available for backwards compatibility. -->
		<param name="isUsingOpportunityCostOfTimeForLocationChoice" value="true" />
		<param name="logitScaleParamForPlansRemoval" value="1.0" />
		<!-- Options: | ignore | info | warn | abort | .  When violating VSP defaults, this results in nothing, logfile infos, logfile warnings, or aborts.  Members of VSP should use `abort' or talk to kai. -->
		<param name="vspDefaultsCheckingLevel" value="ignore" />
		<!-- if true then writes output_events in output directory.  default is `false'. Will only work when lastIteration is multiple of events writing interval -->
		<param name="writingOutputEvents" value="true" />
	</module>
<!-- ====================================================================== -->

</config>

2018-06-01 12:24:55,082  INFO ControlerUtils:63 Complete config dump done.
2018-06-01 12:24:55,082  INFO ControlerUtils:64 Checking consistency of config...
2018-06-01 12:24:55,083  INFO VspConfigConsistencyCheckerImpl:58 NOT running vsp config consistency check because vsp defaults checking level is set to IGNORE
2018-06-01 12:24:55,083  INFO ControlerUtils:66 Checking consistency of config done.
2018-06-01 12:24:55,083 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2018-06-01 12:24:55,083 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2018-06-01 12:24:55,084  INFO Counter:70 [PersonPrepareForSim] handled person # 1
2018-06-01 12:24:55,085  INFO Counter:76 [PersonPrepareForSim] handled person # 1
2018-06-01 12:24:55,085  INFO Counter:70  vehicles # 1
2018-06-01 12:24:55,085  INFO AbstractController:121 ###################################################
2018-06-01 12:24:55,085  INFO AbstractController:122 ### ITERATION 0 BEGINS
2018-06-01 12:24:55,085  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2018-06-01 12:24:55,086  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2018-06-01 12:24:55,086  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2018-06-01 12:24:55,086  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2018-06-01 12:24:55,086  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2018-06-01 12:24:55,086  INFO ControlerListenerManagerImpl:148 [it.0] all ControlerIterationStartsListeners called.
2018-06-01 12:24:55,086  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-06-01 12:24:55,087  INFO EventsManagerImpl:170 resetting Event-Handlers
2018-06-01 12:24:55,087  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2018-06-01 12:24:55,087  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2018-06-01 12:24:55,087  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2018-06-01 12:24:55,087  INFO EventsManagerImpl:177   org.matsim.core.events.algorithms.Vehicle2DriverEventHandler
2018-06-01 12:24:55,087  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2018-06-01 12:24:55,088  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2018-06-01 12:24:55,088  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2018-06-01 12:24:55,088  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2018-06-01 12:24:55,088  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2018-06-01 12:24:55,088  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2018-06-01 12:24:55,088  INFO ControlerListenerManagerImpl:232 [it.0] all ControlerBeforeMobsimListeners called.
2018-06-01 12:24:55,089  INFO AbstractController$8:210 ### ITERATION 0 fires after mobsim event
2018-06-01 12:24:55,089  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2018-06-01 12:24:55,089  INFO LegTimesControlerListener:50 [0] average trip (probably: leg) duration is: 0 seconds = 00:00:00
2018-06-01 12:24:55,090  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2018-06-01 12:24:55,090  INFO ControlerListenerManagerImpl:251 [it.0] all ControlerAfterMobsimListeners called.
2018-06-01 12:24:55,090  INFO AbstractController$4:147 ### ITERATION 0 fires scoring event
2018-06-01 12:24:55,090  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2018-06-01 12:24:55,090  INFO NewScoreAssignerImpl:36 it: 0 msaStart: null
2018-06-01 12:24:55,090  INFO ControlerListenerManagerImpl:194 [it.0] all ControlerScoringListeners called.
2018-06-01 12:24:55,091  INFO AbstractController$5:155 ### ITERATION 0 fires iteration end event
2018-06-01 12:24:55,091  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-06-01 12:24:55,091  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2018-06-01 12:24:55,091  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2018-06-01 12:24:55,091  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2018-06-01 12:24:55,091  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2018-06-01 12:24:55,092  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2018-06-01 12:24:55,092  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2018-06-01 12:24:55,092  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2018-06-01 12:24:55,092  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2018-06-01 12:24:55,092  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2018-06-01 12:24:55,092  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2018-06-01 12:24:55,093  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 0.0
2018-06-01 12:24:55,093  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 0.0
2018-06-01 12:24:55,093  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 0.0
2018-06-01 12:24:55,093  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 0.0
2018-06-01 12:24:55,093  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2018-06-01 12:24:55,093  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2018-06-01 12:24:55,094  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2018-06-01 12:24:55,094  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 0.0
2018-06-01 12:24:55,094  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2018-06-01 12:24:55,094  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2018-06-01 12:24:55,095  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2018-06-01 12:24:55,095  INFO LegHistogramListener:72 number of legs:	0	100%
2018-06-01 12:24:55,096  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2018-06-01 12:24:55,096  INFO ControlerListenerManagerImpl:171 [it.0] all ControlerIterationEndsListeners called.
2018-06-01 12:24:55,096  INFO AbstractController:165 ### ITERATION 0 ENDS
2018-06-01 12:24:55,096  INFO AbstractController:166 ###################################################
2018-06-01 12:24:55,096  INFO MatsimRuntimeModifications:58 S H U T D O W N   ---   start shutdown.
2018-06-01 12:24:55,096  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-06-01 12:24:55,097  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ModeStatsControlerListener
2018-06-01 12:24:55,097  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ScoreStatsControlerListener
2018-06-01 12:24:55,097  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.TravelDistanceStatsControlerListener
2018-06-01 12:24:55,097  INFO ControlerListenerManagerImpl:129 all ControlerShutdownListeners called.
2018-06-01 12:24:55,097  INFO MatsimRuntimeModifications:81 S H U T D O W N   ---   shutdown completed.
2018-06-01 12:24:55,097  INFO OutputDirectoryLogging:146 closing the logfile, i.e. messages sent to the logger after this message are not written to the logfile.
