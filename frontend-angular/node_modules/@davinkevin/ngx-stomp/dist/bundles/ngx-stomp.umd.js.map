{
	"version": 3,
	"file": null,
	"sources": [
		"configuration.js",
		"stomp.service.js",
		"stomp.module.js",
		"index.js",
		"ngx-stomp.js"
	],
	"sourcesContent": [
		"/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { InjectionToken } from '@angular/core';\nexport var /** @type {?} */ STOMP_CONFIGURATION = new InjectionToken('STOMP_CONFIGURATION');\n/**\n * @record\n */\nexport function StompConfiguration() { }\nfunction StompConfiguration_tsickle_Closure_declarations() {\n    /** @type {?} */\n    StompConfiguration.prototype.login;\n    /** @type {?} */\n    StompConfiguration.prototype.password;\n    /** @type {?} */\n    StompConfiguration.prototype.url;\n    /** @type {?} */\n    StompConfiguration.prototype.debug;\n    /** @type {?} */\n    StompConfiguration.prototype.vhost;\n    /** @type {?} */\n    StompConfiguration.prototype.headers;\n    /** @type {?|undefined} */\n    StompConfiguration.prototype.over;\n}\nexport var /** @type {?} */ STOMP_JS = new InjectionToken('STOMP_JS');\n//# sourceMappingURL=configuration.js.map",
		"/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Inject, Injectable } from '@angular/core';\nimport { STOMP_CONFIGURATION, STOMP_JS } from './configuration';\nimport { Observable } from 'rxjs/Observable';\nimport { concatMap, map, publishReplay } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n/**\n * @record\n */\nexport function Stomp() { }\nfunction Stomp_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Stomp.prototype.client;\n    /** @type {?} */\n    Stomp.prototype.over;\n}\nvar StompService = (function () {\n    function StompService(conf, stomp, document) {\n        this.conf = conf;\n        this.stomp = stomp;\n        this.cl = initClient(stomp, this.conf.over, this.conf.url, document.location);\n        this.cl.debug = initDebug(this.conf.debug);\n        this.connection$ = initConnection(this.cl, this.conf);\n    }\n    /**\n     * @template T\n     * @param {?} topic\n     * @return {?}\n     */\n    StompService.prototype.on = /**\n     * @template T\n     * @param {?} topic\n     * @return {?}\n     */\n    function (topic) {\n        return this.connection$.pipe(onTopic(topic), toJSON());\n    };\n    StompService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    StompService.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [STOMP_CONFIGURATION,] },] },\n        { type: undefined, decorators: [{ type: Inject, args: [STOMP_JS,] },] },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    ]; };\n    return StompService;\n}());\nexport { StompService };\nfunction StompService_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    StompService.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    StompService.ctorParameters;\n    /** @type {?} */\n    StompService.prototype.cl;\n    /** @type {?} */\n    StompService.prototype.connection$;\n    /** @type {?} */\n    StompService.prototype.conf;\n    /** @type {?} */\n    StompService.prototype.stomp;\n}\n/**\n * @param {?} topic\n * @return {?}\n */\nfunction onTopic(topic) {\n    return concatMap(function (c) {\n        return Observable.create(function (observer) {\n            var /** @type {?} */ subscription = c.subscribe(topic, function (v) { return observer.next(v); }, {});\n            return function () {\n                subscription.unsubscribe();\n            };\n        });\n    });\n}\n/**\n * @template T\n * @return {?}\n */\nfunction toJSON() {\n    return map(function (m) { return JSON.parse(m.body); });\n}\n/**\n * @param {?} stomp\n * @param {?} c\n * @param {?} url\n * @param {?} loc\n * @return {?}\n */\nfunction initClient(stomp, c, url, loc) {\n    if (c) {\n        return stomp.over(c);\n    }\n    var /** @type {?} */ urlNormalized = normalizeUrl(url, loc);\n    console.log(urlNormalized);\n    return stomp.client(urlNormalized);\n}\n/**\n * @param {?} isActivated\n * @return {?}\n */\nfunction initDebug(isActivated) {\n    return isActivated ? console.log : function () { };\n}\n/**\n * @param {?} client\n * @param {?} config\n * @return {?}\n */\nfunction initConnection(client, config) {\n    var /** @type {?} */ c$ = Observable.create(function (obs) {\n        client.connect(config.login, config.password, function () { return obs.next(client); }, function (e) { return obs.error(e); }, config.vhost);\n    })\n        .pipe(publishReplay(1));\n    c$.connect();\n    return c$;\n}\n/**\n * @param {?} url\n * @param {?} loc\n * @return {?}\n */\nfunction normalizeUrl(url, loc) {\n    if (url == null) {\n        throw new Error('No url found for web-socket');\n    }\n    if (url.startsWith('/')) {\n        return toWsProtocol(loc.protocol) + '//' + loc.hostname + ':' + loc.port + url;\n    }\n    try {\n        return new URL(url).toString();\n    }\n    catch (/** @type {?} */ e) {\n        console.error(e);\n        throw new Error(\"Url with format \" + url + \" not handle for now. Should be complete or start with /\");\n    }\n}\n/**\n * @param {?} protocol\n * @return {?}\n */\nfunction toWsProtocol(protocol) {\n    return 'http:' === protocol ? 'ws:' : 'wss:';\n}\n//# sourceMappingURL=stomp.service.js.map",
		"/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { NgModule } from '@angular/core';\nimport { STOMP_CONFIGURATION, STOMP_JS } from './configuration';\nimport { StompService } from './stomp.service';\nimport * as StompJS from 'stompjs';\n/**\n * @return {?}\n */\nexport function stompJsFactory() {\n    return StompJS;\n}\nvar NgxStompModule = (function () {\n    function NgxStompModule() {\n    }\n    /**\n     * @param {?} config\n     * @return {?}\n     */\n    NgxStompModule.withConfig = /**\n     * @param {?} config\n     * @return {?}\n     */\n    function (config) {\n        return {\n            ngModule: NgxStompModule,\n            providers: [\n                { provide: STOMP_CONFIGURATION, useValue: config },\n                { provide: STOMP_JS, useFactory: stompJsFactory },\n                StompService\n            ]\n        };\n    };\n    NgxStompModule.decorators = [\n        { type: NgModule, args: [{},] },\n    ];\n    /** @nocollapse */\n    NgxStompModule.ctorParameters = function () { return []; };\n    return NgxStompModule;\n}());\nexport { NgxStompModule };\nfunction NgxStompModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    NgxStompModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    NgxStompModule.ctorParameters;\n}\n//# sourceMappingURL=stomp.module.js.map",
		"/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nexport { stompJsFactory, NgxStompModule } from './stomp.module';\nexport { StompService } from './stomp.service';\nexport { STOMP_CONFIGURATION, STOMP_JS } from './configuration';\n//# sourceMappingURL=index.js.map",
		"/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { stompJsFactory, NgxStompModule, StompService, STOMP_CONFIGURATION, STOMP_JS } from './index';\n//# sourceMappingURL=ngx-stomp.js.map"
	],
	"names": [
		"InjectionToken",
		"Injectable",
		"Inject",
		"DOCUMENT",
		"concatMap",
		"Observable",
		"map",
		"publishReplay",
		"NgModule"
	],
	"mappings": "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"
}
