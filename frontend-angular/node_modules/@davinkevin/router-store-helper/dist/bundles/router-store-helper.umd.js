(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@ngrx/effects'), require('rxjs/operators'), require('@angular/common'), require('rxjs/Observable'), require('@angular/router'), require('@ngrx/router-store')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@ngrx/effects', 'rxjs/operators', '@angular/common', 'rxjs/Observable', '@angular/router', '@ngrx/router-store'], factory) :
	(factory((global['router-store-helper'] = {}),global.ng.core,global.ngrx.effects,global.Rx.operators,global.ng.common,global.Rx,global.ng.router,global.ngrx.routerStore));
}(this, (function (exports,core,effects,operators,common,Observable,router,routerStore) { 'use strict';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/** @enum {string} */
var LocationActions = {
    go: '[Location] go',
    forward: '[Location] forward',
    back: '[Location] back',
};
var LocationGoAction = /** @class */ (function () {
    function LocationGoAction(path, query) {
        this.path = path;
        this.query = query;
        this.type = LocationActions.go;
    }
    return LocationGoAction;
}());
var LocationForwardAction = /** @class */ (function () {
    function LocationForwardAction() {
        this.type = LocationActions.forward;
    }
    return LocationForwardAction;
}());
var LocationBackAction = /** @class */ (function () {
    function LocationBackAction() {
        this.type = LocationActions.back;
    }
    return LocationBackAction;
}());

var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var LocationEffects = /** @class */ (function () {
    function LocationEffects(actions$, location) {
        var _this = this;
        this.actions$ = actions$;
        this.location = location;
        this.go$ = this.actions$
            .pipe(effects.ofType(LocationActions.go), operators.tap(function (_a) {
            var path = _a.path, query = _a.query;
            return _this.location.go(path, query);
        }));
        this.forward$ = this.actions$
            .pipe(effects.ofType(LocationActions.forward), operators.tap(function () { return _this.location.forward(); }));
        this.back$ = this.actions$
            .pipe(effects.ofType(LocationActions.back), operators.tap(function () { return _this.location.back(); }));
    }
    LocationEffects.decorators = [
        { type: core.Injectable },
    ];
    /** @nocollapse */
    LocationEffects.ctorParameters = function () { return [
        { type: effects.Actions, },
        { type: common.Location, },
    ]; };
    __decorate([
        effects.Effect({ dispatch: false }),
        __metadata("design:type", Observable.Observable)
    ], LocationEffects.prototype, "go$", void 0);
    __decorate([
        effects.Effect({ dispatch: false }),
        __metadata("design:type", Observable.Observable)
    ], LocationEffects.prototype, "forward$", void 0);
    __decorate([
        effects.Effect({ dispatch: false }),
        __metadata("design:type", Observable.Observable)
    ], LocationEffects.prototype, "back$", void 0);
    return LocationEffects;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var LocationStoreHelperModule = /** @class */ (function () {
    function LocationStoreHelperModule() {
    }
    LocationStoreHelperModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [
                        common.CommonModule,
                        effects.EffectsModule.forFeature([LocationEffects])
                    ],
                    exports: [effects.EffectsModule]
                },] },
    ];
    /** @nocollapse */
    LocationStoreHelperModule.ctorParameters = function () { return []; };
    return LocationStoreHelperModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * @record
 */

var SimpleRouterStateSerializer = /** @class */ (function () {
    function SimpleRouterStateSerializer() {
    }
    /**
     * @param {?} routerState
     * @return {?}
     */
    SimpleRouterStateSerializer.prototype.serialize = /**
     * @param {?} routerState
     * @return {?}
     */
    function (routerState) {
        var /** @type {?} */ route = routerState.root;
        while (route.firstChild) {
            route = route.firstChild;
        }
        var url = routerState.url, queryParams = routerState.root.queryParams;
        var params = route.params;
        return { url: url, params: params, queryParams: queryParams };
    };
    return SimpleRouterStateSerializer;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/** @enum {string} */
var RouterActions = {
    navigate: '[Router] navigate',
    navigateByUrl: '[Router] navigateByUrl',
};
var RouterNavigateAction = /** @class */ (function () {
    function RouterNavigateAction(commands, extras) {
        this.commands = commands;
        this.extras = extras;
        this.type = RouterActions.navigate;
    }
    return RouterNavigateAction;
}());
var RouterNavigateByUrlAction = /** @class */ (function () {
    function RouterNavigateByUrlAction(url, extras) {
        this.url = url;
        this.extras = extras;
        this.type = RouterActions.navigateByUrl;
    }
    return RouterNavigateByUrlAction;
}());

var __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata$1 = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var RouterEffects = /** @class */ (function () {
    function RouterEffects(actions$, router$$1) {
        var _this = this;
        this.actions$ = actions$;
        this.router = router$$1;
        this.navigate$ = this.actions$
            .pipe(effects.ofType(RouterActions.navigate), operators.tap(function (_a) {
            var commands = _a.commands, extras = _a.extras;
            return _this.router.navigate(commands, extras);
        }));
        this.navigateByUrl$ = this.actions$
            .pipe(effects.ofType(RouterActions.navigateByUrl), operators.tap(function (_a) {
            var url = _a.url, extras = _a.extras;
            return _this.router.navigateByUrl(url, extras);
        }));
    }
    RouterEffects.decorators = [
        { type: core.Injectable },
    ];
    /** @nocollapse */
    RouterEffects.ctorParameters = function () { return [
        { type: effects.Actions, },
        { type: router.Router, },
    ]; };
    __decorate$1([
        effects.Effect({ dispatch: false }),
        __metadata$1("design:type", Observable.Observable)
    ], RouterEffects.prototype, "navigate$", void 0);
    __decorate$1([
        effects.Effect({ dispatch: false }),
        __metadata$1("design:type", Observable.Observable)
    ], RouterEffects.prototype, "navigateByUrl$", void 0);
    return RouterEffects;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var RouterStoreHelperModule = /** @class */ (function () {
    function RouterStoreHelperModule() {
    }
    RouterStoreHelperModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [
                        common.CommonModule,
                        effects.EffectsModule.forFeature([RouterEffects])
                    ],
                    providers: [
                        { provide: routerStore.RouterStateSerializer, useClass: SimpleRouterStateSerializer }
                    ],
                    exports: [effects.EffectsModule]
                },] },
    ];
    /** @nocollapse */
    RouterStoreHelperModule.ctorParameters = function () { return []; };
    return RouterStoreHelperModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */

exports.LocationActions = LocationActions;
exports.LocationGoAction = LocationGoAction;
exports.LocationForwardAction = LocationForwardAction;
exports.LocationBackAction = LocationBackAction;
exports.LocationEffects = LocationEffects;
exports.LocationStoreHelperModule = LocationStoreHelperModule;
exports.SimpleRouterStateSerializer = SimpleRouterStateSerializer;
exports.RouterActions = RouterActions;
exports.RouterNavigateAction = RouterNavigateAction;
exports.RouterNavigateByUrlAction = RouterNavigateByUrlAction;
exports.RouterEffects = RouterEffects;
exports.RouterStoreHelperModule = RouterStoreHelperModule;

Object.defineProperty(exports, '__esModule', { value: true });

})));
