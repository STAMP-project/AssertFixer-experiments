import { takeUntil } from 'rxjs/operators';
import { Subject as Subject$1 } from 'rxjs/Subject';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var CompanionComponent = /** @class */ (function () {
    function CompanionComponent() {
        this.observable = new Subject$1();
        this.takeUntil = takeUntil(this.observable);
    }
    /**
     * @return {?}
     */
    CompanionComponent.prototype.untilDestroy = /**
     * @return {?}
     */
    function () {
        var _this = this;
        return function () { return _this.takeUntil; };
    };
    /**
     * @return {?}
     */
    CompanionComponent.prototype.destroy = /**
     * @return {?}
     */
    function () {
        this.observable.next();
        this.observable.complete();
    };
    return CompanionComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */

export { CompanionComponent };
