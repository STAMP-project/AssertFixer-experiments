{
  "repository": {
    "name": "matsim-org/matsim",
    "githubId": 39812341,
    "url": "https://github.com/matsim-org/matsim",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": false,
    "pullRequestId": 0
  },
  "builds": {
    "buggyBuild": {
      "id": 411325557,
      "url": "http://travis-ci.org/matsim-org/matsim/builds/411325557",
      "date": "Aug 2, 2018 5:09:05 PM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Aug 2, 2018 5:11:06 PM",
    "reproductionDateEnd": "Aug 2, 2018 6:17:07 PM",
    "totalDuration": 3957,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 388,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          388
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 1221,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          0,
          1221
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 342,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          342
        ]
      }
    },
    "projectRootPomPath": "./workspace/matsim-org/matsim/411325557/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "projectMetrics": {
    "numberModules": 40,
    "numberSourceFiles": 3586,
    "numberTestFiles": 660,
    "numberLibrariesFailingModule": 84
  },
  "tests": {
    "failingModule": "/root/workspace/matsim-org/matsim/411325557/contribs/freight",
    "overallMetrics": {
      "numberRunning": 1591,
      "numberPassing": 1560,
      "numberFailing": 0,
      "numberErroring": 31,
      "numberSkipping": 10,
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true,
          "occurrences": 30
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "isError": true,
          "occurrences": 1
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierVehicleTypeLoaderTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "org.matsim.contrib.freight.jsprit.TestMatsimTransformer",
        "numberRunning": 22,
        "numberPassing": 21,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlReaderV2Test",
        "numberRunning": 12,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 12,
        "numberSkipping": 0
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanWriterTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlWriterV2Test",
        "numberRunning": 11,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 11,
        "numberSkipping": 0
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanReaderTest",
        "numberRunning": 4,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanWriterTest",
        "testMethod": "testCarrierPlanWriterWrites",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlReaderV2Test",
        "testMethod": "test_whenReadingCarrier_itReadsFleetSizeCorrectly",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlReaderV2Test",
        "testMethod": "test_whenReadingCarrierWithFiniteFleet_itSetsFleetSizeCorrectly",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanReaderTest",
        "testMethod": "testCarrierPlanReaderDoesSomething",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlReaderV2Test",
        "testMethod": "test_whenReadingCarrier_itReadsShipmentsCorrectly",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanReaderTest",
        "testMethod": "testReaderReadsScoreAndSelectedPlanCorrectly",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlWriterV2Test",
        "testMethod": "test_whenReadingCarrier_itReadsFleetSizeCorrectly",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlReaderV2Test",
        "testMethod": "test_whenReadingCarrier_itSelectsPlansCorrectly",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlReaderV2Test",
        "testMethod": "test_whenReadingCarrier_itReadsVehiclesCorrectly",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlReaderV2Test",
        "testMethod": "test_whenReadingToursOfPlan3_nuOfActivitiesIsCorrect",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlReaderV2Test",
        "testMethod": "test_whenReadingToursOfPlan1_nuOfActivitiesIsCorrect",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlWriterV2Test",
        "testMethod": "test_whenReadingCarrier_itReadsVehiclesCorrectly",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlReaderV2Test",
        "testMethod": "test_whenReadingCarrier_itReadsTypeIdsCorrectly",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlWriterV2Test",
        "testMethod": "test_whenReadingCarrier_itReadsShipmentsCorrectly",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierVehicleTypeLoaderTest",
        "testMethod": "test_whenLoadingTypes_allAssignmentsInMediumVehicleAreCorrectly",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlReaderV2Test",
        "testMethod": "test_whenReadingPlans_nuOfToursIsCorrect",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlWriterV2Test",
        "testMethod": "test_whenReadingServices_nuOfServicesIsCorrect",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlWriterV2Test",
        "testMethod": "test_whenReadingCarrier_itReadsTypeIdsCorrectly",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlWriterV2Test",
        "testMethod": "test_whenReadingToursOfPlan2_nuOfActivitiesIsCorrect",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlReaderV2Test",
        "testMethod": "test_whenReadingServices_nuOfServicesIsCorrect",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlReaderV2Test",
        "testMethod": "test_whenReadingCarrier_itReadsPlansCorrectly",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.jsprit.TestMatsimTransformer",
        "testMethod": "createVehicleRoutingProblemBuilderWithShipments_isMadeCorrectly",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "vehicle routing problem already contains a service or shipment with id shipment1. make sure you use unique ids for all services and shipments",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlWriterV2Test",
        "testMethod": "test_whenReadingPlans_nuOfToursIsCorrect",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanReaderTest",
        "testMethod": "testReaderReadsUnScoredAndUnselectedPlanCorrectly",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlWriterV2Test",
        "testMethod": "test_whenReadingToursOfPlan3_nuOfActivitiesIsCorrect",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlWriterV2Test",
        "testMethod": "test_whenReadingCarrier_itReadsPlansCorrectly",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlReaderV2Test",
        "testMethod": "test_whenReadingToursOfPlan2_nuOfActivitiesIsCorrect",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlWriterV2Test",
        "testMethod": "test_whenReadingToursOfPlan1_nuOfActivitiesIsCorrect",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanReaderTest",
        "testMethod": "testReaderReadsCorrectly",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierPlanXmlWriterV2Test",
        "testMethod": "test_whenReadingCarrier_itSelectsPlansCorrectly",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "org.matsim.contrib.freight.carrier.CarrierVehicleTypeLoaderTest",
        "testMethod": "test_whenLoadingTypes_allAssignmentsInLightVehicleAreCorrectly",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      }
    ]
  },
  "commits": {
    "buggyBuild": {
      "repoName": "matsim-org/matsim",
      "branchName": "freight_shipments",
      "sha": "ed3efe629135f8591e3c80041d199b58ca340c9b",
      "url": "http://github.com/matsim-org/matsim/commit/ed3efe629135f8591e3c80041d199b58ca340c9b",
      "date": "Aug 2, 2018 4:54:00 PM"
    }
  },
  "type": "only_fail"
}