{
  "repository": {
    "name": "spring-cloud/spring-cloud-stream",
    "githubId": 38764029,
    "url": "https://github.com/spring-cloud/spring-cloud-stream",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": true,
    "pullRequestId": 1428
  },
  "builds": {
    "buggyBuild": {
      "id": 411977877,
      "url": "http://travis-ci.org/spring-cloud/spring-cloud-stream/builds/411977877",
      "date": "Aug 4, 2018 3:39:04 AM"
    }
  },
  "commits": {
    "buggyBuild": {
      "repoName": "spring-cloud/spring-cloud-stream",
      "branchName": "master",
      "sha": "4e787edbb45fbab987a3bff9172e347543f8ac88",
      "url": "http://github.com/spring-cloud/spring-cloud-stream/commit/4e787edbb45fbab987a3bff9172e347543f8ac88",
      "date": "Aug 4, 2018 3:33:08 AM"
    },
    "buggyBuildForkRepo": {
      "repoName": "sobychacko/spring-cloud-stream",
      "branchName": "gh-1426",
      "sha": "16fa044a23982a7a88737dad0f94977d9b5e711e",
      "url": "https://github.com/sobychacko/spring-cloud-stream/commit/16fa044a23982a7a88737dad0f94977d9b5e711e",
      "date": "Aug 4, 2018 3:33:08 AM"
    },
    "buggyBuildBaseRepo": {
      "repoName": "spring-cloud/spring-cloud-stream",
      "branchName": "master",
      "sha": "fa1b6257d5d4a723765d5c477f1682401e8a3a23",
      "url": "https://github.com/spring-cloud/spring-cloud-stream/commit/fa1b6257d5d4a723765d5c477f1682401e8a3a23",
      "date": "Jul 25, 2018 8:02:16 PM"
    }
  },
  "tests": {
    "failingModule": "/root/workspace/spring-cloud/spring-cloud-stream/411977877/spring-cloud-stream",
    "overallMetrics": {
      "numberRunning": 116,
      "numberPassing": 55,
      "numberFailing": 1,
      "numberErroring": 60,
      "numberSkipping": 1,
      "failures": [
        {
          "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
          "isError": true,
          "occurrences": 15
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "isError": true,
          "occurrences": 32
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "isError": true,
          "occurrences": 13
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false,
          "occurrences": 1
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "org.springframework.cloud.stream.config.SpelExpressionConverterConfigurationTests",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.ExtendedPropertiesBinderAwareChannelResolverTests",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.LifecycleBinderTests",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "numberRunning": 26,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 26,
        "numberSkipping": 0
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.ErrorBindingTests",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.springframework.cloud.stream.binding.InvalidBindingConfigurationTests",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.SourceBindingWithBindingTargetsTests",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.InputOutputBindingOrderTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.SinkBindingWithDefaultTargetsTests",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.SourceBindingWithGlobalPropertiesTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.ArbitraryInterfaceWithBindingTargetsTests",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.springframework.cloud.stream.interceptor.BoundChannelsInterceptedTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.springframework.cloud.stream.binding.CustomPartitionedProducerTest",
        "numberRunning": 4,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.SourceBindingWithDefaultsTests",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.ProcessorBindingWithBindingTargetsTests",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.PollableConsumerTests",
        "numberRunning": 8,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 8,
        "numberSkipping": 0
      },
      {
        "testClass": "org.springframework.cloud.stream.config.BindingServiceConfigurationTests",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.SourceBindingWithGlobalPropertiesOnlyTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.springframework.cloud.stream.partitioning.PartitionedConsumerTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.SinkBindingWithDefaultsTests",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.BinderAwareChannelResolverTests",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.ArbitraryInterfaceWithDefaultsTests",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.ProcessorBindingsWithDefaultsTests",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "stringToMapMessageStreamListenerOriginalContentType",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.PollableConsumerTests",
        "testMethod": "testEmbedded",
        "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
        "detail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.ArbitraryInterfaceWithBindingTargetsTests",
        "testMethod": "testArbitraryInterfaceChannelsBound",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binding.CustomPartitionedProducerTest",
        "testMethod": "testCustomPartitionedProducer",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.utils.MockBinderRegistryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "_toStringDefaultContentTypePropertyUnknownContentType",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "stringToMapStreamListener",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "kryo_pojoToPojoContentTypeHeader",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "pojoMessageToStringMessageServiceActivator",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.BinderAwareChannelResolverTests",
        "testMethod": "resolveNonRegisteredChannel",
        "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
        "detail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.ProcessorBindingsWithDefaultsTests",
        "testMethod": "testSourceOutputChannelBound",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.config.BindingServiceConfigurationTests",
        "testMethod": "valdateImportedConfiguartionHandlerPostProcessing",
        "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
        "detail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "pojoToByteArray",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.ExtendedPropertiesBinderAwareChannelResolverTests",
        "testMethod": "resolveNonRegisteredChannel",
        "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
        "detail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "byteArrayToPojoInboundContentTypeBinding",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.ExtendedPropertiesBinderAwareChannelResolverTests",
        "testMethod": "propertyPassthrough",
        "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
        "detail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.SinkBindingWithDefaultTargetsTests",
        "testMethod": "testSourceOutputChannelBound",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binding.CustomPartitionedProducerTest",
        "testMethod": "testCustomPartitionedProducerAsSingletons",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.utils.MockBinderRegistryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "toCollectionWithParameterizedType",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "byteArrayToByteArrayInboundOutboundContentTypeBinding",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "customMessageConverter_defaultContentTypeBinding",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.PollableConsumerTests",
        "testMethod": "testConvertMap",
        "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
        "detail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "byteArrayToByteArray",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.ErrorBindingTests",
        "testMethod": "testErrorChannelNotBoundByDefault",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.utils.MockBinderRegistryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "pojoToPojo",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "byteArrayMessageToStringMessageStreamListener",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.SourceBindingWithGlobalPropertiesOnlyTest",
        "testMethod": "testGlobalPropertiesSet",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binding.CustomPartitionedProducerTest",
        "testMethod": "testCustomPartitionedProducerByName",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.utils.MockBinderRegistryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "stringToPojoInboundContentTypeHeader",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.ArbitraryInterfaceWithDefaultsTests",
        "testMethod": "testArbitraryInterfaceChannelsBound",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.BinderAwareChannelResolverTests",
        "testMethod": "resolveChannel",
        "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
        "detail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.InputOutputBindingOrderTest",
        "testMethod": "testInputOutputBindingOrder",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.utils.MockBinderRegistryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "stringToMapMessageStreamListener",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.SourceBindingWithDefaultsTests",
        "testMethod": "testSourceOutputChannelBound",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.PollableConsumerTests",
        "testMethod": "testConvertSimple",
        "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
        "detail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.SourceBindingWithGlobalPropertiesTest",
        "testMethod": "testGlobalPropertiesSet",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.interceptor.BoundChannelsInterceptedTest",
        "testMethod": "testBoundChannelsIntercepted",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.SourceBindingWithBindingTargetsTests",
        "testMethod": "testSourceOutputChannelBound",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "pojoToStringOutboundContentTypeBinding",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.PollableConsumerTests",
        "testMethod": "testConvertList",
        "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
        "detail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "kryo_pojoToPojo",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.LifecycleBinderTests",
        "testMethod": "testOnlySmartLifecyclesStarted",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.utils.MockBinderRegistryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "overrideMessageConverter_defaultContentTypeBinding",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "byteArrayToPojoInboundContentTypeHeader",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.config.SpelExpressionConverterConfigurationTests",
        "testMethod": "converterCorrectlyInstalled",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.BinderAwareChannelResolverTests",
        "testMethod": "propertyPassthrough",
        "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
        "detail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "stringToPojoInboundContentTypeBinding",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.PollableConsumerTests",
        "testMethod": "testConvertSimpler",
        "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
        "detail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.ProcessorBindingWithBindingTargetsTests",
        "testMethod": "testSourceOutputChannelBound",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.PollableConsumerTests",
        "testMethod": "testErrors",
        "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
        "detail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "_jsonToPojoWrongDefaultContentTypeProperty",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.ExtendedPropertiesBinderAwareChannelResolverTests",
        "testMethod": "resolveChannel",
        "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
        "detail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "byteArrayMessageToStringJsonMessageStreamListener",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "pojoMessageToStringMessage",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "pojoToByteArrayOutboundContentTypeBinding",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.SinkBindingWithDefaultsTests",
        "testMethod": "testSourceOutputChannelBound",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "pojoToString",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binding.InvalidBindingConfigurationTests",
        "testMethod": "testDuplicateBeanByBindingConfig",
        "failureName": "java.lang.AssertionError",
        "detail": " Expecting:  \u003c\"Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.utils.MockBinderRegistryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.\"\u003e to contain:  \u003c\"bean definition with this name already exists\"\u003e ",
        "isError": false
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.PollableConsumerTests",
        "testMethod": "testErrorsNoRetry",
        "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
        "detail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.partitioning.PartitionedConsumerTest",
        "testMethod": "testBindingPartitionedConsumer",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Failed to load ApplicationContext",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.PollableConsumerTests",
        "testMethod": "testSimple",
        "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
        "detail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
        "isError": true
      },
      {
        "testClass": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
        "testMethod": "withInternalPipeline",
        "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
        "detail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
        "isError": true
      }
    ]
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Aug 4, 2018 3:43:11 AM",
    "reproductionDateEnd": "Aug 4, 2018 3:48:31 AM",
    "totalDuration": 315,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 5,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          5
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 239,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          3,
          236
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 42,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          42
        ]
      }
    },
    "projectRootPomPath": "./workspace/spring-cloud/spring-cloud-stream/411977877/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "projectMetrics": {
    "numberModules": 10,
    "numberSourceFiles": 185,
    "numberTestFiles": 121,
    "numberLibrariesFailingModule": 70
  },
  "type": "only_fail"
}