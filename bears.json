{
  "projectMetrics": {
    "numberModules": 75,
    "numberSourceFiles": 965,
    "numberTestFiles": 592,
    "numberLibrariesFailingModule": 91
  },
  "tests": {
    "failingModule": "/root/workspace/apache/incubator-servicecomb-java-chassis/438213371/metrics/metrics-core",
    "overallMetrics": {
      "numberRunning": 2116,
      "numberPassing": 2112,
      "numberFailing": 4,
      "numberErroring": 0,
      "numberSkipping": 5,
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "isError": false,
          "occurrences": 4
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "org.apache.servicecomb.metrics.core.publish.TestDefaultLogPublisher",
        "numberRunning": 5,
        "numberPassing": 4,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "org.apache.servicecomb.metrics.core.TestInvocationMetersInitializer",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 2,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "org.apache.servicecomb.metrics.core.publish.TestInvocationPublishModelFactory",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "org.apache.servicecomb.metrics.core.publish.TestDefaultLogPublisher",
        "testMethod": "onPolledEvent",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c...   test\nconsumer:\n  [tps     latency(ms) max-latency(ms) operation\n  rest.OK:\n  10      10.000      0.000           op\n  10      10.000      0.000           \nproducer:\n  tps     latency(ms) max-latency(ms) queue(ms) max-queue(ms) execute(ms) max-execute(ms) operation\n  rest.OK:\n  10      10.000      0.000           10.000    0.000         10.000      0.000           op\n  10      10.000      0.000           10.000    0.000         10.000      0.000          ] \n\u003e but was:\u003c...   test\nconsumer:\n  [simple:\n    status          tps           latency                                    operation\n    rest.OK         10            10.000/0.000                               op\n                    10            10.000/0.000                               (summary)\n  details:\n    op:\n      rest.OK:\n        prepare          :                        handlersReq :                        clientFiltersReq:                        sendReq     : \n        getConnect       :                        writeBuf    :                        waitResp        :                        wakeConsumer: \n        clientFiltersResp:                        handlersResp: \nproducer:\n  simple:\n    status          tps           latency                                    operation\n    rest.OK         10            10.000/0.000                               op\n                    10            10.000/0.000                               (summary)\n  details:\n    op:\n      rest.OK:\n        prepare:                        queue       : 10.000/0.000           filtersReq :                        handlersReq: \n        execute: 10.000/0.000           handlersResp:                        filtersResp:                        sendResp   :] \n\u003e",
        "isError": false
      },
      {
        "testClass": "org.apache.servicecomb.metrics.core.TestInvocationMetersInitializer",
        "testMethod": "consumerInvocation",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c...role\u003dCONSUMER:stage\u003d[total:statistic\u003dcount:status\u003d0:transport\u003drest,0,2.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dCONSUMER:stage\u003dtotal:statistic\u003dtotalTime:status\u003d0:transport\u003drest,0,18].0)]\u003e but was:\u003c...role\u003dCONSUMER:stage\u003d[consumer_wait_response:statistic\u003dcount:status\u003d0:transport\u003drest,0,2.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dCONSUMER:stage\u003dconsumer_wait_response:statistic\u003dtotalTime:status\u003d0:transport\u003drest,0,0.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dCONSUMER:stage\u003dconsumer_write_to_buf:statistic\u003dcount:status\u003d0:transport\u003drest,0,2.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dCONSUMER:stage\u003dconsumer_write_to_buf:statistic\u003dtotalTime:status\u003d0:transport\u003drest,0,0.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dCONSUMER:stage\u003dclient_filters_request:statistic\u003dcount:status\u003d0:transport\u003drest,0,2.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dCONSUMER:stage\u003dclient_filters_request:statistic\u003dtotalTime:status\u003d0:transport\u003drest,0,0.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dCONSUMER:stage\u003dtotal:statistic\u003dcount:status\u003d0:transport\u003drest,0,2.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dCONSUMER:stage\u003dtotal:statistic\u003dtotalTime:status\u003d0:transport\u003drest,0,0.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dCONSUMER:stage\u003dclient_filters_response:statistic\u003dcount:status\u003d0:transport\u003drest,0,2.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dCONSUMER:stage\u003dclient_filters_response:statistic\u003dtotalTime:status\u003d0:transport\u003drest,0,0.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dCONSUMER:stage\u003dconsumer_send_request:statistic\u003dcount:status\u003d0:transport\u003drest,0,2.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dCONSUMER:stage\u003dconsumer_send_request:statistic\u003dtotalTime:status\u003d0:transport\u003drest,0,0.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dCONSUMER:stage\u003dhandlers_request:statistic\u003dcount:status\u003d0:transport\u003drest,0,2.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dCONSUMER:stage\u003dhandlers_request:statistic\u003dtotalTime:status\u003d0:transport\u003drest,0,0.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dCONSUMER:stage\u003dhandlers_response:statistic\u003dcount:status\u003d0:transport\u003drest,0,2.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dCONSUMER:stage\u003dhandlers_response:statistic\u003dtotalTime:status\u003d0:transport\u003drest,0,0.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dCONSUMER:stage\u003dconsumer_wake_consumer:statistic\u003dcount:status\u003d0:transport\u003drest,0,2.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dCONSUMER:stage\u003dconsumer_wake_consumer:statistic\u003dtotalTime:status\u003d0:transport\u003drest,0,0.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dCONSUMER:stage\u003dconsumer_get_connection:statistic\u003dcount:status\u003d0:transport\u003drest,0,2.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dCONSUMER:stage\u003dconsumer_get_connection:statistic\u003dtotalTime:status\u003d0:transport\u003drest,0,0.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dCONSUMER:stage\u003dprepare:statistic\u003dcount:status\u003d0:transport\u003drest,0,2.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dCONSUMER:stage\u003dprepare:statistic\u003dtotalTime:status\u003d0:transport\u003drest,0,0].0)]\u003e",
        "isError": false
      },
      {
        "testClass": "org.apache.servicecomb.metrics.core.TestInvocationMetersInitializer",
        "testMethod": "producerInvocation",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c...\u003d0:transport\u003drest,0,[14.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dPRODUCER:stage\u003dtotal:statistic\u003dcount:status\u003d0:transport\u003drest,0,2.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dPRODUCER:stage\u003dtotal:statistic\u003dtotalTime:status\u003d0:transport\u003drest,0,18.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dPRODUCER:stage\u003dqueue:statistic\u003dcount:status\u003d0:transport\u003drest,0,2.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dPRODUCER:stage\u003dqueue:statistic\u003dtotalTime:status\u003d0:transport\u003drest,0,4].0)]\u003e but was:\u003c...\u003d0:transport\u003drest,0,[0.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dPRODUCER:stage\u003dprepare:statistic\u003dcount:status\u003d0:transport\u003drest,0,2.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dPRODUCER:stage\u003dprepare:statistic\u003dtotalTime:status\u003d0:transport\u003drest,0,0.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dPRODUCER:stage\u003dtotal:statistic\u003dcount:status\u003d0:transport\u003drest,0,2.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dPRODUCER:stage\u003dtotal:statistic\u003dtotalTime:status\u003d0:transport\u003drest,0,0.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dPRODUCER:stage\u003dhandlers_request:statistic\u003dcount:status\u003d0:transport\u003drest,0,2.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dPRODUCER:stage\u003dhandlers_request:statistic\u003dtotalTime:status\u003d0:transport\u003drest,0,0.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dPRODUCER:stage\u003dhandlers_response:statistic\u003dcount:status\u003d0:transport\u003drest,0,2.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dPRODUCER:stage\u003dhandlers_response:statistic\u003dtotalTime:status\u003d0:transport\u003drest,0,0.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dPRODUCER:stage\u003dproducer_send_response:statistic\u003dcount:status\u003d0:transport\u003drest,0,2.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dPRODUCER:stage\u003dproducer_send_response:statistic\u003dtotalTime:status\u003d0:transport\u003drest,0,0.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dPRODUCER:stage\u003dqueue:statistic\u003dcount:status\u003d0:transport\u003drest,0,2.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dPRODUCER:stage\u003dqueue:statistic\u003dtotalTime:status\u003d0:transport\u003drest,0,0.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dPRODUCER:stage\u003dserver_filters_request:statistic\u003dcount:status\u003d0:transport\u003drest,0,2.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dPRODUCER:stage\u003dserver_filters_request:statistic\u003dtotalTime:status\u003d0:transport\u003drest,0,0.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dPRODUCER:stage\u003dserver_filters_response:statistic\u003dcount:status\u003d0:transport\u003drest,0,2.0), Measurement(servicecomb.invocation:operation\u003dm.s.o:role\u003dPRODUCER:stage\u003dserver_filters_response:statistic\u003dtotalTime:status\u003d0:transport\u003drest,0,0].0)]\u003e",
        "isError": false
      },
      {
        "testClass": "org.apache.servicecomb.metrics.core.publish.TestInvocationPublishModelFactory",
        "testMethod": "createDefaultPublishModel",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c...:\"m.s.o\",\"stages\":{\"[total\":{\"tps\":1,\"msTotalTime\":10000.0,\"msMaxLatency\":0.0}}}],\"summary\":{\"operation\":\"\",\"stages\":{\"total\":{\"tps\":1,\"msTotalTime\":1000]0.0,\"msMaxLatency\":0...\u003e but was:\u003c...:\"m.s.o\",\"stages\":{\"[client_filters_request\":{\"tps\":0,\"msTotalTime\":0.0,\"msMaxLatency\":0.0},\"prepare\":{\"tps\":0,\"msTotalTime\":0.0,\"msMaxLatency\":0.0},\"consumer_send_request\":{\"tps\":0,\"msTotalTime\":0.0,\"msMaxLatency\":0.0},\"total\":{\"tps\":1,\"msTotalTime\":10000.0,\"msMaxLatency\":0.0},\"handlers_request\":{\"tps\":0,\"msTotalTime\":0.0,\"msMaxLatency\":0.0},\"consumer_wait_response\":{\"tps\":0,\"msTotalTime\":0.0,\"msMaxLatency\":0.0},\"client_filters_response\":{\"tps\":0,\"msTotalTime\":0.0,\"msMaxLatency\":0.0},\"handlers_response\":{\"tps\":0,\"msTotalTime\":0.0,\"msMaxLatency\":0.0},\"consumer_get_connection\":{\"tps\":0,\"msTotalTime\":0.0,\"msMaxLatency\":0.0},\"consumer_wake_consumer\":{\"tps\":0,\"msTotalTime\":0.0,\"msMaxLatency\":0.0},\"consumer_write_to_buf\":{\"tps\":0,\"msTotalTime\":0.0,\"msMaxLatency\":0.0}}}],\"summary\":{\"operation\":\"\",\"stages\":{\"prepare\":{\"tps\":0,\"msTotalTime\":0.0,\"msMaxLatency\":0.0},\"client_filters_request\":{\"tps\":0,\"msTotalTime\":0.0,\"msMaxLatency\":0.0},\"total\":{\"tps\":1,\"msTotalTime\":10000.0,\"msMaxLatency\":0.0},\"consumer_send_request\":{\"tps\":0,\"msTotalTime\":0.0,\"msMaxLatency\":0.0},\"handlers_request\":{\"tps\":0,\"msTotalTime\":0.0,\"msMaxLatency\":0.0},\"handlers_response\":{\"tps\":0,\"msTotalTime\":0.0,\"msMaxLatency\":0.0},\"client_filters_response\":{\"tps\":0,\"msTotalTime\":0.0,\"msMaxLatency\":0.0},\"consumer_wait_response\":{\"tps\":0,\"msTotalTime\":0.0,\"msMaxLatency\":0.0},\"consumer_get_connection\":{\"tps\":0,\"msTotalTime\":0.0,\"msMaxLatency\":0.0},\"consumer_write_to_buf\":{\"tps\":0,\"msTotalTime\":0.0,\"msMaxLatency\":0.0},\"consumer_wake_consumer\":{\"tps\":0,\"msTotalTime\":]0.0,\"msMaxLatency\":0...\u003e",
        "isError": false
      }
    ]
  },
  "commits": {
    "buggyBuild": {
      "repoName": "apache/incubator-servicecomb-java-chassis",
      "branchName": "master",
      "sha": "10d391ec234cd07297bf4b2aa9065ba97bb5bf64",
      "url": "http://github.com/apache/incubator-servicecomb-java-chassis/commit/10d391ec234cd07297bf4b2aa9065ba97bb5bf64",
      "date": "Oct 7, 2018 11:11:19 AM"
    },
    "buggyBuildForkRepo": {
      "repoName": "heyile/incubator-servicecomb-java-chassis",
      "branchName": "metrics_apm",
      "sha": "9e6bb68d3da66a4c4c3ff81282ff40616f585e54",
      "url": "https://github.com/heyile/incubator-servicecomb-java-chassis/commit/9e6bb68d3da66a4c4c3ff81282ff40616f585e54",
      "date": "Oct 7, 2018 11:11:19 AM"
    },
    "buggyBuildBaseRepo": {
      "repoName": "apache/incubator-servicecomb-java-chassis",
      "branchName": "master",
      "sha": "6aadae0de82b3b3940f0c163b815d6675aedc2bc",
      "url": "https://github.com/apache/incubator-servicecomb-java-chassis/commit/6aadae0de82b3b3940f0c163b815d6675aedc2bc",
      "date": "Sep 29, 2018 3:30:42 AM"
    }
  },
  "repository": {
    "name": "apache/incubator-servicecomb-java-chassis",
    "githubId": 91674936,
    "url": "https://github.com/apache/incubator-servicecomb-java-chassis",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": true,
    "pullRequestId": 944
  },
  "builds": {
    "buggyBuild": {
      "id": 438213371,
      "url": "http://travis-ci.org/apache/incubator-servicecomb-java-chassis/builds/438213371",
      "date": "Oct 7, 2018 11:25:51 AM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Oct 7, 2018 11:25:23 AM",
    "reproductionDateEnd": "Oct 7, 2018 11:30:56 AM",
    "totalDuration": 328,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 9,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          9
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 83,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          3,
          80
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 209,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          209
        ]
      }
    },
    "projectRootPomPath": "./workspace/apache/incubator-servicecomb-java-chassis/438213371/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "type": "only_fail"
}