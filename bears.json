{
  "tests": {
    "failingModule": "/root/workspace/matero/ae/435127099/web-processor",
    "overallMetrics": {
      "numberRunning": 37,
      "numberPassing": 35,
      "numberFailing": 2,
      "numberErroring": 0,
      "numberSkipping": 0,
      "failures": [
        {
          "failureName": "com.google.common.truth.Truth$AssertionErrorWithCause",
          "isError": false,
          "occurrences": 2
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "ae.routes.processor.RoutesProcessingTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 2,
        "numberErroring": 0,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "ae.routes.processor.RoutesProcessingTest",
        "testMethod": "should_compile_with_roles_constraints_defined on should_compile_with_roles_constraints_defined(ae.routes.processor.RoutesProcessingTest)",
        "failureName": "com.google.common.truth.Truth$AssertionErrorWithCause",
        "detail": "Not true that \u003c/SOURCE_OUTPUT/processor/test/RolesRouter.java\u003e is equivalent to \u003c/root/workspace/matero/ae/435127099/web-processor/target/test-classes/generated/routes/RolesRouter.java\u003e.\n\nDiffs:\n\u003d\u003d\u003d\u003d\u003d\u003d\n\nFound 4 nodes that differed in expected and actual trees. \n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 19 COMPILATION_UNIT-\u003eCLASS(RolesRouter)-\u003eVARIABLE(GET_processor_test_FooController_index)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/api/v1/foo)\n  Actual node: Line 19 COMPILATION_UNIT-\u003eCLASS(RolesRouter)-\u003eVARIABLE(GET_processor_test_FooController_index)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/api/v1/foo)\n  Expected literal value to be \u003capp/api/v1/foo\u003e but was \u003c/app/api/v1/foo\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 21 COMPILATION_UNIT-\u003eCLASS(RolesRouter)-\u003eVARIABLE(GET_processor_test_FooController_htmlIndex)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/foo)\n  Actual node: Line 21 COMPILATION_UNIT-\u003eCLASS(RolesRouter)-\u003eVARIABLE(GET_processor_test_FooController_htmlIndex)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/foo)\n  Expected literal value to be \u003capp/foo\u003e but was \u003c/app/foo\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 23 COMPILATION_UNIT-\u003eCLASS(RolesRouter)-\u003eVARIABLE(GET_processor_test_FooController_create)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/foo/create)\n  Actual node: Line 23 COMPILATION_UNIT-\u003eCLASS(RolesRouter)-\u003eVARIABLE(GET_processor_test_FooController_create)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/foo/create)\n  Expected literal value to be \u003capp/foo/create\u003e but was \u003c/app/foo/create\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 25 COMPILATION_UNIT-\u003eCLASS(RolesRouter)-\u003eVARIABLE(POST_processor_test_FooController_save)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/api/v1/foo)\n  Actual node: Line 25 COMPILATION_UNIT-\u003eCLASS(RolesRouter)-\u003eVARIABLE(POST_processor_test_FooController_save)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/api/v1/foo)\n  Expected literal value to be \u003capp/api/v1/foo\u003e but was \u003c/app/api/v1/foo\u003e.\n\n\nExpected Source:\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\npackage processor.test;\n\nimport ae.web.Route;\nimport ae.web.RouterWithRoleConstraintsServlet;\nimport java.io.IOException;\nimport javax.annotation.Generated;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\n@Generated(\n    value \u003d \"AE/web-processor\",\n    comments \u003d \"\",\n    date \u003d \"2017-02-23\"\n)\nabstract class RolesRouter extends RouterWithRoleConstraintsServlet {\n  private static final long serialVersionUID \u003d 1487851200000L;\n\n  private final Route GET_processor_test_FooController_index \u003d new Route(\"app/api/v1/foo\");\n\n  private final Route GET_processor_test_FooController_htmlIndex \u003d new Route(\"app/foo\");\n\n  private final Route GET_processor_test_FooController_create \u003d new Route(\"app/foo/create\");\n\n  private final Route POST_processor_test_FooController_save \u003d new Route(\"app/api/v1/foo\");\n\n  @Override\n  public void doGet(final HttpServletRequest request, final HttpServletResponse response) throws\n      ServletException, IOException {\n    if (GET_processor_test_FooController_index.matches(request)) {\n      handle(new FooController(request, response), (controller) -\u003e controller.index());\n      return;\n    }\n    if (loggedUserHas(\"r1\") \u0026\u0026 GET_processor_test_FooController_htmlIndex.matches(request)) {\n      handle(new FooController(request, response, webContext(request, response), templateEngine()), (controller) -\u003e controller.htmlIndex());\n      return;\n    }\n    if (loggedUserHasOneOf(\"r1\", \"r2\") \u0026\u0026 GET_processor_test_FooController_create.matches(request)) {\n      handle(new FooController(request, response, webContext(request, response), templateEngine()), (controller) -\u003e controller.create());\n      return;\n    }\n    unhandledGet(request, response);\n  }\n\n  @Override\n  public void doPost(final HttpServletRequest request, final HttpServletResponse response) throws\n      ServletException, IOException {\n    if (POST_processor_test_FooController_save.matches(request)) {\n      handle(new FooController(request, response), (controller) -\u003e controller.save());\n      return;\n    }\n    unhandledPost(request, response);\n  }\n}\n\n\nActual Source:\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\npackage processor.test;\n\nimport ae.web.Route;\nimport ae.web.RouterWithRoleConstraintsServlet;\nimport java.io.IOException;\nimport javax.annotation.Generated;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\n@Generated(\n    value \u003d \"AE/web-processor\",\n    comments \u003d \"\",\n    date \u003d \"2017-02-23\"\n)\nabstract class RolesRouter extends RouterWithRoleConstraintsServlet {\n  private static final long serialVersionUID \u003d 1487851200000L;\n\n  private final Route GET_processor_test_FooController_index \u003d new Route(\"/app/api/v1/foo\");\n\n  private final Route GET_processor_test_FooController_htmlIndex \u003d new Route(\"/app/foo\");\n\n  private final Route GET_processor_test_FooController_create \u003d new Route(\"/app/foo/create\");\n\n  private final Route POST_processor_test_FooController_save \u003d new Route(\"/app/api/v1/foo\");\n\n  @Override\n  public void doGet(final HttpServletRequest request, final HttpServletResponse response) throws\n      ServletException, IOException {\n    if (GET_processor_test_FooController_index.matches(request)) {\n      handle(new FooController(request, response), (controller) -\u003e controller.index());\n      return;\n    }\n    if (loggedUserHas(\"r1\") \u0026\u0026 GET_processor_test_FooController_htmlIndex.matches(request)) {\n      handle(new FooController(request, response, webContext(request, response), templateEngine()), (controller) -\u003e controller.htmlIndex());\n      return;\n    }\n    if (loggedUserHasOneOf(\"r1\", \"r2\") \u0026\u0026 GET_processor_test_FooController_create.matches(request)) {\n      handle(new FooController(request, response, webContext(request, response), templateEngine()), (controller) -\u003e controller.create());\n      return;\n    }\n    unhandledGet(request, response);\n  }\n\n  @Override\n  public void doPost(final HttpServletRequest request, final HttpServletResponse response) throws\n      ServletException, IOException {\n    if (POST_processor_test_FooController_save.matches(request)) {\n      handle(new FooController(request, response), (controller) -\u003e controller.save());\n      return;\n    }\n    unhandledPost(request, response);\n  }\n}\n",
        "isError": false
      },
      {
        "testClass": "ae.routes.processor.RoutesProcessingTest",
        "testMethod": "should_compile_multiple_verb_routes on should_compile_multiple_verb_routes(ae.routes.processor.RoutesProcessingTest)",
        "failureName": "com.google.common.truth.Truth$AssertionErrorWithCause",
        "detail": "Not true that \u003c/SOURCE_OUTPUT/processor/test/SigexRouter.java\u003e is equivalent to \u003c/root/workspace/matero/ae/435127099/web-processor/target/test-classes/generated/routes/SigexRouter.java\u003e.\n\nDiffs:\n\u003d\u003d\u003d\u003d\u003d\u003d\n\nFound 32 nodes that differed in expected and actual trees. \n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 24 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_ClientController_htmlIndex)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app)\n  Actual node: Line 24 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_ClientController_htmlIndex)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app)\n  Expected literal value to be \u003capp\u003e but was \u003c/app\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 26 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_ClientController_index)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/api/v1)\n  Actual node: Line 26 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_ClientController_index)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/api/v1)\n  Expected literal value to be \u003capp/api/v1\u003e but was \u003c/app/api/v1\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 28 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_BookController_index)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/api/v1/book)\n  Actual node: Line 28 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_BookController_index)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/api/v1/book)\n  Expected literal value to be \u003capp/api/v1/book\u003e but was \u003c/app/api/v1/book\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 30 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_BookController_bar)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/api/v1/book/bar/{id}/{cursor}/{arg})\n  Actual node: Line 30 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_BookController_bar)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/api/v1/book/bar/{id}/{cursor}/{arg})\n  Expected literal value to be \u003capp/api/v1/book/bar/{id}/{cursor}/{arg}\u003e but was \u003c/app/api/v1/book/bar/{id}/{cursor}/{arg}\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 30 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_BookController_bar)-\u003eNEW_CLASS-\u003eMETHOD_INVOCATION-\u003eSTRING_LITERAL(app/api/v1/book/bar/(?\u003cp0\u003e[^/]+)/(?\u003cp1\u003e[^/]+)/(?\u003cp2\u003e[^/]+))\n  Actual node: Line 30 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_BookController_bar)-\u003eNEW_CLASS-\u003eMETHOD_INVOCATION-\u003eSTRING_LITERAL(/app/api/v1/book/bar/(?\u003cp0\u003e[^/]+)/(?\u003cp1\u003e[^/]+)/(?\u003cp2\u003e[^/]+))\n  Expected literal value to be \u003capp/api/v1/book/bar/(?\u003cp0\u003e[^/]+)/(?\u003cp1\u003e[^/]+)/(?\u003cp2\u003e[^/]+)\u003e but was \u003c/app/api/v1/book/bar/(?\u003cp0\u003e[^/]+)/(?\u003cp1\u003e[^/]+)/(?\u003cp2\u003e[^/]+)\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 32 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_BookController_create)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/api/v1/book/create)\n  Actual node: Line 32 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_BookController_create)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/api/v1/book/create)\n  Expected literal value to be \u003capp/api/v1/book/create\u003e but was \u003c/app/api/v1/book/create\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 34 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_BookController_foo)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/api/v1/book/foo/{id}/{arg})\n  Actual node: Line 34 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_BookController_foo)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/api/v1/book/foo/{id}/{arg})\n  Expected literal value to be \u003capp/api/v1/book/foo/{id}/{arg}\u003e but was \u003c/app/api/v1/book/foo/{id}/{arg}\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 34 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_BookController_foo)-\u003eNEW_CLASS-\u003eMETHOD_INVOCATION-\u003eSTRING_LITERAL(app/api/v1/book/foo/(?\u003cp0\u003e[^/]+)/(?\u003cp1\u003e[^/]+))\n  Actual node: Line 34 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_BookController_foo)-\u003eNEW_CLASS-\u003eMETHOD_INVOCATION-\u003eSTRING_LITERAL(/app/api/v1/book/foo/(?\u003cp0\u003e[^/]+)/(?\u003cp1\u003e[^/]+))\n  Expected literal value to be \u003capp/api/v1/book/foo/(?\u003cp0\u003e[^/]+)/(?\u003cp1\u003e[^/]+)\u003e but was \u003c/app/api/v1/book/foo/(?\u003cp0\u003e[^/]+)/(?\u003cp1\u003e[^/]+)\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 36 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_Gym_index)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/api/v1/gym)\n  Actual node: Line 36 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_Gym_index)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/api/v1/gym)\n  Expected literal value to be \u003capp/api/v1/gym\u003e but was \u003c/app/api/v1/gym\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 38 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_Gym_create)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/api/v1/gym/create)\n  Actual node: Line 38 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_Gym_create)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/api/v1/gym/create)\n  Expected literal value to be \u003capp/api/v1/gym/create\u003e but was \u003c/app/api/v1/gym/create\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 40 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_Gym_show)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/api/v1/gym/{id})\n  Actual node: Line 40 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_Gym_show)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/api/v1/gym/{id})\n  Expected literal value to be \u003capp/api/v1/gym/{id}\u003e but was \u003c/app/api/v1/gym/{id}\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 40 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_Gym_show)-\u003eNEW_CLASS-\u003eMETHOD_INVOCATION-\u003eSTRING_LITERAL(app/api/v1/gym/(?\u003cp0\u003e[^/]+))\n  Actual node: Line 40 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_Gym_show)-\u003eNEW_CLASS-\u003eMETHOD_INVOCATION-\u003eSTRING_LITERAL(/app/api/v1/gym/(?\u003cp0\u003e[^/]+))\n  Expected literal value to be \u003capp/api/v1/gym/(?\u003cp0\u003e[^/]+)\u003e but was \u003c/app/api/v1/gym/(?\u003cp0\u003e[^/]+)\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 42 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_BookController_htmlIndex)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/book)\n  Actual node: Line 42 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_BookController_htmlIndex)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/book)\n  Expected literal value to be \u003capp/book\u003e but was \u003c/app/book\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 44 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_BookController_show)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/book/{id})\n  Actual node: Line 44 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_BookController_show)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/book/{id})\n  Expected literal value to be \u003capp/book/{id}\u003e but was \u003c/app/book/{id}\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 44 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_BookController_show)-\u003eNEW_CLASS-\u003eMETHOD_INVOCATION-\u003eSTRING_LITERAL(app/book/(?\u003cp0\u003e[^/]+))\n  Actual node: Line 44 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_BookController_show)-\u003eNEW_CLASS-\u003eMETHOD_INVOCATION-\u003eSTRING_LITERAL(/app/book/(?\u003cp0\u003e[^/]+))\n  Expected literal value to be \u003capp/book/(?\u003cp0\u003e[^/]+)\u003e but was \u003c/app/book/(?\u003cp0\u003e[^/]+)\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 46 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_BookController_edit)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/book/{id}/edit)\n  Actual node: Line 46 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_BookController_edit)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/book/{id}/edit)\n  Expected literal value to be \u003capp/book/{id}/edit\u003e but was \u003c/app/book/{id}/edit\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 46 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_BookController_edit)-\u003eNEW_CLASS-\u003eMETHOD_INVOCATION-\u003eSTRING_LITERAL(app/book/(?\u003cp0\u003e[^/]+)/edit)\n  Actual node: Line 46 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_BookController_edit)-\u003eNEW_CLASS-\u003eMETHOD_INVOCATION-\u003eSTRING_LITERAL(/app/book/(?\u003cp0\u003e[^/]+)/edit)\n  Expected literal value to be \u003capp/book/(?\u003cp0\u003e[^/]+)/edit\u003e but was \u003c/app/book/(?\u003cp0\u003e[^/]+)/edit\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 48 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_ClientController_create)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/create)\n  Actual node: Line 48 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_ClientController_create)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/create)\n  Expected literal value to be \u003capp/create\u003e but was \u003c/app/create\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 50 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_Gym_htmlIndex)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/gym)\n  Actual node: Line 50 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_Gym_htmlIndex)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/gym)\n  Expected literal value to be \u003capp/gym\u003e but was \u003c/app/gym\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 52 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_Gym_edit)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/gym/{id}/edit)\n  Actual node: Line 52 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_Gym_edit)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/gym/{id}/edit)\n  Expected literal value to be \u003capp/gym/{id}/edit\u003e but was \u003c/app/gym/{id}/edit\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 52 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_Gym_edit)-\u003eNEW_CLASS-\u003eMETHOD_INVOCATION-\u003eSTRING_LITERAL(app/gym/(?\u003cp0\u003e[^/]+)/edit)\n  Actual node: Line 52 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(GET_processor_test_Gym_edit)-\u003eNEW_CLASS-\u003eMETHOD_INVOCATION-\u003eSTRING_LITERAL(/app/gym/(?\u003cp0\u003e[^/]+)/edit)\n  Expected literal value to be \u003capp/gym/(?\u003cp0\u003e[^/]+)/edit\u003e but was \u003c/app/gym/(?\u003cp0\u003e[^/]+)/edit\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 54 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(POST_processor_test_ClientController_save)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/api/v1)\n  Actual node: Line 54 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(POST_processor_test_ClientController_save)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/api/v1)\n  Expected literal value to be \u003capp/api/v1\u003e but was \u003c/app/api/v1\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 56 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(POST_processor_test_BookController_save)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/api/v1/book)\n  Actual node: Line 56 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(POST_processor_test_BookController_save)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/api/v1/book)\n  Expected literal value to be \u003capp/api/v1/book\u003e but was \u003c/app/api/v1/book\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 58 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(POST_processor_test_Gym_save)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/api/v1/gym)\n  Actual node: Line 58 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(POST_processor_test_Gym_save)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/api/v1/gym)\n  Expected literal value to be \u003capp/api/v1/gym\u003e but was \u003c/app/api/v1/gym\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 60 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(PUT_processor_test_BookController_update)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/api/v1/book/{id})\n  Actual node: Line 60 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(PUT_processor_test_BookController_update)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/api/v1/book/{id})\n  Expected literal value to be \u003capp/api/v1/book/{id}\u003e but was \u003c/app/api/v1/book/{id}\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 60 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(PUT_processor_test_BookController_update)-\u003eNEW_CLASS-\u003eMETHOD_INVOCATION-\u003eSTRING_LITERAL(app/api/v1/book/(?\u003cp0\u003e[^/]+))\n  Actual node: Line 60 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(PUT_processor_test_BookController_update)-\u003eNEW_CLASS-\u003eMETHOD_INVOCATION-\u003eSTRING_LITERAL(/app/api/v1/book/(?\u003cp0\u003e[^/]+))\n  Expected literal value to be \u003capp/api/v1/book/(?\u003cp0\u003e[^/]+)\u003e but was \u003c/app/api/v1/book/(?\u003cp0\u003e[^/]+)\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 62 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(PUT_processor_test_Gym_update)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/api/v1/gym/{id})\n  Actual node: Line 62 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(PUT_processor_test_Gym_update)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/api/v1/gym/{id})\n  Expected literal value to be \u003capp/api/v1/gym/{id}\u003e but was \u003c/app/api/v1/gym/{id}\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 62 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(PUT_processor_test_Gym_update)-\u003eNEW_CLASS-\u003eMETHOD_INVOCATION-\u003eSTRING_LITERAL(app/api/v1/gym/(?\u003cp0\u003e[^/]+))\n  Actual node: Line 62 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(PUT_processor_test_Gym_update)-\u003eNEW_CLASS-\u003eMETHOD_INVOCATION-\u003eSTRING_LITERAL(/app/api/v1/gym/(?\u003cp0\u003e[^/]+))\n  Expected literal value to be \u003capp/api/v1/gym/(?\u003cp0\u003e[^/]+)\u003e but was \u003c/app/api/v1/gym/(?\u003cp0\u003e[^/]+)\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 64 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(DELETE_processor_test_BookController_delete)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/api/v1/book/{id})\n  Actual node: Line 64 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(DELETE_processor_test_BookController_delete)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/api/v1/book/{id})\n  Expected literal value to be \u003capp/api/v1/book/{id}\u003e but was \u003c/app/api/v1/book/{id}\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 64 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(DELETE_processor_test_BookController_delete)-\u003eNEW_CLASS-\u003eMETHOD_INVOCATION-\u003eSTRING_LITERAL(app/api/v1/book/(?\u003cp0\u003e[^/]+))\n  Actual node: Line 64 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(DELETE_processor_test_BookController_delete)-\u003eNEW_CLASS-\u003eMETHOD_INVOCATION-\u003eSTRING_LITERAL(/app/api/v1/book/(?\u003cp0\u003e[^/]+))\n  Expected literal value to be \u003capp/api/v1/book/(?\u003cp0\u003e[^/]+)\u003e but was \u003c/app/api/v1/book/(?\u003cp0\u003e[^/]+)\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 66 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(DELETE_processor_test_Gym_delete)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(app/api/v1/gym/{id})\n  Actual node: Line 66 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(DELETE_processor_test_Gym_delete)-\u003eNEW_CLASS-\u003eSTRING_LITERAL(/app/api/v1/gym/{id})\n  Expected literal value to be \u003capp/api/v1/gym/{id}\u003e but was \u003c/app/api/v1/gym/{id}\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 66 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(DELETE_processor_test_Gym_delete)-\u003eNEW_CLASS-\u003eMETHOD_INVOCATION-\u003eSTRING_LITERAL(app/api/v1/gym/(?\u003cp0\u003e[^/]+))\n  Actual node: Line 66 COMPILATION_UNIT-\u003eCLASS(SigexRouter)-\u003eVARIABLE(DELETE_processor_test_Gym_delete)-\u003eNEW_CLASS-\u003eMETHOD_INVOCATION-\u003eSTRING_LITERAL(/app/api/v1/gym/(?\u003cp0\u003e[^/]+))\n  Expected literal value to be \u003capp/api/v1/gym/(?\u003cp0\u003e[^/]+)\u003e but was \u003c/app/api/v1/gym/(?\u003cp0\u003e[^/]+)\u003e.\n\n\nExpected Source:\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\npackage processor.test;\n\nimport ae.web.Interpret;\nimport ae.web.OAuth2Flow;\nimport ae.web.ParameterizedRoute;\nimport ae.web.Route;\nimport ae.web.RouterServlet;\nimport com.google.appengine.api.datastore.Cursor;\nimport java.io.IOException;\nimport java.util.regex.Pattern;\nimport javax.annotation.Generated;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\n@Generated(\n    value \u003d \"AE/web-processor\",\n    comments \u003d \"\",\n    date \u003d \"2017-02-23\"\n)\nabstract class SigexRouter extends RouterServlet {\n  private static final long serialVersionUID \u003d 1487851200000L;\n\n  private final Route GET_processor_test_ClientController_htmlIndex \u003d new Route(\"app\");\n\n  private final Route GET_processor_test_ClientController_index \u003d new Route(\"app/api/v1\");\n\n  private final Route GET_processor_test_BookController_index \u003d new Route(\"app/api/v1/book\");\n\n  private final ParameterizedRoute GET_processor_test_BookController_bar \u003d new ParameterizedRoute(\"app/api/v1/book/bar/{id}/{cursor}/{arg}\", Pattern.compile(\"app/api/v1/book/bar/(?\u003cp0\u003e[^/]+)/(?\u003cp1\u003e[^/]+)/(?\u003cp2\u003e[^/]+)\"));\n\n  private final Route GET_processor_test_BookController_create \u003d new Route(\"app/api/v1/book/create\");\n\n  private final ParameterizedRoute GET_processor_test_BookController_foo \u003d new ParameterizedRoute(\"app/api/v1/book/foo/{id}/{arg}\", Pattern.compile(\"app/api/v1/book/foo/(?\u003cp0\u003e[^/]+)/(?\u003cp1\u003e[^/]+)\"));\n\n  private final Route GET_processor_test_Gym_index \u003d new Route(\"app/api/v1/gym\");\n\n  private final Route GET_processor_test_Gym_create \u003d new Route(\"app/api/v1/gym/create\");\n\n  private final ParameterizedRoute GET_processor_test_Gym_show \u003d new ParameterizedRoute(\"app/api/v1/gym/{id}\", Pattern.compile(\"app/api/v1/gym/(?\u003cp0\u003e[^/]+)\"));\n\n  private final Route GET_processor_test_BookController_htmlIndex \u003d new Route(\"app/book\");\n\n  private final ParameterizedRoute GET_processor_test_BookController_show \u003d new ParameterizedRoute(\"app/book/{id}\", Pattern.compile(\"app/book/(?\u003cp0\u003e[^/]+)\"));\n\n  private final ParameterizedRoute GET_processor_test_BookController_edit \u003d new ParameterizedRoute(\"app/book/{id}/edit\", Pattern.compile(\"app/book/(?\u003cp0\u003e[^/]+)/edit\"));\n\n  private final Route GET_processor_test_ClientController_create \u003d new Route(\"app/create\");\n\n  private final Route GET_processor_test_Gym_htmlIndex \u003d new Route(\"app/gym\");\n\n  private final ParameterizedRoute GET_processor_test_Gym_edit \u003d new ParameterizedRoute(\"app/gym/{id}/edit\", Pattern.compile(\"app/gym/(?\u003cp0\u003e[^/]+)/edit\"));\n\n  private final Route POST_processor_test_ClientController_save \u003d new Route(\"app/api/v1\");\n\n  private final Route POST_processor_test_BookController_save \u003d new Route(\"app/api/v1/book\");\n\n  private final Route POST_processor_test_Gym_save \u003d new Route(\"app/api/v1/gym\");\n\n  private final ParameterizedRoute PUT_processor_test_BookController_update \u003d new ParameterizedRoute(\"app/api/v1/book/{id}\", Pattern.compile(\"app/api/v1/book/(?\u003cp0\u003e[^/]+)\"));\n\n  private final ParameterizedRoute PUT_processor_test_Gym_update \u003d new ParameterizedRoute(\"app/api/v1/gym/{id}\", Pattern.compile(\"app/api/v1/gym/(?\u003cp0\u003e[^/]+)\"));\n\n  private final ParameterizedRoute DELETE_processor_test_BookController_delete \u003d new ParameterizedRoute(\"app/api/v1/book/{id}\", Pattern.compile(\"app/api/v1/book/(?\u003cp0\u003e[^/]+)\"));\n\n  private final ParameterizedRoute DELETE_processor_test_Gym_delete \u003d new ParameterizedRoute(\"app/api/v1/gym/{id}\", Pattern.compile(\"app/api/v1/gym/(?\u003cp0\u003e[^/]+)\"));\n\n  @Override\n  public void doGet(final HttpServletRequest request, final HttpServletResponse response) throws\n      ServletException, IOException {\n    final String[] routeParameters \u003d new String[]{null, null, null, null};\n    if (GET_processor_test_ClientController_htmlIndex.matches(request)) {\n      handle(new ClientController(request, response, webContext(request, response), templateEngine()), (controller) -\u003e controller.htmlIndex());\n      return;\n    }\n    if (GET_processor_test_ClientController_index.matches(request)) {\n      handle(new ClientController(request, response), (controller) -\u003e controller.index());\n      return;\n    }\n    if (GET_processor_test_BookController_index.matches(request)) {\n      handle(new BookController(request, response), (controller) -\u003e controller.index());\n      return;\n    }\n    if (GET_processor_test_BookController_bar.matches(request, routeParameters)) {\n      final long id \u003d Interpret.asPrimitiveLong(routeParameters[0]);\n      final Cursor c \u003d Interpret.asCursor(routeParameters[1]);\n      final String arg \u003d Interpret.asString(routeParameters[2]);\n      handle(new BookController(request, response), (controller) -\u003e controller.bar(id,c,arg));\n      return;\n    }\n    if (GET_processor_test_BookController_create.matches(request)) {\n      handle(new BookController(request, response), (controller) -\u003e controller.create());\n      return;\n    }\n    if (GET_processor_test_BookController_foo.matches(request, routeParameters)) {\n      final long id \u003d Interpret.asPrimitiveLong(routeParameters[0]);\n      final String arg \u003d Interpret.asString(routeParameters[1]);\n      handle(new BookController(request, response), (controller) -\u003e OAuth2Flow.Director.of(controller).authorize((c) -\u003e c.foo(id,arg)));\n      return;\n    }\n    if (GET_processor_test_Gym_index.matches(request)) {\n      handle(new Gym(request, response), (controller) -\u003e controller.index());\n      return;\n    }\n    if (GET_processor_test_Gym_create.matches(request)) {\n      handle(new Gym(request, response), (controller) -\u003e controller.create());\n      return;\n    }\n    if (GET_processor_test_Gym_show.matches(request, routeParameters)) {\n      final long id \u003d Interpret.asPrimitiveLong(routeParameters[0]);\n      handle(new Gym(request, response), (controller) -\u003e controller.show(id));\n      return;\n    }\n    if (GET_processor_test_BookController_htmlIndex.matches(request)) {\n      handle(new BookController(request, response, webContext(request, response), templateEngine()), (controller) -\u003e controller.htmlIndex());\n      return;\n    }\n    if (GET_processor_test_BookController_show.matches(request, routeParameters)) {\n      final long id \u003d Interpret.asPrimitiveLong(routeParameters[0]);\n      handle(new BookController(request, response, webContext(request, response), templateEngine()), (controller) -\u003e controller.show(id));\n      return;\n    }\n    if (GET_processor_test_BookController_edit.matches(request, routeParameters)) {\n      final long id \u003d Interpret.asPrimitiveLong(routeParameters[0]);\n      handle(new BookController(request, response, webContext(request, response), templateEngine()), (controller) -\u003e controller.edit(id));\n      return;\n    }\n    if (GET_processor_test_ClientController_create.matches(request)) {\n      handle(new ClientController(request, response, webContext(request, response), templateEngine()), (controller) -\u003e controller.create());\n      return;\n    }\n    if (GET_processor_test_Gym_htmlIndex.matches(request)) {\n      handle(new Gym(request, response, webContext(request, response), templateEngine()), (controller) -\u003e controller.htmlIndex());\n      return;\n    }\n    if (GET_processor_test_Gym_edit.matches(request, routeParameters)) {\n      final long id \u003d Interpret.asPrimitiveLong(routeParameters[0]);\n      handle(new Gym(request, response, webContext(request, response), templateEngine()), (controller) -\u003e controller.edit(id));\n      return;\n    }\n    unhandledGet(request, response);\n  }\n\n  @Override\n  public void doPost(final HttpServletRequest request, final HttpServletResponse response) throws\n      ServletException, IOException {\n    if (POST_processor_test_ClientController_save.matches(request)) {\n      handle(new ClientController(request, response), (controller) -\u003e controller.save());\n      return;\n    }\n    if (POST_processor_test_BookController_save.matches(request)) {\n      handle(new BookController(request, response), (controller) -\u003e controller.save());\n      return;\n    }\n    if (POST_processor_test_Gym_save.matches(request)) {\n      handle(new Gym(request, response), (controller) -\u003e controller.save());\n      return;\n    }\n    unhandledPost(request, response);\n  }\n\n  @Override\n  public void doPut(final HttpServletRequest request, final HttpServletResponse response) throws\n      ServletException, IOException {\n    final String[] routeParameters \u003d new String[]{null, null};\n    if (PUT_processor_test_BookController_update.matches(request, routeParameters)) {\n      final long id \u003d Interpret.asPrimitiveLong(routeParameters[0]);\n      handle(new BookController(request, response), (controller) -\u003e controller.update(id));\n      return;\n    }\n    if (PUT_processor_test_Gym_update.matches(request, routeParameters)) {\n      final long id \u003d Interpret.asPrimitiveLong(routeParameters[0]);\n      handle(new Gym(request, response), (controller) -\u003e controller.update(id));\n      return;\n    }\n    unhandledPut(request, response);\n  }\n\n  @Override\n  public void doDelete(final HttpServletRequest request, final HttpServletResponse response) throws\n      ServletException, IOException {\n    final String[] routeParameters \u003d new String[]{null, null};\n    if (DELETE_processor_test_BookController_delete.matches(request, routeParameters)) {\n      final long id \u003d Interpret.asPrimitiveLong(routeParameters[0]);\n      handle(new BookController(request, response), (controller) -\u003e controller.delete(id));\n      return;\n    }\n    if (DELETE_processor_test_Gym_delete.matches(request, routeParameters)) {\n      final long id \u003d Interpret.asPrimitiveLong(routeParameters[0]);\n      handle(new Gym(request, response), (controller) -\u003e controller.delete(id));\n      return;\n    }\n    unhandledDelete(request, response);\n  }\n}\n\n\nActual Source:\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\npackage processor.test;\n\nimport ae.web.Interpret;\nimport ae.web.OAuth2Flow;\nimport ae.web.ParameterizedRoute;\nimport ae.web.Route;\nimport ae.web.RouterServlet;\nimport com.google.appengine.api.datastore.Cursor;\nimport java.io.IOException;\nimport java.util.regex.Pattern;\nimport javax.annotation.Generated;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\n@Generated(\n    value \u003d \"AE/web-processor\",\n    comments \u003d \"\",\n    date \u003d \"2017-02-23\"\n)\nabstract class SigexRouter extends RouterServlet {\n  private static final long serialVersionUID \u003d 1487851200000L;\n\n  private final Route GET_processor_test_ClientController_htmlIndex \u003d new Route(\"/app\");\n\n  private final Route GET_processor_test_ClientController_index \u003d new Route(\"/app/api/v1\");\n\n  private final Route GET_processor_test_BookController_index \u003d new Route(\"/app/api/v1/book\");\n\n  private final ParameterizedRoute GET_processor_test_BookController_bar \u003d new ParameterizedRoute(\"/app/api/v1/book/bar/{id}/{cursor}/{arg}\", Pattern.compile(\"/app/api/v1/book/bar/(?\u003cp0\u003e[^/]+)/(?\u003cp1\u003e[^/]+)/(?\u003cp2\u003e[^/]+)\"));\n\n  private final Route GET_processor_test_BookController_create \u003d new Route(\"/app/api/v1/book/create\");\n\n  private final ParameterizedRoute GET_processor_test_BookController_foo \u003d new ParameterizedRoute(\"/app/api/v1/book/foo/{id}/{arg}\", Pattern.compile(\"/app/api/v1/book/foo/(?\u003cp0\u003e[^/]+)/(?\u003cp1\u003e[^/]+)\"));\n\n  private final Route GET_processor_test_Gym_index \u003d new Route(\"/app/api/v1/gym\");\n\n  private final Route GET_processor_test_Gym_create \u003d new Route(\"/app/api/v1/gym/create\");\n\n  private final ParameterizedRoute GET_processor_test_Gym_show \u003d new ParameterizedRoute(\"/app/api/v1/gym/{id}\", Pattern.compile(\"/app/api/v1/gym/(?\u003cp0\u003e[^/]+)\"));\n\n  private final Route GET_processor_test_BookController_htmlIndex \u003d new Route(\"/app/book\");\n\n  private final ParameterizedRoute GET_processor_test_BookController_show \u003d new ParameterizedRoute(\"/app/book/{id}\", Pattern.compile(\"/app/book/(?\u003cp0\u003e[^/]+)\"));\n\n  private final ParameterizedRoute GET_processor_test_BookController_edit \u003d new ParameterizedRoute(\"/app/book/{id}/edit\", Pattern.compile(\"/app/book/(?\u003cp0\u003e[^/]+)/edit\"));\n\n  private final Route GET_processor_test_ClientController_create \u003d new Route(\"/app/create\");\n\n  private final Route GET_processor_test_Gym_htmlIndex \u003d new Route(\"/app/gym\");\n\n  private final ParameterizedRoute GET_processor_test_Gym_edit \u003d new ParameterizedRoute(\"/app/gym/{id}/edit\", Pattern.compile(\"/app/gym/(?\u003cp0\u003e[^/]+)/edit\"));\n\n  private final Route POST_processor_test_ClientController_save \u003d new Route(\"/app/api/v1\");\n\n  private final Route POST_processor_test_BookController_save \u003d new Route(\"/app/api/v1/book\");\n\n  private final Route POST_processor_test_Gym_save \u003d new Route(\"/app/api/v1/gym\");\n\n  private final ParameterizedRoute PUT_processor_test_BookController_update \u003d new ParameterizedRoute(\"/app/api/v1/book/{id}\", Pattern.compile(\"/app/api/v1/book/(?\u003cp0\u003e[^/]+)\"));\n\n  private final ParameterizedRoute PUT_processor_test_Gym_update \u003d new ParameterizedRoute(\"/app/api/v1/gym/{id}\", Pattern.compile(\"/app/api/v1/gym/(?\u003cp0\u003e[^/]+)\"));\n\n  private final ParameterizedRoute DELETE_processor_test_BookController_delete \u003d new ParameterizedRoute(\"/app/api/v1/book/{id}\", Pattern.compile(\"/app/api/v1/book/(?\u003cp0\u003e[^/]+)\"));\n\n  private final ParameterizedRoute DELETE_processor_test_Gym_delete \u003d new ParameterizedRoute(\"/app/api/v1/gym/{id}\", Pattern.compile(\"/app/api/v1/gym/(?\u003cp0\u003e[^/]+)\"));\n\n  @Override\n  public void doGet(final HttpServletRequest request, final HttpServletResponse response) throws\n      ServletException, IOException {\n    final String[] routeParameters \u003d new String[]{null, null, null, null};\n    if (GET_processor_test_ClientController_htmlIndex.matches(request)) {\n      handle(new ClientController(request, response, webContext(request, response), templateEngine()), (controller) -\u003e controller.htmlIndex());\n      return;\n    }\n    if (GET_processor_test_ClientController_index.matches(request)) {\n      handle(new ClientController(request, response), (controller) -\u003e controller.index());\n      return;\n    }\n    if (GET_processor_test_BookController_index.matches(request)) {\n      handle(new BookController(request, response), (controller) -\u003e controller.index());\n      return;\n    }\n    if (GET_processor_test_BookController_bar.matches(request, routeParameters)) {\n      final long id \u003d Interpret.asPrimitiveLong(routeParameters[0]);\n      final Cursor c \u003d Interpret.asCursor(routeParameters[1]);\n      final String arg \u003d Interpret.asString(routeParameters[2]);\n      handle(new BookController(request, response), (controller) -\u003e controller.bar(id,c,arg));\n      return;\n    }\n    if (GET_processor_test_BookController_create.matches(request)) {\n      handle(new BookController(request, response), (controller) -\u003e controller.create());\n      return;\n    }\n    if (GET_processor_test_BookController_foo.matches(request, routeParameters)) {\n      final long id \u003d Interpret.asPrimitiveLong(routeParameters[0]);\n      final String arg \u003d Interpret.asString(routeParameters[1]);\n      handle(new BookController(request, response), (controller) -\u003e OAuth2Flow.Director.of(controller).authorize((c) -\u003e c.foo(id,arg)));\n      return;\n    }\n    if (GET_processor_test_Gym_index.matches(request)) {\n      handle(new Gym(request, response), (controller) -\u003e controller.index());\n      return;\n    }\n    if (GET_processor_test_Gym_create.matches(request)) {\n      handle(new Gym(request, response), (controller) -\u003e controller.create());\n      return;\n    }\n    if (GET_processor_test_Gym_show.matches(request, routeParameters)) {\n      final long id \u003d Interpret.asPrimitiveLong(routeParameters[0]);\n      handle(new Gym(request, response), (controller) -\u003e controller.show(id));\n      return;\n    }\n    if (GET_processor_test_BookController_htmlIndex.matches(request)) {\n      handle(new BookController(request, response, webContext(request, response), templateEngine()), (controller) -\u003e controller.htmlIndex());\n      return;\n    }\n    if (GET_processor_test_BookController_show.matches(request, routeParameters)) {\n      final long id \u003d Interpret.asPrimitiveLong(routeParameters[0]);\n      handle(new BookController(request, response, webContext(request, response), templateEngine()), (controller) -\u003e controller.show(id));\n      return;\n    }\n    if (GET_processor_test_BookController_edit.matches(request, routeParameters)) {\n      final long id \u003d Interpret.asPrimitiveLong(routeParameters[0]);\n      handle(new BookController(request, response, webContext(request, response), templateEngine()), (controller) -\u003e controller.edit(id));\n      return;\n    }\n    if (GET_processor_test_ClientController_create.matches(request)) {\n      handle(new ClientController(request, response, webContext(request, response), templateEngine()), (controller) -\u003e controller.create());\n      return;\n    }\n    if (GET_processor_test_Gym_htmlIndex.matches(request)) {\n      handle(new Gym(request, response, webContext(request, response), templateEngine()), (controller) -\u003e controller.htmlIndex());\n      return;\n    }\n    if (GET_processor_test_Gym_edit.matches(request, routeParameters)) {\n      final long id \u003d Interpret.asPrimitiveLong(routeParameters[0]);\n      handle(new Gym(request, response, webContext(request, response), templateEngine()), (controller) -\u003e controller.edit(id));\n      return;\n    }\n    unhandledGet(request, response);\n  }\n\n  @Override\n  public void doPost(final HttpServletRequest request, final HttpServletResponse response) throws\n      ServletException, IOException {\n    if (POST_processor_test_ClientController_save.matches(request)) {\n      handle(new ClientController(request, response), (controller) -\u003e controller.save());\n      return;\n    }\n    if (POST_processor_test_BookController_save.matches(request)) {\n      handle(new BookController(request, response), (controller) -\u003e controller.save());\n      return;\n    }\n    if (POST_processor_test_Gym_save.matches(request)) {\n      handle(new Gym(request, response), (controller) -\u003e controller.save());\n      return;\n    }\n    unhandledPost(request, response);\n  }\n\n  @Override\n  public void doPut(final HttpServletRequest request, final HttpServletResponse response) throws\n      ServletException, IOException {\n    final String[] routeParameters \u003d new String[]{null, null};\n    if (PUT_processor_test_BookController_update.matches(request, routeParameters)) {\n      final long id \u003d Interpret.asPrimitiveLong(routeParameters[0]);\n      handle(new BookController(request, response), (controller) -\u003e controller.update(id));\n      return;\n    }\n    if (PUT_processor_test_Gym_update.matches(request, routeParameters)) {\n      final long id \u003d Interpret.asPrimitiveLong(routeParameters[0]);\n      handle(new Gym(request, response), (controller) -\u003e controller.update(id));\n      return;\n    }\n    unhandledPut(request, response);\n  }\n\n  @Override\n  public void doDelete(final HttpServletRequest request, final HttpServletResponse response) throws\n      ServletException, IOException {\n    final String[] routeParameters \u003d new String[]{null, null};\n    if (DELETE_processor_test_BookController_delete.matches(request, routeParameters)) {\n      final long id \u003d Interpret.asPrimitiveLong(routeParameters[0]);\n      handle(new BookController(request, response), (controller) -\u003e controller.delete(id));\n      return;\n    }\n    if (DELETE_processor_test_Gym_delete.matches(request, routeParameters)) {\n      final long id \u003d Interpret.asPrimitiveLong(routeParameters[0]);\n      handle(new Gym(request, response), (controller) -\u003e controller.delete(id));\n      return;\n    }\n    unhandledDelete(request, response);\n  }\n}\n",
        "isError": false
      }
    ]
  },
  "commits": {
    "buggyBuild": {
      "repoName": "matero/ae",
      "branchName": "controllers",
      "sha": "f6b690761a097c8fad68ca4ca914d6833a2d96e9",
      "url": "http://github.com/matero/ae/commit/f6b690761a097c8fad68ca4ca914d6833a2d96e9",
      "date": "Sep 30, 2018 2:24:10 AM"
    }
  },
  "projectMetrics": {
    "numberModules": 8,
    "numberSourceFiles": 210,
    "numberTestFiles": 7,
    "numberLibrariesFailingModule": 49
  },
  "repository": {
    "name": "matero/ae",
    "githubId": 123438253,
    "url": "https://github.com/matero/ae",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": false,
    "pullRequestId": 0
  },
  "builds": {
    "buggyBuild": {
      "id": 435127099,
      "url": "http://travis-ci.org/matero/ae/builds/435127099",
      "date": "Sep 30, 2018 2:26:04 AM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Sep 30, 2018 2:25:32 AM",
    "reproductionDateEnd": "Sep 30, 2018 2:26:34 AM",
    "totalDuration": 59,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 3,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          3
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 31,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          0,
          31
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 14,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          14
        ]
      }
    },
    "projectRootPomPath": "./workspace/matero/ae/435127099/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "type": "only_fail"
}