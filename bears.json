{
  "repository": {
    "name": "javalite/activejdbc",
    "githubId": 10400052,
    "url": "https://github.com/javalite/activejdbc",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": false,
    "pullRequestId": 0
  },
  "builds": {
    "buggyBuild": {
      "id": 413322938,
      "url": "http://travis-ci.org/javalite/activejdbc/builds/413322938",
      "date": "Aug 7, 2018 11:44:45 PM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Aug 7, 2018 11:45:30 PM",
    "reproductionDateEnd": "Aug 8, 2018 12:16:33 AM",
    "totalDuration": 1861,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 5,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          5
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 27,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          0,
          27
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 18,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          18
        ]
      }
    },
    "projectRootPomPath": "./workspace/javalite/activejdbc/413322938/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "tests": {
    "failingModule": "/root/workspace/javalite/activejdbc/413322938/activejdbc",
    "overallMetrics": {
      "numberRunning": 502,
      "numberPassing": 196,
      "numberFailing": 0,
      "numberErroring": 306,
      "numberSkipping": 0,
      "failures": [
        {
          "failureName": "org.javalite.activejdbc.associations.NotAssociatedException",
          "isError": true,
          "occurrences": 4
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "isError": true,
          "occurrences": 35
        },
        {
          "failureName": "java.lang.Exception",
          "isError": true,
          "occurrences": 9
        },
        {
          "failureName": "org.javalite.test.jspec.TestException",
          "isError": true,
          "occurrences": 8
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "isError": true,
          "occurrences": 1
        },
        {
          "failureName": "org.javalite.activejdbc.DBException",
          "isError": true,
          "occurrences": 7
        },
        {
          "failureName": "java.lang.IndexOutOfBoundsException",
          "isError": true,
          "occurrences": 1
        },
        {
          "failureName": "java.lang.RuntimeException",
          "isError": true,
          "occurrences": 3
        },
        {
          "failureName": "org.javalite.activejdbc.InitException",
          "isError": true,
          "occurrences": 238
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "org.javalite.activejdbc.OptimisticLockingOverrideVersionColumnTest",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.AttributeLengthValidatorTest",
        "numberRunning": 9,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 9,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.AttributesAndAssociationsTest",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.C3P0PoolTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.PaginatorTest",
        "numberRunning": 10,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 10,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.LifecycleCallbackSpec",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.Defect141Test",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.PolymorphicAssociationsTest",
        "numberRunning": 10,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 10,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.CustomValidatorTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.AttributeConverterTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.CreateModelTest",
        "numberRunning": 5,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.RawPaginatorSpec",
        "numberRunning": 9,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 9,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.DeleteChildrenSpec",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.SetParentTest",
        "numberRunning": 4,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.Defect123Test",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.Defect638Test",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.test.DBSpecTest",
        "numberRunning": 6,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.PolymorphicAssociationsOverrideTest",
        "numberRunning": 7,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 7,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.ModelExistsTest",
        "numberRunning": 2,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.Many2ManyOverrideConventionsTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "numberRunning": 63,
        "numberPassing": 8,
        "numberFailing": 0,
        "numberErroring": 55,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.TimeManagementSpec",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.Many2ManyRelationshipTest",
        "numberRunning": 5,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.CompositePkTest",
        "numberRunning": 6,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.OptimisticLockingTest",
        "numberRunning": 4,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.PartitionIDSpec",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.HierarchyTest",
        "numberRunning": 3,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.CacheTest",
        "numberRunning": 12,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 12,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.BaseTest",
        "numberRunning": 9,
        "numberPassing": 8,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.LazyListTest",
        "numberRunning": 3,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.Defect48Test",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.Issue217Test",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.Defect149Test",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.Defect329Test",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.CaseSensitiveSpec",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.FreemarkerSpec",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.ScopeSpec",
        "numberRunning": 4,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.IsModelValidTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.ValidatorsTest",
        "numberRunning": 11,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 10,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.NumericValidationBuilderTest",
        "numberRunning": 6,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 6,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.ShardingSpec",
        "numberRunning": 9,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 9,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.CacheEventListenerTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.CallbackSupportTest",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.LongIdTest",
        "numberRunning": 2,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.RaceConditionTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.IncludesTest",
        "numberRunning": 15,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 14,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.ToFromXmlSpec",
        "numberRunning": 11,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 11,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.RemoveAssociatedChildTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.BelongsToParentsTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.Defect122Test",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.ConverterTest",
        "numberRunning": 19,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 19,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.Defect104Test",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.CustomConverterTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.CorrectAttributeSpec",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.Defect381_UpdateModifiedOnlyTest",
        "numberRunning": 7,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 7,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.UnmaganedIdTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.logging.JsonLog4jLayoutSpec",
        "numberRunning": 7,
        "numberPassing": 3,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.OrphanRecordTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.ToJsonSpec",
        "numberRunning": 13,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 13,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.OtherDbTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.DeleteCascadeTest",
        "numberRunning": 8,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 8,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.OffsetLimitTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.CreatedAtUpdatedAtTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.BlobTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "org.javalite.activejdbc.ValidationWithResourceBundlesTest",
        "numberRunning": 6,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 6,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "org.javalite.activejdbc.ShardingSpec",
        "testMethod": "should_access_shard_parents_in_polymorphic",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Article\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "shouldGenerateValidInsertSQLWithTime",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: alarms",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CustomConverterTest",
        "testMethod": "shouldConvertStringToInteger",
        "failureName": "org.javalite.activejdbc.DBException",
        "detail": "Cannot open a new connection because existing connection is still on current thread, name: default, connection instance: com.mchange.v2.c3p0.impl.NewProxyConnection@429bd883. This might indicate a logical error in your application.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelExistsTest",
        "testMethod": "testInstance",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "shouldCreateModelWithSingleSetter",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.AttributeLengthValidatorTest",
        "testMethod": "testNonStringFieldValueThrowsException",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Attribute: \u0027email\u0027 is not defined in model: \u0027class org.javalite.activejdbc.test_models.User. Available attributes: [ADMIN, ID, NAME, REMARKS]",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testModelFinderWithParams",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testBelongsToConvention",
        "failureName": "org.javalite.test.jspec.TestException",
        "detail": "should be true, but it is not",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CustomValidatorTest",
        "testMethod": "shouldRegisterCustomValidator",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.IncludesTest",
        "testMethod": "shouldIncludeMultipleMany2ManyOverridesOnOneModel",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Genre\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.OptimisticLockingOverrideVersionColumnTest",
        "testMethod": "shouldSetVersionToOneWhenCreatingNewRecord",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: items",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testNewFromMap",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Defect329Test",
        "testMethod": "createItEmptyModelWithVersionShouldSaveRecord",
        "failureName": "java.lang.RuntimeException",
        "detail": "java.lang.reflect.InvocationTargetException",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.LongIdTest",
        "testMethod": "shouldReturnValidLongId",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Defect381_UpdateModifiedOnlyTest",
        "testMethod": "shouldNotBeModifiedAfterFind",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Programmer\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Many2ManyOverrideConventionsTest",
        "testMethod": "test",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: students",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "shouldCollectDistictFirstNames",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: patients",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Defect122Test",
        "testMethod": "shouldNotFail",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testBatchUpdate",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PolymorphicAssociationsTest",
        "testMethod": "shouldThrowExceptionIfWrongParentTypeRequested",
        "failureName": "java.lang.Exception",
        "detail": "Unexpected exception, expected\u003cjava.lang.IllegalArgumentException\u003e but was\u003corg.javalite.activejdbc.InitException\u003e",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ShardingSpec",
        "testMethod": "should_access_shard_child_in_polymorphic",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Article\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToFromXmlSpec",
        "testMethod": "shouldIncludeOnlyProvidedAttributes",
        "failureName": "org.javalite.test.jspec.TestException",
        "detail": "Test object:\njava.lang.String \u003d\u003d \u003c\u003e\nand expected\njava.lang.String \u003d\u003d \u003cmmonroe@yahoo.com\u003e\nare not equal, but they should be.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.DeleteCascadeTest",
        "testMethod": "shouldDeleteOneToManyDeep",
        "failureName": "org.javalite.test.jspec.TestException",
        "detail": "Test object:\njava.lang.Long \u003d\u003d \u003c7\u003e\nand expected\njava.lang.Integer \u003d\u003d \u003c4\u003e\nare not equal, but they should be.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PaginatorTest",
        "testMethod": "testCurrentPage",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Item\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ConverterTest",
        "testMethod": "shouldCreateZeroAsNull",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Salary\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.C3P0PoolTest",
        "testMethod": "shouldUseConnectionFromPool",
        "failureName": "org.javalite.activejdbc.DBException",
        "detail": "org.h2.jdbc.JdbcSQLException: Table \"PEOPLE\" not found; SQL statement:\nDELETE FROM people [42102-171], query: DELETE FROM people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToFromXmlSpec",
        "testMethod": "shouldGenerateSimpleXml",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.AttributeLengthValidatorTest",
        "testMethod": "testNullFailsWhenNotAllowed",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Attribute: \u0027email\u0027 is not defined in model: \u0027class org.javalite.activejdbc.test_models.User. Available attributes: [ADMIN, ID, NAME, REMARKS]",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PolymorphicAssociationsOverrideTest",
        "testMethod": "shouldFindPolymorphicParent",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Vehicle\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToFromXmlSpec",
        "testMethod": "shouldIncludeChildren",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Address\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "shouldGenerateCorrectInsertSQLWithReplacements",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: students",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testSaveOneToManyAssociation",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: addresses",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.NumericValidationBuilderTest",
        "testMethod": "shouldAcceptNullValue",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: accounts",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ConverterTest",
        "testMethod": "shouldGetZeroAsNull",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: salaries",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testFindOrInit",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CacheTest",
        "testMethod": "testFindById",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.DeleteChildrenSpec",
        "testMethod": "shouldDeleteMany2ManyLinks",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: doctors",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PaginatorTest",
        "testMethod": "should_not_ignore_changes_in_count_after_started",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Item\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ValidatorsTest",
        "testMethod": "shouldGetErrorsCaseInsensitive",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: salaries",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testSetWrongAttribute",
        "failureName": "org.javalite.test.jspec.TestException",
        "detail": "Expected exception: class java.lang.IllegalArgumentException, but instead got: org.javalite.activejdbc.InitException: Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ConverterTest",
        "testMethod": "shouldGetConvertTimestampToString",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: students",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.IncludesTest",
        "testMethod": "shouldIncludeParentAndChildren",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: nodes",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CreateModelTest",
        "testMethod": "shouldThrowExceptionIfWrongValuePassed",
        "failureName": "java.lang.Exception",
        "detail": "Unexpected exception, expected\u003cjava.lang.IllegalArgumentException\u003e but was\u003corg.javalite.activejdbc.InitException\u003e",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.NumericValidationBuilderTest",
        "testMethod": "shouldRejectValueBelowMin",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: accounts",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testModelFindOne",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ConverterTest",
        "testMethod": "shouldSetNullTimestamp",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: students",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.OptimisticLockingOverrideVersionColumnTest",
        "testMethod": "shouldThrowExceptionWhenVersionCollisionHappens",
        "failureName": "java.lang.Exception",
        "detail": "Unexpected exception, expected\u003corg.javalite.activejdbc.StaleModelException\u003e but was\u003corg.javalite.activejdbc.InitException\u003e",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.IncludesTest",
        "testMethod": "shouldFixDefect553CacheIncludesMany2Many",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Model: org.javalite.activejdbc.test_models.Patient is not associated with: org.javalite.activejdbc.test_models.Doctor",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "shouldCollectLastNames",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CacheTest",
        "testMethod": "testCount",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CacheEventListenerTest",
        "testMethod": "shouldDelegateCachePurgeEventsToListener",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Person\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ConverterTest",
        "testMethod": "shouldConvertToDateCaseInsensitive",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: students",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PaginatorTest",
        "testMethod": "should_ignore_changes_in_count_after_started",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Item\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testLikeCondition",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToJsonSpec",
        "testMethod": "shouldIncludeUglyChildren",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Model: org.javalite.activejdbc.test_models.Address is not associated with: org.javalite.activejdbc.test_models.User",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.LifecycleCallbackSpec",
        "testMethod": "shouldResetListener",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Attribute: \u0027first_name\u0027 is not defined in model: \u0027class org.javalite.activejdbc.test_models.User. Available attributes: [ADMIN, ID, NAME, REMARKS]",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CreateModelTest",
        "testMethod": "shouldCreateModel",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Person\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToFromXmlSpec",
        "testMethod": "shouldInjectCustomContentIntoXML",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testValidatesPresenceOf",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.AttributeLengthValidatorTest",
        "testMethod": "testAllowNull",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Attribute: \u0027email\u0027 is not defined in model: \u0027class org.javalite.activejdbc.test_models.User. Available attributes: [ADMIN, ID, NAME, REMARKS]",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CompositePkTest",
        "testMethod": "shouldInsertAndUpdate",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: developers",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PartitionIDSpec",
        "testMethod": "shouldIncludePartitionColumnsIntoUPDATEAndDELETE",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: passengers",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.RemoveAssociatedChildTest",
        "testMethod": "shouldClearJoinLinksWhenChildRemovedInMany2Many",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: doctors",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.NumericValidationBuilderTest",
        "testMethod": "shouldAcceptCorrectValueForTotal",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: accounts",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ScopeSpec",
        "testMethod": "shouldCombineScopesAndConditions",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Employee\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testFindOrCreateIt",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Person\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ConverterTest",
        "testMethod": "shouldSetNullString",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: students",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ValidationWithResourceBundlesTest",
        "testMethod": "shouldPullCorrectMessageInGermanFromResourceBundle",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: schools",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CacheTest",
        "testMethod": "testFindFirst",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PaginatorTest",
        "testMethod": "testThatPaginatorIsSerializable",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Item\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "shouldGenerateCorrectInsertSQL",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: addresses",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PaginatorTest",
        "testMethod": "should_Fix_558",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Item\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.AttributesAndAssociationsTest",
        "testMethod": "shouldReturnCaseInsensitiveAttributes",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.IncludesTest",
        "testMethod": "shouldCacheIncludesMany2Many",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Model: org.javalite.activejdbc.test_models.Patient is not associated with: org.javalite.activejdbc.test_models.Doctor",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ValidatorsTest",
        "testMethod": "testPresenceValidator",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.SetParentTest",
        "testMethod": "shouldRejectUnrelatedParent",
        "failureName": "java.lang.Exception",
        "detail": "Unexpected exception, expected\u003cjava.lang.IllegalArgumentException\u003e but was\u003corg.javalite.activejdbc.InitException\u003e",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "shouldGenerateValidUpdateSQL",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: students",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.IncludesTest",
        "testMethod": "shouldFixDefect553CacheEmptyChildren",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Model: org.javalite.activejdbc.test_models.Address is not associated with: org.javalite.activejdbc.test_models.User",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.IncludesTest",
        "testMethod": "shouldBeAbleToIncludeOtherInManyToMany",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Model: org.javalite.activejdbc.test_models.Patient is not associated with: org.javalite.activejdbc.test_models.Doctor",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ConverterTest",
        "testMethod": "shouldSetAndGetTimestampAsString",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: students",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Defect149Test",
        "testMethod": "shouldNotIncludeNullValuesIntoInsertStatement",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Attribute: \u0027email\u0027 is not defined in model: \u0027class org.javalite.activejdbc.test_models.User. Available attributes: [ADMIN, ID, NAME, REMARKS]",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ConverterTest",
        "testMethod": "shouldCreateBlankStringAsNull",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Student\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToJsonSpec",
        "testMethod": "shouldEscapeDoubleQuote",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: pages",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Defect329Test",
        "testMethod": "createItEmptyModelWithVersionAndTimeShouldSaveRecord",
        "failureName": "java.lang.RuntimeException",
        "detail": "java.lang.reflect.InvocationTargetException",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ScopeSpec",
        "testMethod": "shouldUseMultipleScopes",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Employee\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToJsonSpec",
        "testMethod": "shouldGenerateFromList",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Model: org.javalite.activejdbc.test_models.Address is not associated with: org.javalite.activejdbc.test_models.User",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Defect329Test",
        "testMethod": "createItEmptyModelNoVersionShouldSaveRecord",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: animals",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.DeleteCascadeTest",
        "testMethod": "shouldDeleteMany2ManyShallow",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: doctors",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.DeleteChildrenSpec",
        "testMethod": "shouldDeleteOne2ManyChildren",
        "failureName": "org.javalite.activejdbc.associations.NotAssociatedException",
        "detail": "No association from model \u0027class org.javalite.activejdbc.test_models.User\u0027 to model \u0027class org.javalite.activejdbc.test_models.Address\u0027",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testAttemptSetId",
        "failureName": "org.javalite.test.jspec.TestException",
        "detail": "Expected exception: class java.lang.IllegalArgumentException, but instead got: org.javalite.activejdbc.InitException: Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CreatedAtUpdatedAtTest",
        "testMethod": "shouldResetUpdatedAtByInstanceMethods",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToFromXmlSpec",
        "testMethod": "shouldParseAttributesFromXml",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Defect381_UpdateModifiedOnlyTest",
        "testMethod": "shouldBeCaseInsensitive",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: programmers",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.SetParentTest",
        "testMethod": "shouldAcceptTwoParents",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Motherboard\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Many2ManyRelationshipTest",
        "testMethod": "shouldRejectUnassociatedModel",
        "failureName": "java.lang.Exception",
        "detail": "Unexpected exception, expected\u003corg.javalite.activejdbc.associations.NotAssociatedException\u003e but was\u003corg.javalite.activejdbc.InitException\u003e",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ConverterTest",
        "testMethod": "shouldSaveAndFetchDateAndTimestamp",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Student\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.IncludesTest",
        "testMethod": "shouldBeAbleToIncludeParentOne2Many",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Model: org.javalite.activejdbc.test_models.User is not associated with: org.javalite.activejdbc.test_models.Address",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.RawPaginatorSpec",
        "testMethod": "shouldCountPages",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Item\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testCreateNewAndSaveWithSomeNULLs",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.AttributesAndAssociationsTest",
        "testMethod": "shouldReturnCorrectAttributes",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ConverterTest",
        "testMethod": "shouldSetNullNumber",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: salaries",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.AttributeConverterTest",
        "testMethod": "testDateConverter",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.OtherDbTest",
        "testMethod": "shouldFindFOtherDb",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Attribute: \u0027first_name\u0027 is not defined in model: \u0027class org.javalite.activejdbc.test_models.User. Available attributes: [ADMIN, ID, NAME, REMARKS]",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CallbackSupportTest",
        "testMethod": "shouldCallbackAllMethodsOnCallbackImplementation",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: plants",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Defect381_UpdateModifiedOnlyTest",
        "testMethod": "shouldBeModifiedWhenModified",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Programmer\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testCopyFrom",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Attribute: \u0027first_name\u0027 is not defined in model: \u0027class org.javalite.activejdbc.test_models.User. Available attributes: [ADMIN, ID, NAME, REMARKS]",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CallbackSupportTest",
        "testMethod": "shouldCallBeforeAfterSaveAndDelete",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: fruits",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PolymorphicAssociationsTest",
        "testMethod": "shouldBeAbleToIncludePolymorphicParent",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: posts",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testOverrideTableName",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: legacy_universities",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.OrphanRecordTest",
        "testMethod": "shouldReturnNullIfForeignKeyPointsNonExistingParent",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Address\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToJsonSpec",
        "testMethod": "shouldGenerateSimpleJson",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.logging.JsonLog4jLayoutSpec",
        "testMethod": "shouldClearLogValues",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: animals",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.BlobTest",
        "testMethod": "shouldWriteAndReadBytesToDb",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: images",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CaseSensitiveSpec",
        "testMethod": "should_pass_with_quotes_spaces_and_CamelCase",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: \"Wild Animals\"",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CreateModelTest",
        "testMethod": "shouldCreateAndSaveModel",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Person\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ValidatorsTest",
        "testMethod": "testSaveItMethod",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Attribute: \u0027email\u0027 is not defined in model: \u0027class org.javalite.activejdbc.test_models.User. Available attributes: [ADMIN, ID, NAME, REMARKS]",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ShardingSpec",
        "testMethod": "should_access_shard_child_in_one_to_many",
        "failureName": "org.javalite.activejdbc.associations.NotAssociatedException",
        "detail": "No association from model \u0027class org.javalite.activejdbc.test_models.User\u0027 to model \u0027class org.javalite.activejdbc.test_models.Address\u0027",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ConverterTest",
        "testMethod": "shouldSetAndGetStringAsDate",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: students",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.IncludesTest",
        "testMethod": "shouldFixDefect163NeedsToIncludeChildrenAndParentsInTreeStructure",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: nodes",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ValidationWithResourceBundlesTest",
        "testMethod": "shouldReturnProvidedMessageIfNotFoundInResourceBundle",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: schools",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ValidatorsTest",
        "testMethod": "testUniquenessValidator",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Attribute: \u0027email\u0027 is not defined in model: \u0027class org.javalite.activejdbc.test_models.User. Available attributes: [ADMIN, ID, NAME, REMARKS]",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Defect48Test",
        "testMethod": "shouldFailIfParentRequestedAndForeignKeyNotSet",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "there is no association with model: class org.javalite.activejdbc.test_models.User",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.OffsetLimitTest",
        "testMethod": "testAll",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Page\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToFromXmlSpec",
        "testMethod": "shouldEscapeSpecialCharsInXMLContent",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Person\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CacheEventListenerTest",
        "testMethod": "shouldNotBreakIfListenerThrowsException",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Person\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.LazyListTest",
        "testMethod": "shouldBeEqual",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CallbackSupportTest",
        "testMethod": "shouldCallBeforeAfterValidate",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: vegetables",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToFromXmlSpec",
        "testMethod": "shouldNotFailXmlNoValue",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToJsonSpec",
        "testMethod": "shouldReturnSecondsInDateTime",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "shouldFindOneToManyViaGetter",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Attribute: \u0027addresses\u0027 is not defined in model: \u0027class org.javalite.activejdbc.test_models.User. Available attributes: [ADMIN, ID, NAME, REMARKS]",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.logging.JsonLog4jLayoutSpec",
        "testMethod": "shouldPrintJsonLogValuesAndParams",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: animals",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "shouldAcceptUpperCaseAttributeName",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PaginatorTest",
        "testMethod": "testThrowExceptionIfWrongArgument",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Item\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ShardingSpec",
        "testMethod": "shouldInsertIntoShard",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: shard1_temperatures",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ValidatorsTest",
        "testMethod": "testMessagePassing",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: salaries",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CreatedAtUpdatedAtTest",
        "testMethod": "shouldResetUpdatedAtByBatchClassMethods",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ShardingSpec",
        "testMethod": "shouldAccessDifferentTableFromSameModel",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: temperatures",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Many2ManyRelationshipTest",
        "testMethod": "shouldFindWithParamsForJoinTable",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Programmer\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.IncludesTest",
        "testMethod": "shouldBeAbleToIncludeChildrenOne2Many",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Model: org.javalite.activejdbc.test_models.Address is not associated with: org.javalite.activejdbc.test_models.User",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.RawPaginatorSpec",
        "testMethod": "should_not_ignore_changes_in_count_after_started",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Item\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToJsonSpec",
        "testMethod": "shouldSanitizeJson",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Issue217Test",
        "testMethod": "shouldReturnShort",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: readers",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToJsonSpec",
        "testMethod": "shouldIncludeParents",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: computers",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Defect104Test",
        "testMethod": "shouldNotReturnNullAttributesInMap",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ValidationWithResourceBundlesTest",
        "testMethod": "shouldGetAttributesAndErrorsCaseInsensitive",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: schools",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testInstanceDelete",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PaginatorTest",
        "testMethod": "shouldPaginateWithRawSql",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Item\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "shouldSerializeModel",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CompositePkTest",
        "testMethod": "shouldBeNew",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: developers",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.IncludesTest",
        "testMethod": "shouldNotIncludeParentIfParentIdIsNull",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: nodes",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ConverterTest",
        "testMethod": "shouldSetZeroAsNull",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: salaries",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.logging.JsonLog4jLayoutSpec",
        "testMethod": "shouldPrintJsonWithoutParams",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: animals",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CacheTest",
        "testMethod": "testCountWithParams",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.BaseTest",
        "testMethod": "shouldReturnProperNulls",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testLookupAndSave",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.logging.JsonLog4jLayoutSpec",
        "testMethod": "shouldPrintJsonWithoutParamsAndLogValues",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: animals",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testModelFinderWithListener",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Defect381_UpdateModifiedOnlyTest",
        "testMethod": "shouldBeModifiedAfterCreated",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Programmer\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.OptimisticLockingTest",
        "testMethod": "should",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: watermelons",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.RawPaginatorSpec",
        "testMethod": "testThatPaginatorIsSerializable",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Item\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ValidationWithResourceBundlesTest",
        "testMethod": "shouldPullCorrectMessageWithParametersGerman",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: schools",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ValidationWithResourceBundlesTest",
        "testMethod": "shouldPullCorrectMessageFromResourceBundle",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: schools",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.HierarchyTest",
        "testMethod": "shouldAcceptMultipleLevelsInheritance",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Cake\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ConverterTest",
        "testMethod": "shouldSetBlankStringAsNull",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: students",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.TimeManagementSpec",
        "testMethod": "shouldTurnTimeManagementOffWhenUpdating",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ValidationWithResourceBundlesTest",
        "testMethod": "shouldPullCorrectMessageWithParameters",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: schools",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PolymorphicAssociationsTest",
        "testMethod": "shouldFindAllPolymorphicChildrenWithCriteria",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: articles",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToJsonSpec",
        "testMethod": "shouldIncludeOnlyProvidedAttributes",
        "failureName": "org.javalite.test.jspec.TestException",
        "detail": "Test object:\njava.lang.String \u003d\u003d \u003c{\n  \"email\":null,\n  \"last_name\":null\n}\u003e\nand expected\njava.lang.String \u003d\u003d \u003c{\n  \"email\":\"mmonroe@yahoo.com\",\n  \"last_name\":\"Monroe\"\n}\u003e\nare not equal, but they should be.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.DeleteCascadeTest",
        "testMethod": "shouldDeletePolymorphicChildren",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: articles",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.RawPaginatorSpec",
        "testMethod": "shouldGetPage",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Item\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Many2ManyRelationshipTest",
        "testMethod": "shouldSelectManyToManyWithGetAll",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: doctors",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PolymorphicAssociationsTest",
        "testMethod": "shouldFindPolymorphicParent",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: articles",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ShardingSpec",
        "testMethod": "shouldUpdateFromShard",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: shard2_temperatures",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PaginatorTest",
        "testMethod": "testGetPage",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Item\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "shouldSerializeModelWithDirtyAttributes",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ShardingSpec",
        "testMethod": "should_access_shard_in_many_to_many",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Doctor\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.IncludesTest",
        "testMethod": "shouldNotCallDependentIfOriginatedModelQueryReturnsNoResultsForManyToMany",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Model: org.javalite.activejdbc.test_models.Patient is not associated with: org.javalite.activejdbc.test_models.Doctor",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "shouldOverrideSomeAttributesFromMap",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.NumericValidationBuilderTest",
        "testMethod": "shouldRejectValueAboveMax",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: accounts",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.OptimisticLockingTest",
        "testMethod": "shouldSetVersionToOneWhenCreatingNewRecord",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: watermelons",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CacheTest",
        "testMethod": "shouldNotPropagateCacheEventForNonCachedModels",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.NumericValidationBuilderTest",
        "testMethod": "shouldFixDefect66",
        "failureName": "java.lang.RuntimeException",
        "detail": "java.lang.reflect.InvocationTargetException",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PolymorphicAssociationsTest",
        "testMethod": "shouldInferPolymorphicNames",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: articles",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.RemoveAssociatedChildTest",
        "testMethod": "shouldDeleteChildInOneToMany",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: libraries",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.OrphanRecordTest",
        "testMethod": "shouldReturnNullIfForeignKeyIsNull",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Address\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.NumericValidationBuilderTest",
        "testMethod": "shouldRejectNonIntegerValue",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: accounts",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testCopyTo",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Attribute: \u0027first_name\u0027 is not defined in model: \u0027class org.javalite.activejdbc.test_models.User. Available attributes: [ADMIN, ID, NAME, REMARKS]",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testBelongsToMany",
        "failureName": "org.javalite.test.jspec.TestException",
        "detail": "should be true, but it is not",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.RawPaginatorSpec",
        "testMethod": "shouldLoadOnlyRequestedColumns",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Item\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ValidatorsTest",
        "testMethod": "testNumericValidator",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: accounts",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.IncludesTest",
        "testMethod": "shouldNotCallDependentIfOriginatedModelQueryReturnsNoResultsForOneToMany",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Model: org.javalite.activejdbc.test_models.Address is not associated with: org.javalite.activejdbc.test_models.User",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToJsonSpec",
        "testMethod": "shouldIncludeParent",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Model: org.javalite.activejdbc.test_models.Reader is not associated with: org.javalite.activejdbc.test_models.Book",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Defect381_UpdateModifiedOnlyTest",
        "testMethod": "shouldBeModifiedAfterFromMap",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Programmer\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.RawPaginatorSpec",
        "testMethod": "should_ignore_changes_in_count_after_started",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Item\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.RaceConditionTest",
        "testMethod": "shouldNotGetRaceCondition",
        "failureName": "java.util.concurrent.ExecutionException",
        "detail": "org.javalite.activejdbc.InitException: Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CorrectAttributeSpec",
        "testMethod": "shouldCheckAttributeExistence",
        "failureName": "java.lang.Exception",
        "detail": "Unexpected exception, expected\u003cjava.lang.IllegalArgumentException\u003e but was\u003corg.javalite.activejdbc.InitException\u003e",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CacheTest",
        "testMethod": "shouldIndicateCachedAnnotation",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testOneToMany",
        "failureName": "org.javalite.activejdbc.associations.NotAssociatedException",
        "detail": "No association from model \u0027class org.javalite.activejdbc.test_models.User\u0027 to model \u0027class org.javalite.activejdbc.test_models.Address\u0027",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ValidatorsTest",
        "testMethod": "testRegexpValidator",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Attribute: \u0027email\u0027 is not defined in model: \u0027class org.javalite.activejdbc.test_models.User. Available attributes: [ADMIN, ID, NAME, REMARKS]",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Defect381_UpdateModifiedOnlyTest",
        "testMethod": "shouldBeModifiedAfterDeletaAndThaw",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Programmer\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.RawPaginatorSpec",
        "testMethod": "testCurrentPage",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Item\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.test.DBSpecTest",
        "testMethod": "a_clean",
        "failureName": "org.javalite.activejdbc.DBException",
        "detail": "org.h2.jdbc.JdbcSQLException: Table \"PATIENTS\" not found; SQL statement:\ndelete from patients [42102-171], query: delete from patients",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ValidatorsTest",
        "testMethod": "shouldConvertEmptyStringToNull",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: accounts",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PaginatorTest",
        "testMethod": "testPageCount",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Item\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.test.DBSpecTest",
        "testMethod": "c_shouldRollBackTransactionByDefault",
        "failureName": "org.javalite.activejdbc.DBException",
        "detail": "org.h2.jdbc.JdbcSQLException: Table \"PATIENTS\" not found; SQL statement:\ninsert into patients (first_name, last_name) values (\u0027Billie\u0027, \u0027Holiday\u0027) [42102-171], query: insert into patients (first_name, last_name) values (\u0027Billie\u0027, \u0027Holiday\u0027)",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testCreateNewAndSave",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.AttributeLengthValidatorTest",
        "testMethod": "testErrorsWithInternationalization",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Attribute: \u0027email\u0027 is not defined in model: \u0027class org.javalite.activejdbc.test_models.User. Available attributes: [ADMIN, ID, NAME, REMARKS]",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToFromXmlSpec",
        "testMethod": "shouldGenerateFromList",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Model: org.javalite.activejdbc.test_models.Address is not associated with: org.javalite.activejdbc.test_models.User",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToJsonSpec",
        "testMethod": "shouldGenerateJsonForPolymorphicChildren",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: articles",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ConverterTest",
        "testMethod": "shouldSetAndGetDateAsString",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: students",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Defect381_UpdateModifiedOnlyTest",
        "testMethod": "shouldBeModifiedAfterCopyTo",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Programmer\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testBatchUpdateAll",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "shouldFindManyToOneViaGetter",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: addresses",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CacheTest",
        "testMethod": "shouldDropCacheOnRefresh",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PolymorphicAssociationsTest",
        "testMethod": "shouldFindPolymorphicParentWithInclude",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: articles",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PolymorphicAssociationsOverrideTest",
        "testMethod": "shouldFindAllPolymorphicChildren",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Vehicle\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToFromXmlSpec",
        "testMethod": "shouldGenerateXmlForPolymorphicChildren",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: articles",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.IsModelValidTest",
        "testMethod": "test",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Person\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.TimeManagementSpec",
        "testMethod": "shouldTurnTimeManagementOffWhenCreating",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ConverterTest",
        "testMethod": "shouldSetNullDate",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: students",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.DeleteCascadeTest",
        "testMethod": "shouldDeleteMany2ManyDeepSkippingAssociation",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: doctors",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.DeleteCascadeTest",
        "testMethod": "shouldDeletePolymorphicShallow",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Vehicle\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToJsonSpec",
        "testMethod": "shouldIncludePrettyChildren",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Model: org.javalite.activejdbc.test_models.Address is not associated with: org.javalite.activejdbc.test_models.User",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.DeleteCascadeTest",
        "testMethod": "shouldDeleteMany2ManyDeep",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: doctors",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CompositePkTest",
        "testMethod": "shouldGenerateValidSQL",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: developers",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToJsonSpec",
        "testMethod": "shouldInjectCustomContentIntoJson",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: posts",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "shouldGetAttributeCaseInsensitive",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PolymorphicAssociationsTest",
        "testMethod": "shouldAddPolymorphicChild",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: articles",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.DeleteCascadeTest",
        "testMethod": "shouldDeletePolymorphicChildrenDeep",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Vehicle\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Defect123Test",
        "testMethod": "test",
        "failureName": "java.lang.Exception",
        "detail": "Unexpected exception, expected\u003corg.javalite.activejdbc.StaleModelException\u003e but was\u003corg.javalite.activejdbc.InitException\u003e",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.test.DBSpecTest",
        "testMethod": "f_shouldFindRecordsFromPrevious_NOT_Rolledback_Transaction",
        "failureName": "org.javalite.activejdbc.DBException",
        "detail": "org.h2.jdbc.JdbcSQLException: Table \"PATIENTS\" not found; SQL statement:\nSELECT COUNT(*) FROM patients [42102-171], query: SELECT COUNT(*) FROM patients",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.AttributesAndAssociationsTest",
        "testMethod": "shouldReturnCorrectAssociations",
        "failureName": "java.lang.IndexOutOfBoundsException",
        "detail": "Index: 0, Size: 0",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Defect638Test",
        "testMethod": "shouldNotThrowIllegalArgumentException",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: students",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.IncludesTest",
        "testMethod": "shouldBeAbleToIncludeParentAndChildren",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Model: org.javalite.activejdbc.test_models.Reader is not associated with: org.javalite.activejdbc.test_models.Book",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.AttributeLengthValidatorTest",
        "testMethod": "testExactLength",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Attribute: \u0027email\u0027 is not defined in model: \u0027class org.javalite.activejdbc.test_models.User. Available attributes: [ADMIN, ID, NAME, REMARKS]",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PolymorphicAssociationsTest",
        "testMethod": "shouldFixDefect553CacheEmptyChildren",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: articles",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CacheTest",
        "testMethod": "shouldNotPropagateCacheEventOnFlush",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToFromXmlSpec",
        "testMethod": "shouldConvertClobsToString",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: articles",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Defect141Test",
        "testMethod": "shouldRefreshCreatedAndUpdatedAttributes",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "shouldGenerateValidInsertSQL",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: students",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testOneToManyOverrideConventionAssociation",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: libraries",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.OptimisticLockingTest",
        "testMethod": "shouldAdvanceVersionWhenRecordIsUpdated",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: watermelons",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CacheTest",
        "testMethod": "testCache",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.FreemarkerSpec",
        "testMethod": "shouldRenderRowProcessor",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PolymorphicAssociationsOverrideTest",
        "testMethod": "shouldAddPolymorphicChild",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Vehicle\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ScopeSpec",
        "testMethod": "shouldUseBasicScope",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Employee\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Many2ManyRelationshipTest",
        "testMethod": "shouldAddNewChildInManyToManyAssociation",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: doctors",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ConverterTest",
        "testMethod": "shouldSetAndGetStringAsTimestamp",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: students",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.FreemarkerSpec",
        "testMethod": "shouldRenderList",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.AttributeLengthValidatorTest",
        "testMethod": "testRangeLength",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Attribute: \u0027email\u0027 is not defined in model: \u0027class org.javalite.activejdbc.test_models.User. Available attributes: [ADMIN, ID, NAME, REMARKS]",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CacheTest",
        "testMethod": "shouldNotAddInfoToStatisticsIfFoundResultInCache",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.OptimisticLockingOverrideVersionColumnTest",
        "testMethod": "shouldAdvanceVersionWhenRecordIsUpdated",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: items",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PolymorphicAssociationsTest",
        "testMethod": "shouldFindAllPolymorphicChildren",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: articles",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.AttributeLengthValidatorTest",
        "testMethod": "testAllowBlank",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Attribute: \u0027email\u0027 is not defined in model: \u0027class org.javalite.activejdbc.test_models.User. Available attributes: [ADMIN, ID, NAME, REMARKS]",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ConverterTest",
        "testMethod": "shouldGetConvertDateToString",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: students",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "shouldGenerateValidUpdateSQLWithReplacements",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: students",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.test.DBSpecTest",
        "testMethod": "e_should_NOT_RollBackTransaction",
        "failureName": "org.javalite.activejdbc.DBException",
        "detail": "org.h2.jdbc.JdbcSQLException: Table \"PATIENTS\" not found; SQL statement:\ninsert into patients (first_name, last_name) values (\u0027Billie\u0027, \u0027Holiday\u0027) [42102-171], query: insert into patients (first_name, last_name) values (\u0027Billie\u0027, \u0027Holiday\u0027)",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.AttributeLengthValidatorTest",
        "testMethod": "testMaxLength",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Attribute: \u0027email\u0027 is not defined in model: \u0027class org.javalite.activejdbc.test_models.User. Available attributes: [ADMIN, ID, NAME, REMARKS]",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testFrozen",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: addresses",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PolymorphicAssociationsTest",
        "testMethod": "shouldRemovePolymorphicChildren",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: articles",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "shouldConvertTime",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: alarms",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ConverterTest",
        "testMethod": "shouldConvertToStringCaseInsensitive",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: students",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.RawPaginatorSpec",
        "testMethod": "testPreviousAndNext",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Item\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testGetById",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ConverterTest",
        "testMethod": "shouldSetNull",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: students",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PolymorphicAssociationsOverrideTest",
        "testMethod": "shouldRemovePolymorphicChildren",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Vehicle\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.test.DBSpecTest",
        "testMethod": "d_shouldNotFindRecordsFromRolledBackTransaction",
        "failureName": "org.javalite.activejdbc.DBException",
        "detail": "org.h2.jdbc.JdbcSQLException: Table \"PATIENTS\" not found; SQL statement:\nSELECT COUNT(*) FROM patients [42102-171], query: SELECT COUNT(*) FROM patients",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testModelFinderWithListenerAndParameters",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Person\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testModelFinder",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "shouldGenerateValidUpdateSQLWithTime",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: alarms",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ScopeSpec",
        "testMethod": "shouldRejectNonExistentScope",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Employee\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.IncludesTest",
        "testMethod": "shouldIncludeMany2ManyInCaseJoinTableHasUnconventionalPKName",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Ingredient\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testModelFindOneParametrized",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ShardingSpec",
        "testMethod": "should_access_shard_parent_in_one_to_many",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Attribute: \u0027first_name\u0027 is not defined in model: \u0027class org.javalite.activejdbc.test_models.User. Available attributes: [ADMIN, ID, NAME, REMARKS]",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CompositePkTest",
        "testMethod": "shouldDeleteByPK",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Developer\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testCustomIdName",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: animals",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ShardingSpec",
        "testMethod": "shouldDeleteFromShard",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: shard2_temperatures",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PolymorphicAssociationsOverrideTest",
        "testMethod": "shouldThrowExceptionIfWrongParentTypeRequested",
        "failureName": "java.lang.Exception",
        "detail": "Unexpected exception, expected\u003cjava.lang.IllegalArgumentException\u003e but was\u003corg.javalite.activejdbc.InitException\u003e",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testDeleteCascade",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Attribute: \u0027first_name\u0027 is not defined in model: \u0027class org.javalite.activejdbc.test_models.User. Available attributes: [ADMIN, ID, NAME, REMARKS]",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CompositePkTest",
        "testMethod": "shouldReturnNullWithWrongPKs",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Developer\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.DeleteChildrenSpec",
        "testMethod": "shouldDeletePolymorphicChildren",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: articles",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToFromXmlSpec",
        "testMethod": "shouldKeepParametersCase",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Person\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.UnmaganedIdTest",
        "testMethod": "shouldInsertNewRecord",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: apples",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.FreemarkerSpec",
        "testMethod": "shouldRenderSingleIntance",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testHasManyOverrideConventionAssociation",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: teams",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "shouldConvertUtilDate2SqlDate",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CacheTest",
        "testMethod": "shouldGenerateJSONFromQueryCache",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ToJsonSpec",
        "testMethod": "shouldKeepParametersCase",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Person\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PolymorphicAssociationsOverrideTest",
        "testMethod": "shouldFindAllPolymorphicChildrenWithCriteria",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Vehicle\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.BelongsToParentsTest",
        "testMethod": "shouldCheckThatComputerBelongsTo2DifferentParents",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: computers",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.LifecycleCallbackSpec",
        "testMethod": "shouldFireAfterLoadFromDB",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ValidatorsTest",
        "testMethod": "shouldNotOverwritePreviousValidation",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: accounts",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.AttributeConverterTest",
        "testMethod": "testTimestampConverter",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PaginatorTest",
        "testMethod": "testPreviousAndNext",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Item\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.DeleteCascadeTest",
        "testMethod": "shouldDeleteOne2ManyShallow",
        "failureName": "org.javalite.test.jspec.TestException",
        "detail": "Test object:\njava.lang.Long \u003d\u003d \u003c7\u003e\nand expected\njava.lang.Integer \u003d\u003d \u003c4\u003e\nare not equal, but they should be.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.OptimisticLockingTest",
        "testMethod": "shouldThrowExceptionWhenVersionCollisionHappens",
        "failureName": "java.lang.Exception",
        "detail": "Unexpected exception, expected\u003corg.javalite.activejdbc.StaleModelException\u003e but was\u003corg.javalite.activejdbc.InitException\u003e",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testNewFromMapCaseInsensitive",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.RawPaginatorSpec",
        "testMethod": "testThrowExceptionIfWrongArgument",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Item\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "shouldFindChildrenWithCriteria",
        "failureName": "org.javalite.activejdbc.associations.NotAssociatedException",
        "detail": "No association from model \u0027class org.javalite.activejdbc.test_models.User\u0027 to model \u0027class org.javalite.activejdbc.test_models.Address\u0027",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.CacheTest",
        "testMethod": "testCachedParent",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.PolymorphicAssociationsOverrideTest",
        "testMethod": "shouldInferPolymorphicNames",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Model \u0027org.javalite.activejdbc.test_models.Vehicle\u0027 must provide a default constructor.",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testModelFinderAll",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: people",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.Many2ManyRelationshipTest",
        "testMethod": "shouldFindManyToManyViaGetter",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: doctors",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ValidatorsTest",
        "testMethod": "testRangeValidator",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: temperatures",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.ModelTest",
        "testMethod": "testFindBySQL",
        "failureName": "org.javalite.activejdbc.InitException",
        "detail": "Failed to find table: books",
        "isError": true
      },
      {
        "testClass": "org.javalite.activejdbc.AttributeLengthValidatorTest",
        "testMethod": "testMinLength",
        "failureName": "java.lang.IllegalArgumentException",
        "detail": "Attribute: \u0027email\u0027 is not defined in model: \u0027class org.javalite.activejdbc.test_models.User. Available attributes: [ADMIN, ID, NAME, REMARKS]",
        "isError": true
      }
    ]
  },
  "commits": {
    "buggyBuild": {
      "repoName": "javalite/activejdbc",
      "branchName": "issue_752",
      "sha": "2a0f5df15f7b12a6b6f010f2c3d61f471c8cbf10",
      "url": "http://github.com/javalite/activejdbc/commit/2a0f5df15f7b12a6b6f010f2c3d61f471c8cbf10",
      "date": "Aug 7, 2018 11:31:31 PM"
    }
  },
  "projectMetrics": {
    "numberModules": 4,
    "numberSourceFiles": 165,
    "numberTestFiles": 194,
    "numberLibrariesFailingModule": 23
  },
  "type": "only_fail"
}