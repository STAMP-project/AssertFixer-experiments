{
  "tests": {
    "failingModule": "/root/workspace/AdrianLeeElder/MobstersREST/438304691/backend",
    "overallMetrics": {
      "numberRunning": 29,
      "numberPassing": 20,
      "numberFailing": 6,
      "numberErroring": 3,
      "numberSkipping": 0,
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false,
          "occurrences": 6
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true,
          "occurrences": 1
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "isError": true,
          "occurrences": 2
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "com.adrian.mobsters.service.ActionJobServiceImplTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "com.adrian.mobsters.service.ActionJobCreatorTest",
        "numberRunning": 6,
        "numberPassing": 2,
        "numberFailing": 4,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "com.adrian.mobsters.service.proxy.SSLProxyExtracterTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "com.adrian.mobsters.api.v1.MobsterControllerTest",
        "numberRunning": 2,
        "numberPassing": 1,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "com.adrian.mobsters.service.DailyActionJobInitializerImplTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "com.adrian.mobsters.service.ActionJobCreatorTest",
        "testMethod": "getAllDailyActionJobsForGivenListOfUsernames",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003c[ActionJob(id\u003dnull, mobster\u003dMobster(id\u003d1, username\u003dzombie, password\u003d, actionJobs\u003dnull), actionList\u003d[Action(id\u003dnull, name\u003dLogin, running\u003dfalse, complete\u003dfalse, queued\u003dfalse)], daily\u003dtrue, buyProperty\u003dfalse, failureCount\u003d0, frozen\u003dfalse, queued\u003dfalse, running\u003dfalse, complete\u003dfalse)]\u003e but was:\u003c[ActionJob(id\u003dnull, mobster\u003dMobster(id\u003d1, username\u003dzombie, password\u003d, actionJobs\u003dnull), actionList\u003d[Action(id\u003dnull, name\u003dLogin, running\u003dfalse, complete\u003dfalse, queued\u003dfalse)], daily\u003dtrue, buyProperty\u003dfalse, failureCount\u003d0, frozen\u003dfalse, queued\u003dtrue, running\u003dfalse, complete\u003dfalse)]\u003e",
        "isError": false
      },
      {
        "testClass": "com.adrian.mobsters.service.ActionJobCreatorTest",
        "testMethod": "getSingleActionJob",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003c[ActionJob(id\u003dnull, mobster\u003dMobster(id\u003d1, username\u003dzombie, password\u003d, actionJobs\u003dnull), actionList\u003d[Action(id\u003dnull, name\u003dLogin, running\u003dfalse, complete\u003dfalse, queued\u003dfalse)], daily\u003dtrue, buyProperty\u003dfalse, failureCount\u003d0, frozen\u003dfalse, queued\u003dfalse, running\u003dfalse, complete\u003dfalse)]\u003e but was:\u003c[ActionJob(id\u003dnull, mobster\u003dMobster(id\u003d1, username\u003dzombie, password\u003d, actionJobs\u003dnull), actionList\u003d[Action(id\u003dnull, name\u003dLogin, running\u003dfalse, complete\u003dfalse, queued\u003dfalse)], daily\u003dtrue, buyProperty\u003dfalse, failureCount\u003d0, frozen\u003dfalse, queued\u003dtrue, running\u003dfalse, complete\u003dfalse)]\u003e",
        "isError": false
      },
      {
        "testClass": "com.adrian.mobsters.api.v1.MobsterControllerTest",
        "testMethod": "createNewMobster",
        "failureName": "java.lang.AssertionError",
        "detail": "Status expected:\u003c201\u003e but was:\u003c200\u003e\n\n\u003e POST /api/v1/mobster\n\u003e WebTestClient-Request-Id: [1]\n\u003e Content-Type: [application/json;charset\u003dUTF-8]\n\n{\"id\":\"1\",\"username\":\"zombie\",\"password\":\"\",\"actionJobs\":null}\n\n\u003c 200 OK\n\u003c \n\nContent not available yet\n",
        "isError": false
      },
      {
        "testClass": "com.adrian.mobsters.service.DailyActionJobInitializerImplTest",
        "testMethod": "schedule",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "com.adrian.mobsters.service.ActionJobCreatorTest",
        "testMethod": "createActionJobForAllMobsters",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003c[ActionJob(id\u003dnull, mobster\u003dMobster(id\u003d1, username\u003dzombie, password\u003d, actionJobs\u003dnull), actionList\u003d[Action(id\u003dnull, name\u003dLogin, running\u003dfalse, complete\u003dfalse, queued\u003dfalse)], daily\u003dtrue, buyProperty\u003dfalse, failureCount\u003d0, frozen\u003dfalse, queued\u003dfalse, running\u003dfalse, complete\u003dfalse)]\u003e but was:\u003c[ActionJob(id\u003dnull, mobster\u003dMobster(id\u003d1, username\u003dzombie, password\u003d, actionJobs\u003dnull), actionList\u003d[Action(id\u003dnull, name\u003dLogin, running\u003dfalse, complete\u003dfalse, queued\u003dfalse)], daily\u003dtrue, buyProperty\u003dfalse, failureCount\u003d0, frozen\u003dfalse, queued\u003dtrue, running\u003dfalse, complete\u003dfalse)]\u003e",
        "isError": false
      },
      {
        "testClass": "com.adrian.mobsters.service.ActionJobCreatorTest",
        "testMethod": "actionJobHasSuppliedMobsterUsername",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003c[ActionJob(id\u003dnull, mobster\u003dMobster(id\u003d1, username\u003dzombie, password\u003d, actionJobs\u003dnull), actionList\u003d[Action(id\u003dnull, name\u003dLogin, running\u003dfalse, complete\u003dfalse, queued\u003dfalse)], daily\u003dtrue, buyProperty\u003dfalse, failureCount\u003d0, frozen\u003dfalse, queued\u003dfalse, running\u003dfalse, complete\u003dfalse)]\u003e but was:\u003c[ActionJob(id\u003dnull, mobster\u003dMobster(id\u003d1, username\u003dzombie, password\u003d, actionJobs\u003dnull), actionList\u003d[Action(id\u003dnull, name\u003dLogin, running\u003dfalse, complete\u003dfalse, queued\u003dfalse)], daily\u003dtrue, buyProperty\u003dfalse, failureCount\u003d0, frozen\u003dfalse, queued\u003dtrue, running\u003dfalse, complete\u003dfalse)]\u003e",
        "isError": false
      },
      {
        "testClass": "com.adrian.mobsters.service.ActionJobServiceImplTest",
        "testMethod": "runActionJob",
        "failureName": "java.lang.IllegalStateException",
        "detail": "The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from http://chromedriver.storage.googleapis.com/index.html",
        "isError": true
      },
      {
        "testClass": "com.adrian.mobsters.service.proxy.SSLProxyExtracterTest",
        "testMethod": "getProxiesFromPageString",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003c[]\u003e but was:\u003c[Proxy(id\u003dnull, host\u003dnull, port\u003d0, inUse\u003dfalse, attempts\u003d0, failures\u003d0, successes\u003d0, httpsEnabled\u003dfalse, country\u003dnull, sinceLastUpdate\u003d0, outdated\u003dfalse, isEliteProxy\u003dfalse)]\u003e",
        "isError": false
      },
      {
        "testClass": "com.adrian.mobsters.service.ActionJobServiceImplTest",
        "testMethod": "actionJobFailure",
        "failureName": "java.lang.IllegalStateException",
        "detail": "The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from http://chromedriver.storage.googleapis.com/index.html",
        "isError": true
      }
    ]
  },
  "commits": {
    "buggyBuild": {
      "repoName": "AdrianLeeElder/MobstersREST",
      "branchName": "master",
      "sha": "64896f84b145a8694a70d9a7db046dd2c4478502",
      "url": "http://github.com/AdrianLeeElder/MobstersREST/commit/64896f84b145a8694a70d9a7db046dd2c4478502",
      "date": "Oct 7, 2018 6:24:56 PM"
    }
  },
  "projectMetrics": {
    "numberModules": 2,
    "numberSourceFiles": 101,
    "numberTestFiles": 13,
    "numberLibrariesFailingModule": 146
  },
  "repository": {
    "name": "AdrianLeeElder/MobstersREST",
    "githubId": 130592281,
    "url": "https://github.com/AdrianLeeElder/MobstersREST",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": false,
    "pullRequestId": 0
  },
  "builds": {
    "buggyBuild": {
      "id": 438304691,
      "url": "http://travis-ci.org/AdrianLeeElder/MobstersREST/builds/438304691",
      "date": "Oct 7, 2018 6:28:39 PM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Oct 7, 2018 6:27:52 PM",
    "reproductionDateEnd": "Oct 7, 2018 6:30:59 PM",
    "totalDuration": 183,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 4,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          4
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 98,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          0,
          98
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 14,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          14
        ]
      }
    },
    "projectRootPomPath": "./workspace/AdrianLeeElder/MobstersREST/438304691/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "type": "only_fail"
}