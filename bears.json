{
  "projectMetrics": {
    "numberModules": 3,
    "numberSourceFiles": 127,
    "numberTestFiles": 24,
    "numberLibrariesFailingModule": 190
  },
  "tests": {
    "failingModule": "/root/workspace/logzio/apollo/421483522/apollo-backend",
    "overallMetrics": {
      "numberRunning": 42,
      "numberPassing": 2,
      "numberFailing": 0,
      "numberErroring": 40,
      "numberSkipping": 1,
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "isError": true,
          "occurrences": 26
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true,
          "occurrences": 1
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "isError": true,
          "occurrences": 13
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "io.logz.apollo.TransformersTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "io.logz.apollo.ConfigurationProviderBuilderTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "io.logz.apollo.BlockerTest",
        "numberRunning": 13,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 13,
        "numberSkipping": 0
      },
      {
        "testClass": "io.logz.apollo.NotificationsTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "io.logz.apollo.DeploymentGroupsTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "io.logz.apollo.EnvironmentTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "io.logz.apollo.DeployableVersionTest",
        "numberRunning": 6,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 6,
        "numberSkipping": 0
      },
      {
        "testClass": "io.logz.apollo.KubernetesHandlerTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "io.logz.apollo.HealthTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "io.logz.apollo.DeploymentTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "io.logz.apollo.AuthTest",
        "numberRunning": 10,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 10,
        "numberSkipping": 0
      },
      {
        "testClass": "io.logz.apollo.GroupTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "io.logz.apollo.BlockerTest",
        "testMethod": "testServiceBlocker",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.BlockerTest",
        "testMethod": "testUnconditionalBlockerWithServiceException",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.AuthTest",
        "testMethod": "testDeploymentWithBothBroadAllowAndDeny",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Previous attempts to find a Docker environment failed. Will not retry. Please see logs and check configuration",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.AuthTest",
        "testMethod": "testDeploymentWithBroadAllowAndSpecificDeny",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Previous attempts to find a Docker environment failed. Will not retry. Please see logs and check configuration",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.KubernetesHandlerTest",
        "testMethod": "io.logz.apollo.KubernetesHandlerTest",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.DeploymentGroupsTest",
        "testMethod": "io.logz.apollo.DeploymentGroupsTest",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Previous attempts to find a Docker environment failed. Will not retry. Please see logs and check configuration",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.HealthTest",
        "testMethod": "io.logz.apollo.HealthTest",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.AuthTest",
        "testMethod": "testDeploymentWithBroadDenyAndSpecificAllow",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Previous attempts to find a Docker environment failed. Will not retry. Please see logs and check configuration",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.BlockerTest",
        "testMethod": "testEverythingBlocker",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.DeployableVersionTest",
        "testMethod": "testAddAndGetDeployableVersion",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.NotificationsTest",
        "testMethod": "testSlackNotification",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.TransformersTest",
        "testMethod": "io.logz.apollo.TransformersTest",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Could not find a valid Docker environment. Please see logs and check configuration",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.DeployableVersionTest",
        "testMethod": "testAddDeployableVersionWithBadGithubUser",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.AuthTest",
        "testMethod": "testDeploymentWithWildCardService",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Previous attempts to find a Docker environment failed. Will not retry. Please see logs and check configuration",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.ConfigurationProviderBuilderTest",
        "testMethod": "io.logz.apollo.ConfigurationProviderBuilderTest",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Previous attempts to find a Docker environment failed. Will not retry. Please see logs and check configuration",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.BlockerTest",
        "testMethod": "testTimeBasedBlocker",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.DeployableVersionTest",
        "testMethod": "testGetAllDeployableVersions",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.BlockerTest",
        "testMethod": "testEnvironmentBlocker",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.EnvironmentTest",
        "testMethod": "testAddAndGetEnvironment",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.BlockerTest",
        "testMethod": "testGHCommitStatusBlocker",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.DeployableVersionTest",
        "testMethod": "populateRealCommitDetails",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.BlockerTest",
        "testMethod": "testUnconditionalBlockerWithEnvironmentException",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.DeploymentTest",
        "testMethod": "io.logz.apollo.DeploymentTest",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.DeployableVersionTest",
        "testMethod": "testGetLatestDeployableVersionsByServiceId",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.AuthTest",
        "testMethod": "testLogin",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Previous attempts to find a Docker environment failed. Will not retry. Please see logs and check configuration",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.BlockerTest",
        "testMethod": "testUnconditionalBlockerWithServiceAndEnvironmentException",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.BlockerTest",
        "testMethod": "testConcurrencyBlocker",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.BlockerTest",
        "testMethod": "changeBlockerActiveAttribute",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.AuthTest",
        "testMethod": "testEnabled",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Previous attempts to find a Docker environment failed. Will not retry. Please see logs and check configuration",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.AuthTest",
        "testMethod": "testGetAllUsers",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Previous attempts to find a Docker environment failed. Will not retry. Please see logs and check configuration",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.BlockerTest",
        "testMethod": "testSpecificBlocker",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.BlockerTest",
        "testMethod": "testBranchBlocker",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.DeployableVersionTest",
        "testMethod": "testGetDeployableVersionFromSha",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.HealthTest",
        "testMethod": "io.logz.apollo.HealthTest",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.AuthTest",
        "testMethod": "testDeploymentWithNoPermissions",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Previous attempts to find a Docker environment failed. Will not retry. Please see logs and check configuration",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.GroupTest",
        "testMethod": "io.logz.apollo.GroupTest",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.AuthTest",
        "testMethod": "testDeploymentWithWildCardEnvironment",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Previous attempts to find a Docker environment failed. Will not retry. Please see logs and check configuration",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.AuthTest",
        "testMethod": "testSignup",
        "failureName": "java.lang.IllegalStateException",
        "detail": "Previous attempts to find a Docker environment failed. Will not retry. Please see logs and check configuration",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.BlockerTest",
        "testMethod": "testBlockerUserOverride",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      },
      {
        "testClass": "io.logz.apollo.EnvironmentTest",
        "testMethod": "testGetAllEnvironments",
        "failureName": "java.lang.RuntimeException",
        "detail": "Could not signup or login..",
        "isError": true
      }
    ]
  },
  "repository": {
    "name": "logzio/apollo",
    "githubId": 53502006,
    "url": "https://github.com/logzio/apollo",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": false,
    "pullRequestId": 0
  },
  "builds": {
    "buggyBuild": {
      "id": 421483522,
      "url": "http://travis-ci.org/logzio/apollo/builds/421483522",
      "date": "Aug 28, 2018 12:48:30 PM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Aug 28, 2018 12:48:57 PM",
    "reproductionDateEnd": "Aug 28, 2018 12:50:43 PM",
    "totalDuration": 104,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 9,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          9
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 40,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          0,
          40
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 20,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          20
        ]
      }
    },
    "projectRootPomPath": "./workspace/logzio/apollo/421483522/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "commits": {
    "buggyBuild": {
      "repoName": "logzio/apollo",
      "branchName": "groups-management-ui",
      "sha": "c367571f116b7bf7cc54f1d19c3bcc80ee2c185e",
      "url": "http://github.com/logzio/apollo/commit/c367571f116b7bf7cc54f1d19c3bcc80ee2c185e",
      "date": "Aug 28, 2018 11:36:15 AM"
    }
  },
  "type": "only_fail"
}