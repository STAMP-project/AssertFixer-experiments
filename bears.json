{
  "projectMetrics": {
    "numberModules": 13,
    "numberSourceFiles": 591,
    "numberTestFiles": 42,
    "numberLibrariesFailingModule": 196
  },
  "commits": {
    "buggyBuild": {
      "repoName": "HubSpot/Singularity",
      "branchName": "hs_stable",
      "sha": "f2655ce7e1bef73f771dca3537f1dfd448437d47",
      "url": "http://github.com/HubSpot/Singularity/commit/f2655ce7e1bef73f771dca3537f1dfd448437d47",
      "date": "Oct 1, 2018 9:34:35 PM"
    }
  },
  "tests": {
    "failingModule": "/root/workspace/HubSpot/Singularity/435796904/SingularityService",
    "overallMetrics": {
      "numberRunning": 157,
      "numberPassing": 132,
      "numberFailing": 5,
      "numberErroring": 20,
      "numberSkipping": 0,
      "failures": [
        {
          "failureName": "org.junit.runners.model.TestTimedOutException",
          "isError": true,
          "occurrences": 20
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false,
          "occurrences": 5
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "com.hubspot.singularity.scheduler.SingularityCachedOffersTest",
        "numberRunning": 4,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "com.hubspot.singularity.scheduler.HistoryPersisterTest",
        "numberRunning": 6,
        "numberPassing": 3,
        "numberFailing": 2,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "com.hubspot.singularity.scheduler.SingularityExpiringActionsTest",
        "numberRunning": 7,
        "numberPassing": 4,
        "numberFailing": 1,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "com.hubspot.singularity.scheduler.SingularitySlavePlacementTest",
        "numberRunning": 12,
        "numberPassing": 8,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "com.hubspot.singularity.mesos.SingularityStartupTest",
        "numberRunning": 5,
        "numberPassing": 4,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "com.hubspot.singularity.data.BlendedHistoryTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "com.hubspot.singularity.SingularityHistoryTest",
        "numberRunning": 10,
        "numberPassing": 7,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "com.hubspot.singularity.scheduler.SingularityHealthchecksTest",
        "numberRunning": 13,
        "numberPassing": 10,
        "numberFailing": 2,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "com.hubspot.singularity.scheduler.SingularityMachineStatesTest",
        "numberRunning": 16,
        "numberPassing": 13,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "com.hubspot.singularity.mesos.SingularityTaskShellCommandTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "com.hubspot.singularity.scheduler.SingularityCachedOffersTest",
        "testMethod": "testLeftoverCachedOffersAreReturnedToCache",
        "failureName": "org.junit.runners.model.TestTimedOutException",
        "detail": "test timed out after 30 seconds",
        "isError": true
      },
      {
        "testClass": "com.hubspot.singularity.mesos.SingularityStartupTest",
        "testMethod": "testScheduledTasksDontGetRescheduledDuringRun",
        "failureName": "org.junit.runners.model.TestTimedOutException",
        "detail": "test timed out after 30 seconds",
        "isError": true
      },
      {
        "testClass": "com.hubspot.singularity.scheduler.HistoryPersisterTest",
        "testMethod": "testTaskAgePurging",
        "failureName": "java.lang.AssertionError",
        "isError": false
      },
      {
        "testClass": "com.hubspot.singularity.scheduler.SingularityExpiringActionsTest",
        "testMethod": "testExpiringIncrementalBounce",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003c1\u003e but was:\u003c2\u003e",
        "isError": false
      },
      {
        "testClass": "com.hubspot.singularity.scheduler.SingularityHealthchecksTest",
        "testMethod": "testNewTaskCheckerRespectsDeployHealthcheckRetries",
        "failureName": "org.junit.runners.model.TestTimedOutException",
        "detail": "test timed out after 30 seconds",
        "isError": true
      },
      {
        "testClass": "com.hubspot.singularity.scheduler.SingularityExpiringActionsTest",
        "testMethod": "testExpiringPause",
        "failureName": "org.junit.runners.model.TestTimedOutException",
        "detail": "test timed out after 30 seconds",
        "isError": true
      },
      {
        "testClass": "com.hubspot.singularity.scheduler.SingularityMachineStatesTest",
        "testMethod": "testUnfrozenSlaveLaunchesTasks",
        "failureName": "org.junit.runners.model.TestTimedOutException",
        "detail": "test timed out after 30 seconds",
        "isError": true
      },
      {
        "testClass": "com.hubspot.singularity.SingularityHistoryTest",
        "testMethod": "testTaskSearchQueryBlended",
        "failureName": "org.junit.runners.model.TestTimedOutException",
        "detail": "test timed out after 30 seconds",
        "isError": true
      },
      {
        "testClass": "com.hubspot.singularity.scheduler.SingularitySlavePlacementTest",
        "testMethod": "testSlavePlacementOptimistic",
        "failureName": "org.junit.runners.model.TestTimedOutException",
        "detail": "test timed out after 30 seconds",
        "isError": true
      },
      {
        "testClass": "com.hubspot.singularity.scheduler.SingularityMachineStatesTest",
        "testMethod": "testFrozenSlaveCanBeDecommissioned",
        "failureName": "org.junit.runners.model.TestTimedOutException",
        "detail": "test timed out after 30 seconds",
        "isError": true
      },
      {
        "testClass": "com.hubspot.singularity.scheduler.SingularityMachineStatesTest",
        "testMethod": "testBasicSlaveAndRackState",
        "failureName": "org.junit.runners.model.TestTimedOutException",
        "detail": "test timed out after 30 seconds",
        "isError": true
      },
      {
        "testClass": "com.hubspot.singularity.scheduler.HistoryPersisterTest",
        "testMethod": "testRequestCountPurging",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003c2\u003e but was:\u003c3\u003e",
        "isError": false
      },
      {
        "testClass": "com.hubspot.singularity.scheduler.SingularityHealthchecksTest",
        "testMethod": "testSkipHealthchecksDuringBounce",
        "failureName": "java.lang.AssertionError",
        "isError": false
      },
      {
        "testClass": "com.hubspot.singularity.mesos.SingularityTaskShellCommandTest",
        "testMethod": "testRunCommandBeforeBounceKill",
        "failureName": "org.junit.runners.model.TestTimedOutException",
        "detail": "test timed out after 30 seconds",
        "isError": true
      },
      {
        "testClass": "com.hubspot.singularity.SingularityHistoryTest",
        "testMethod": "testTaskSearchByRequest",
        "failureName": "org.junit.runners.model.TestTimedOutException",
        "detail": "test timed out after 30 seconds",
        "isError": true
      },
      {
        "testClass": "com.hubspot.singularity.scheduler.HistoryPersisterTest",
        "testMethod": "testTaskCountPurging",
        "failureName": "org.junit.runners.model.TestTimedOutException",
        "detail": "test timed out after 30 seconds",
        "isError": true
      },
      {
        "testClass": "com.hubspot.singularity.scheduler.SingularitySlavePlacementTest",
        "testMethod": "testRequiredSlaveAttributesForRequest",
        "failureName": "org.junit.runners.model.TestTimedOutException",
        "detail": "test timed out after 30 seconds",
        "isError": true
      },
      {
        "testClass": "com.hubspot.singularity.SingularityHistoryTest",
        "testMethod": "testTaskSearchQueryInZkOnly",
        "failureName": "org.junit.runners.model.TestTimedOutException",
        "detail": "test timed out after 30 seconds",
        "isError": true
      },
      {
        "testClass": "com.hubspot.singularity.scheduler.SingularityHealthchecksTest",
        "testMethod": "testMaxHealthcheckRetries",
        "failureName": "java.lang.AssertionError",
        "isError": false
      },
      {
        "testClass": "com.hubspot.singularity.scheduler.SingularitySlavePlacementTest",
        "testMethod": "testRackPlacementOnScaleDown",
        "failureName": "org.junit.runners.model.TestTimedOutException",
        "detail": "test timed out after 30 seconds",
        "isError": true
      },
      {
        "testClass": "com.hubspot.singularity.scheduler.SingularitySlavePlacementTest",
        "testMethod": "testReservedSlaveWithMatchinRequestAttribute",
        "failureName": "org.junit.runners.model.TestTimedOutException",
        "detail": "test timed out after 30 seconds",
        "isError": true
      },
      {
        "testClass": "com.hubspot.singularity.mesos.SingularityTaskShellCommandTest",
        "testMethod": "testTaskShellCommandPersistence",
        "failureName": "org.junit.runners.model.TestTimedOutException",
        "detail": "test timed out after 30 seconds",
        "isError": true
      },
      {
        "testClass": "com.hubspot.singularity.data.BlendedHistoryTest",
        "testMethod": "testBlendedRequestHistory",
        "failureName": "org.junit.runners.model.TestTimedOutException",
        "detail": "test timed out after 30 seconds",
        "isError": true
      },
      {
        "testClass": "com.hubspot.singularity.scheduler.SingularityExpiringActionsTest",
        "testMethod": "testExpiringSkipHealthchecks",
        "failureName": "org.junit.runners.model.TestTimedOutException",
        "detail": "test timed out after 30 seconds",
        "isError": true
      },
      {
        "testClass": "com.hubspot.singularity.scheduler.SingularityCachedOffersTest",
        "testMethod": "testOfferCache",
        "failureName": "org.junit.runners.model.TestTimedOutException",
        "detail": "test timed out after 30 seconds",
        "isError": true
      }
    ]
  },
  "repository": {
    "name": "HubSpot/Singularity",
    "githubId": 13631804,
    "url": "https://github.com/HubSpot/Singularity",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": false,
    "pullRequestId": 0
  },
  "builds": {
    "buggyBuild": {
      "id": 435796904,
      "url": "http://travis-ci.org/HubSpot/Singularity/builds/435796904",
      "date": "Oct 1, 2018 9:56:31 PM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Oct 1, 2018 10:10:38 PM",
    "reproductionDateEnd": "Oct 1, 2018 10:22:49 PM",
    "totalDuration": 725,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 16,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          16
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 329,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          0,
          329
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 359,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          359
        ]
      }
    },
    "projectRootPomPath": "./workspace/HubSpot/Singularity/435796904/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "type": "only_fail"
}