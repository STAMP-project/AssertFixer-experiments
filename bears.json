{
  "repository": {
    "name": "pagarme/pagarme-java",
    "githubId": 10106967,
    "url": "https://github.com/pagarme/pagarme-java",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": false,
    "pullRequestId": 0
  },
  "builds": {
    "buggyBuild": {
      "id": 423174309,
      "url": "http://travis-ci.org/pagarme/pagarme-java/builds/423174309",
      "date": "Sep 1, 2018 12:00:45 AM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Sep 1, 2018 12:03:50 AM",
    "reproductionDateEnd": "Sep 1, 2018 12:09:47 AM",
    "totalDuration": 355,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 3,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          3
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 16,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          0,
          16
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 225,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          225
        ]
      }
    },
    "projectRootPomPath": "./workspace/pagarme/pagarme-java/423174309/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "tests": {
    "failingModule": "/root/workspace/pagarme/pagarme-java/423174309",
    "overallMetrics": {
      "numberRunning": 77,
      "numberPassing": 69,
      "numberFailing": 1,
      "numberErroring": 7,
      "numberSkipping": 0,
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false,
          "occurrences": 1
        },
        {
          "failureName": "me.pagar.model.PagarMeException",
          "isError": true,
          "occurrences": 7
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "me.pagarme.transaction.TransactionTest",
        "numberRunning": 23,
        "numberPassing": 22,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "me.pagarme.AnticipationTest",
        "numberRunning": 7,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 7,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "me.pagarme.AnticipationTest",
        "testMethod": "testAnticipationList",
        "failureName": "me.pagar.model.PagarMeException",
        "detail": "A data de pagamento deve ser um dia útil. ",
        "isError": true
      },
      {
        "testClass": "me.pagarme.AnticipationTest",
        "testMethod": "testAnticipationCreation",
        "failureName": "me.pagar.model.PagarMeException",
        "detail": "A data de pagamento deve ser um dia útil. ",
        "isError": true
      },
      {
        "testClass": "me.pagarme.transaction.TransactionTest",
        "testMethod": "testBoletoExpirationDate",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003c2018-09-05\u003e but was:\u003c2018-09-04\u003e",
        "isError": false
      },
      {
        "testClass": "me.pagarme.AnticipationTest",
        "testMethod": "testAnticipationDeletion",
        "failureName": "me.pagar.model.PagarMeException",
        "detail": "A data de pagamento deve ser um dia útil. ",
        "isError": true
      },
      {
        "testClass": "me.pagarme.AnticipationTest",
        "testMethod": "testAnticipationCancelation",
        "failureName": "me.pagar.model.PagarMeException",
        "detail": "A data de pagamento deve ser um dia útil. ",
        "isError": true
      },
      {
        "testClass": "me.pagarme.AnticipationTest",
        "testMethod": "testAnticipationConfirmation",
        "failureName": "me.pagar.model.PagarMeException",
        "detail": "A data de pagamento deve ser um dia útil. ",
        "isError": true
      },
      {
        "testClass": "me.pagarme.AnticipationTest",
        "testMethod": "testMaxAnticipationLimit",
        "failureName": "me.pagar.model.PagarMeException",
        "detail": "A data de pagamento deve ser um dia útil ",
        "isError": true
      },
      {
        "testClass": "me.pagarme.AnticipationTest",
        "testMethod": "testMinAnticipationLimit",
        "failureName": "me.pagar.model.PagarMeException",
        "detail": "A data de pagamento deve ser um dia útil ",
        "isError": true
      }
    ]
  },
  "commits": {
    "buggyBuild": {
      "repoName": "pagarme/pagarme-java",
      "branchName": "1.5.6",
      "sha": "191887a1dc9aeabd143cfc8a7d35fde1daa1ab64",
      "url": "http://github.com/pagarme/pagarme-java/commit/191887a1dc9aeabd143cfc8a7d35fde1daa1ab64"
    }
  },
  "projectMetrics": {
    "numberModules": 1,
    "numberSourceFiles": 67,
    "numberTestFiles": 35,
    "numberLibrariesFailingModule": 36
  },
  "type": "only_fail"
}