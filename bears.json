{
  "repository": {
    "name": "dimyriy/vfs",
    "githubId": 149870096,
    "url": "https://github.com/dimyriy/vfs",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": false,
    "pullRequestId": 0
  },
  "builds": {
    "buggyBuild": {
      "id": 435825424,
      "url": "http://travis-ci.org/dimyriy/vfs/builds/435825424",
      "date": "Oct 1, 2018 10:36:42 PM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Oct 1, 2018 10:35:59 PM",
    "reproductionDateEnd": "Oct 1, 2018 10:37:34 PM",
    "totalDuration": 93,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 3,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          3
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 21,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          0,
          21
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 10,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          10
        ]
      }
    },
    "projectRootPomPath": "./workspace/dimyriy/vfs/435825424/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "tests": {
    "failingModule": "/root/workspace/dimyriy/vfs/435825424",
    "overallMetrics": {
      "numberRunning": 98,
      "numberPassing": 87,
      "numberFailing": 2,
      "numberErroring": 9,
      "numberSkipping": 2,
      "failures": [
        {
          "failureName": "org.mockito.exceptions.misusing.MissingMethodInvocationException",
          "isError": true,
          "occurrences": 8
        },
        {
          "failureName": "org.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue",
          "isError": true,
          "occurrences": 1
        },
        {
          "failureName": "org.opentest4j.AssertionFailedError",
          "isError": false,
          "occurrences": 2
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "org.dimyriy.vfs.impl.guards.AssertionsTest",
        "numberRunning": 21,
        "numberPassing": 19,
        "numberFailing": 2,
        "numberErroring": 0,
        "numberSkipping": 1
      },
      {
        "testClass": "org.dimyriy.vfs.StoragePathTest",
        "numberRunning": 9,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 9,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "org.dimyriy.vfs.StoragePathTest",
        "testMethod": "parent_ReturnsCorrectParent_WhenMoreThanOneSlashInPath",
        "failureName": "org.mockito.exceptions.misusing.MissingMethodInvocationException",
        "detail": "\nwhen() requires an argument which has to be \u0027a method call on a mock\u0027.\nFor example:\n    when(mock.getArticles()).thenReturn(articles);\n\nAlso, this error might show up because:\n1. you stub either of: final/private/equals()/hashCode() methods.\n   Those methods *cannot* be stubbed/verified.\n   Mocking methods declared on non-public parent classes is not supported.\n2. inside when() you don\u0027t call method on mock but on some other object.\n",
        "isError": true
      },
      {
        "testClass": "org.dimyriy.vfs.StoragePathTest",
        "testMethod": "equals_IsFalse_WhenCalledWithDifferentPath",
        "failureName": "org.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue",
        "detail": "\n\u0027close\u0027 is a *void method* and it *cannot* be stubbed with a *return value*!\nVoids are usually stubbed with Throwables:\n    doThrow(exception).when(mock).someVoidMethod();\nIf you need to set the void method to do nothing you can use:\n    doNothing().when(mock).someVoidMethod();\nFor more information, check out the javadocs for Mockito.doNothing().\n***\nIf you\u0027re unsure why you\u0027re getting above error read on.\nDue to the nature of the syntax above problem might occur because:\n1. The method you are trying to stub is *overloaded*. Make sure you are calling the right overloaded version.\n2. Somewhere in your test you are stubbing *final methods*. Sorry, Mockito does not verify/stub final methods.\n3. A spy is stubbed using when(spy.foo()).then() syntax. It is safer to stub spies - \n   - with doReturn|Throw() family of methods. More in javadocs for Mockito.spy() method.\n4. Mocking methods declared on non-public parent classes is not supported.\n",
        "isError": true
      },
      {
        "testClass": "org.dimyriy.vfs.StoragePathTest",
        "testMethod": "equals_ReturnsTrue_WhenCalledOnRootPathWithDifferentInstanceOfRootPath",
        "failureName": "org.mockito.exceptions.misusing.MissingMethodInvocationException",
        "detail": "\nwhen() requires an argument which has to be \u0027a method call on a mock\u0027.\nFor example:\n    when(mock.getArticles()).thenReturn(articles);\n\nAlso, this error might show up because:\n1. you stub either of: final/private/equals()/hashCode() methods.\n   Those methods *cannot* be stubbed/verified.\n   Mocking methods declared on non-public parent classes is not supported.\n2. inside when() you don\u0027t call method on mock but on some other object.\n",
        "isError": true
      },
      {
        "testClass": "org.dimyriy.vfs.StoragePathTest",
        "testMethod": "parent_ReturnsSameObject_WhenCalledOnRoot",
        "failureName": "org.mockito.exceptions.misusing.MissingMethodInvocationException",
        "detail": "\nwhen() requires an argument which has to be \u0027a method call on a mock\u0027.\nFor example:\n    when(mock.getArticles()).thenReturn(articles);\n\nAlso, this error might show up because:\n1. you stub either of: final/private/equals()/hashCode() methods.\n   Those methods *cannot* be stubbed/verified.\n   Mocking methods declared on non-public parent classes is not supported.\n2. inside when() you don\u0027t call method on mock but on some other object.\n",
        "isError": true
      },
      {
        "testClass": "org.dimyriy.vfs.impl.guards.AssertionsTest",
        "testMethod": "fileIsReadableAndIsReadableAndIsWritable_ThrowsException_WhenFileIsNotReadable",
        "failureName": "org.opentest4j.AssertionFailedError",
        "detail": "Expected org.dimyriy.vfs.impl.exceptions.InitializationException to be thrown, but nothing was thrown.",
        "isError": false
      },
      {
        "testClass": "org.dimyriy.vfs.StoragePathTest",
        "testMethod": "equals_IsTrue_WhenCalledWithEqualPath",
        "failureName": "org.mockito.exceptions.misusing.MissingMethodInvocationException",
        "detail": "\nwhen() requires an argument which has to be \u0027a method call on a mock\u0027.\nFor example:\n    when(mock.getArticles()).thenReturn(articles);\n\nAlso, this error might show up because:\n1. you stub either of: final/private/equals()/hashCode() methods.\n   Those methods *cannot* be stubbed/verified.\n   Mocking methods declared on non-public parent classes is not supported.\n2. inside when() you don\u0027t call method on mock but on some other object.\n",
        "isError": true
      },
      {
        "testClass": "org.dimyriy.vfs.StoragePathTest",
        "testMethod": "newInstance_ThrowsException_WhenUnixPathContainsInvalidSymbols",
        "failureName": "org.mockito.exceptions.misusing.MissingMethodInvocationException",
        "detail": "\nwhen() requires an argument which has to be \u0027a method call on a mock\u0027.\nFor example:\n    when(mock.getArticles()).thenReturn(articles);\n\nAlso, this error might show up because:\n1. you stub either of: final/private/equals()/hashCode() methods.\n   Those methods *cannot* be stubbed/verified.\n   Mocking methods declared on non-public parent classes is not supported.\n2. inside when() you don\u0027t call method on mock but on some other object.\n",
        "isError": true
      },
      {
        "testClass": "org.dimyriy.vfs.StoragePathTest",
        "testMethod": "equals_IsFalse_WhenCalledWithSubPath",
        "failureName": "org.mockito.exceptions.misusing.MissingMethodInvocationException",
        "detail": "\nwhen() requires an argument which has to be \u0027a method call on a mock\u0027.\nFor example:\n    when(mock.getArticles()).thenReturn(articles);\n\nAlso, this error might show up because:\n1. you stub either of: final/private/equals()/hashCode() methods.\n   Those methods *cannot* be stubbed/verified.\n   Mocking methods declared on non-public parent classes is not supported.\n2. inside when() you don\u0027t call method on mock but on some other object.\n",
        "isError": true
      },
      {
        "testClass": "org.dimyriy.vfs.StoragePathTest",
        "testMethod": "parent_ReturnsRoot_WhenOnlyOneSlashInPath",
        "failureName": "org.mockito.exceptions.misusing.MissingMethodInvocationException",
        "detail": "\nwhen() requires an argument which has to be \u0027a method call on a mock\u0027.\nFor example:\n    when(mock.getArticles()).thenReturn(articles);\n\nAlso, this error might show up because:\n1. you stub either of: final/private/equals()/hashCode() methods.\n   Those methods *cannot* be stubbed/verified.\n   Mocking methods declared on non-public parent classes is not supported.\n2. inside when() you don\u0027t call method on mock but on some other object.\n",
        "isError": true
      },
      {
        "testClass": "org.dimyriy.vfs.StoragePathTest",
        "testMethod": "newInstance_DoesNotThrow_WhenUnixPathDoesNotContainInvalidSymbols",
        "failureName": "org.mockito.exceptions.misusing.MissingMethodInvocationException",
        "detail": "\nwhen() requires an argument which has to be \u0027a method call on a mock\u0027.\nFor example:\n    when(mock.getArticles()).thenReturn(articles);\n\nAlso, this error might show up because:\n1. you stub either of: final/private/equals()/hashCode() methods.\n   Those methods *cannot* be stubbed/verified.\n   Mocking methods declared on non-public parent classes is not supported.\n2. inside when() you don\u0027t call method on mock but on some other object.\n",
        "isError": true
      },
      {
        "testClass": "org.dimyriy.vfs.impl.guards.AssertionsTest",
        "testMethod": "fileIsReadableAndIsReadableAndIsWritable_ThrowsException_WhenFileIsReadableButNotWritable",
        "failureName": "org.opentest4j.AssertionFailedError",
        "detail": "Expected org.dimyriy.vfs.impl.exceptions.InitializationException to be thrown, but nothing was thrown.",
        "isError": false
      }
    ]
  },
  "projectMetrics": {
    "numberModules": 1,
    "numberSourceFiles": 66,
    "numberTestFiles": 15,
    "numberLibrariesFailingModule": 19
  },
  "commits": {
    "buggyBuild": {
      "repoName": "dimyriy/vfs",
      "branchName": "master",
      "sha": "354c9a354bcb6541e20729347ccee9a5c01f2bfb",
      "url": "http://github.com/dimyriy/vfs/commit/354c9a354bcb6541e20729347ccee9a5c01f2bfb",
      "date": "Oct 1, 2018 10:34:24 PM"
    }
  },
  "type": "only_fail"
}