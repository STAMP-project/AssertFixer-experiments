{
  "tests": {
    "failingModule": "/root/workspace/krussan/protodb/417876652",
    "overallMetrics": {
      "numberRunning": 96,
      "numberPassing": 46,
      "numberFailing": 2,
      "numberErroring": 48,
      "numberSkipping": 0,
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false,
          "occurrences": 2
        },
        {
          "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
          "isError": true,
          "occurrences": 48
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "se.qxx.protodb.test.TestDelete",
        "numberRunning": 8,
        "numberPassing": 4,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearchRepeated",
        "numberRunning": 8,
        "numberPassing": 4,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearchEnum",
        "numberRunning": 4,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "se.qxx.protodb.test.TestInsert",
        "numberRunning": 12,
        "numberPassing": 6,
        "numberFailing": 0,
        "numberErroring": 6,
        "numberSkipping": 0
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearchRecursive",
        "numberRunning": 6,
        "numberPassing": 3,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearch",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 1,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "se.qxx.protodb.test.TestSelect",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 1,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "se.qxx.protodb.test.TestSelectNoBlobs",
        "numberRunning": 4,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearchBlob",
        "numberRunning": 4,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearchRepeatedBlobs",
        "numberRunning": 2,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "se.qxx.protodb.test.TestExcludingObjects",
        "numberRunning": 14,
        "numberPassing": 7,
        "numberFailing": 0,
        "numberErroring": 7,
        "numberSkipping": 0
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearchLimitOffset",
        "numberRunning": 6,
        "numberPassing": 3,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "se.qxx.protodb.test.TestSetup",
        "numberRunning": 14,
        "numberPassing": 7,
        "numberFailing": 0,
        "numberErroring": 7,
        "numberSkipping": 0
      },
      {
        "testClass": "se.qxx.protodb.test.TestAddField",
        "numberRunning": 2,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "se.qxx.protodb.test.TestTightJoins",
        "numberRunning": 8,
        "numberPassing": 4,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "se.qxx.protodb.test.TestSetup",
        "testMethod": "TestEnumOneList[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearchRepeated",
        "testMethod": "TestSearchNoDuplicates[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearchRecursive",
        "testMethod": "TestSearchExact[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearchRecursive",
        "testMethod": "TestSearchJoinQuery[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestAddField",
        "testMethod": "TestAddBasicField[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearchLimitOffset",
        "testMethod": "TestLimitOffsetOrderBy[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestTightJoins",
        "testMethod": "TestRepeatedRepeated[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestExcludingObjects",
        "testMethod": "TestExcludingOnObjectTwo[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestDelete",
        "testMethod": "TestEnumOne[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearchBlob",
        "testMethod": "TestBlobPopulator[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestDelete",
        "testMethod": "TestSimple[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestInsert",
        "testMethod": "TestRepObjectOne[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestInsert",
        "testMethod": "TestSimple[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSetup",
        "testMethod": "TestRepSimpleList[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestExcludingObjects",
        "testMethod": "TestExcludingSearch[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearchRepeated",
        "testMethod": "TestSearchExactByJoin[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestDelete",
        "testMethod": "TestObjectOne[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestDelete",
        "testMethod": "TestRepSimpleList[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestInsert",
        "testMethod": "TestEnumOne[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestInsert",
        "testMethod": "TestObjectOne[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSetup",
        "testMethod": "TestObjectOne[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestTightJoins",
        "testMethod": "TestRepeatedRepeatedSearch[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearchRepeated",
        "testMethod": "TestSearchJoinQuery[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSelect",
        "testMethod": "TestSimple[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestExcludingObjects",
        "testMethod": "TestExcludingOnObjectTwoSearch[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestInsert",
        "testMethod": "TestRepSimpleList[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearchRepeatedBlobs",
        "testMethod": "TestSearchExactByJoin[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestExcludingObjects",
        "testMethod": "TestExcluding[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestTightJoins",
        "testMethod": "TestSearchJoinQuery[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSetup",
        "testMethod": "TestRepObjectOne[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearchLimitOffset",
        "testMethod": "TestLimitOffset[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearchEnum",
        "testMethod": "TestSearchEnumByJoin[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestExcludingObjects",
        "testMethod": "TestExcludeOnSubObjectsSearch[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearchRepeated",
        "testMethod": "TestShallowCopy[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearch",
        "testMethod": "TestSearchExact[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSelectNoBlobs",
        "testMethod": "TestRequiredBlobs[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearch",
        "testMethod": "TestSearchExact[0]",
        "failureName": "java.lang.AssertionError",
        "detail": "[SQLITE_ERROR] SQL error or missing database (no such table: SimpleTwo)",
        "isError": false
      },
      {
        "testClass": "se.qxx.protodb.test.TestSetup",
        "testMethod": "TestObjectTwo[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestExcludingObjects",
        "testMethod": "TestExcludingBlobSearch[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearchLimitOffset",
        "testMethod": "TestLimitOffsetQuery[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSelectNoBlobs",
        "testMethod": "TestSearchRequiredBlobs[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearchRecursive",
        "testMethod": "TestSearchExactByJoin[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearchBlob",
        "testMethod": "TestBlobSql[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestInsert",
        "testMethod": "TestSimpleUpdate[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSearchEnum",
        "testMethod": "TestSearchEnumSql[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSetup",
        "testMethod": "TestEnumOne[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestTightJoins",
        "testMethod": "TestSearchRecursive[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSetup",
        "testMethod": "TestSimple[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      },
      {
        "testClass": "se.qxx.protodb.test.TestSelect",
        "testMethod": "TestSimple[0]",
        "failureName": "java.lang.AssertionError",
        "detail": "[SQLITE_ERROR] SQL error or missing database (no such table: RepObjectOneSimpleTwo_Listofobjects)",
        "isError": false
      },
      {
        "testClass": "se.qxx.protodb.test.TestExcludingObjects",
        "testMethod": "TestExcludeOnRepeatedObjects[1]",
        "failureName": "se.qxx.protodb.exceptions.DatabaseNotSupportedException",
        "isError": true
      }
    ]
  },
  "commits": {
    "buggyBuild": {
      "repoName": "krussan/protodb",
      "branchName": "add-field",
      "sha": "9f05e0fed6d5fdd62373f92855faca2f35ea041f",
      "url": "http://github.com/krussan/protodb/commit/9f05e0fed6d5fdd62373f92855faca2f35ea041f",
      "date": "Aug 19, 2018 2:40:48 PM"
    }
  },
  "projectMetrics": {
    "numberModules": 1,
    "numberSourceFiles": 33,
    "numberTestFiles": 17,
    "numberLibrariesFailingModule": 6
  },
  "repository": {
    "name": "krussan/protodb",
    "githubId": 59099351,
    "url": "https://github.com/krussan/protodb",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": false,
    "pullRequestId": 0
  },
  "builds": {
    "buggyBuild": {
      "id": 417876652,
      "url": "http://travis-ci.org/krussan/protodb/builds/417876652",
      "date": "Aug 19, 2018 2:42:23 PM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Aug 19, 2018 2:42:53 PM",
    "reproductionDateEnd": "Aug 19, 2018 2:47:36 PM",
    "totalDuration": 281,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 5,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          5
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 14,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          0,
          14
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 108,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          108
        ]
      }
    },
    "projectRootPomPath": "./workspace/krussan/protodb/417876652/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "type": "only_fail"
}