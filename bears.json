{
  "repository": {
    "name": "INRIA/spoon",
    "githubId": 14176513,
    "url": "https://github.com/INRIA/spoon",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": true,
    "pullRequestId": 2634
  },
  "builds": {
    "buggyBuild": {
      "id": 437929470,
      "url": "http://travis-ci.org/INRIA/spoon/builds/437929470",
      "date": "Oct 6, 2018 9:33:36 AM"
    }
  },
  "projectMetrics": {
    "numberModules": 1,
    "numberSourceFiles": 645,
    "numberTestFiles": 705,
    "numberLibrariesFailingModule": 34
  },
  "tests": {
    "failingModule": "/root/workspace/INRIA/spoon/437929470",
    "overallMetrics": {
      "numberRunning": 1580,
      "numberPassing": 1530,
      "numberFailing": 12,
      "numberErroring": 38,
      "numberSkipping": 5,
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false,
          "occurrences": 9
        },
        {
          "failureName": "java.lang.RuntimeException",
          "isError": true,
          "occurrences": 1
        },
        {
          "failureName": "spoon.SpoonException",
          "isError": true,
          "occurrences": 15
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true,
          "occurrences": 22
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "isError": false,
          "occurrences": 3
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "spoon.test.template.TemplateTest",
        "numberRunning": 24,
        "numberPassing": 19,
        "numberFailing": 2,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.imports.ImportScannerTest",
        "numberRunning": 7,
        "numberPassing": 6,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.refactoring.MethodsRefactoringTest",
        "numberRunning": 5,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
        "numberRunning": 12,
        "numberPassing": 11,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.refactoring.CtRenameLocalVariableRefactoringTest",
        "numberRunning": 4,
        "numberPassing": 3,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
        "numberRunning": 8,
        "numberPassing": 6,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "numberRunning": 43,
        "numberPassing": 32,
        "numberFailing": 1,
        "numberErroring": 10,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.reflect.visitor.CtScannerTest",
        "numberRunning": 3,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.reflect.declaration.CtTypeInformationTest",
        "numberRunning": 4,
        "numberPassing": 3,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.query_function.VariableReferencesTest",
        "numberRunning": 8,
        "numberPassing": 5,
        "numberFailing": 2,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "numberRunning": 52,
        "numberPassing": 51,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "numberRunning": 47,
        "numberPassing": 46,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.method.MethodTest",
        "numberRunning": 6,
        "numberPassing": 5,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.ctClass.CtClassTest",
        "numberRunning": 8,
        "numberPassing": 6,
        "numberFailing": 1,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.processing.CtGenerationTest",
        "numberRunning": 4,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "numberRunning": 17,
        "numberPassing": 16,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.main.MainTest",
        "numberRunning": 15,
        "numberPassing": 13,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.api.MetamodelTest",
        "numberRunning": 16,
        "numberPassing": 15,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest",
        "numberRunning": 9,
        "numberPassing": 7,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.api.APITest",
        "numberRunning": 23,
        "numberPassing": 22,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "numberRunning": 47,
        "numberPassing": 45,
        "numberFailing": 1,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.prettyprinter.PrinterTest",
        "numberRunning": 9,
        "numberPassing": 6,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.compilation.CompilationTest",
        "numberRunning": 13,
        "numberPassing": 12,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "spoon.test.main.MainTest",
        "testMethod": "testTest",
        "failureName": "spoon.SpoonException",
        "detail": "spoon.SpoonException: Printing of spoon.support.reflect.code.CtFieldReadImpl on path \n CtPackageImpl:spoon\n CtPackageImpl:generating\n CtClassImpl:CloneVisitorGenerator\n CtMethodImpl:process\n CtBlockImpl\n CtInvocationImpl\n CtNewClassImpl\n CtClassImpl:1\n CtMethodImpl:createFactoryInvocation\n CtBlockImpl\n CtLocalVariableImpl:factoryName\n CtConditionalImpl\n CtInvocationImpl\n CtFieldReadImpl:internals\nat position (/root/workspace/INRIA/spoon/437929470/src/test/java/spoon/generating/CloneVisitorGenerator.java:198) failed",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportScannerTest",
        "testMethod": "testImportOnSpoon",
        "failureName": "spoon.SpoonException",
        "detail": "Printing of spoon.support.reflect.reference.CtTypeReferenceImpl on path \n CtPackageImpl:spoon\n CtClassImpl:Launcher\n CtFieldImpl:RESOURCES_FILE_FILTER\n CtNewClassImpl\n CtClassImpl:1\n CtMethodImpl:accept\n CtAnnotationImpl\n CtTypeReferenceImpl:Override\nfailed",
        "isError": true
      },
      {
        "testClass": "spoon.reflect.visitor.CtScannerTest",
        "testMethod": "testScannerCallsAllProperties",
        "failureName": "spoon.SpoonException",
        "detail": "spoon.SpoonException: Printing of spoon.support.reflect.code.CtFieldWriteImpl on path \n CtPackageImpl:spoon\n CtPackageImpl:reflect\n CtPackageImpl:factory\n CtClassImpl:TypeFactory\n CtMethodImpl:createTypeAdapter\n CtBlockImpl\n CtClassImpl:1Visitor\n CtMethodImpl:visitCtClass\n CtBlockImpl\n CtAssignmentImpl\n CtFieldWriteImpl:adapter\nat position (/root/workspace/INRIA/spoon/437929470/src/main/java/spoon/reflect/factory/TypeFactory.java:665) failed",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testOverridingMethodFromSubClassOfInterface",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest",
        "testMethod": "testNoFQNAndStaticImport",
        "failureName": "spoon.SpoonException",
        "detail": "spoon.SpoonException: Printing of spoon.support.reflect.reference.CtTypeReferenceImpl on path \n CtPackageImpl:spoon\n CtPackageImpl:test\n CtPackageImpl:variable\n CtPackageImpl:testclasses\n CtClassImpl:MultiBurritos\n CtMethodImpl:bidule\n CtBlockImpl\n CtConstructorCallImpl\n CtNewClassImpl\n CtClassImpl:1\n CtMethodImpl:run\n CtBlockImpl\n CtAssignmentImpl\n CtFieldWriteImpl\n CtTypeAccessImpl\n CtTypeReferenceImpl:MultiBurritos\nfailed",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testOverriddenMethodFromAbstractClass",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "createTypeFromTemplate",
        "failureName": "java.lang.AssertionError",
        "detail": "expected same:\u003cpublic interface GenIface extends java.io.Serializable {\n    public abstract void genMethod();\n}\u003e was not:\u003cnull\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.processing.CtGenerationTest",
        "testMethod": "testGenerateCloneVisitor",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "testSubstitutionInsertAllNtoN",
        "failureName": "spoon.SpoonException",
        "detail": "Parameter value has unexpected class: java.lang.Integer, whose conversion to String is not supported",
        "isError": true
      },
      {
        "testClass": "spoon.test.refactoring.MethodsRefactoringTest",
        "testMethod": "testCtParameterRemoveRefactoring",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.PrinterTest",
        "testMethod": "testJDTBatchCompilerCanBeBuild",
        "failureName": "spoon.SpoonException",
        "detail": "spoon.SpoonException: Printing of spoon.support.reflect.code.CtFieldReadImpl on path \n CtPackageImpl:spoon\n CtPackageImpl:support\n CtPackageImpl:compiler\n CtPackageImpl:jdt\n CtClassImpl:JDTBatchCompiler\n CtMethodImpl:getUnits\n CtBlockImpl\n CtLocalVariableImpl:treeBuilderCompiler\n CtConstructorCallImpl\n CtNewClassImpl\n CtClassImpl:4\n CtMethodImpl:setTaskName\n CtBlockImpl\n CtIfImpl\n CtBinaryOperatorImpl\n CtInvocationImpl\n CtInvocationImpl\n CtFieldReadImpl:jdtCompiler\nat position (/root/workspace/INRIA/spoon/437929470/src/main/java/spoon/support/compiler/jdt/JDTBatchCompiler.java:233) failed",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testOverridingMethodFromSubClassOfAbstractClass",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.query_function.VariableReferencesTest",
        "testMethod": "testLocalVariableReferenceDeclarationFunction",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.PrinterTest",
        "testMethod": "testRuleCanBeBuild",
        "failureName": "spoon.SpoonException",
        "detail": "spoon.SpoonException: Printing of spoon.support.reflect.reference.CtTypeReferenceImpl on path \n CtPackageImpl:spoon\n CtPackageImpl:test\n CtPackageImpl:prettyprinter\n CtPackageImpl:testclasses\n CtClassImpl:Rule\n CtClassImpl:Phoneme\n CtFieldImpl:COMPARATOR\n CtNewClassImpl\n CtClassImpl:1\n CtMethodImpl:compare\n CtAnnotationImpl\n CtTypeReferenceImpl:Override\nfailed",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testOverridingMethodFromInterface",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testOverriddenMethodsFromSubClassOfAbstractClass",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
        "testMethod": "autoImportUsesFullyQualifiedNameWhenImportedNameAlreadyPresent",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c...num\u003c?\u003e e) {\n        []NUM \u003d num;\n        t...\u003e but was:\u003c...num\u003c?\u003e e) {\n        [this.]NUM \u003d num;\n        t...\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testCreateRepeatableAnnotationWithArrays",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003c2\u003e but was:\u003c1\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
        "testMethod": "testSrcMainJava",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testSetterInNodes",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testgetTopDefinitions",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003c1\u003e but was:\u003c2\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testSubInheritanceHierarchyResolver",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.main.MainTest",
        "testMethod": "testMain_ModelPrintAndCompile",
        "failureName": "spoon.SpoonException",
        "detail": "spoon.SpoonException: Printing of spoon.support.reflect.code.CtFieldReadImpl on path \n CtPackageImpl:spoon\n CtPackageImpl:pattern\n CtClassImpl:PatternParameterConfigurator\n CtMethodImpl:byString\n CtBlockImpl\n CtInvocationImpl\n CtNewClassImpl\n CtClassImpl:1\n CtMethodImpl:visitStringAttribute\n CtBlockImpl\n CtIfImpl\n CtBlockImpl\n CtInvocationImpl\n CtFieldReadImpl:patternBuilder\nat position (/root/workspace/INRIA/spoon/437929470/src/main/java/spoon/pattern/PatternParameterConfigurator.java:603) failed",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.MetamodelTest",
        "testMethod": "testRoleOnField",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest",
        "testMethod": "testStaticImportWithAutoImport",
        "failureName": "spoon.SpoonException",
        "detail": "spoon.SpoonException: Printing of spoon.support.reflect.reference.CtTypeReferenceImpl on path \n CtPackageImpl:spoon\n CtPackageImpl:test\n CtPackageImpl:variable\n CtPackageImpl:testclasses\n CtClassImpl:MultiBurritos\n CtMethodImpl:bidule\n CtBlockImpl\n CtConstructorCallImpl\n CtNewClassImpl\n CtClassImpl:1\n CtMethodImpl:run\n CtAnnotationImpl\n CtTypeReferenceImpl:Override\nfailed",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilation.CompilationTest",
        "testMethod": "testExoticClassLoader",
        "failureName": "java.lang.AssertionError",
        "detail": "ClassLoader was called for these classes: [java.lang.Object, java.lang.Object, KJHKY] expected:\u003c5\u003e but was:\u003c3\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.processing.CtGenerationTest",
        "testMethod": "testGenerateRoleHandler",
        "failureName": "java.lang.RuntimeException",
        "detail": "File not found",
        "isError": true
      },
      {
        "testClass": "spoon.test.refactoring.MethodsRefactoringTest",
        "testMethod": "testCtParameterRemoveRefactoringValidationCheck",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "substituteSubString",
        "failureName": "spoon.SpoonException",
        "detail": "The template spoon.test.template.testclasses.SubStringTemplate is not part of model. Add template sources to spoon template path.",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "substituteStringLiteral",
        "failureName": "spoon.SpoonException",
        "detail": "The template spoon.test.template.testclasses.SubstituteLiteralTemplate is not part of model. Add template sources to spoon template path.",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctClass.CtClassTest",
        "testMethod": "testCloneAnonymousClassInvocationWithAutoimports",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testOverridingMethodFromAbstractClass",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
        "testMethod": "testFactorySubFactory",
        "failureName": "spoon.SpoonException",
        "detail": "spoon.SpoonException: Printing of spoon.support.reflect.code.CtFieldWriteImpl on path \n CtPackageImpl:spoon\n CtPackageImpl:reflect\n CtPackageImpl:factory\n CtClassImpl:TypeFactory\n CtMethodImpl:createTypeAdapter\n CtBlockImpl\n CtClassImpl:1Visitor\n CtMethodImpl:visitCtClass\n CtBlockImpl\n CtAssignmentImpl\n CtFieldWriteImpl:adapter\nat position (/root/workspace/INRIA/spoon/437929470/src/main/java/spoon/reflect/factory/TypeFactory.java:665) failed",
        "isError": true
      },
      {
        "testClass": "spoon.test.query_function.VariableReferencesTest",
        "testMethod": "testLocalVariableReferenceFunction",
        "failureName": "java.lang.AssertionError",
        "detail": "Test failed on VariableReferencesModelTest#localVarInNestedClass5",
        "isError": false
      },
      {
        "testClass": "spoon.reflect.declaration.CtTypeInformationTest",
        "testMethod": "testGetAllMethodsReturnsTheRightNumber",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003c13\u003e but was:\u003c12\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.test.prettyprinter.PrinterTest",
        "testMethod": "testPrinterTokenListener",
        "failureName": "spoon.SpoonException",
        "detail": "Printing of spoon.support.reflect.reference.CtTypeReferenceImpl on path \n CtPackageImpl:spoon\n CtPackageImpl:test\n CtPackageImpl:prettyprinter\n CtClassImpl:PrinterTest\n CtMethodImpl:testPrinterTokenListener\n CtBlockImpl\n CtForEachImpl\n CtBlockImpl\n CtInvocationImpl\n CtNewClassImpl\n CtClassImpl:1\n CtFieldImpl:printerHelper\n CtTypeReferenceImpl:PrinterHelper\nat position (/root/workspace/INRIA/spoon/437929470/src/test/java/spoon/test/prettyprinter/PrinterTest.java:278) failed",
        "isError": true
      },
      {
        "testClass": "spoon.test.query_function.VariableReferencesTest",
        "testMethod": "testVariableReferenceFunction",
        "failureName": "java.lang.AssertionError",
        "detail": "Test failed on VariableReferencesModelTest#localVarInNestedClass",
        "isError": false
      },
      {
        "testClass": "spoon.test.refactoring.MethodsRefactoringTest",
        "testMethod": "testSubInheritanceHierarchyFunction",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "testTemplateMatcher",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c[]l\u003e but was:\u003c[this.]l\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testCannotAdaptTypeOfNonTypeScope",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testOverriddenMethodFromInterface",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.method.MethodTest",
        "testMethod": "testGetAllMethodsAdaptingType",
        "failureName": "spoon.SpoonException",
        "detail": "Cannot create MethodTypingContext for method declared in different ClassTypingContext",
        "isError": true
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testTargetsOfFieldAccessInInnerClass",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c[]o\u003e but was:\u003c[this.]o\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testOverriddenMethodFromSubClassOfInterface",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctClass.CtClassTest",
        "testMethod": "testAllTypeReferencesToALocalTypeShouldNotStartWithNumber",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003cclass Foo {\n    Foo() {\n    }\n}\u003e but was:\u003cnull\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.test.refactoring.MethodsRefactoringTest",
        "testMethod": "testAllMethodsSameSignatureFunction",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.refactoring.CtRenameLocalVariableRefactoringTest",
        "testMethod": "testRenameAllLocalVariablesOfRenameTestSubject",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testSortImportPutStaticImportAfterTypeImport",
        "failureName": "spoon.SpoonException",
        "detail": "spoon.SpoonException: Printing of spoon.support.reflect.reference.CtTypeReferenceImpl on path \n CtPackageImpl:spoon\n CtPackageImpl:test\n CtPackageImpl:imports\n CtPackageImpl:testclasses\n CtClassImpl:StaticNoOrdered\n CtMethodImpl:testMachin\n CtBlockImpl\n CtLocalVariableImpl:test\n CtNewClassImpl\n CtClassImpl:1\n CtMethodImpl:annotationType\n CtAnnotationImpl\n CtTypeReferenceImpl:Override\nfailed",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testQueryBuilderWithFilterChain",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testSuperInheritanceHierarchyFunctionNoClasspath",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003c3\u003e but was:\u003c2\u003e",
        "isError": false
      }
    ]
  },
  "commits": {
    "buggyBuild": {
      "repoName": "INRIA/spoon",
      "branchName": "master",
      "sha": "0aa011977665439dfe7622e62d3464d92ba0f718",
      "url": "http://github.com/INRIA/spoon/commit/0aa011977665439dfe7622e62d3464d92ba0f718",
      "date": "Oct 6, 2018 8:47:32 AM"
    },
    "buggyBuildForkRepo": {
      "repoName": "pvojtechovsky/spoon",
      "branchName": "fixClassLoadedOfShadow",
      "sha": "543f8a6efd794c3a757b5be0f4aeb59d71f9d0a4",
      "url": "https://github.com/pvojtechovsky/spoon/commit/543f8a6efd794c3a757b5be0f4aeb59d71f9d0a4",
      "date": "Oct 6, 2018 8:47:32 AM"
    },
    "buggyBuildBaseRepo": {
      "repoName": "INRIA/spoon",
      "branchName": "master",
      "sha": "c5cc06e55a199c2e8fd50a800cf1a14148fd8351",
      "url": "https://github.com/INRIA/spoon/commit/c5cc06e55a199c2e8fd50a800cf1a14148fd8351",
      "date": "Oct 6, 2018 8:21:46 AM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Oct 6, 2018 9:33:39 AM",
    "reproductionDateEnd": "Oct 6, 2018 9:48:02 AM",
    "totalDuration": 860,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 10,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          10
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 76,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          3,
          73
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 738,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          738
        ]
      }
    },
    "projectRootPomPath": "./workspace/INRIA/spoon/437929470/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "type": "only_fail"
}