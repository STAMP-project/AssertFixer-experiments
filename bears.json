{
  "repository": {
    "name": "INRIA/spoon",
    "githubId": 14176513,
    "url": "https://github.com/INRIA/spoon",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": true,
    "pullRequestId": 2172
  },
  "builds": {
    "buggyBuild": {
      "id": 441019931,
      "url": "http://travis-ci.org/INRIA/spoon/builds/441019931",
      "date": "Oct 13, 2018 5:08:52 PM"
    }
  },
  "projectMetrics": {
    "numberModules": 1,
    "numberSourceFiles": 652,
    "numberTestFiles": 708,
    "numberLibrariesFailingModule": 34
  },
  "tests": {
    "failingModule": "/root/workspace/INRIA/spoon/441019931",
    "overallMetrics": {
      "numberRunning": 1569,
      "numberPassing": 1560,
      "numberFailing": 5,
      "numberErroring": 4,
      "numberSkipping": 6,
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true,
          "occurrences": 3
        },
        {
          "failureName": "spoon.SpoonException",
          "isError": true,
          "occurrences": 1
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false,
          "occurrences": 4
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "isError": false,
          "occurrences": 1
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "spoon.test.parent.ContractOnSettersParametrizedTest",
        "numberRunning": 67,
        "numberPassing": 66,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.parent.SetParentTest",
        "numberRunning": 67,
        "numberPassing": 66,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.imports.ImportScannerTest",
        "numberRunning": 7,
        "numberPassing": 6,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
        "numberRunning": 8,
        "numberPassing": 6,
        "numberFailing": 2,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.enums.EnumsTest",
        "numberRunning": 8,
        "numberPassing": 7,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.replace.ReplaceParametrizedTest",
        "numberRunning": 80,
        "numberPassing": 79,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.processing.CtGenerationTest",
        "numberRunning": 4,
        "numberPassing": 3,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.javadoc.JavaDocTest",
        "numberRunning": 2,
        "numberPassing": 1,
        "numberFailing": 1,
        "numberErroring": 0,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "spoon.test.replace.ReplaceParametrizedTest",
        "testMethod": "testContract[CtJavaDoc]",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
        "testMethod": "testSpecPackage",
        "failureName": "java.lang.AssertionError",
        "detail": "you have created a new package or removed an existing one, please declare it explicitly in SpoonArchitectureEnforcerTest#testSpecPackage\n\nDetails: Package spoon.support.javadoc presents in computed but not expected set.",
        "isError": false
      },
      {
        "testClass": "spoon.test.javadoc.JavaDocTest",
        "testMethod": "testJavaDocReprint",
        "failureName": "org.junit.ComparisonFailure",
        "detail": "expected:\u003c...s Bar {\n    /**\n    [ * Creates an annotation type.\n     *\n     * @param owner\n     *   the package of the annotation type\n     * @param simpleName\n     *   ]the name of annotati...\u003e but was:\u003c...s Bar {\n    /**\n    [Creates an annotation type.\n    @param owner the package of the annotation type\n    @param simpleName ]the name of annotati...\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.test.imports.ImportScannerTest",
        "testMethod": "testImportOnSpoon",
        "failureName": "java.lang.AssertionError",
        "detail": "Import scanner missed 11 imports expected:\u003c0\u003e but was:\u003c11\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.test.parent.SetParentTest",
        "testMethod": "testContract[public interface CtJavaDoc extends spoon.reflect.code.CtComment {\n    @spoon.support.DerivedProperty\n    java.lang.String getShortDescription();\n\n    @spoon.support.DerivedProperty\n    java.lang.String getLongDescription();\n\n    @spoon.reflect.annotations.PropertyGetter(role \u003d spoon.reflect.path.CtRole.COMMENT_TAG)\n    java.util.List\u003cspoon.reflect.code.CtJavaDocTag\u003e getTags();\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.COMMENT_TAG)\n    \u003cE extends spoon.reflect.code.CtJavaDoc\u003e E removeTag(int arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.COMMENT_TAG)\n    \u003cE extends spoon.reflect.code.CtJavaDoc\u003e E removeTag(spoon.reflect.code.CtJavaDocTag arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.COMMENT_TAG)\n    \u003cE extends spoon.reflect.code.CtJavaDoc\u003e E addTag(spoon.reflect.code.CtJavaDocTag arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.COMMENT_TAG)\n    \u003cE extends spoon.reflect.code.CtJavaDoc\u003e E addTag(int arg0, spoon.reflect.code.CtJavaDocTag arg1);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.COMMENT_TAG)\n    \u003cE extends spoon.reflect.code.CtJavaDoc\u003e E setTags(java.util.List\u003cspoon.reflect.code.CtJavaDocTag\u003e arg0);\n\n    spoon.reflect.code.CtJavaDoc clone();\n}]",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.enums.EnumsTest",
        "testMethod": "testPrintEnumValues",
        "failureName": "java.lang.AssertionError",
        "isError": false
      },
      {
        "testClass": "spoon.test.parent.ContractOnSettersParametrizedTest",
        "testMethod": "testContract[public interface CtJavaDoc extends spoon.reflect.code.CtComment {\n    @spoon.support.DerivedProperty\n    java.lang.String getShortDescription();\n\n    @spoon.support.DerivedProperty\n    java.lang.String getLongDescription();\n\n    @spoon.reflect.annotations.PropertyGetter(role \u003d spoon.reflect.path.CtRole.COMMENT_TAG)\n    java.util.List\u003cspoon.reflect.code.CtJavaDocTag\u003e getTags();\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.COMMENT_TAG)\n    \u003cE extends spoon.reflect.code.CtJavaDoc\u003e E removeTag(int arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.COMMENT_TAG)\n    \u003cE extends spoon.reflect.code.CtJavaDoc\u003e E removeTag(spoon.reflect.code.CtJavaDocTag arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.COMMENT_TAG)\n    \u003cE extends spoon.reflect.code.CtJavaDoc\u003e E addTag(spoon.reflect.code.CtJavaDocTag arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.COMMENT_TAG)\n    \u003cE extends spoon.reflect.code.CtJavaDoc\u003e E addTag(int arg0, spoon.reflect.code.CtJavaDocTag arg1);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.COMMENT_TAG)\n    \u003cE extends spoon.reflect.code.CtJavaDoc\u003e E setTags(java.util.List\u003cspoon.reflect.code.CtJavaDocTag\u003e arg0);\n\n    spoon.reflect.code.CtJavaDoc clone();\n}]",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
        "testMethod": "testSrcMainJava",
        "failureName": "java.lang.AssertionError",
        "detail": "6 public methods should be documented with proper API documentation: \nspoon.reflect.visitor.CommentHelper#printComment(spoon.reflect.visitor.PrinterHelper,spoon.reflect.code.CtComment)\nspoon.support.javadoc.Javadoc#parse(java.lang.String)\nspoon.support.javadoc.JavadocBlockTag#toText()\nspoon.support.javadoc.JavadocDescription#parseText(java.lang.String)\nspoon.support.javadoc.JavadocDescriptionElement#toText()\nspoon.support.javadoc.JavadocInlineTag#fromText(java.lang.String)",
        "isError": false
      },
      {
        "testClass": "spoon.processing.CtGenerationTest",
        "testMethod": "testGenerateCloneVisitor",
        "failureName": "spoon.SpoonException",
        "detail": "Get more than one setter. Please make an more ingenious method to get setter method. 0 /**\nparsed version of the javadoc */\nprivate transient spoon.support.javadoc.Javadoc javadoc;",
        "isError": true
      }
    ]
  },
  "commits": {
    "buggyBuild": {
      "repoName": "INRIA/spoon",
      "branchName": "master",
      "sha": "c073e5994891b27750046234d542eb605082057a",
      "url": "http://github.com/INRIA/spoon/commit/c073e5994891b27750046234d542eb605082057a",
      "date": "Oct 13, 2018 4:56:13 PM"
    },
    "buggyBuildForkRepo": {
      "repoName": "surli/spoon",
      "branchName": "fix-regression-comments",
      "sha": "ee7efa0f45093286f9fbd9dcc625aa1af79c8e69",
      "url": "https://github.com/surli/spoon/commit/ee7efa0f45093286f9fbd9dcc625aa1af79c8e69",
      "date": "Oct 13, 2018 4:56:13 PM"
    },
    "buggyBuildBaseRepo": {
      "repoName": "INRIA/spoon",
      "branchName": "master",
      "sha": "798ca3d7a282582ba479fc2a4533846a248f6b78",
      "url": "https://github.com/INRIA/spoon/commit/798ca3d7a282582ba479fc2a4533846a248f6b78",
      "date": "Oct 9, 2018 10:37:36 PM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Oct 13, 2018 5:08:17 PM",
    "reproductionDateEnd": "Oct 13, 2018 5:17:08 PM",
    "totalDuration": 527,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 10,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          10
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 83,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          5,
          78
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 410,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          410
        ]
      }
    },
    "projectRootPomPath": "./workspace/INRIA/spoon/441019931/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "type": "only_fail"
}