{
  "repository": {
    "name": "lucascoelhosilva/projectspring",
    "githubId": 135756364,
    "url": "https://github.com/lucascoelhosilva/projectspring",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": false,
    "pullRequestId": 0
  },
  "builds": {
    "buggyBuild": {
      "id": 408999114,
      "url": "http://travis-ci.org/lucascoelhosilva/projectspring/builds/408999114",
      "date": "Jul 27, 2018 5:44:03 PM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Jul 27, 2018 5:48:02 PM",
    "reproductionDateEnd": "Jul 27, 2018 5:49:50 PM",
    "totalDuration": 106,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 3,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          3
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 25,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          0,
          25
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 47,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          47
        ]
      }
    },
    "projectRootPomPath": "./workspace/lucascoelhosilva/projectspring/408999114/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "projectMetrics": {
    "numberModules": 1,
    "numberSourceFiles": 46,
    "numberTestFiles": 10,
    "numberLibrariesFailingModule": 95
  },
  "tests": {
    "failingModule": "/root/workspace/lucascoelhosilva/projectspring/408999114",
    "overallMetrics": {
      "numberRunning": 31,
      "numberPassing": 19,
      "numberFailing": 0,
      "numberErroring": 12,
      "numberSkipping": 0,
      "failures": [
        {
          "failureName": "org.springframework.dao.DataIntegrityViolationException",
          "isError": true,
          "occurrences": 7
        },
        {
          "failureName": "org.springframework.dao.IncorrectResultSizeDataAccessException",
          "isError": true,
          "occurrences": 5
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "com.example.demo.repositories.FuncionarioRepositoryTest",
        "numberRunning": 10,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 10,
        "numberSkipping": 0
      },
      {
        "testClass": "com.example.demo.repositories.LancamentoRepositoryTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "com.example.demo.repositories.FuncionarioRepositoryTest",
        "testMethod": "testBuscarFuncionarioPorEmailECpfParaCpfInvalido",
        "failureName": "org.springframework.dao.IncorrectResultSizeDataAccessException",
        "detail": "result returns more than one elements; nested exception is javax.persistence.NonUniqueResultException: result returns more than one elements",
        "isError": true
      },
      {
        "testClass": "com.example.demo.repositories.FuncionarioRepositoryTest",
        "testMethod": "testBuscarFuncionarioPorEmailECpfParaCpfInvalido",
        "failureName": "org.springframework.dao.DataIntegrityViolationException",
        "detail": "could not execute statement; SQL [n/a]; constraint [\"FK4CM1KG523JLOPYEXJBMI6Y54J: PUBLIC.FUNCIONARIO FOREIGN KEY(EMPRESA_ID) REFERENCES PUBLIC.EMPRESA(ID) (2)\"; SQL statement:\ndelete from empresa where id\u003d? [23503-196]]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
        "isError": true
      },
      {
        "testClass": "com.example.demo.repositories.LancamentoRepositoryTest",
        "testMethod": "testBuscarLancamentosPorFuncionarioId",
        "failureName": "org.springframework.dao.DataIntegrityViolationException",
        "detail": "could not execute statement; SQL [n/a]; constraint [\"FK4CM1KG523JLOPYEXJBMI6Y54J: PUBLIC.FUNCIONARIO FOREIGN KEY(EMPRESA_ID) REFERENCES PUBLIC.EMPRESA(ID) (2)\"; SQL statement:\ndelete from empresa where id\u003d? [23503-196]]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
        "isError": true
      },
      {
        "testClass": "com.example.demo.repositories.FuncionarioRepositoryTest",
        "testMethod": "testBuscarFuncionarioPorEmail",
        "failureName": "org.springframework.dao.DataIntegrityViolationException",
        "detail": "could not execute statement; SQL [n/a]; constraint [\"FK4CM1KG523JLOPYEXJBMI6Y54J: PUBLIC.FUNCIONARIO FOREIGN KEY(EMPRESA_ID) REFERENCES PUBLIC.EMPRESA(ID) (2)\"; SQL statement:\ndelete from empresa where id\u003d? [23503-196]]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
        "isError": true
      },
      {
        "testClass": "com.example.demo.repositories.FuncionarioRepositoryTest",
        "testMethod": "testBuscarFuncionarioPorEmailOuCpfParaEmailInvalido",
        "failureName": "org.springframework.dao.DataIntegrityViolationException",
        "detail": "could not execute statement; SQL [n/a]; constraint [\"FK4CM1KG523JLOPYEXJBMI6Y54J: PUBLIC.FUNCIONARIO FOREIGN KEY(EMPRESA_ID) REFERENCES PUBLIC.EMPRESA(ID) (2)\"; SQL statement:\ndelete from empresa where id\u003d? [23503-196]]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
        "isError": true
      },
      {
        "testClass": "com.example.demo.repositories.FuncionarioRepositoryTest",
        "testMethod": "testBuscarFuncionarioPorEmail",
        "failureName": "org.springframework.dao.IncorrectResultSizeDataAccessException",
        "detail": "result returns more than one elements; nested exception is javax.persistence.NonUniqueResultException: result returns more than one elements",
        "isError": true
      },
      {
        "testClass": "com.example.demo.repositories.FuncionarioRepositoryTest",
        "testMethod": "testBuscarFuncionarioPorEmailECpf",
        "failureName": "org.springframework.dao.DataIntegrityViolationException",
        "detail": "could not execute statement; SQL [n/a]; constraint [\"FK4CM1KG523JLOPYEXJBMI6Y54J: PUBLIC.FUNCIONARIO FOREIGN KEY(EMPRESA_ID) REFERENCES PUBLIC.EMPRESA(ID) (2)\"; SQL statement:\ndelete from empresa where id\u003d? [23503-196]]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
        "isError": true
      },
      {
        "testClass": "com.example.demo.repositories.FuncionarioRepositoryTest",
        "testMethod": "testBuscarFuncionarioPorEmailECpf",
        "failureName": "org.springframework.dao.IncorrectResultSizeDataAccessException",
        "detail": "result returns more than one elements; nested exception is javax.persistence.NonUniqueResultException: result returns more than one elements",
        "isError": true
      },
      {
        "testClass": "com.example.demo.repositories.FuncionarioRepositoryTest",
        "testMethod": "testBuscarFuncionarioPorCpf",
        "failureName": "org.springframework.dao.DataIntegrityViolationException",
        "detail": "could not execute statement; SQL [n/a]; constraint [\"FK4CM1KG523JLOPYEXJBMI6Y54J: PUBLIC.FUNCIONARIO FOREIGN KEY(EMPRESA_ID) REFERENCES PUBLIC.EMPRESA(ID) (2)\"; SQL statement:\ndelete from empresa where id\u003d? [23503-196]]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
        "isError": true
      },
      {
        "testClass": "com.example.demo.repositories.FuncionarioRepositoryTest",
        "testMethod": "testBuscarFuncionarioPorEmailOuCpfParaEmailInvalido",
        "failureName": "org.springframework.dao.IncorrectResultSizeDataAccessException",
        "detail": "result returns more than one elements; nested exception is javax.persistence.NonUniqueResultException: result returns more than one elements",
        "isError": true
      },
      {
        "testClass": "com.example.demo.repositories.LancamentoRepositoryTest",
        "testMethod": "testBuscarLancamentosPorFuncionarioIdPaginado",
        "failureName": "org.springframework.dao.DataIntegrityViolationException",
        "detail": "could not execute statement; SQL [n/a]; constraint [\"FK4CM1KG523JLOPYEXJBMI6Y54J: PUBLIC.FUNCIONARIO FOREIGN KEY(EMPRESA_ID) REFERENCES PUBLIC.EMPRESA(ID) (2)\"; SQL statement:\ndelete from empresa where id\u003d? [23503-196]]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
        "isError": true
      },
      {
        "testClass": "com.example.demo.repositories.FuncionarioRepositoryTest",
        "testMethod": "testBuscarFuncionarioPorCpf",
        "failureName": "org.springframework.dao.IncorrectResultSizeDataAccessException",
        "detail": "result returns more than one elements; nested exception is javax.persistence.NonUniqueResultException: result returns more than one elements",
        "isError": true
      }
    ]
  },
  "commits": {
    "buggyBuild": {
      "repoName": "lucascoelhosilva/projectspring",
      "branchName": "master",
      "sha": "90fb8370b96557b758dc542de68e828fefa41cda",
      "url": "http://github.com/lucascoelhosilva/projectspring/commit/90fb8370b96557b758dc542de68e828fefa41cda",
      "date": "Jul 27, 2018 5:41:50 PM"
    }
  },
  "type": "only_fail"
}