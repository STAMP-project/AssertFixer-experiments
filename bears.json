{
  "repository": {
    "name": "luohao/aircompressor",
    "githubId": 145912527,
    "url": "https://github.com/luohao/aircompressor",
    "isFork": true,
    "original": {
      "name": "airlift/aircompressor",
      "githubId": 5174103,
      "url": "https://github.com/airlift/aircompressor"
    },
    "isPullRequest": false,
    "pullRequestId": 0
  },
  "builds": {
    "buggyBuild": {
      "id": 427347400,
      "url": "http://travis-ci.org/luohao/aircompressor/builds/427347400",
      "date": "Sep 11, 2018 9:05:29 PM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Sep 11, 2018 9:10:06 PM",
    "reproductionDateEnd": "Sep 11, 2018 9:19:25 PM",
    "totalDuration": 552,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 12,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          12
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 59,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          0,
          59
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 410,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          410
        ]
      }
    },
    "projectRootPomPath": "./workspace/luohao/aircompressor/427347400/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "tests": {
    "failingModule": "/root/workspace/luohao/aircompressor/427347400",
    "overallMetrics": {
      "numberRunning": 9950,
      "numberPassing": 9859,
      "numberFailing": 91,
      "numberErroring": 0,
      "numberSkipping": 0,
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false,
          "occurrences": 91
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "numberRunning": 709,
        "numberPassing": 618,
        "numberFailing": 91,
        "numberErroring": 0,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 154665: 0x00 vs 0xCC",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompress",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 102398: 0x00 vs 0x2B",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 51283: 0x00 vs 0x55",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressionBufferOverrun",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 51283: 0x55 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 52422: 0x01 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 60573: 0x00 vs 0x15",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 51199: 0xB6 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 52422: 0x01 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressionBufferOverrun",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 102398: 0x00 vs 0x8D",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 102398: 0x8D vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressWithOutputPadding",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 113928: 0x20 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 102398: 0x2B vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompress",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 313344: 0x00 vs 0x01",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressionBufferOverrun",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 102663: 0x32 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 313344: 0x01 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 60573: 0x00 vs 0x15",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 154665: 0x00 vs 0xCC",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressWithOutputPadding",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 51210: 0x00 vs 0x04",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressWithOutputPadding",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 102398: 0x00 vs 0x2B",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 52422: 0x01 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 320669: 0x00 vs 0x30",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 102663: 0x00 vs 0x32",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 51210: 0x04 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressionBufferOverrun",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 320669: 0x30 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompress",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 320669: 0x30 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompress",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 52422: 0x00 vs 0x01",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 102398: 0x8D vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressionBufferOverrun",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 113928: 0x20 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompress",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 102663: 0x32 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 51199: 0xB6 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 113928: 0x00 vs 0x20",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 102398: 0x2B vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 60573: 0x00 vs 0x15",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompress",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 51283: 0x55 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 113928: 0x00 vs 0x20",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 313344: 0x01 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressWithOutputPadding",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 320669: 0x30 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompress",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 102398: 0x00 vs 0x8D",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 313344: 0x01 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 102663: 0x00 vs 0x32",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 102398: 0x2B vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 320669: 0x00 vs 0x30",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 51283: 0x00 vs 0x55",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 52422: 0x01 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 102398: 0x8D vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 102398: 0x2B vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressWithOutputPadding",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 313344: 0x00 vs 0x01",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressionBufferOverrun",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 52422: 0x00 vs 0x01",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 113928: 0x00 vs 0x20",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressionBufferOverrun",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 51210: 0x00 vs 0x04",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompress",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 52422: 0x00 vs 0x01",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressionBufferOverrun",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 52422: 0x00 vs 0x01",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressionBufferOverrun",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 51199: 0x00 vs 0xB6",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 51283: 0x00 vs 0x55",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 51283: 0x00 vs 0x55",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 51199: 0xB6 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompress",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 113928: 0x20 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressWithOutputPadding",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 60573: 0x15 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 52422: 0x01 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 51210: 0x04 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 52422: 0x01 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 154665: 0x00 vs 0xCC",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompress",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 51210: 0x00 vs 0x04",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 113928: 0x00 vs 0x20",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressionBufferOverrun",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 154665: 0xCC vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 102398: 0x8D vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressWithOutputPadding",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 52422: 0x00 vs 0x01",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 52422: 0x01 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressWithOutputPadding",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 52422: 0x00 vs 0x01",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressWithOutputPadding",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 51199: 0x00 vs 0xB6",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 52422: 0x01 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 51210: 0x04 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompress",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 154665: 0xCC vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressWithOutputPadding",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 102398: 0x00 vs 0x8D",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressWithOutputPadding",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 51283: 0x55 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompress",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 51199: 0x00 vs 0xB6",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressWithOutputPadding",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 154665: 0xCC vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressionBufferOverrun",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 60573: 0x15 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 313344: 0x01 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 102663: 0x00 vs 0x32",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 60573: 0x00 vs 0x15",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressWithOutputPadding",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 102663: 0x32 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 102663: 0x00 vs 0x32",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 51210: 0x04 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 320669: 0x00 vs 0x30",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressionBufferOverrun",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 313344: 0x00 vs 0x01",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferDirectToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 154665: 0x00 vs 0xCC",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToDirect",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 51199: 0xB6 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompress",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 60573: 0x15 vs 0x00",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressByteBufferHeapToHeap",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte buffers differ at position 320669: 0x00 vs 0x30",
        "isError": false
      },
      {
        "testClass": "io.airlift.compress.lzo.TestLzo",
        "testMethod": "testDecompressionBufferOverrun",
        "failureName": "java.lang.AssertionError",
        "detail": "Byte arrays differ at position 102398: 0x00 vs 0x2B",
        "isError": false
      }
    ]
  },
  "commits": {
    "buggyBuild": {
      "repoName": "luohao/aircompressor",
      "branchName": "use-lzo1x-999",
      "sha": "19ca7dd8aa1e55ed6019136e2b13e050b95b2d9c",
      "url": "http://github.com/luohao/aircompressor/commit/19ca7dd8aa1e55ed6019136e2b13e050b95b2d9c",
      "date": "Sep 11, 2018 8:55:31 PM"
    }
  },
  "projectMetrics": {
    "numberModules": 1,
    "numberSourceFiles": 51,
    "numberTestFiles": 41,
    "numberLibrariesFailingModule": 24
  },
  "type": "only_fail"
}