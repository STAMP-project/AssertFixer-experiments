{
  "repository": {
    "name": "INRIA/spoon",
    "githubId": 14176513,
    "url": "https://github.com/INRIA/spoon",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": true,
    "pullRequestId": 2239
  },
  "builds": {
    "buggyBuild": {
      "id": 404959666,
      "url": "http://travis-ci.org/INRIA/spoon/builds/404959666",
      "date": "Jul 17, 2018 5:43:49 PM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Jul 17, 2018 6:14:43 PM",
    "reproductionDateEnd": "Jul 17, 2018 6:19:14 PM",
    "totalDuration": 267,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 10,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          10
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 74,
        "stepNames": [
          "CheckoutBuggyBuild",
          "BuildProject"
        ],
        "stepDurations": [
          7,
          67
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 135,
        "stepNames": [
          "TestProject"
        ],
        "stepDurations": [
          135
        ]
      },
      "fixing": {
        "nbSteps": 1,
        "totalDuration": 31,
        "stepNames": [
          "AssertFixer"
        ],
        "stepDurations": [
          31
        ]
      }
    },
    "projectRootPomPath": "./workspace/INRIA/spoon/404959666/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 0,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 0,
      "numberDeleted": 0
    }
  },
  "projectMetrics": {
    "numberModules": 1,
    "numberSourceFiles": 614,
    "numberTestFiles": 695,
    "numberLibrariesFailingModule": 30
  },
  "tests": {
    "failingModule": "/root/workspace/INRIA/spoon/404959666",
    "overallMetrics": {
      "numberRunning": 1111,
      "numberPassing": 90,
      "numberFailing": 3,
      "numberErroring": 1018,
      "numberSkipping": 4,
      "failures": [
        {
          "failureName": "java.lang.ExceptionInInitializerError",
          "isError": true,
          "occurrences": 1
        },
        {
          "failureName": "spoon.SpoonException",
          "isError": true,
          "occurrences": 1011
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false,
          "occurrences": 3
        },
        {
          "failureName": "java.lang.Exception",
          "isError": true,
          "occurrences": 5
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "isError": true,
          "occurrences": 1
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "spoon.test.condition.ConditionalTest",
        "numberRunning": 4,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.ctType.CtTypeParameterTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.loop.LoopTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "numberRunning": 23,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 23,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.change.ChangeCollectorTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.reflect.visitor.CtInheritanceScannerMethodsTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.ctElement.MetadataTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.query_function.VariableReferencesTest",
        "numberRunning": 8,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 8,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.module.TestModule",
        "numberRunning": 6,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 2
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "numberRunning": 44,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 44,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.intercession.IntercessionTest",
        "numberRunning": 7,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 6,
        "numberSkipping": 1
      },
      {
        "testClass": "spoon.test.model.SwitchCaseTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.compilationunit.TestCompilationUnit",
        "numberRunning": 7,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 7,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.factory.CodeFactoryTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.processing.ProcessingTest",
        "numberRunning": 10,
        "numberPassing": 5,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.prettyprinter.QualifiedThisRefTest",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.ctType.CtTypeTest",
        "numberRunning": 8,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 8,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.enums.EnumsTypeTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "numberRunning": 28,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 28,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.model.IncrementalLauncherTest",
        "numberRunning": 5,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.reflect.declaration.UnknownDeclarationTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.template.TemplateReplaceReturnTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.intercession.RemoveTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.comparison.EqualTest",
        "numberRunning": 5,
        "numberPassing": 0,
        "numberFailing": 1,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.replace.ReplaceTest",
        "numberRunning": 17,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 17,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.varargs.VarArgsTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.support.ResourceTest",
        "numberRunning": 4,
        "numberPassing": 3,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.LauncherTest",
        "numberRunning": 4,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.reflect.ast.CloneTest",
        "numberRunning": 5,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.parent.NullParentTest",
        "numberRunning": 8,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 8,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.ctCase.SwitchCaseTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.compilationunit.GetBinaryFilesTest",
        "numberRunning": 5,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.reflect.declaration.CtTypeInformationTest",
        "numberRunning": 4,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.model.AnonymousExecutableTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.visitor.VisitorTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.strings.StringTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.processing.ProcessingTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.properties.PropertiesTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.sourcePosition.SourcePositionTest",
        "numberRunning": 3,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.variable.AccessTest",
        "numberRunning": 8,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 8,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.annotation.AnnotationValuesTest",
        "numberRunning": 6,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 6,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.staticFieldAccess.StaticAccessTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest",
        "numberRunning": 16,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 16,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.interfaces.TestInterfaceWithoutSetup",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.parent.ContractOnSettersParametrizedTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "numberRunning": 25,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 24,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.filters.CUFilterTest",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.reflect.visitor.CtScannerTest",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.annotation.AnnotationLoopTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.compilation.CompilationTest",
        "numberRunning": 13,
        "numberPassing": 4,
        "numberFailing": 0,
        "numberErroring": 9,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.executable.ExecutableTest",
        "numberRunning": 4,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.eval.EvalTest",
        "numberRunning": 10,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 10,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.constructorcallnewclass.NewClassTest",
        "numberRunning": 7,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 7,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.jar.JarTest",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.model.TypeTest",
        "numberRunning": 8,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 8,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.factory.TypeFactoryTest",
        "numberRunning": 5,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.serializable.ModelStreamerTest",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.variable.InferredVariableTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.parent.SetParentTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "numberRunning": 31,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 31,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.serializable.SerializableTest",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.imports.ImportScannerTest",
        "numberRunning": 6,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.parent.ParentTest",
        "numberRunning": 10,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 10,
        "numberSkipping": 1
      },
      {
        "testClass": "spoon.test.method_overriding.MethodOverriddingTest",
        "numberRunning": 4,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.jdtimportbuilder.ImportBuilderTest",
        "numberRunning": 8,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 8,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.interfaces.InterfaceTest",
        "numberRunning": 6,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 6,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.methodreference.MethodReferenceTest",
        "numberRunning": 13,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 13,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.template.TemplateArrayAccessTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.MavenLauncherTest",
        "numberRunning": 6,
        "numberPassing": 4,
        "numberFailing": 2,
        "numberErroring": 0,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.modifiers.TestModifiers",
        "numberRunning": 6,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 6,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.constructorcallnewclass.ConstructorCallTest",
        "numberRunning": 6,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 6,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.testing.AbstractAssertTest",
        "numberRunning": 4,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.arrays.ArraysTest",
        "numberRunning": 8,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 8,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.reflect.visitor.CtInheritanceScannerTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.reflect.visitor.CtIteratorTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.factory.AnnotationFactoryTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.api.APITest",
        "numberRunning": 24,
        "numberPassing": 4,
        "numberFailing": 0,
        "numberErroring": 20,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.initializers.InitializerTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.labels.TestLabels",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "numberRunning": 24,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 24,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceTest",
        "numberRunning": 8,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 8,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.visibility.VisibilityTest",
        "numberRunning": 5,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.imports.ImportAndExtendWithPackageNameTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.enums.EnumsTest",
        "numberRunning": 7,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 7,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.executable.ExecutableRefTest",
        "numberRunning": 5,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.ctBodyHolder.CtBodyHolderTest",
        "numberRunning": 6,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 6,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.reflect.visitor.CtVisitorTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.support.compiler.jdt.JDTBatchCompilerTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.reference.VariableAccessTest",
        "numberRunning": 11,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 11,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.snippets.SnippetTest",
        "numberRunning": 6,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.parent.TopLevelTypeTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.exceptions.ExceptionTest",
        "numberRunning": 6,
        "numberPassing": 3,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.literal.LiteralTest",
        "numberRunning": 5,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
        "numberRunning": 8,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 8,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.intercession.OneCanCallSetterWithNullParameterizedTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "numberRunning": 52,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 52,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.prettyprinter.PrinterTest",
        "numberRunning": 9,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 8,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.fieldaccesses.FieldAccessTest",
        "numberRunning": 16,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 16,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.processing.CtGenerationTest",
        "numberRunning": 4,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.visitor.AssignmentsEqualsTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.refactoring.MethodsRefactoringTest",
        "numberRunning": 5,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.template.TemplateClassAccessTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
        "numberRunning": 12,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 12,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.refactoring.RefactoringTest",
        "numberRunning": 4,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.path.PathTest",
        "numberRunning": 10,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 10,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
        "numberRunning": 18,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 18,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.factory.FactoryTest",
        "numberRunning": 5,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.reflect.visitor.ReferenceQueryTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.trycatch.TryCatchTest",
        "numberRunning": 12,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 12,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.prettyprinter.LinesTest",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.pkg.PackageTest",
        "numberRunning": 12,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 12,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.testing.FileAssertTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.invocations.InvocationTest",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.refactoring.CtRenameLocalVariableRefactoringTest",
        "numberRunning": 4,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceGenericTest",
        "numberRunning": 12,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 12,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.limits.utils.InternalTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.strings.StringLiteralTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.api.MetamodelTest",
        "numberRunning": 14,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 14,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.intercession.insertBefore.InsertMethodsTest",
        "numberRunning": 9,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 9,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.secondaryclasses.ClassesTest",
        "numberRunning": 6,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 6,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.serializable.SourcePositionTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.testing.CtElementAssertTest",
        "numberRunning": 5,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.signature.SignatureTest",
        "numberRunning": 8,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 8,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.method.MethodTest",
        "numberRunning": 5,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.factory.ConstructorFactoryTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.constructor.ConstructorTest",
        "numberRunning": 7,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 7,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.reflect.ast.AstCheckerTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.replace.ReplaceParametrizedTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "numberRunning": 45,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 45,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.ctBlock.TestCtBlock",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "numberRunning": 17,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 17,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "numberRunning": 43,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 43,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.control.ControlTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.field.FieldTest",
        "numberRunning": 6,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 6,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.casts.CastTest",
        "numberRunning": 5,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.parameters.ParameterTest",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.ctClass.CtClassTest",
        "numberRunning": 8,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 8,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.template.TemplateInvocationSubstitutionTest",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.factory.FieldFactoryTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest",
        "numberRunning": 9,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 9,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.model.BlockTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.factory.ExecutableFactoryTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.support.compiler.jdt.ExtendedStringLiteralTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.reference.CloneReferenceTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.comment.CommentTest",
        "numberRunning": 19,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 18,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.reference.ElasticsearchStackoverflowTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.reference.AnnotationFieldReferenceTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.type.TypeTest",
        "numberRunning": 13,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 13,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.api.NoClasspathTest",
        "numberRunning": 5,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.delete.DeleteTest",
        "numberRunning": 14,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 14,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.template.TemplateEnumAccessTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.javadoc.JavaDocTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.main.MainTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.factory.ClassFactoryTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.testing.CtPackageAssertTest",
        "numberRunning": 4,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "spoon.test.path.PathTest",
        "testMethod": "testIncorrectPathFromString",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.method_overriding.MethodOverriddingTest",
        "testMethod": "testMethodOverrideByReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "testPositionOfAnnonymousType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.position.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testImportStarredPackageWithNonVisibleClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.imports.testclasses.internal",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.VariableAccessTest",
        "testMethod": "testReferences",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testGetDeclarationOfTypeParameterReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.generics.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testCtThisAccess",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.PrinterTest",
        "testMethod": "testJDTBatchCompilerCanBeBuild",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: org.eclipse.jdt.internal.compiler.batch",
        "isError": true
      },
      {
        "testClass": "spoon.test.constructorcallnewclass.ConstructorCallTest",
        "testMethod": "testConstructorCallStringWithParameters",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.constructorcallnewclass.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.variable.InferredVariableTest",
        "testMethod": "testInferredVariableAreMarked",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.parent.SetParentTest",
        "testMethod": "initializationError",
        "failureName": "java.lang.NoClassDefFoundError",
        "detail": "Could not initialize class spoon.test.parent.ContractOnSettersParametrizedTest",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testModelBuildingTree",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.io",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "testPositionParameterTypeReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.type.TypeTest",
        "testMethod": "testPolyTypBindingInTernaryExpression",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testImportOfInvocationOfStaticMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.parent.ContractOnSettersParametrizedTest",
        "testMethod": "initializationError",
        "failureName": "java.lang.ExceptionInInitializerError",
        "isError": true
      },
      {
        "testClass": "spoon.test.fieldaccesses.FieldAccessTest",
        "testMethod": "testBUG20160112",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.fieldaccesses.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.VariableAccessTest",
        "testMethod": "testDeclaringTypeOfALambdaReferencedByParameterReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: javax.swing",
        "isError": true
      },
      {
        "testClass": "spoon.test.pkg.PackageTest",
        "testMethod": "testPackage",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.type.TypeTest",
        "testMethod": "testTypeReferenceInGenericsAndCasts",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportScannerTest",
        "testMethod": "testMultiCatchImport",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.eval.EvalTest",
        "testMethod": "testArrayLength",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testStaticTargetsOfFieldAccessNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "testSimpleTemplate",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.constructorcallnewclass.ConstructorCallTest",
        "testMethod": "testConstructorCallStringWithoutParameters",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.constructorcallnewclass.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.fieldaccesses.FieldAccessTest",
        "testMethod": "testTargetedAccessPosition",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.fieldaccesses.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "testFooForEach",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.parent.NullParentTest",
        "testMethod": "testLocalVariableNullDefaultExpression",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testBasicAPIUsage",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testRepeatableAnnotationAreManagedWithArrays",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.type.TypeTest",
        "testMethod": "testTypeAccessForDotClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testLambdaExpressionWithStatementBodyAndWithParameter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      },
      {
        "testClass": "spoon.testing.CtPackageAssertTest",
        "testMethod": "testAddTypeToPackage",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: package",
        "isError": true
      },
      {
        "testClass": "spoon.test.casts.CastTest",
        "testMethod": "testCast2",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testMatchParameterCondition",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.MetamodelTest",
        "testMethod": "elementAnnotationRoleHandlerTest",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.trycatch.TryCatchTest",
        "testMethod": "testCompileMultiTryCatchWithCustomExceptions",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceGenericTest",
        "testMethod": "testOneReferenceBetweenMethodsInSameClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testPatternParameters",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.template.testclasses.replace",
        "isError": true
      },
      {
        "testClass": "spoon.test.fieldaccesses.FieldAccessTest",
        "testMethod": "testIncrementationOnAVarIsAUnaryOperator",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "testExpressions",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctBodyHolder.CtBodyHolderTest",
        "testMethod": "testWhileWithBlock",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
        "testMethod": "testSpecPackage",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.comment.CommentTest",
        "testMethod": "testCodeFactory",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.casts.CastTest",
        "testMethod": "testCase4",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang.annotation",
        "isError": true
      },
      {
        "testClass": "spoon.test.snippets.SnippetTest",
        "testMethod": "testCompileSnippetWithContext",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceGenericTest",
        "testMethod": "testOneReferenceWithMethodNotGenericOutOfTheClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "testExtensionBlock",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.field.FieldTest",
        "testMethod": "testAddFieldsAtTop",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.trycatch.TryCatchTest",
        "testMethod": "testCatchWithExplicitFinalVariable",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testTargetsOfFieldAccess",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.fieldaccesses.FieldAccessTest",
        "testMethod": "testModelBuildingFieldAccesses",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.delete.DeleteTest",
        "testMethod": "testDeleteReturn",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testSortingOfImports",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.visitor",
        "isError": true
      },
      {
        "testClass": "spoon.test.signature.SignatureTest",
        "testMethod": "testLiteralSignature",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.refactoring.MethodsRefactoringTest",
        "testMethod": "testExecutableReferenceFilter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.refactoring.parameter.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.secondaryclasses.ClassesTest",
        "testMethod": "testIsAnonymousMethodInCtClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: javax.swing",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testLambdaExpressionWithExpressionBodyAndWithMultiParameters",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      },
      {
        "testClass": "spoon.LauncherTest",
        "testMethod": "testLLauncherBuildModelReturnAModel",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testCreateRepeatableAnnotation",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testLambdaExpressionInIfConditional",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      },
      {
        "testClass": "spoon.test.methodreference.MethodReferenceTest",
        "testMethod": "testReferenceToAnInstanceMethodOfMultiParticularObject",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.testing.CtPackageAssertTest",
        "testMethod": "testEqualityBetweenTwoCtPackage",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.interfaces.InterfaceTest",
        "testMethod": "testDefaultMethodInConsumer",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.interfaces.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.method.MethodTest",
        "testMethod": "testAddSameMethodsTwoTimes",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "testCatchPosition",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.factory.ClassFactoryTest",
        "testMethod": "testTopLevelClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testFilters",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.comparison.EqualTest",
        "testMethod": "testEqualsComment",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "testTemplateInheritance",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.template.testclasses.inheritance",
        "isError": true
      },
      {
        "testClass": "spoon.test.constructor.ConstructorTest",
        "testMethod": "testTypeAnnotationWithConstructorsOnFormalType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.constructor.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.properties.PropertiesTest",
        "testMethod": "testNonExistingDirectory",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.replace.ReplaceTest",
        "testMethod": "testReplaceIntegerReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testAnnotationParameterTypes",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
        "testMethod": "testPartialShadow",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateArrayAccessTest",
        "testMethod": "testArrayAccess",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.labels.TestLabels",
        "testMethod": "testLabelsAreDetected",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testUsageOfTypeAnnotationBeforeExceptionInSignatureOfMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.strings.StringLiteralTest",
        "testMethod": "testSnippetFullClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testSuperInheritanceHierarchyFunctionListener",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.imports.testclasses.internal",
        "isError": true
      },
      {
        "testClass": "spoon.test.parent.NullParentTest",
        "testMethod": "testFieldNullDefaultExpression",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testAccessAnnotationValue",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.visibility.VisibilityTest",
        "testMethod": "testInvocationVisibilityInFieldDeclaration",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: org.sat4j.specs",
        "isError": true
      },
      {
        "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest",
        "testMethod": "testNoFQNWhenUsedInInnerClassAndShadowedByLocalVariable",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.executable.ExecutableTest",
        "testMethod": "testBlockInExecutable",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testAbstractAllAnnotationProcessor",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang.annotation",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testAccessType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
        "testMethod": "testScannerArrayReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.security",
        "isError": true
      },
      {
        "testClass": "spoon.test.enums.EnumsTest",
        "testMethod": "testGetAllMethods",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.comment.CommentTest",
        "testMethod": "testJavaDocEmptyCommentAndTag",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.TypeTest",
        "testMethod": "testTypeInfoIsInterface",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.io",
        "isError": true
      },
      {
        "testClass": "spoon.test.secondaryclasses.ClassesTest",
        "testMethod": "testInnerClassContruction",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testGetExecDeclarationOfEnumSetOf",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.replace.ReplaceTest",
        "testMethod": "testReplaceBlockTry",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.delete.DeleteTest",
        "testMethod": "testDeleteAStatementInConstructor",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest",
        "testMethod": "testCheckAssignmentContracts",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.constructor.ConstructorTest",
        "testMethod": "callParamConstructor",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.constructor.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.replace.ReplaceTest",
        "testMethod": "testReplaceMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.constructorcallnewclass.ConstructorCallTest",
        "testMethod": "testCoreConstructorCall",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.constructorcallnewclass.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "classCastExceptionIsNotThrown",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilationunit.TestCompilationUnit",
        "testMethod": "testAddDeclaredTypeInCU",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.model",
        "isError": true
      },
      {
        "testClass": "spoon.test.query_function.VariableReferencesTest",
        "testMethod": "testLocalVariableReferenceDeclarationFunction",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.trycatch.TryCatchTest",
        "testMethod": "testCatchWithUnknownExceptions",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testSpoonManageRecursivelyDefinedAnnotation",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.eval.EvalTest",
        "testMethod": "testStringConcatenation",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.type.TypeTest",
        "testMethod": "testIntersectionTypeOnTopLevelType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.NoClasspathTest",
        "testMethod": "testGetStaticDependency",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.methodreference.MethodReferenceTest",
        "testMethod": "testReferenceToAnInstanceMethodOfAnArbitraryObjectOfAParticularType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
        "testMethod": "testDeclaredField",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.net",
        "isError": true
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testTargetsOfInv",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "testTemplateInvocationSubstitution",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testTypeReferenceSpecifiedInClassDeclarationInNoClasspathWithGenerics",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
        "testMethod": "testScannerEnum",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.processing.ProcessingTest",
        "testMethod": "testSpoonTagger",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.signature.SignatureTest",
        "testMethod": "testMethodInvocationSignatureStaticFieldsVariables",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.constructor.ConstructorTest",
        "testMethod": "testTransformationOnConstructorWithInsertBegin",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.constructor.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testLambdaExpressionWithStatementBodyAndWithoutParameters",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testQueryWithOptionalNumberOfInputs",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateInvocationSubstitutionTest",
        "testMethod": "testInvocationSubstitutionByStatement",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateReplaceReturnTest",
        "testMethod": "testNoReturnReplaceTemplate",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testParentFunction",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testIsSameSignatureWithGenerics",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "testPositionClassWithComments",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.signature.SignatureTest",
        "testMethod": "testNullSignatureInUnboundVariable",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.parent.NullParentTest",
        "testMethod": "testForLoopNullChildren",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.IntercessionTest",
        "testMethod": "testInsertAfter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.IntercessionTest",
        "testMethod": "testEqualConstructor",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.reflect.ast.CloneTest",
        "testMethod": "testCloneMethodsDeclaredInAST",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.code",
        "isError": true
      },
      {
        "testClass": "spoon.test.replace.ReplaceTest",
        "testMethod": "testReplaceStmtByListStatementsAndNull",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.insertBefore.InsertMethodsTest",
        "testMethod": "testInsertAfterWithoutBrace",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest",
        "testMethod": "testNoFQNWhenShadowedByField",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testIsSameSignatureWithMethodGenerics",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.generics.testclasses2",
        "isError": true
      },
      {
        "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest",
        "testMethod": "testNoFQNAndStaticImport",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceGenericTest",
        "testMethod": "testMethodWithoutReferences",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.VariableAccessTest",
        "testMethod": "testSuperAccess",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.reference.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testCreateRepeatableAnnotationWithArrays",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.variable.AccessTest",
        "testMethod": "testCanVisitFieldAccessAndSubClasses",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.control.ControlTest",
        "testMethod": "testModelBuildingFor",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.control.ControlTest",
        "testMethod": "testModelBuildingDoWhile",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testgetTopDefinitions",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.pkg.PackageTest",
        "testMethod": "testGetFQNInNoClassPath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.field.FieldTest",
        "testMethod": "testAddAFieldInAClassAtAPositionGiven",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.LinesTest",
        "testMethod": "testCompileWhenUsingLinesArgument",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.TypeTest",
        "testMethod": "testGetDeclaredOrIheritedFieldOnType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.model",
        "isError": true
      },
      {
        "testClass": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
        "testMethod": "testStaticClasses",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testOverridingMethodFromInterface",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.MetamodelTest",
        "testMethod": "elementAnnotationRoleTest",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testAddGeneratedBy",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: void",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testConstructorCallInNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.SwitchCaseTest",
        "testMethod": "testSwitchStatementOnAString",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.query_function.VariableReferencesTest",
        "testMethod": "testCatchVariableReferenceFunction",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
        "testMethod": "testSrcMainJava",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.signature.SignatureTest",
        "testMethod": "testNullSignature",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest",
        "testMethod": "testImplicitStaticClassAccessAutoImport",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest",
        "testMethod": "testImplicitStaticFieldReferenceAutoImport",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.method.MethodTest",
        "testMethod": "testSearchMethodWithGeneric",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.serializable.SerializableTest",
        "testMethod": "testSerialFile",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.varargs.VarArgsTest",
        "testMethod": "testModelBuildingInitializer",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.exceptions.ExceptionTest",
        "testMethod": "testExceptionIfNotCompilable",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilation.CompilationTest",
        "testMethod": "testPrecompile",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.processing",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testTypeReferenceSpecifiedInClassDeclarationInNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: com.google.common.base",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testTypeParameterReferenceAsActualTypeArgument",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testAnnotationIntrospection",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "testArrayArgParameter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: void",
        "isError": true
      },
      {
        "testClass": "spoon.reflect.visitor.CtIteratorTest",
        "testMethod": "testCtElementIteration",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.visitor",
        "isError": true
      },
      {
        "testClass": "spoon.test.exceptions.ExceptionTest",
        "testMethod": "testExceptionInSnippet",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
        "testMethod": "autoImportUsesFullyQualifiedNameWhenImportedNameAlreadyPresent",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.prettyprinter.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "testTemplateArrayAccess",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testMatchReluctantMultivalue",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctType.CtTypeTest",
        "testMethod": "testHasMethodNotHasMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testGetDeclarationOnTypeParameterFromLambda",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      },
      {
        "testClass": "spoon.reflect.visitor.CtInheritanceScannerMethodsTest",
        "testMethod": "testMethodsInInheritanceScanner",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.code",
        "isError": true
      },
      {
        "testClass": "spoon.test.modifiers.TestModifiers",
        "testMethod": "testGetModifiersHelpers",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testOverriddenMethodFromAbstractClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.IncrementalLauncherTest",
        "testMethod": "testIncremental2",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.query_function.VariableReferencesTest",
        "testMethod": "testParameterReferenceFunction",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceTest",
        "testMethod": "testCreateReferenceForAnonymousExecutable",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: void",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.TypeTest",
        "testMethod": "superclassTest",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testLambdaExpressionWithExpressionBodyAndWithoutParameter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      },
      {
        "testClass": "spoon.test.methodreference.MethodReferenceTest",
        "testMethod": "testCompileMethodReferenceGeneratedBySpoon",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.jar.JarTest",
        "testMethod": "testJar",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testFieldAccessInLambdaNoClassPath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      },
      {
        "testClass": "spoon.test.fieldaccesses.FieldAccessTest",
        "testMethod": "testFieldAccessInLambda",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.logging",
        "isError": true
      },
      {
        "testClass": "spoon.test.pkg.PackageTest",
        "testMethod": "testAnnotationInPackageInfoWhenTemplatesCompiled",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testTypeParameterDeclarer",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.IncrementalLauncherTest",
        "testMethod": "testIncremental1",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.methodreference.MethodReferenceTest",
        "testMethod": "testReferenceToAnInstanceMethodOfAParticularObject",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.trycatch.TryCatchTest",
        "testMethod": "testFullyQualifiedException",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.secondaryclasses.ClassesTest",
        "testMethod": "testTopLevel",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testStaticTargetsOfInv",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testImportOfAnInnerClassInAClassPackage",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.imports.testclasses.internal",
        "isError": true
      },
      {
        "testClass": "spoon.reflect.declaration.CtTypeInformationTest",
        "testMethod": "testGetAllMethodsReturnsTheRightNumber",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testAccessToGenerics",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.initializers.InitializerTest",
        "testMethod": "testModelBuildingStaticInitializer",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.insertBefore.InsertMethodsTest",
        "testMethod": "testInsertAfterWithBrace",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "testSwitchCase",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.position.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctType.CtTypeParameterTest",
        "testMethod": "testTypeSame",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.fieldaccesses.FieldAccessTest",
        "testMethod": "testTypeOfFieldAccess",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "testTemplateMatcherMatchTwoSnippets",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testInvalidateCacheOfCompiler",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testWildcard",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.refactoring.MethodsRefactoringTest",
        "testMethod": "testCtParameterRemoveRefactoring",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.refactoring.parameter.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceTest",
        "testMethod": "testHashcodeWorksWithReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.PrinterTest",
        "testMethod": "testRuleCanBeBuild",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.prettyprinter.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testTypeParameterOfLambdaWithoutType2",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      },
      {
        "testClass": "spoon.testing.AbstractAssertTest",
        "testMethod": "testTransformationWithProcessorName",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.comment.CommentTest",
        "testMethod": "testCoreFactory",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.method.MethodTest",
        "testMethod": "testGetAllMethods",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testImportOfInvocationOfPrivateClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testTypeAccessInLambdaNoClassPath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "unionOfTwoFilters",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.methodreference.MethodReferenceTest",
        "testMethod": "testNoClasspathSuperExecutable",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilation.CompilationTest",
        "testMethod": "compileCommandLineTest",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.interfaces.InterfaceTest",
        "testMethod": "testExtendsDefaultMethodInSubInterface",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.interfaces.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.serializable.SerializableTest",
        "testMethod": "testSerializationModelStreamer",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.factory.FieldFactoryTest",
        "testMethod": "testCreateFromSource",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "testPositionOfAnnonymousTypeByNewInterface",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.comment.CommentTest",
        "testMethod": "testCommentsInComment1And2",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testReturnOrThrowFilter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testCannotAdaptTypeOfNonTypeScope",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilation.CompilationTest",
        "testMethod": "testSingleClassLoader",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.fieldaccesses.FieldAccessTest",
        "testMethod": "testFieldAccessInAnonymousClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testTargetsOfFieldAccessInInnerClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testIsGenericsMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.generics.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testOutputDestinationHandler",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationValuesTest",
        "testMethod": "testCtAnnotationAPI",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.strings.StringTest",
        "testMethod": "testModelBuildingInitializer",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
        "testMethod": "testShadowModelEqualsNormalModel",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.code",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testMatchIfElse",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.factory.TypeFactoryTest",
        "testMethod": "testGetClassInAnInterface",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testMethodTypingContext",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testInstanceOfMapEntryGeneric",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.javadoc.JavaDocTest",
        "testMethod": "testJavaDocReprint",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.method.MethodTest",
        "testMethod": "testGetAllMethodsAdaptingType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest",
        "testMethod": "testChildOfGenericsWithAmbiguousStaticField",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.staticFieldAccess2",
        "isError": true
      },
      {
        "testClass": "spoon.test.invocations.InvocationTest",
        "testMethod": "testIssue1753",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: org.elasticsearch.cluster",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testLambdaExpressionWithExpressionBodyAndWithoutTypeForParameter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "defaultConstructorPositionTest",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testQueryStepScannWithConsumer",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.delete.DeleteTest",
        "testMethod": "testDeleteAStatementInAnonymousExecutable",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest",
        "testMethod": "testNoFQNWhenShadowedByLocalVariable",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.comment.CommentTest",
        "testMethod": "testJavaDocCommentOnUnix",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.factory.AnnotationFactoryTest",
        "testMethod": "testAnnotate",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceGenericTest",
        "testMethod": "testMultiReferenceBetweenMethodsWithGenericInSameClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.testing.FileAssertTest",
        "testMethod": "testEqualsBetweenTwoSameFile",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.delete.DeleteTest",
        "testMethod": "testDeleteAStatementInMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.parameters.ParameterTest",
        "testMethod": "testMultiParameterLambdaTypeReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "testObjectIsNotParamTemplate",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testSpoonSpoonResult",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testAddProcessorMethodInSpoonAPI",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.fieldaccesses.FieldAccessTest",
        "testMethod": "testFieldAccessWithoutAnyImport",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.trycatch.TryCatchTest",
        "testMethod": "testTryWithResources",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.invocations.InvocationTest",
        "testMethod": "testTargetNullForStaticMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testDeclarationOfTypeParameterReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.generics.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
        "testMethod": "testIssue1501",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: android.app",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testModelBuildingAnnotationBoundUsage",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateEnumAccessTest",
        "testMethod": "testEnumAccessTest",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.ElasticsearchStackoverflowTest",
        "testMethod": "testStackOverflow",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: org.elasticsearch.transport",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateReplaceReturnTest",
        "testMethod": "testReturnReplaceTemplate",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.refactoring.RefactoringTest",
        "testMethod": "testTransformedInstanceofAfterATransformation",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.refactoring.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
        "testMethod": "testSuperInterfaceQName",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testisGeneric",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.module.TestModule",
        "testMethod": "testCompleteModuleInfoContentNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.logging",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testRepeatSameAnnotationOnParameter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.VariableAccessTest",
        "testMethod": "testParameterReferenceInConstructorNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: org.elasticsearch.common.component",
        "isError": true
      },
      {
        "testClass": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
        "testMethod": "testGoodTestClassNames",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.insertBefore.InsertMethodsTest",
        "testMethod": "testInsertAfter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.IntercessionTest",
        "testMethod": "testInsertIfIntercession",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testRecursiveTypeAdapting",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testGenerateClassWithSelfReferences",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: void",
        "isError": true
      },
      {
        "testClass": "spoon.test.comment.CommentTest",
        "testMethod": "testRemoveComment",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testSubInheritanceHierarchyResolver",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.replace.ReplaceTest",
        "testMethod": "testReplaceAllTypeRefenceWithGenerics",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctClass.CtClassTest",
        "testMethod": "testAllTypeReferencesToALocalTypeShouldNotStartWithNumber",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testGenericsInQualifiedNameInConstructorCall",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "testSubstitutionInsertAllNtoN",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.arrays.ArraysTest",
        "testMethod": "testParameterizedVarargReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testOutputOfSpoon",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.snippets.SnippetTest",
        "testMethod": "testCompileSnippetSeveralTimes",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.MetamodelTest",
        "testMethod": "spoonMetaModelTest",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.factory.ConstructorFactoryTest",
        "testMethod": "testCreateDefault",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.comment.CommentTest",
        "testMethod": "testInLineComment",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.processing.CtGenerationTest",
        "testMethod": "testGenerateCloneVisitor",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.code",
        "isError": true
      },
      {
        "testClass": "spoon.test.delete.DeleteTest",
        "testMethod": "testDeleteStatementInCase",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctBodyHolder.CtBodyHolderTest",
        "testMethod": "testTryCatch",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.refactoring.CtRenameLocalVariableRefactoringTest",
        "testMethod": "testRefactorWrongUsage",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "testPositionGeneric",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.BlockTest",
        "testMethod": "testAddEmptyBlock",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "substituteTypeAccessReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testOutputWithNoOutputProduceNoFolder",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceGenericTest",
        "testMethod": "testMultiReferencesBetweenMethodsWithoutGenericInSameClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.comment.CommentTest",
        "testMethod": "testDocumentationContract",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testMatchGreedyMultiValueMaxCountLimit",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.condition.ConditionalTest",
        "testMethod": "testNoBlockInConditionAndLoop",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.signature.SignatureTest",
        "testMethod": "testUnboundFieldSignature",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testIgnoreEnclosingClassInActualTypes",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.arrays.ArraysTest",
        "testMethod": "testInitializeWithNewArray",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: com.example",
        "isError": true
      },
      {
        "testClass": "spoon.reflect.declaration.CtTypeInformationTest",
        "testMethod": "testClassTypingContextContinueScanning",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.module.TestModule",
        "testMethod": "testModuleInfoWithComments",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.logging",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testRepeatSameAnnotationOnPackage",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testCanAccess",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.variable.AccessTest",
        "testMethod": "testAccessToStringOnPostIncrement",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.casts.CastTest",
        "testMethod": "testTypeAnnotationOnCast",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang.annotation",
        "isError": true
      },
      {
        "testClass": "spoon.support.compiler.jdt.JDTBatchCompilerTest",
        "testMethod": "testCompileGeneratedJavaFile",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testElementMapFunction",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "testPositionMethodTypeParameter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testEarlyTerminatingQuery",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "testPositionField",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.IncrementalLauncherTest",
        "testMethod": "testCache",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceTest",
        "testMethod": "testPbWithStream",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testGetAllExecutablesForInterfaces",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.reference",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceGenericTest",
        "testMethod": "testOneReferenceWithGenericMethodOutOfTheClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilationunit.GetBinaryFilesTest",
        "testMethod": "testSingleBinary",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationValuesTest",
        "testMethod": "testAnnotateWithEnum",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.refactoring.MethodsRefactoringTest",
        "testMethod": "testAllMethodsSameSignatureFunction",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.refactoring.parameter.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testSpoonWithImports",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.factory.ConstructorFactoryTest",
        "testMethod": "testCreate",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.TypeTest",
        "testMethod": "testGetAllExecutables",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.model",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testRepeatSameAnnotationOnConstructor",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testImproveAPIActualTypeReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctClass.CtClassTest",
        "testMethod": "testDefaultConstructorAreOk",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.ctClass.testclasses.issue1306.internal",
        "isError": true
      },
      {
        "testClass": "spoon.test.factory.FactoryTest",
        "testMethod": "testClone",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.replace.ReplaceTest",
        "testMethod": "testReplaceReplace",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testPrintNotAllSourcesInCommandLine",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testStaticMethodWithDifferentClassSameNameCollision",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: junit.framework",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testLambdaExpressionWithExpressionBodyAndWithParameterTyped",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctType.CtTypeTest",
        "testMethod": "testIsSubTypeOf",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testTargetsOfInvInInnerClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.literal.LiteralTest",
        "testMethod": "testEscapedString",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: char",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilation.CompilationTest",
        "testMethod": "testExoticClassLoader",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.method_overriding.MethodOverriddingTest",
        "testMethod": "testInterfaceMethodsCanOverrideObjectMethods",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: void",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testFullQualifiedNameImport",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testGenericWithExtendsInDeclaration",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.serializable.ModelStreamerTest",
        "testMethod": "testGZipCompressionType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.declaration",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "testSubstituteInnerClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testTypeParameterOfLambdaWithoutType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilationunit.GetBinaryFilesTest",
        "testMethod": "testExistingButNotBuiltBinary",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.field.FieldTest",
        "testMethod": "getFQNofFieldReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testNestedStaticPathWithTypedParameterWithImports",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.imports.testclasses2",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.PrinterTest",
        "testMethod": "testAutoimportModeDontImportUselessStatic",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.comment.CommentTest",
        "testMethod": "testInlineCommentIfBlock",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.testing.AbstractAssertTest",
        "testMethod": "testTransformationFromCtElementWithProcessor",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.CloneReferenceTest",
        "testMethod": "testGetDeclarationOfFieldAfterClone",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testSubTypeAnonymous",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testNullReferenceSubtype",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.refactoring.CtRenameLocalVariableRefactoringTest",
        "testMethod": "testRenameAllLocalVariablesOfRenameTestSubject",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.processing.CtGenerationTest",
        "testMethod": "testGenerateCtBiScanner",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.code",
        "isError": true
      },
      {
        "testClass": "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest",
        "testMethod": "testAnnotationInChildWithConstants",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.staticFieldAccess2",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.MetamodelTest",
        "testMethod": "testMetamodelWithoutSources",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.TypeTest",
        "testMethod": "testGetUsedTypesForTypeInRootPackage",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctBlock.TestCtBlock",
        "testMethod": "testAddStatementInBlock",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testAnnotationAndShadowDefaultRetentionPolicy",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang.annotation",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testMultipleCU",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.reflect.declaration.CtTypeInformationTest",
        "testMethod": "testGetAllMethodsWontReturnOverriddenMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testStaticTargetsOfInvNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.methodreference.MethodReferenceTest",
        "testMethod": "testReferenceToAStaticMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testCtSuperAccess",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testUsageOfTypeAnnotationInExtendsImplementsOfAClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testGenerateIfElse",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testAnnotationFilter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilationunit.TestCompilationUnit",
        "testMethod": "testNewlyCreatedCUWouldGetAPartialPosition",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.path.PathTest",
        "testMethod": "testGetPathFromNonParent",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.factory.CodeFactoryTest",
        "testMethod": "testThisAccess",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.eval.EvalTest",
        "testMethod": "testDoNotSimplifyCasts",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testTypeParameterWithImplicitArrayType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      },
      {
        "testClass": "spoon.test.executable.ExecutableTest",
        "testMethod": "testShadowValueOf",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.executable.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testModelBuildingSimilarSignatureMethods",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilationunit.GetBinaryFilesTest",
        "testMethod": "testNestedTypes",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testDuplicateFilePlusFolder",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.eval.EvalTest",
        "testMethod": "testVisitorPartialEvaluator_binary",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testEmptyQuery",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.variable.AccessTest",
        "testMethod": "testVariableAccessInNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: org.argouml.uml.ui.foundation.core",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctClass.CtClassTest",
        "testMethod": "testNoClasspathWithSuperClassOfAClassInAnInterface",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: org.eclipse.draw2d",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilationunit.GetBinaryFilesTest",
        "testMethod": "testMultiClassInSingleFile",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.jdtimportbuilder.ImportBuilderTest",
        "testMethod": "testWithSimpleImport",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.constructorcallnewclass.NewClassTest",
        "testMethod": "testNewClassWithObjectClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.constructorcallnewclass.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.CUFilterTest",
        "testMethod": "testSingleExcludeWithFilter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.parameters.ParameterTest",
        "testMethod": "testGetParameterReferenceInLambdaNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testGetImportKindReturnRightValue",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.delete.DeleteTest",
        "testMethod": "testDeleteAStatementInStaticAnonymousExecutable",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.reflect.visitor.ReferenceQueryTest",
        "testMethod": "getAllTypeReferencesInEnum",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.reflect.visitor.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testPrintNotAllSourcesWithFilter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.sourcePosition.SourcePositionTest",
        "testMethod": "testSourcePositionOfSecondPrimitiveType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.arrays.ArraysTest",
        "testMethod": "testParameterizedArrayVarargReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.insertBefore.InsertMethodsTest",
        "testMethod": "testInsertBeforeWithoutBrace",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.IntercessionTest",
        "testMethod": "testInsertEnd",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.signature.SignatureTest",
        "testMethod": "testMethodInvocationSignatureWithVariableAccess",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testClassContextOnInnerClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.module.TestModule",
        "testMethod": "testModuleInfoShouldBeCorrectlyPrettyPrinted",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.logging",
        "isError": true
      },
      {
        "testClass": "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest",
        "testMethod": "testGenericsWithAmbiguousStaticField",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "testFieldAccessNameSubstitutionInInnerClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilation.CompilationTest",
        "testMethod": "testFilterResourcesFile",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testLambdaWithPrimitiveParameter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateClassAccessTest",
        "testMethod": "testClassAccessTest",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.reflect.visitor.CtScannerTest",
        "testMethod": "testScannerCallsAllProperties",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.replace.ReplaceTest",
        "testMethod": "testReplaceField",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.methodreference.MethodReferenceTest",
        "testMethod": "testReferenceBuilderWithComplexGenerics",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceGenericTest",
        "testMethod": "testReferencesBetweenConstructorsInOtherClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest",
        "testMethod": "testAmbiguousImplicitFieldReferenceAutoImport",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.fieldaccesses.FieldAccessTest",
        "testMethod": "testFieldWriteWithPlusEqualsOperation",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.processing.ProcessingTest",
        "testMethod": "testInsertBegin",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testNestedStaticPathWithTypedParameter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.imports.testclasses2",
        "isError": true
      },
      {
        "testClass": "spoon.test.factory.FieldFactoryTest",
        "testMethod": "testCreate",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.trycatch.TryCatchTest",
        "testMethod": "testTryWithOneResource",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.comment.CommentTest",
        "testMethod": "testEnumValueComment",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.comment.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.jdtimportbuilder.ImportBuilderTest",
        "testMethod": "testWithSimpleImportNoAutoimport",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.enums.EnumsTest",
        "testMethod": "testAnnotationsOnEnum",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.query_function.VariableReferencesTest",
        "testMethod": "testCheckModelConsistency",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.PrinterTest",
        "testMethod": "testPrettyPrinter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang.annotation",
        "isError": true
      },
      {
        "testClass": "spoon.test.replace.ReplaceTest",
        "testMethod": "testReplaceStatement",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.replace.ReplaceTest",
        "testMethod": "testReplaceBlock",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testAnnotationAndShadowClassRetentionPolicy",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang.annotation",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testGenericsInConstructorCall",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.type.TypeTest",
        "testMethod": "testDeclarationCreatedByFactory",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.VariableAccessTest",
        "testMethod": "testMultipleDeclarationsOfLocalVariable",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.comparison.EqualTest",
        "testMethod": "testEqualsDetails",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testLineFilter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testStaticMethodWithDifferentClassSameNameJava7NoCollision",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: junit.framework",
        "isError": true
      },
      {
        "testClass": "spoon.test.parent.ParentTest",
        "testMethod": "testParent",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
        "testMethod": "testInterfacesAreCtScannable",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.code",
        "isError": true
      },
      {
        "testClass": "spoon.test.executable.ExecutableTest",
        "testMethod": "testGetReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.query_function.VariableReferencesTest",
        "testMethod": "testVariableReferenceFunction",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testNewInnerClassDefinesInItsClassAndSuperClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.imports.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testInitializeFieldAccessInNoclasspathMode",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testDefaultValueInAnnotationsForAnnotationFields",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testDiamond1",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "testFieldAccessNameSubstitution",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testInvalidQueryStepFailurePolicyIgnore",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.path.PathTest",
        "testMethod": "toStringTest",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctBodyHolder.CtBodyHolderTest",
        "testMethod": "testForWithStatement",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.path.PathTest",
        "testMethod": "testBuilder",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.path.PathTest",
        "testMethod": "testBuilderMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
        "testMethod": "testPrintAClassWithImports",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.QualifiedThisRefTest",
        "testMethod": "testPrintCtFieldAccessWorkEvenWhenParentNotInitialized",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.staticFieldAccess.StaticAccessTest",
        "testMethod": "testProcessAndCompile",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testFieldAndMethodInAnnotation",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.parent.NullParentTest",
        "testMethod": "testTargetedExpressionNullTarget",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.refactoring.CtRenameLocalVariableRefactoringTest",
        "testMethod": "testRenameLocalVariableToSameName",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.MetamodelTest",
        "testMethod": "elementAnnotationAdaptedRoleTest",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.enums.EnumsTest",
        "testMethod": "testEnumWithoutField",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testName",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testClassCastExceptionOnForEach",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.pkg.PackageTest",
        "testMethod": "testRenamePackageAndPrettyPrintWithProcessor",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.CUFilterTest",
        "testMethod": "testWithoutFilters",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.MetamodelTest",
        "testMethod": "testGetRoleHandlersOfClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.refactoring.MethodsRefactoringTest",
        "testMethod": "testSubInheritanceHierarchyFunction",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.refactoring.parameter.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctType.CtTypeTest",
        "testMethod": "testIsSubTypeOfonTypeReferences",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.ctType.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testToStringEqualityBetweenTwoGenericTypeDifferent",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctClass.CtClassTest",
        "testMethod": "testSpoonShouldInferImplicitPackageInNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: com.cristal.ircica.applicationcolis.userinterface.fragments",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testBuildExecutableReferenceFromLambda",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.PrinterTest",
        "testMethod": "testChangeAutoImportModeWorks",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testInterfaceWithObjectMethods",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilation.CompilationTest",
        "testMethod": "testFilterResourcesDir",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctCase.SwitchCaseTest",
        "testMethod": "insertBeforeStatementInSwitchCaseWithoutException",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.fieldaccesses.FieldAccessTest",
        "testMethod": "testFieldAccessNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.parent.ParentTest",
        "testMethod": "testParentOfCtExecutableReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.modifiers.TestModifiers",
        "testMethod": "testClearModifiersByNull",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testImportOfAnInnerClassInASuperClassPackageFullQualified",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.imports.testclasses.internal",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testDiamond2",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.initializers.InitializerTest",
        "testMethod": "testModelBuildingInitializer",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testFieldAccessInLambdaNoClassPathExternal1Example",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      },
      {
        "testClass": "spoon.test.parent.NullParentTest",
        "testMethod": "testAssertNullExpression",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testLambdaFilter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      },
      {
        "testClass": "spoon.test.variable.AccessTest",
        "testMethod": "testStackedAssignments",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.comment.CommentTest",
        "testMethod": "testSnippedWithComments",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.literal.LiteralTest",
        "testMethod": "testBuildLiternal",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testDeepNestedStaticPathWithTypedParameterWithImports",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest",
        "testMethod": "testNoFQNWhenUsedInLoop",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.type.TypeTest",
        "testMethod": "testUnboxingTypeReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testCastWriteWithGenerics",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testElementMapFunctionNull",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest",
        "testMethod": "testGenericsWithAmbiguousStaticFieldAutoImport",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.literal.LiteralTest",
        "testMethod": "testLiteralInForEachWithNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceGenericTest",
        "testMethod": "testExecutableReferences",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.LinesTest",
        "testMethod": "testIdenticalPrettyPrinter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testAnnotationValueReflection",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.annotations",
        "isError": true
      },
      {
        "testClass": "spoon.test.executable.ExecutableRefTest",
        "testMethod": "constructorTest",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.executable.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testGenericMethodCallWithExtend",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "testTemplateMatcherWithWholePackage",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.sourcePosition.SourcePositionTest",
        "testMethod": "equalPositionsHaveSameHashcode",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
        "testMethod": "testSuperOfActualTypeArgumentsOfReturnTypeOfMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.code",
        "isError": true
      },
      {
        "testClass": "spoon.test.type.TypeTest",
        "testMethod": "testShadowType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testNewClassGenerics",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testTypeReferenceWithGenerics",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.imports.testclasses.withgenerics",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testMatchForeachWithOuterSubstitution",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctBlock.TestCtBlock",
        "testMethod": "testAddStatementInCase",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.signature.SignatureTest",
        "testMethod": "testBugSignature",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testLambdaExpressionWithExpressionBodyAndWithMultiParametersTyped",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      },
      {
        "testClass": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
        "testMethod": "testTypeParameterCtConditionnal",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.secondaryclasses.ClassesTest",
        "testMethod": "testClassWithInternalPublicClassOrInterf",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceTest",
        "testMethod": "testSuperClassInGetAllExecutables",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest",
        "testMethod": "testAnnotationInChildWithConstantsAutoImport",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.staticFieldAccess2",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testGetOneLinerMainClassFromCU",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testLambdaMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      },
      {
        "testClass": "spoon.test.fieldaccesses.FieldAccessTest",
        "testMethod": "testGetReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.constructor.ConstructorTest",
        "testMethod": "testTransformationOnConstructorWithInsertBefore",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.constructor.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testImportOfAnInnerClassInASuperClassAvailableInLibrary",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: org.yaml.snakeyaml.representer",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.BlockTest",
        "testMethod": "testIterationStatements",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.snippets.SnippetTest",
        "testMethod": "testCompileStatementWithReturn",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.arrays.ArraysTest",
        "testMethod": "testCtNewArrayWitComments",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testAnotherMissingImport",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.constructor.ConstructorTest",
        "testMethod": "testConstructorCallFactory",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.constructor.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.interfaces.InterfaceTest",
        "testMethod": "testDefaultMethodInInterface",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.interfaces.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testIsGenericTypeEqual",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
        "testMethod": "testIssue2130",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.AnonymousExecutableTest",
        "testMethod": "testStatements",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testElementMapConsumableFunction",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.jdtimportbuilder.ImportBuilderTest",
        "testMethod": "testWithStaticStarredImportFromInterface",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.jdtimportbuilder.testclasses.fullpack",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testTypeDeclarationWildcard",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "substituteStringLiteral",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
        "testMethod": "metamodelPackageRule",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.code",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testEqualityTypeReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testImportOfAnInnerClassInASuperClassPackageAutoImport",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.imports.testclasses.internal",
        "isError": true
      },
      {
        "testClass": "spoon.test.replace.ReplaceTest",
        "testMethod": "testReplaceAPackageReferenceByAnotherOne",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.QualifiedThisRefTest",
        "testMethod": "testCloneThisAccess",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testInvocationWithFieldAccessInNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testAnnotatedElementTypes",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang.annotation",
        "isError": true
      },
      {
        "testClass": "spoon.test.processing.ProcessingTest",
        "testMethod": "testProcessorWithGenericType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "testTemplateMatcher",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilation.CompilationTest",
        "testMethod": "testNewInstance",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.insertBefore.InsertMethodsTest",
        "testMethod": "testInsertBeforeWithBrace",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.trycatch.TryCatchTest",
        "testMethod": "testRethrowingExceptionsJava7",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.constructor.ConstructorTest",
        "testMethod": "testTypeAnnotationOnExceptionDeclaredInConstructors",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.constructor.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.jdtimportbuilder.ImportBuilderTest",
        "testMethod": "testInternalImportWhenNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: android.os",
        "isError": true
      },
      {
        "testClass": "spoon.testing.CtElementAssertTest",
        "testMethod": "testEqualityBetweenTwoDifferentCtElement",
        "failureName": "java.lang.Exception",
        "detail": "Unexpected exception, expected\u003cjava.lang.AssertionError\u003e but was\u003cspoon.SpoonException\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "testEnumConstructorCallComment",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.position.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.processing.ProcessingTest",
        "testMethod": "testInsertEnd",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.factory.ClassFactoryTest",
        "testMethod": "testDeclaringClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.PrinterTest",
        "testMethod": "testPrintingOfOrphanFieldReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testGenericsOnLocalType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.type.TypeTest",
        "testMethod": "testTypeAccessOfArrayObjectInFullyQualifiedName",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testNestedAccessPathWithTypedParameterWithImports",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.serializable.SerializableTest",
        "testMethod": "testSerialCtStatement",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.enums.EnumsTest",
        "testMethod": "testNestedPrivateEnumValues",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.enums.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.path.PathTest",
        "testMethod": "testPathFromString",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateInvocationSubstitutionTest",
        "testMethod": "testSubstitutionByExpression",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.pkg.PackageTest",
        "testMethod": "testAddAnnotationToPackage",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testReuseOfBaseQuery",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testEqualsLambdaParameterRef",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testMatchParameterValue",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testFunctionQueryStep",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
        "testMethod": "testScannerAnnotation",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang.annotation",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testmportInCu",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.processing.ProcessingTest",
        "testMethod": "testInterruptAProcessor",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.visitor",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testPersistenceProperty",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang.annotation",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testClearBoundsForTypeParameterReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.eval.EvalTest",
        "testMethod": "testDoNotSimplify",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testSourceClasspathDoesNotAcceptDotClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.fieldaccesses.FieldAccessTest",
        "testMethod": "testTypeDeclaredInAnonymousClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
        "testMethod": "testScannerGenericsInClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceGenericTest",
        "testMethod": "testReferencesBetweenConstructors",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.field.FieldTest",
        "testMethod": "testGetDefaultExpression",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationValuesTest",
        "testMethod": "testValuesOnJava7Annotation",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testMatchInSet",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.comparison.EqualTest",
        "testMethod": "testEqualsActualTypeRef",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testUsageOfParametersInTypeAnnotation",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "testStatementTemplateRootSubstitution",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testMethodsWithGenericsWhoExtendsObject",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.modifiers.TestModifiers",
        "testMethod": "testMethodWithVarargsDoesNotBecomeTransient",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testRecursiveTypeReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.jar.JarTest",
        "testMethod": "testFile",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.refactoring.RefactoringTest",
        "testMethod": "testThisInConstructor",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.refactoring.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testPatternMatchOfMultipleElements",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.arrays.ArraysTest",
        "testMethod": "testParameterizedArrayReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testUsageOfTypeAnnotationInCast",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.eval.EvalTest",
        "testMethod": "testDoNotSimplifyToExpressionWhenStatementIsExpected",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctType.CtTypeTest",
        "testMethod": "testHasMethodInSuperClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testGetOverriddenMethodWithFunction",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      },
      {
        "testClass": "spoon.test.comment.CommentTest",
        "testMethod": "testWildComments",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testOverridingMethodFromSubClassOfAbstractClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testPackageInNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: com.google.common.base",
        "isError": true
      },
      {
        "testClass": "spoon.test.replace.ReplaceTest",
        "testMethod": "testReplaceStmtByListStatements",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.delete.DeleteTest",
        "testMethod": "testDeleteConditionInACondition",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "testExpressionTemplate",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testFilterQueryStep",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceTest",
        "testMethod": "testLambdaNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: org.elasticsearch.test",
        "isError": true
      },
      {
        "testClass": "spoon.test.arrays.ArraysTest",
        "testMethod": "testArrayReferences",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang.annotation",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testMatchPossesiveMultiValueUnlimited",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.interfaces.InterfaceTest",
        "testMethod": "testRedefinesDefaultMethodInSubInterface",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.interfaces.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilationunit.TestCompilationUnit",
        "testMethod": "testGetUnitTypeWorksWithDeclaredType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.PrinterTest",
        "testMethod": "testPrinterTokenListener",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang.annotation",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testOutputDestinationHandlerWithCUFactory",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.parent.ParentTest",
        "testMethod": "testParentPackage",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.arrays.ArraysTest",
        "testMethod": "testParameterizedTypeReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceTest",
        "testMethod": "testInvokeEnumMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.reference",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
        "testMethod": "importsFromMultipleTypesSupported",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.executable.ExecutableRefTest",
        "testMethod": "testGetActualClassTest",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.executable.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilationunit.TestCompilationUnit",
        "testMethod": "testGetUnitTypeWorksWithDeclaredPackage",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testPrintNotAllSourcesWithNames",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctType.CtTypeTest",
        "testMethod": "testHasMethodOnNull",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.IncrementalLauncherTest",
        "testMethod": "testIncremental3",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.delete.DeleteTest",
        "testMethod": "testDeleteChainOfAssignment",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.type.TypeTest",
        "testMethod": "test",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.factory.TypeFactoryTest",
        "testMethod": "testGetClassWithDollarAndNestedClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.testing.CtPackageAssertTest",
        "testMethod": "testEqualityBetweenTwoDifferentCtPackage",
        "failureName": "java.lang.Exception",
        "detail": "Unexpected exception, expected\u003cjava.lang.AssertionError\u003e but was\u003cspoon.SpoonException\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testRepeatSameAnnotationOnLocalVariable",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testCtTypeReference_getSuperclass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.trycatch.TryCatchTest",
        "testMethod": "testCatchOrder",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.methodreference.MethodReferenceTest",
        "testMethod": "testNoClasspathExecutableReferenceExpression",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest",
        "testMethod": "testImplicitStaticFieldReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.replace.ReplaceTest",
        "testMethod": "testReplaceSet",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.casts.CastTest",
        "testMethod": "testCast1",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testBoundQuery",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.executable.ExecutableRefTest",
        "testMethod": "methodTest",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.executable.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest",
        "testMethod": "testImplicitFieldReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.interfaces.TestInterfaceWithoutSetup",
        "testMethod": "testInterfacePrettyPrinting",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.variable.AccessTest",
        "testMethod": "testCanVisitVariableAccessAndSubClasses",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testGenericTypeReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.generics.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testTargetsOfInvInAnonymousClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "testPositionAbstractMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "testEndColumn",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.AnnotationFieldReferenceTest",
        "testMethod": "testAnnotationFieldReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testTargetsOfStaticFieldAccess",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.replace.ReplaceParametrizedTest",
        "testMethod": "initializationError",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.path.PathTest",
        "testMethod": "testMultiPathFromString",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testDestinationOfSpoon",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.MetamodelTest",
        "testMethod": "testMetamodelCachedInFactory",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.jdtimportbuilder.ImportBuilderTest",
        "testMethod": "testWithStaticInheritedImport",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: boolean",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testUnknownSuperClassWithSameNameInNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: android.os",
        "isError": true
      },
      {
        "testClass": "spoon.test.method.MethodTest",
        "testMethod": "testClone",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.reflect.ast.CloneTest",
        "testMethod": "testCopyType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.visitor",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportScannerTest",
        "testMethod": "testComputeImportsInClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testMissingImport",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: fr.inria",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilationunit.GetBinaryFilesTest",
        "testMethod": "testAnonymousClasses",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: javax.swing",
        "isError": true
      },
      {
        "testClass": "spoon.test.path.PathTest",
        "testMethod": "exceptionTest",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.parent.ParentTest",
        "testMethod": "testParentOfCtVariableReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.snippets.SnippetTest",
        "testMethod": "testSnippetFullClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testInvalidQueryStep",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.TypeTest",
        "testMethod": "testGetDeclaredOrIheritedFieldOnTypeRef",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.model",
        "isError": true
      },
      {
        "testClass": "spoon.test.jdtimportbuilder.ImportBuilderTest",
        "testMethod": "testWithNoImport",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.processing.CtGenerationTest",
        "testMethod": "testGenerateRoleHandler",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.code",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testEqualsImports",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.trycatch.TryCatchTest",
        "testMethod": "testModelBuildingInitializer",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.constructorcallnewclass.NewClassTest",
        "testMethod": "testNewClassInEnumeration",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.constructorcallnewclass.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateArrayAccessTest",
        "testMethod": "testArrayLengthAccess",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.TypeTest",
        "testMethod": "testGetDeclaredOrIheritedFieldByReflection",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.io",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testAnnotationInterfacePreserveMethods",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang.annotation",
        "isError": true
      },
      {
        "testClass": "spoon.test.constructorcallnewclass.NewClassTest",
        "testMethod": "testMoreThan9NewClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.constructorcallnewclass.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.testing.CtElementAssertTest",
        "testMethod": "testEqualityBetweenACtElementAndAString",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.variable.AccessTest",
        "testMethod": "testCanVisitArrayAccessAndSubClasses",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctClass.CtClassTest",
        "testMethod": "testCloneAnonymousClassInvocationWithAutoimports",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.delete.DeleteTest",
        "testMethod": "testDeleteAnnotationOnAClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testMatchReluctantMultivalueExactly2",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.MetamodelTest",
        "testMethod": "singleValueRoleAddSetRemove",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.constructor.ConstructorTest",
        "testMethod": "testImplicitConstructor",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.constructor.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.secondaryclasses.ClassesTest",
        "testMethod": "testAnonymousClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: javax.swing",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilationunit.TestCompilationUnit",
        "testMethod": "testIsoEncodingIsSupported",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testAnnotationNotRepeatableNotArrayAnnotation",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.trycatch.TryCatchTest",
        "testMethod": "testTryCatchVariableGetType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.methodreference.MethodReferenceTest",
        "testMethod": "testReferenceToAJavaUtilClassConstructor",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testRepeatableAnnotationAreManaged",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.interfaces.TestInterfaceWithoutSetup",
        "testMethod": "testModifierFromInterfaceFieldAndMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.NoClasspathTest",
        "testMethod": "testIssue1747",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: com.bumptech.glide.g.a",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testRepeatSameAnnotationOnMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testAnnotationWithDefaultArrayValue",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang.annotation",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testQueryBuilderWithFilterChain",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.variable.AccessTest",
        "testMethod": "testRHS",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportScannerTest",
        "testMethod": "testImportOnSpoon",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.parent.TopLevelTypeTest",
        "testMethod": "testTopLevelType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctBodyHolder.CtBodyHolderTest",
        "testMethod": "testMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.parent.NullParentTest",
        "testMethod": "testReturnNullExpression",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationValuesTest",
        "testMethod": "testAnnotationPrintAnnotation",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang.annotation",
        "isError": true
      },
      {
        "testClass": "spoon.test.path.PathTest",
        "testMethod": "testRoles",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest",
        "testMethod": "testGenericsWithAmbiguousMemberFieldAutoImport",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testSuperInheritanceHierarchyFunctionNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.method_overriding.MethodOverriddingTest",
        "testMethod": "testMethodOverride",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
        "testMethod": "testPrintAMethodWithGeneric",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testMatchParameterValueType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.reflect.visitor.CtScannerTest",
        "testMethod": "testScannerContract",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.code",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testMatchOfMapKeySubstring",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "intersectionOfTwoFilters",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.delete.DeleteTest",
        "testMethod": "testDeleteParameterOfMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testAnnotationTypeAndFieldOnField",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang.annotation",
        "isError": true
      },
      {
        "testClass": "spoon.MavenLauncherTest",
        "testMethod": "spoonMavenLauncherTest",
        "failureName": "java.lang.AssertionError",
        "detail": "expected:\u003c23\u003e but was:\u003c0\u003e",
        "isError": false
      },
      {
        "testClass": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
        "testMethod": "statelessFactory",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.factory",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.IntercessionTest",
        "testMethod": "testSettersAreAllGood",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.executable.ExecutableTest",
        "testMethod": "testInfoInsideAnonymousExecutable",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.factory.TypeFactoryTest",
        "testMethod": "reflectionAPI",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
        "testMethod": "useFullyQualifiedNamesInCtElementImpl_toString",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testMatchForeach",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.RemoveTest",
        "testMethod": "testRemoveAllStatements",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.parent.ParentTest",
        "testMethod": "testParentOfGenericInTypeReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.loop.LoopTest",
        "testMethod": "testForeachShouldHaveAlwaysABlockInItsBody",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.VariableAccessTest",
        "testMethod": "testDeclarationArray",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.eval.EvalTest",
        "testMethod": "testVisitorPartialEvaluatorScanner",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: boolean",
        "isError": true
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testTargetOfFieldAccess",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testSortImportPutStaticImportAfterTypeImport",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testMatchOfMapAttribute",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "testAnotherFieldAccessNameSubstitution",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testOverridingMethodFromSubClassOfInterface",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.testing.AbstractAssertTest",
        "testMethod": "testTransformationWithProcessorInstantiated",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
        "testMethod": "testScannerClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.io",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testImportStaticAndFieldAccess",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.eval.EvalTest",
        "testMethod": "testScanAPartiallyEvaluatedElement",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilation.CompilationTest",
        "testMethod": "testNewInstanceFromExistingClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.compilation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctType.CtTypeParameterTest",
        "testMethod": "testTypeErasure",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "testTemplateWithWrongUsedStringParam",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.trycatch.TryCatchTest",
        "testMethod": "testMultiTryCatchWithCustomExceptions",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.insertBefore.InsertMethodsTest",
        "testMethod": "testInsertBefore",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest",
        "testMethod": "testStaticImportWithAutoImport",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctType.CtTypeTest",
        "testMethod": "testIsSubTypeOfonTypeParameters",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.reflect.declaration.UnknownDeclarationTest",
        "testMethod": "testUnknownCalls",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.variable.AccessTest",
        "testMethod": "testFieldWriteDeclaredInTheSuperclass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "substituteSubString",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testCorrectEnumParent",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.type.TypeTest",
        "testMethod": "testTypeAccessOnPrimitive",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testGenericInField",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.reflect.ast.AstCheckerTest",
        "testMethod": "testPushToStackChanges",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.io",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctBodyHolder.CtBodyHolderTest",
        "testMethod": "testForWithBlock",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testUsageOfTypeAnnotationOnParameterInMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateInvocationSubstitutionTest",
        "testMethod": "testInvocationSubstitutionByExpression",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testOverriddenMethodsFromSubClassOfAbstractClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.parent.ParentTest",
        "testMethod": "testParentSet",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.pkg.PackageTest",
        "testMethod": "testRenamePackageAndPrettyPrintNoclasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.reflect.declaration.CtTypeInformationTest",
        "testMethod": "testGetSuperclass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testTypeParameterReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testSuperInheritanceHierarchyFunction",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.imports.testclasses.internal",
        "isError": true
      },
      {
        "testClass": "spoon.test.support.ResourceTest",
        "testMethod": "testFilteringFolder",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.executable.ExecutableRefTest",
        "testMethod": "testOverridingMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest",
        "testMethod": "testImplicitFieldReferenceAutoImport",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.TypeTest",
        "testMethod": "testGetUsedTypes",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.model",
        "isError": true
      },
      {
        "testClass": "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest",
        "testMethod": "testImplicitStaticClassAccess",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.field.FieldTest",
        "testMethod": "testFieldImplicitTarget",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.staticFieldAccess.StaticAccessTest",
        "testMethod": "testReferences",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.condition.ConditionalTest",
        "testMethod": "testBlockInConditionAndLoop",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.reflect.visitor.CtInheritanceScannerTest",
        "testMethod": "initializationError",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.replace.ReplaceTest",
        "testMethod": "testReplaceExpression",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.methodreference.MethodReferenceTest",
        "testMethod": "testReferenceToAClassParametrizedConstructor",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.visitor.VisitorTest",
        "testMethod": "testRecursiveDescent",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "testPositionMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: void",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctClass.CtClassTest",
        "testMethod": "testCloneAnonymousClassInvocation",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.reflect.ast.CloneTest",
        "testMethod": "testCloneCastConditional",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: byte",
        "isError": true
      },
      {
        "testClass": "spoon.test.factory.ExecutableFactoryTest",
        "testMethod": "testCreateReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.MetamodelTest",
        "testMethod": "listValueRoleSetOn",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.processing.CtGenerationTest",
        "testMethod": "testGenerateReplacementVisitor",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.code",
        "isError": true
      },
      {
        "testClass": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
        "testMethod": "testFactorySubFactory",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.factory",
        "isError": true
      },
      {
        "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest",
        "testMethod": "testPrivateStaticImportShouldNotBeImportedInSameClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
        "testMethod": "testDeclaredConstructor",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.support.compiler.jdt",
        "isError": true
      },
      {
        "testClass": "spoon.test.factory.TypeFactoryTest",
        "testMethod": "reflectionAPIWithTypeParameter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testArgumentOfAInvocationIsNotATypeAccess",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testGetTypeDeclaration",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testMatchPossesiveMultiValueMinCount2",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testUsageOfTypeAnnotationWithGenericTypesInStatements",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testClassTypingContextMethodSignature",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testImportStaticAndFieldAccessWithImport",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.condition.ConditionalTest",
        "testMethod": "testConditionalWithAssignment",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
        "testMethod": "printerCanPrintInvocationWithoutException",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.prettyprinter",
        "isError": true
      },
      {
        "testClass": "spoon.test.loop.LoopTest",
        "testMethod": "testAnnotationInForLoop",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang.annotation",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testReplaceAnnotationValue",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
        "testMethod": "testDeclaredMethods",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctClass.CtClassTest",
        "testMethod": "testParentOfTheEnclosingClassOfStaticClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.type.TypeTest",
        "testMethod": "testTypeMemberOrder",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.MetamodelTest",
        "testMethod": "testGetParentRoleHandler",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
        "testMethod": "superInvocationWithEnclosingInstance",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.prettyprinter",
        "isError": true
      },
      {
        "testClass": "spoon.test.constructorcallnewclass.ConstructorCallTest",
        "testMethod": "testConstructorCallWithGenericArray",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.constructorcallnewclass.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.support.compiler.jdt.ExtendedStringLiteralTest",
        "testMethod": "testExtendedStringLiteral",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testGenerateMethodWithSelfReferences",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: void",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "testPositionInterface",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testStaticMethodWithDifferentClassSameNameJava3NoCollision",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: junit.framework",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "testCheckBoundTemplate",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "doNotCloseLoader",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoontest.b",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testMatchReluctantMultivalueMinCount1",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testNullable",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testElementMapFunctionOtherContracts",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.comment.CommentTest",
        "testMethod": "testCommentsInResourcesWithWindowsEOL",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testShouldNotCreateAutoreference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testCreateAnnotation",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.MetamodelTest",
        "testMethod": "testGetterSetterFroRole",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.code",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.VariableAccessTest",
        "testMethod": "testReferenceToLocalVariableDeclaredInLoop",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.visibility.VisibilityTest",
        "testMethod": "testMethodeWithNonAccessibleTypeArgument",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.parent.NullParentTest",
        "testMethod": "testIfNullBranches",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportScannerTest",
        "testMethod": "testComputeMinimalImportsInClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.comment.CommentTest",
        "testMethod": "testJavaDocCommentOnMac",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.path.PathTest",
        "testMethod": "testWildcards",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.factory.FactoryTest",
        "testMethod": "testClassAccessCreatedFromFactories",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.factory.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.module.TestModule",
        "testMethod": "testDirectiveOrders",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.logging",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testMatchGreedyMultiValueMinCount2",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.visitor.AssignmentsEqualsTest",
        "testMethod": "testEquals",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctBodyHolder.CtBodyHolderTest",
        "testMethod": "testConstructor",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.parent.ParentTest",
        "testMethod": "testParentOfPrimitiveReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.constructorcallnewclass.NewClassTest",
        "testMethod": "testCtNewClassInNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.constructorcallnewclass.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.modifiers.TestModifiers",
        "testMethod": "testClearModifiersByEmptySet",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctType.CtTypeTest",
        "testMethod": "testHasMethodInDirectMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.factory.FactoryTest",
        "testMethod": "testFactoryOverriding",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testWithInnerEnumDoesNotImportStaticInnerMethods",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.imports.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testMatchPossesiveMultiValueMinCount",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.template",
        "isError": true
      },
      {
        "testClass": "spoon.test.refactoring.RefactoringTest",
        "testMethod": "testThisInConstructorAfterATransformation",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.refactoring.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testUsageOfTypeAnnotationWithGenericTypesInClassDeclaration",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.modifiers.TestModifiers",
        "testMethod": "testCtModifiableAddRemoveReturnCtModifiable",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.query_function.VariableReferencesTest",
        "testMethod": "testLocalVariableReferenceFunction",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceGenericTest",
        "testMethod": "testMultiReferenceWithGenericMethodOutOfTheClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testAccessToNestedClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testNotImportExecutableType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testDuplicateEntry",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testBugCommonCollection",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.delete.DeleteTest",
        "testMethod": "testDeleteMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.query_function.VariableReferencesTest",
        "testMethod": "testPotentialVariableAccessFromStaticMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.testing.FileAssertTest",
        "testMethod": "testEqualsBetweenTwoDifferentFile",
        "failureName": "java.lang.Exception",
        "detail": "Unexpected exception, expected\u003cjava.lang.AssertionError\u003e but was\u003cspoon.SpoonException\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testFieldAccessFilter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testUsageOfTypeAnnotationOnLocalVariableInMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testStaticImportForInvocationInNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.change.ChangeCollectorTest",
        "testMethod": "testChangeCollector",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctType.CtTypeTest",
        "testMethod": "testHasMethodInDefaultMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.parent.NullParentTest",
        "testMethod": "testTargetedAccessNullTarget",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.parent.ParentTest",
        "testMethod": "testGetParentWithFilter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.enums.EnumsTypeTest",
        "testMethod": "testEnumsFromInterface",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
        "testMethod": "testSuperInterfaceCorrectActualTypeArgumentsByCtTypeReferenceImpl",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testAccessPath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest",
        "testMethod": "testGenericsWithAmbiguousMemberField",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.QualifiedThisRefTest",
        "testMethod": "testQualifiedThisRef",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.reflect.ast.CloneTest",
        "testMethod": "testCloneListener",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.visitor",
        "isError": true
      },
      {
        "testClass": "spoon.test.arrays.ArraysTest",
        "testMethod": "testCtNewArrayInnerCtNewArray",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.factory.FactoryTest",
        "testMethod": "testCtModel",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.factory.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.method_overriding.MethodOverriddingTest",
        "testMethod": "testShadowInterfaceMethodsCanOverrideObjectMethods",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
        "testMethod": "printClassCreatedWithSpoon",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testMatchGreedyMultiValueUnlimited",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testCompileLambdaGeneratedBySpoon",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.MetamodelTest",
        "testMethod": "testRoleOnField",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.io",
        "isError": true
      },
      {
        "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest",
        "testMethod": "testNoFQNWhenUsedInTryCatch",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.testing.CtElementAssertTest",
        "testMethod": "testEqualityBetweenTwoCtElement",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.VariableAccessTest",
        "testMethod": "testDeclarationOfVariableReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.visibility.VisibilityTest",
        "testMethod": "testName",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.methodreference.MethodReferenceTest",
        "testMethod": "testGetGenericExecutableReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testRepeatSameAnnotationOnClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceGenericTest",
        "testMethod": "testMethodGenericWithoutReferences",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.VariableAccessTest",
        "testMethod": "testReferencesInInitExpression",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.comment.CommentTest",
        "testMethod": "testCombinedPackageInfoComment",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.replace.ReplaceTest",
        "testMethod": "testReplaceAParameterReferenceToFieldReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testGetAnnotationOuter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testDiamondComplexGenericsRxJava",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.generics.testclasses.rxjava",
        "isError": true
      },
      {
        "testClass": "spoon.test.main.MainTest",
        "testMethod": "spoon.test.main.MainTest",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.type.TypeTest",
        "testMethod": "testTypeAccessForTypeAccessInInstanceOf",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctClass.CtClassTest",
        "testMethod": "getConstructor",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.executable.ExecutableRefTest",
        "testMethod": "testSameTypeInConstructorCallBetweenItsObjectAndItsExecutable",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: javax.naming",
        "isError": true
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testTargetsOfFieldInAnonymousClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testUsageOfTypeAnnotationInNewInstance",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportAndExtendWithPackageNameTest",
        "testMethod": "testBuildModel",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.fieldaccesses.FieldAccessTest",
        "testMethod": "testBCUBug20140402",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.fieldaccesses.FieldAccessTest",
        "testMethod": "testFieldAccessAutoExplicit",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.casts.CastTest",
        "testMethod": "testCast3",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.MetamodelTest",
        "testMethod": "testRuntimeMetamodel",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.delete.DeleteTest",
        "testMethod": "testDeleteBodyOfAMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "testTemplateInterfaces",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.template.testclasses.inheritance",
        "isError": true
      },
      {
        "testClass": "spoon.test.query_function.VariableReferencesTest",
        "testMethod": "testVariableScopeFunction",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "getPositionOfImplicitBlock",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: boolean",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "unboxTest",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testJavaLangIsConsideredAsImported",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.serializable.ModelStreamerTest",
        "testMethod": "testDefaultCompressionType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.declaration",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceGenericTest",
        "testMethod": "testReferencesBetweenMethods",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.OneCanCallSetterWithNullParameterizedTest",
        "testMethod": "initializationError",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.code",
        "isError": true
      },
      {
        "testClass": "spoon.test.factory.FactoryTest",
        "testMethod": "specificationCoreFactoryCreate",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testIsSubTypeSuperClassNull",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.processing.ProcessingTest",
        "testMethod": "testCallProcessorWithMultipleTypes",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testNestedAccessPathWithTypedParameter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationValuesTest",
        "testMethod": "testValuesOnJava8Annotation",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "testPositionAnnotation",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.fieldaccesses.FieldAccessTest",
        "testMethod": "testFieldAccessDeclaredInADefaultClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.LauncherTest",
        "testMethod": "testLauncherInEmptyWorkingDir",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.processing.ProcessingTest",
        "testMethod": "testProcessDontMessWithImports",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.processing.testclasses.test.sub",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.insertBefore.InsertMethodsTest",
        "testMethod": "testInsertAfterSwitchCase",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.enums.EnumsTest",
        "testMethod": "testModelBuildingEnum",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.enums.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.replace.ReplaceTest",
        "testMethod": "testReplaceTwoMethods",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.LinesTest",
        "testMethod": "testPrettyPrinterWithLines",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationValuesTest",
        "testMethod": "testAnnotationFactory",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "createTypeFromTemplate",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.template.testclasses.types",
        "isError": true
      },
      {
        "testClass": "spoon.test.eval.EvalTest",
        "testMethod": "testVisitorPartialEvaluator_if",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.constructorcallnewclass.NewClassTest",
        "testMethod": "testNewClassWithInterface",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.constructorcallnewclass.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testGetAnnotationFromParameter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.secondaryclasses.ClassesTest",
        "testMethod": "testAnonymousClassInStaticField",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.methodreference.MethodReferenceTest",
        "testMethod": "testReferenceToAConstructor",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testWritingAnnotParamArray",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testAnnotationArray",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.interfaces.InterfaceTest",
        "testMethod": "testExtendsStaticMethodInSubInterface",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.interfaces.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.constructorcallnewclass.ConstructorCallTest",
        "testMethod": "testConstructorCallObjectWithoutParameters",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.constructorcallnewclass.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.refactoring.RefactoringTest",
        "testMethod": "testRefactoringClassChangeAllCtTypeReferenceAssociatedWithClassConcerned",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.refactoring.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.parent.ParentTest",
        "testMethod": "testHasParent",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.replace.ReplaceTest",
        "testMethod": "testReplaceExecutableReferenceByAnotherOne",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testMatchSample1",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.template.testclasses.replace",
        "isError": true
      },
      {
        "testClass": "spoon.test.visibility.VisibilityTest",
        "testMethod": "testFullyQualifiedNameOfTypeReferenceWithGeneric",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "annotationAddValue",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.condition.ConditionalTest",
        "testMethod": "testConditional",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testMatchOfAttribute",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testOverridingMethodFromAbstractClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "filteredElementsAreOfTheCorrectType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testClassTypingContext",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testReflectionBasedTypeFilter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportScannerTest",
        "testMethod": "testComputeImportsInClassWithSameName",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testExtensionDecoupledSubstitutionVisitor",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testInnerAnnotationsWithArray",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.insertBefore.InsertMethodsTest",
        "testMethod": "insertBeforeAndUpdateParent",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest",
        "testMethod": "testAmbiguousImplicitFieldReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.variable.InferredVariableTest",
        "testMethod": "testInferredVariableArePrintedWithVar",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testBugComparableComparator",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.methodreference.MethodReferenceTest",
        "testMethod": "testGetGenericMethodFromReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.CloneReferenceTest",
        "testMethod": "testGetDeclarationAfterClone",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.signature.SignatureTest",
        "testMethod": "testArgumentNotNullForExecutableReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: org.argouml.uml.ui.foundation.core",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testConstructorCallGenerics",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testMatchOfMapAttributeAndOtherAnnotations",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.pkg.PackageTest",
        "testMethod": "testGetFQNSimple",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.reflect.visitor.CtVisitorTest",
        "testMethod": "testMethodsInVisitor",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.code",
        "isError": true
      },
      {
        "testClass": "spoon.test.pkg.PackageTest",
        "testMethod": "testRenameRootPackage",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testShortTypeReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.PrinterTest",
        "testMethod": "testFQNModeWriteFQNConstructorInCtVisitor",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.visitor",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "testPositionClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilationunit.TestCompilationUnit",
        "testMethod": "testGetUnitTypeWorksWithCreatedObjects",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: package",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctBlock.TestCtBlock",
        "testMethod": "testRemoveStatement",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.trycatch.TryCatchTest",
        "testMethod": "testExceptionJava7",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilation.CompilationTest",
        "testMethod": "compileTest",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.enums.EnumsTypeTest",
        "testMethod": "testEnumsType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.reflect.visitor.CtScannerTest",
        "testMethod": "testScan",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: org.eclipse.draw2d",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "annotationOverrideFQNIsOK",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testOverrideOutputWriter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.type.TypeTest",
        "testMethod": "testIntersectionTypeReferenceInGenericsAndCasts",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.CUFilterTest",
        "testMethod": "testSingleExcludeWithoutFilter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.NoClasspathTest",
        "testMethod": "testInheritanceInNoClassPathWithClasses",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: fr.acme",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testSetterInNodes",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.reflect.ast.CloneTest",
        "testMethod": "testCopyMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.serializable.ModelStreamerTest",
        "testMethod": "testNoneCompressionType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.declaration",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testAnnotationAndShadowRuntimeRetentionPolicy",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang.annotation",
        "isError": true
      },
      {
        "testClass": "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest",
        "testMethod": "testChildOfGenericsWithAmbiguousStaticFieldAutoImport",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.staticFieldAccess2",
        "isError": true
      },
      {
        "testClass": "spoon.test.visibility.VisibilityTest",
        "testMethod": "testVisibilityOfClassesNamedByClassesInJavaLangPackage",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "testPositionStatement",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testNameFilterWithGenericType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.enums.EnumsTest",
        "testMethod": "testEnumValue",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.comment.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testModelBuildingAnnotationBound",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang.annotation",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.TemplateTest",
        "testMethod": "testTemplateC1",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testAnonymousClassesHaveAnEmptyStringForItsNameInNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceTest",
        "testMethod": "testCallMethodOfClassNotPresent",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testOverriddenMethodFromSubClassOfInterface",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.comparison.EqualTest",
        "testMethod": "testEqualsMultitype",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
        "testMethod": "testSuperInterfaceActualTypeArgumentsByCtTypeReferenceImpl",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.eval.EvalTest",
        "testMethod": "testTryCatchAndStatement",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.SwitchCaseTest",
        "testMethod": "testIterationStatements",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.limits.utils.InternalTest",
        "testMethod": "testInternalClasses",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.comment.CommentTest",
        "testMethod": "testJavadocShortAndLongComment",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "testPositionTryCatch",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testJavaLangIsConsideredAsImportedButNotForSubPackages",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang.reflect",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testQueryInQuery",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
        "testMethod": "testSuperClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.replace.ReplaceTest",
        "testMethod": "testReplaceStmtByList",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
        "testMethod": "testTernaryParenthesesOnLocalVariable",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testOutputGeneratedByTypeAnnotation",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.jdtimportbuilder.ImportBuilderTest",
        "testMethod": "testWithImportFromItf",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.reflect.ast.AstCheckerTest",
        "testMethod": "testAvoidSetCollectionSavedOnAST",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.position.PositionTest",
        "testMethod": "testEmptyModifiersOfMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: void",
        "isError": true
      },
      {
        "testClass": "spoon.test.constructorcallnewclass.ConstructorCallTest",
        "testMethod": "testConstructorCallObjectWithParameters",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.constructorcallnewclass.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testWildCardonShadowClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.declaration",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.MetamodelTest",
        "testMethod": "testGetAllMetamodelInterfacess",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.code",
        "isError": true
      },
      {
        "testClass": "spoon.test.refactoring.MethodsRefactoringTest",
        "testMethod": "testCtParameterRemoveRefactoringValidationCheck",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.refactoring.parameter.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testFilterChildrenWithoutFilterQueryStep",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.comment.CommentTest",
        "testMethod": "testInsertNewComment",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
        "testMethod": "testSuperInterfaceActualTypeArgumentsByJavaReflectionTreeBuilder",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.support.reflect.code",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testPatternToString",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.template.testclasses.replace",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testMatchPossesiveMultiValueMaxCount4",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.limits.utils.InternalTest",
        "testMethod": "testStaticFinalFieldInAnonymousClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.literal.LiteralTest",
        "testMethod": "testCharLiteralInNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: org.apache.cassandra.index",
        "isError": true
      },
      {
        "testClass": "spoon.test.parent.ParentTest",
        "testMethod": "testParentOfCtPackageReference",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.constructorcallnewclass.NewClassTest",
        "testMethod": "testNewClassInterfaceWithParameters",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.constructorcallnewclass.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.delete.DeleteTest",
        "testMethod": "testDeleteACaseOfASwitch",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.interfaces.InterfaceTest",
        "testMethod": "testRedefinesStaticMethodInSubInterface",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.interfaces.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.factory.TypeFactoryTest",
        "testMethod": "testCreateTypeRef",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: short",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testOverriddenMethodFromInterface",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testDuplicateFolder",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testRepeatSameAnnotationOnField",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testIsSameSignatureWithReferencedGenerics",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.generics.testclasses2",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.VariableAccessTest",
        "testMethod": "testVariableAccessDeclarationInAnonymousClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testReuseOfQuery",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
        "testMethod": "testScannerInterface",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.reflect.code",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "loadReferencedClassFromClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.reference",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.NoClasspathTest",
        "testMethod": "test",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testInvocationGenerics",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testMethodTypingContextAdaptMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testRecursiveTypeReferenceInGenericType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testCtScannerListener",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.pkg.PackageTest",
        "testMethod": "testRenamePackageAndPrettyPrint",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.invocations.InvocationTest",
        "testMethod": "testTypeOfStaticInvocation",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.pkg.PackageTest",
        "testMethod": "testAnnotationOnPackage",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.processing",
        "isError": true
      },
      {
        "testClass": "spoon.test.jar.JarTest",
        "testMethod": "testResource",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testUsageOfTypeAnnotationInReturnTypeInMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testModelBuildingGenericConstructor",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testBuildModelReturnThatTheModelIsBuilt",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.constructorcallnewclass.NewClassTest",
        "testMethod": "testNewClassWithInterfaceGeneric",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.constructorcallnewclass.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.MavenLauncherTest",
        "testMethod": "mavenLauncherTestMultiModulesAndVariables",
        "failureName": "java.lang.AssertionError",
        "detail": "Content of classpath: ",
        "isError": false
      },
      {
        "testClass": "spoon.test.parameters.ParameterTest",
        "testMethod": "testParameterInNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctElement.MetadataTest",
        "testMethod": "testMetadata",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.delete.DeleteTest",
        "testMethod": "testDeleteAClassTopLevel",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.exceptions.ExceptionTest",
        "testMethod": "testUnionCatchExceptionInsideLambdaInNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.fieldaccesses.FieldAccessTest",
        "testMethod": "testFieldAccessOnUnknownType",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.comparison.EqualTest",
        "testMethod": "testEqualsEmptyException",
        "failureName": "java.lang.AssertionError",
        "detail": "Unable create model",
        "isError": false
      },
      {
        "testClass": "spoon.test.filters.FilterTest",
        "testMethod": "testInvocationFilterWithExecutableInLibrary",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.snippets.SnippetTest",
        "testMethod": "testIssue981",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.comment.CommentTest",
        "testMethod": "testBlockComment",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testAbstractAllAnnotationProcessorWithGlobalAnnotation",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.annotation.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.VariableAccessTest",
        "testMethod": "testGetDeclarationAfterClone",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testAnnotationOnMethodWithPrimitiveReturnTypeInNoClasspath",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceTest",
        "testMethod": "testSpecifyGetAllExecutablesMethod",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.IntercessionTest",
        "testMethod": "testInsertBegin",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilationunit.TestCompilationUnit",
        "testMethod": "testCompilationUnitDeclaredTypes",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.model",
        "isError": true
      },
      {
        "testClass": "spoon.test.pkg.PackageTest",
        "testMethod": "testPrintPackageInfoWhenNothingInPackage",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.test.javadoc.JavaDocTest",
        "testMethod": "testJavadocNotPresentInAST",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.pkg.PackageTest",
        "testMethod": "testRenameRootPackageWithNullOrEmpty",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.literal.LiteralTest",
        "testMethod": "testFactoryLiternal",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cnulltype\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testTypeAdapted",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.testing.CtElementAssertTest",
        "testMethod": "testEqualityBetweenTwoCtElementWithTheSameSignatureButNotTheSameContent",
        "failureName": "java.lang.Exception",
        "detail": "Unexpected exception, expected\u003cjava.lang.AssertionError\u003e but was\u003cspoon.SpoonException\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.modifiers.TestModifiers",
        "testMethod": "testSetVisibility",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testOneLinerIntro",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.field.FieldTest",
        "testMethod": "testgetDeclaredFields",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationLoopTest",
        "testMethod": "testAnnotationDeclaredInForInit",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testImportWithGenerics",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.imports.testclasses.withgenerics",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testDeepNestedStaticPathWithTypedParameter",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.jdtimportbuilder.ImportBuilderTest",
        "testMethod": "testSimpleStaticImport",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.lang",
        "isError": true
      },
      {
        "testClass": "spoon.testing.AbstractAssertTest",
        "testMethod": "testTransformationWithProcessorClass",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.enums.EnumsTest",
        "testMethod": "testPrintEnumValues",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: spoon.test.comment.testclasses",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
        "testMethod": "testPrintAMethodWithImports",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.insertBefore.InsertMethodsTest",
        "testMethod": "testInsertBeforeSwitchCase",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testNotTargetedExpression",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctCase.SwitchCaseTest",
        "testMethod": "insertAfterStatementInSwitchCaseWithoutException",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.serializable.SourcePositionTest",
        "testMethod": "testSourcePosition",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: int",
        "isError": true
      },
      {
        "testClass": "spoon.testing.CtPackageAssertTest",
        "testMethod": "testEqualityBetweenTwoCtPackageWithDifferentTypes",
        "failureName": "java.lang.Exception",
        "detail": "Unexpected exception, expected\u003cjava.lang.AssertionError\u003e but was\u003cspoon.SpoonException\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.template.PatternTest",
        "testMethod": "testGenerateMultiValues",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: \u003cinit\u003e",
        "isError": true
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testClassDeclaredInALambda",
        "failureName": "spoon.SpoonException",
        "detail": "The given identifier does not respect Java definition of an identifier: java.util.function",
        "isError": true
      }
    ]
  },
  "commits": {
    "buggyBuild": {
      "repoName": "INRIA/spoon",
      "branchName": "master",
      "sha": "47ac88a0d52bbff25b9e896aed1f3e59984742cd",
      "url": "http://github.com/INRIA/spoon/commit/47ac88a0d52bbff25b9e896aed1f3e59984742cd",
      "date": "Jul 17, 2018 5:33:34 PM"
    },
    "buggyBuildForkRepo": {
      "repoName": "surli/spoon",
      "branchName": "check-identifiers",
      "sha": "e48ac5ae38f17af85e0a92146108d2293532b13e",
      "url": "https://github.com/surli/spoon/commit/e48ac5ae38f17af85e0a92146108d2293532b13e",
      "date": "Jul 17, 2018 6:06:53 PM"
    },
    "buggyBuildBaseRepo": {
      "repoName": "INRIA/spoon",
      "branchName": "master",
      "sha": "3608bd47c6758334464ff905d515137343e2c77f",
      "url": "https://github.com/INRIA/spoon/commit/3608bd47c6758334464ff905d515137343e2c77f",
      "date": "Jul 17, 2018 10:52:46 AM"
    }
  },
  "type": "only_fail"
}