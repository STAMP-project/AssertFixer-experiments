########## GLOBALS ##########

globals.routingOperations.handlers {
  request = [
    {
      name = cookieHandler
    },
    {
      name = knotContextHandler
    }
  ],
  response = [
    {
      name = headerHandler
      config.name = X-Server
      config.value = Knot.x
    },
    {
      name = writerHandler
      config.allowedResponseHeaders = [
        "Access-Control-Allow-Origin",
        "Allow",
        "Cache-Control",
        "Content-Disposition",
        "Content-Encoding",
        "Content-Language",
        "Content-Location",
        "Content-MD5",
        "Content-Range",
        "Content-Type",
        "Content-Length",
        "Content-Security-Policy",
        "Date",
        "Edge-Control",
        "ETag",
        "Expires",
        "Last-Modified",
        "Location",
        "Pragma",
        "Proxy-Authenticate",
        "Server",
        "Set-Cookie",
        "Status",
        "Surrogate-Control",
        "Vary",
        "Via",
        "X-Frame-Options",
        "X-XSRF-TOKEN",
        "X-XSS-Protection",
        "X-Content-Type-Options",
        "X-UA-Compatible",
        "X-Request-ID",
        "X-Server"
      ]
    }
  ],
  failure = [
    {
      name = errorHandler
      config.displayExceptionDetails = true
    }
  ]
}

########## CONFIGURATION ##########

modules = [
  "server=io.knotx.server.KnotxServerVerticle"
]

config.server.options.config {
  serverOptions.port = 9092
  routingSpecificationLocation = /openapi.yaml
  routingOperations = [
    {
      operationId = csrf-get
      handlers = ${globals.routingOperations.handlers.request} [
        {
          name = csrfHandler
          config {
            secret = test1234
          }
        }
      ] ${globals.routingOperations.handlers.response}
      failureHandlers = [${globals.routingOperations.handlers.failure}]
    },
    {
      operationId = csrf-post
      handlers = ${globals.routingOperations.handlers.request} [
        {
          name = csrfHandler
          config {
            secret = test1234
          }
        }
      ] ${globals.routingOperations.handlers.response}
      failureHandlers = [${globals.routingOperations.handlers.failure}]
    },
    {
      operationId = knotEngine-get
      handlers = ${globals.routingOperations.handlers.request} [
        {
          name = knotEngineHandler
          config.routing {
            proxyAddress = A-engine
            onTransition.go-c {
              address = C-engine
            }
          }
        }
      ] ${globals.routingOperations.handlers.response}
      failureHandlers = [${globals.routingOperations.handlers.failure}]
    },
    {
      operationId = knotEngine-post
      handlers = ${globals.routingOperations.handlers.request} [
        {
          name = knotEngineHandler
          config.routing {
            proxyAddress = A-post-engine
            onTransition {
              go-b {
                address: B-engine,
                onTransition.go-c.address: C-engine
              },
              go-c.address: C-engine
            }
          }
        }
      ] ${globals.routingOperations.handlers.response}
      failureHandlers = [${globals.routingOperations.handlers.failure}]
    }
  ]
}
