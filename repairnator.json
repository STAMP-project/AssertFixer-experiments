{
  "bugType": "only_fail",
  "hostname": "cyclone1",
  "repo": "pabender/JMRI",
  "metrics": {
    "ReproductionDate": "Aug 24, 2018 3:40:28 AM",
    "BuggyBuildId": 419916947,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/pabender/JMRI/builds/419916947",
    "BuggyBuildDate": "Aug 24, 2018 3:39:57 AM",
    "BugCommit": "1db7bfb575c558286864d884e9e4ceacb9944b62",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 138,
    "NbFileApp": 4064,
    "NbFileTests": 4516,
    "NbCPU": 8,
    "FreeMemory": 697944640,
    "TotalMemory": 3316121600,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 171936104,
      "ComputeClasspath": 260762408,
      "ComputeTestDir": 244445224,
      "BuildProject": 157750536,
      "InitRepoToPush": 266211048,
      "ComputeSourceDir": 664766904,
      "ComputeModules": 664766904,
      "CloneRepository": 144754560,
      "CheckoutPatchedBuild": 697944640,
      "TestProject": 140755688,
      "AssertFixer": 832626704,
      "GatherTestInformation": 243352576,
      "CommitPatch": 697944640
    },
    "NbSucceedingTests": 33116,
    "BugCommitUrl": "http://github.com/pabender/JMRI/commit/1db7bfb575c558286864d884e9e4ceacb9944b62",
    "NbFailingTests": 12,
    "NbErroringTests": 4,
    "NbSkippingTests": 2068,
    "NbRunningTests": 33132,
    "FailureNames": [
      "java.lang.AssertionError",
      "java.lang.IllegalArgumentException"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 1,
      "ComputeClasspath": 7,
      "ComputeTestDir": 0,
      "BuildProject": 106,
      "InitRepoToPush": 63,
      "ComputeSourceDir": 0,
      "ComputeModules": 0,
      "CloneRepository": 273,
      "CheckoutPatchedBuild": 0,
      "TestProject": 1410,
      "AssertFixer": 181,
      "GatherTestInformation": 2,
      "CommitPatch": 78
    }
  },
  "failing-test-cases": [
    {
      "className": "jmri.jmrix.srcp.SRCPProgrammerTest",
      "failingMethods": [
        "testDefault"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Check Default expected:\u003cDirect\u003e but was:\u003cDirect Byte\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "jmri.jmrix.loconet.spjfile.SpjFileTest",
      "failingMethods": [
        "testPlayWav"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Unexpected ERROR or higher messages emitted",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "jmri.jmrix.dccpp.DCCppOpsModeProgrammerTest",
      "failingMethods": [
        "testDefault"
      ],
      "erroringMethods": [
        "testSetGetMode"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Invalid requested mode: Register",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Check Default expected:\u003cDirect\u003e but was:\u003cOps Byte\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 1
    },
    {
      "className": "jmri.jmrix.nce.NceProgrammerTest",
      "failingMethods": [
        "testDefault"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Check Default expected:\u003cDirect\u003e but was:\u003cPaged\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "jmri.jmrix.nce.NceConsistTest",
      "failingMethods": [
        "testCtor2"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Unexpected ERROR or higher messages emitted",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "jmri.jmrix.dccpp.DCCppProgrammerTest",
      "failingMethods": [
        "testDefault"
      ],
      "erroringMethods": [
        "testSetGetMode"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Invalid requested mode: Register",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Check Default expected:\u003cDirect\u003e but was:\u003cDirect Byte\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 1
    },
    {
      "className": "jmri.jmrix.can.cbus.CbusProgrammerTest",
      "failingMethods": [
        "testDefault"
      ],
      "erroringMethods": [
        "testSetGetMode"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Invalid requested mode: Register",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Check Default expected:\u003cDirect\u003e but was:\u003cCBUSNODEVARMODE\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 1
    },
    {
      "className": "jmri.jmrix.openlcb.OlcbProgrammerTest",
      "failingMethods": [
        "testDefault"
      ],
      "erroringMethods": [
        "testSetGetMode"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Invalid requested mode: Register",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Check Default expected:\u003cDirect\u003e but was:\u003cOpenLCB\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 1
    },
    {
      "className": "jmri.jmrix.lenz.li100.LI100XNetProgrammerTest",
      "failingMethods": [
        "testReadCvHighSequence"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\"Receive Called by Programmer\" did not occur in time",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "jmri.jmrix.lenz.hornbyelite.EliteXNetProgrammerTest",
      "failingMethods": [
        "testReadCvHighSequence",
        "testWriteHighCvSequence"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "mode message sent expected:\u003c1\u003e but was:\u003c2\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "mode message sent expected:\u003c1\u003e but was:\u003c2\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "jmri.BlockTest",
      "failingMethods": [
        "testSensorSequence"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Initial state expected:\u003c1\u003e but was:\u003c4\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    }
  ],
  "failingModule": "/root/workspace/pabender/JMRI/419916947",
  "bugCommit": "https://github.com/pabender/JMRI/compare/60d93c201774...1db7bfb575c5"
}