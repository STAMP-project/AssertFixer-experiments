{
  "bugType": "only_fail",
  "hostname": "cyclone1",
  "repo": "SpoonLabs/nopol",
  "metrics": {
    "BugCommitUrl": "http://github.com/SpoonLabs/nopol/commit/dc371c7b09f519c7061441f2d4151e34aedf24bc",
    "NbFailingTests": 8,
    "NbErroringTests": 54,
    "NbSkippingTests": 11,
    "NbRunningTests": 352,
    "FailureNames": [
      "org.smtlib.SolverProcess$ProverException",
      "java.lang.IllegalArgumentException",
      "java.lang.NullPointerException",
      "org.junit.ComparisonFailure",
      "spoon.compiler.InvalidClassPathException"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 5,
      "ComputeClasspath": 6,
      "ComputeTestDir": 0,
      "BuildProject": 68,
      "InitRepoToPush": 9,
      "ComputeSourceDir": 0,
      "ComputeModules": 0,
      "CloneRepository": 54,
      "CheckoutPatchedBuild": 0,
      "TestProject": 24,
      "AssertFixer": 0,
      "GatherTestInformation": 0,
      "CommitPatch": 9
    },
    "ReproductionDate": "Aug 3, 2018 10:30:45 AM",
    "BuggyBuildId": 411626453,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/SpoonLabs/nopol/builds/411626453",
    "BuggyBuildDate": "Aug 3, 2018 10:29:40 AM",
    "BugCommit": "dc371c7b09f519c7061441f2d4151e34aedf24bc",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 50,
    "NbFileApp": 0,
    "NbFileTests": 0,
    "NbCPU": 8,
    "FreeMemory": 98523080,
    "TotalMemory": 246939648,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 76126704,
      "ComputeClasspath": 126940168,
      "ComputeTestDir": 119842880,
      "BuildProject": 63977672,
      "InitRepoToPush": 128890904,
      "ComputeSourceDir": 98523080,
      "ComputeModules": 98523080,
      "CloneRepository": 115330336,
      "CheckoutPatchedBuild": 98523080,
      "TestProject": 176756920,
      "AssertFixer": 119842880,
      "GatherTestInformation": 169360888,
      "CommitPatch": 98523080
    },
    "NbSucceedingTests": 290
  },
  "failing-test-cases": [
    {
      "className": "fr.inria.lille.repair.synthesis.DynamothCodeGenesisTest",
      "failingMethods": [],
      "erroringMethods": [
        "test4",
        "test5",
        "test2",
        "test13",
        "test3",
        "test12",
        "test8",
        "test6",
        "test1",
        "testKaliPatches"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 10
    },
    {
      "className": "fr.inria.lille.localization.GzoltarLocalizerTest",
      "failingMethods": [],
      "erroringMethods": [
        "testGzoltarLocalizer"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "fr.inria.lille.commons.smt.SMTLibTest",
      "failingMethods": [],
      "erroringMethods": [
        "noSlutionForAProblemWithoutSolution",
        "solutionForAProblemWithUniqueSolution",
        "allSolutionsOfAModel3",
        "problemWithNegativeIntegers",
        "allSolutionsOfAModel"
      ],
      "failures": [
        {
          "failureName": "org.smtlib.SolverProcess$ProverException",
          "failureDetail": "The solver has not been started",
          "isError": true
        },
        {
          "failureName": "org.smtlib.SolverProcess$ProverException",
          "failureDetail": "The solver has not been started",
          "isError": true
        },
        {
          "failureName": "org.smtlib.SolverProcess$ProverException",
          "failureDetail": "The solver has not been started",
          "isError": true
        },
        {
          "failureName": "org.smtlib.SolverProcess$ProverException",
          "failureDetail": "The solver has not been started",
          "isError": true
        },
        {
          "failureName": "org.smtlib.SolverProcess$ProverException",
          "failureDetail": "The solver has not been started",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "fr.inria.lille.evo.TestPatchEvo",
      "failingMethods": [],
      "erroringMethods": [
        "test"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/classes\u0027",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "fr.inria.lille.repair.nopol.NopolTest",
      "failingMethods": [],
      "erroringMethods": [
        "example8Fix",
        "conditionalThenPreconditionnal",
        "example5Fix",
        "example6Fix",
        "conditionalThenPreconditionalUsePrecond",
        "example7Fix",
        "example3Fix",
        "example1Fix",
        "example2Fix",
        "testIgnoreTestCouldCreateOtherPatches",
        "preconditionThenConditional",
        "preconditionThenConditionalPrecondition",
        "testAPI",
        "testSkippingRegressionStepLeadToAPatch"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 14
    },
    {
      "className": "fr.inria.lille.localization.DumbLocalizerTest",
      "failingMethods": [],
      "erroringMethods": [
        "testDumbLocalizer",
        "testDumbLocalizerWithPatch3",
        "testDumbLocalizerWithPatch"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.InvalidClassPathException",
          "failureDetail": "/root/workspace/SpoonLabs/nopol/411626453/nopol/../test-projects/target/classes does not exist, it is not a valid folder",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/test-classes\u0027",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "fr.inria.lille.repair.infinitel.InfinitelTest",
      "failingMethods": [],
      "erroringMethods": [
        "numberOfReturnsInExample1",
        "numberOfBreaksInExample3",
        "theBreakMustBeForTheWhile",
        "theReturnMustBeForTheWhile",
        "infinitelExample2",
        "infinitelExample4",
        "infinitelExample5",
        "bookkeepingInLoopsOfExample3",
        "nestedLoopIsNotInfiniteInExample3",
        "unbreakableLoops"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/classes/\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/classes/\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/classes/\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/classes/\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/classes/\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/classes/\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/classes/\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/classes/\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/classes/\u0027",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "File does not exist in: \u0027../test-projects/target/classes/\u0027",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 10
    },
    {
      "className": "fr.inria.lille.diff.PatchGeneratorTest",
      "failingMethods": [
        "conditionChangeElseIfTest",
        "preconditionMultiLineStatementTest",
        "preconditionInvocationInElseTest",
        "simpleConditionChangeTest",
        "simplePreconditionIfTest",
        "preconditionElseIfTest",
        "preconditionInvocationTest",
        "preconditionInvocationInConditionTest"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c--- [src/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ ]src/test/java/fr/inr...\u003e but was:\u003c--- [asrc/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ b]src/test/java/fr/inr...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c--- [src/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ ]src/test/java/fr/inr...\u003e but was:\u003c--- [asrc/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ b]src/test/java/fr/inr...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c--- [src/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ ]src/test/java/fr/inr...\u003e but was:\u003c--- [asrc/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ b]src/test/java/fr/inr...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c--- [src/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ ]src/test/java/fr/inr...\u003e but was:\u003c--- [asrc/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ b]src/test/java/fr/inr...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c--- [src/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ ]src/test/java/fr/inr...\u003e but was:\u003c--- [asrc/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ b]src/test/java/fr/inr...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c--- [src/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ ]src/test/java/fr/inr...\u003e but was:\u003c--- [asrc/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ b]src/test/java/fr/inr...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c--- [src/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ ]src/test/java/fr/inr...\u003e but was:\u003c--- [asrc/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ b]src/test/java/fr/inr...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c--- [src/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ ]src/test/java/fr/inr...\u003e but was:\u003c--- [asrc/test/java/fr/inria/lille/diff/testclasses/Bar.java\n+++ b]src/test/java/fr/inr...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 8,
      "nbErrors": 0
    },
    {
      "className": "fr.inria.lille.commons.trace.ValuesCollectorTest",
      "failingMethods": [],
      "erroringMethods": [
        "collectConstantsWorth"
      ],
      "failures": [
        {
          "failureName": "org.smtlib.SolverProcess$ProverException",
          "failureDetail": "The solver has not been started",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "fr.inria.lille.localization.CocospoonLocalizerTest",
      "failingMethods": [],
      "erroringMethods": [
        "testOchiaiCoCoSpoonLocalizer"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.InvalidClassPathException",
          "failureDetail": "/root/workspace/SpoonLabs/nopol/411626453/nopol/../test-projects/target/classes does not exist, it is not a valid folder",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "fr.inria.lille.commons.synthesis.CodeSynthesisTest",
      "failingMethods": [],
      "erroringMethods": [
        "scriptResolutionWithOneTheory",
        "scriptResolutionWithTwoTheories",
        "scriptResolutionWithoutComponents",
        "synthesisWithCharactersInSpecifications",
        "scriptResolutionWithOneTheoryBooleanOutput",
        "testSynthesisTernaryOperator",
        "goldbachConjectureSynthesis",
        "scriptResolutionWithoutInputs"
      ],
      "failures": [
        {
          "failureName": "org.smtlib.SolverProcess$ProverException",
          "failureDetail": "The solver has not been started",
          "isError": true
        },
        {
          "failureName": "org.smtlib.SolverProcess$ProverException",
          "failureDetail": "The solver has not been started",
          "isError": true
        },
        {
          "failureName": "org.smtlib.SolverProcess$ProverException",
          "failureDetail": "The solver has not been started",
          "isError": true
        },
        {
          "failureName": "org.smtlib.SolverProcess$ProverException",
          "failureDetail": "The solver has not been started",
          "isError": true
        },
        {
          "failureName": "org.smtlib.SolverProcess$ProverException",
          "failureDetail": "The solver has not been started",
          "isError": true
        },
        {
          "failureName": "org.smtlib.SolverProcess$ProverException",
          "failureDetail": "The solver has not been started",
          "isError": true
        },
        {
          "failureName": "org.smtlib.SolverProcess$ProverException",
          "failureDetail": "The solver has not been started",
          "isError": true
        },
        {
          "failureName": "org.smtlib.SolverProcess$ProverException",
          "failureDetail": "The solver has not been started",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    }
  ],
  "failingModule": "/root/workspace/SpoonLabs/nopol/411626453/nopol"
}