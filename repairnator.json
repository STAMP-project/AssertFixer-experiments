{
  "bugType": "only_fail",
  "hostname": "cyclone1",
  "repo": "DmitriiSerikov/money-transfer-service",
  "metrics": {
    "ReproductionDate": "Oct 15, 2018 9:09:37 PM",
    "BuggyBuildId": 441821049,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/DmitriiSerikov/money-transfer-service/builds/441821049",
    "BuggyBuildDate": "Oct 15, 2018 9:06:04 PM",
    "BugCommit": "45fc1c69243f7292a674aa5b9bf09cef0a201c02",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 45,
    "NbFileApp": 30,
    "NbFileTests": 0,
    "NbCPU": 8,
    "FreeMemory": 81132192,
    "TotalMemory": 152043520,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 121989784,
      "ComputeClasspath": 93111464,
      "ComputeTestDir": 87098288,
      "BuildProject": 114775400,
      "InitRepoToPush": 96281888,
      "ComputeSourceDir": 133984184,
      "ComputeModules": 132416632,
      "CloneRepository": 124657360,
      "CheckoutPatchedBuild": 81132192,
      "TestProject": 110183680,
      "AssertFixer": 87098288,
      "GatherTestInformation": 105372600,
      "CommitPatch": 81132192
    },
    "NbSucceedingTests": 74,
    "BugCommitUrl": "http://github.com/DmitriiSerikov/money-transfer-service/commit/45fc1c69243f7292a674aa5b9bf09cef0a201c02",
    "NbFailingTests": 3,
    "NbErroringTests": 14,
    "NbSkippingTests": 0,
    "NbRunningTests": 91,
    "FailureNames": [
      "org.spockframework.runtime.SpockComparisonFailure",
      "io.micronaut.http.client.exceptions.HttpClientResponseException"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 0,
      "ComputeClasspath": 20,
      "ComputeTestDir": 0,
      "BuildProject": 77,
      "InitRepoToPush": 0,
      "ComputeSourceDir": 1,
      "ComputeModules": 0,
      "CloneRepository": 2,
      "CheckoutPatchedBuild": 0,
      "TestProject": 21,
      "AssertFixer": 0,
      "GatherTestInformation": 0,
      "CommitPatch": 0
    }
  },
  "failing-test-cases": [
    {
      "className": "com.github.example.controller.AccountControllerSpec",
      "failingMethods": [
        "should return error with 400 status code when trying to create account with null balance",
        "should return error with 400 status code when trying to create account with negative balance",
        "should return error response with 404 status code when account with specified id doesn\u0027t exist"
      ],
      "erroringMethods": [
        "should return collection of accounts data with 200 status code when accounts exists",
        "should return account data with 201 status code and location header when create account by valid command",
        "should return empty collection with 200 status code when accounts not exists yet",
        "should return account data with 200 status code when account with specified id exist"
      ],
      "failures": [
        {
          "failureName": "io.micronaut.http.client.exceptions.HttpClientResponseException",
          "failureDetail": "Internal Server Error: Failed to inject value for parameter [lockHolder] of class: com.github.example.dao.impl.InMemoryAccountDaoImpl\n\nMessage: No bean of type [com.github.example.holder.LockHolder] exists. Ensure the class is declared a bean and if you are using Java or Kotlin make sure you have enabled annotation processing.\nPath Taken: new AccountController(ModelMapper modelMapper,[AccountService accountService]) --\u003e new AccountServiceImpl([AccountDao accountDao]) --\u003e new InMemoryAccountDaoImpl([LockHolder lockHolder])",
          "isError": true
        },
        {
          "failureName": "org.spockframework.runtime.SpockComparisonFailure",
          "failureDetail": "Condition not satisfied:\n\nex.status \u003d\u003d HttpStatus.NOT_FOUND\n|  |      |\n|  |      false\n|  INTERNAL_SERVER_ERROR\nio.micronaut.http.client.exceptions.HttpClientResponseException: Internal Server Error: Failed to inject value for parameter [lockHolder] of class: com.github.example.dao.impl.InMemoryAccountDaoImpl\n \nMessage: No bean of type [com.github.example.holder.LockHolder] exists. Ensure the class is declared a bean and if you are using Java or Kotlin make sure you have enabled annotation processing.\nPath Taken: new AccountController(ModelMapper modelMapper,[AccountService accountService]) --\u003e new AccountServiceImpl([AccountDao accountDao]) --\u003e new InMemoryAccountDaoImpl([LockHolder lockHolder])\n",
          "isError": false
        },
        {
          "failureName": "org.spockframework.runtime.SpockComparisonFailure",
          "failureDetail": "Condition not satisfied:\n\nex.status \u003d\u003d HttpStatus.BAD_REQUEST\n|  |      |\n|  |      false\n|  INTERNAL_SERVER_ERROR\nio.micronaut.http.client.exceptions.HttpClientResponseException: Internal Server Error: Failed to inject value for parameter [lockHolder] of class: com.github.example.dao.impl.InMemoryAccountDaoImpl\n \nMessage: No bean of type [com.github.example.holder.LockHolder] exists. Ensure the class is declared a bean and if you are using Java or Kotlin make sure you have enabled annotation processing.\nPath Taken: new AccountController(ModelMapper modelMapper,[AccountService accountService]) --\u003e new AccountServiceImpl([AccountDao accountDao]) --\u003e new InMemoryAccountDaoImpl([LockHolder lockHolder])\n",
          "isError": false
        },
        {
          "failureName": "org.spockframework.runtime.SpockComparisonFailure",
          "failureDetail": "Condition not satisfied:\n\nex.status \u003d\u003d HttpStatus.BAD_REQUEST\n|  |      |\n|  |      false\n|  INTERNAL_SERVER_ERROR\nio.micronaut.http.client.exceptions.HttpClientResponseException: Internal Server Error: Failed to inject value for parameter [lockHolder] of class: com.github.example.dao.impl.InMemoryAccountDaoImpl\n \nMessage: No bean of type [com.github.example.holder.LockHolder] exists. Ensure the class is declared a bean and if you are using Java or Kotlin make sure you have enabled annotation processing.\nPath Taken: new AccountController(ModelMapper modelMapper,[AccountService accountService]) --\u003e new AccountServiceImpl([AccountDao accountDao]) --\u003e new InMemoryAccountDaoImpl([LockHolder lockHolder])\n",
          "isError": false
        },
        {
          "failureName": "io.micronaut.http.client.exceptions.HttpClientResponseException",
          "failureDetail": "Internal Server Error: Failed to inject value for parameter [lockHolder] of class: com.github.example.dao.impl.InMemoryAccountDaoImpl\n\nMessage: No bean of type [com.github.example.holder.LockHolder] exists. Ensure the class is declared a bean and if you are using Java or Kotlin make sure you have enabled annotation processing.\nPath Taken: new AccountController(ModelMapper modelMapper,[AccountService accountService]) --\u003e new AccountServiceImpl([AccountDao accountDao]) --\u003e new InMemoryAccountDaoImpl([LockHolder lockHolder])",
          "isError": true
        },
        {
          "failureName": "io.micronaut.http.client.exceptions.HttpClientResponseException",
          "failureDetail": "Internal Server Error: Failed to inject value for parameter [lockHolder] of class: com.github.example.dao.impl.InMemoryAccountDaoImpl\n\nMessage: No bean of type [com.github.example.holder.LockHolder] exists. Ensure the class is declared a bean and if you are using Java or Kotlin make sure you have enabled annotation processing.\nPath Taken: new AccountController(ModelMapper modelMapper,[AccountService accountService]) --\u003e new AccountServiceImpl([AccountDao accountDao]) --\u003e new InMemoryAccountDaoImpl([LockHolder lockHolder])",
          "isError": true
        },
        {
          "failureName": "io.micronaut.http.client.exceptions.HttpClientResponseException",
          "failureDetail": "Internal Server Error: Failed to inject value for parameter [lockHolder] of class: com.github.example.dao.impl.InMemoryAccountDaoImpl\n\nMessage: No bean of type [com.github.example.holder.LockHolder] exists. Ensure the class is declared a bean and if you are using Java or Kotlin make sure you have enabled annotation processing.\nPath Taken: new AccountController(ModelMapper modelMapper,[AccountService accountService]) --\u003e new AccountServiceImpl([AccountDao accountDao]) --\u003e new InMemoryAccountDaoImpl([LockHolder lockHolder])",
          "isError": true
        }
      ],
      "nbFailures": 3,
      "nbErrors": 4
    },
    {
      "className": "com.github.example.controller.TransactionControllerSpec",
      "failingMethods": [],
      "erroringMethods": [
        "should return collection of transactions data with 200 status code when transactions exists",
        "should return error with 400 status code when trying to create transaction with negative amount",
        "should return 202 status code and location header when create transaction by valid command",
        "should return error response with 404 status code when transaction with specified id doesn\u0027t exist",
        "should return error with 400 status code when trying to create transaction for target account that not exists",
        "should return error with 400 status code when trying to create transaction with null amount",
        "should return transaction data with 200 status code when transaction with specified id exist",
        "should return empty collection with 200 status code when transactions not exists yet",
        "should return error with 400 status code when trying to create transaction between same accounts",
        "should return error with 400 status code when trying to create transaction for source account that not exists"
      ],
      "failures": [
        {
          "failureName": "io.micronaut.http.client.exceptions.HttpClientResponseException",
          "failureDetail": "Internal Server Error: Failed to inject value for parameter [lockHolder] of class: com.github.example.dao.impl.InMemoryAccountDaoImpl\n\nMessage: No bean of type [com.github.example.holder.LockHolder] exists. Ensure the class is declared a bean and if you are using Java or Kotlin make sure you have enabled annotation processing.\nPath Taken: new AccountController(ModelMapper modelMapper,[AccountService accountService]) --\u003e new AccountServiceImpl([AccountDao accountDao]) --\u003e new InMemoryAccountDaoImpl([LockHolder lockHolder])",
          "isError": true
        },
        {
          "failureName": "io.micronaut.http.client.exceptions.HttpClientResponseException",
          "failureDetail": "Internal Server Error: Failed to inject value for parameter [lockHolder] of class: com.github.example.dao.impl.InMemoryAccountDaoImpl\n\nMessage: No bean of type [com.github.example.holder.LockHolder] exists. Ensure the class is declared a bean and if you are using Java or Kotlin make sure you have enabled annotation processing.\nPath Taken: new AccountController(ModelMapper modelMapper,[AccountService accountService]) --\u003e new AccountServiceImpl([AccountDao accountDao]) --\u003e new InMemoryAccountDaoImpl([LockHolder lockHolder])",
          "isError": true
        },
        {
          "failureName": "io.micronaut.http.client.exceptions.HttpClientResponseException",
          "failureDetail": "Internal Server Error: Failed to inject value for parameter [lockHolder] of class: com.github.example.dao.impl.InMemoryAccountDaoImpl\n\nMessage: No bean of type [com.github.example.holder.LockHolder] exists. Ensure the class is declared a bean and if you are using Java or Kotlin make sure you have enabled annotation processing.\nPath Taken: new AccountController(ModelMapper modelMapper,[AccountService accountService]) --\u003e new AccountServiceImpl([AccountDao accountDao]) --\u003e new InMemoryAccountDaoImpl([LockHolder lockHolder])",
          "isError": true
        },
        {
          "failureName": "io.micronaut.http.client.exceptions.HttpClientResponseException",
          "failureDetail": "Internal Server Error: Failed to inject value for parameter [lockHolder] of class: com.github.example.dao.impl.InMemoryAccountDaoImpl\n\nMessage: No bean of type [com.github.example.holder.LockHolder] exists. Ensure the class is declared a bean and if you are using Java or Kotlin make sure you have enabled annotation processing.\nPath Taken: new AccountController(ModelMapper modelMapper,[AccountService accountService]) --\u003e new AccountServiceImpl([AccountDao accountDao]) --\u003e new InMemoryAccountDaoImpl([LockHolder lockHolder])",
          "isError": true
        },
        {
          "failureName": "io.micronaut.http.client.exceptions.HttpClientResponseException",
          "failureDetail": "Internal Server Error: Failed to inject value for parameter [lockHolder] of class: com.github.example.dao.impl.InMemoryAccountDaoImpl\n\nMessage: No bean of type [com.github.example.holder.LockHolder] exists. Ensure the class is declared a bean and if you are using Java or Kotlin make sure you have enabled annotation processing.\nPath Taken: new AccountController(ModelMapper modelMapper,[AccountService accountService]) --\u003e new AccountServiceImpl([AccountDao accountDao]) --\u003e new InMemoryAccountDaoImpl([LockHolder lockHolder])",
          "isError": true
        },
        {
          "failureName": "io.micronaut.http.client.exceptions.HttpClientResponseException",
          "failureDetail": "Internal Server Error: Failed to inject value for parameter [lockHolder] of class: com.github.example.dao.impl.InMemoryAccountDaoImpl\n\nMessage: No bean of type [com.github.example.holder.LockHolder] exists. Ensure the class is declared a bean and if you are using Java or Kotlin make sure you have enabled annotation processing.\nPath Taken: new AccountController(ModelMapper modelMapper,[AccountService accountService]) --\u003e new AccountServiceImpl([AccountDao accountDao]) --\u003e new InMemoryAccountDaoImpl([LockHolder lockHolder])",
          "isError": true
        },
        {
          "failureName": "io.micronaut.http.client.exceptions.HttpClientResponseException",
          "failureDetail": "Internal Server Error: Failed to inject value for parameter [lockHolder] of class: com.github.example.dao.impl.InMemoryAccountDaoImpl\n\nMessage: No bean of type [com.github.example.holder.LockHolder] exists. Ensure the class is declared a bean and if you are using Java or Kotlin make sure you have enabled annotation processing.\nPath Taken: new AccountController(ModelMapper modelMapper,[AccountService accountService]) --\u003e new AccountServiceImpl([AccountDao accountDao]) --\u003e new InMemoryAccountDaoImpl([LockHolder lockHolder])",
          "isError": true
        },
        {
          "failureName": "io.micronaut.http.client.exceptions.HttpClientResponseException",
          "failureDetail": "Internal Server Error: Failed to inject value for parameter [lockHolder] of class: com.github.example.dao.impl.InMemoryAccountDaoImpl\n\nMessage: No bean of type [com.github.example.holder.LockHolder] exists. Ensure the class is declared a bean and if you are using Java or Kotlin make sure you have enabled annotation processing.\nPath Taken: new AccountController(ModelMapper modelMapper,[AccountService accountService]) --\u003e new AccountServiceImpl([AccountDao accountDao]) --\u003e new InMemoryAccountDaoImpl([LockHolder lockHolder])",
          "isError": true
        },
        {
          "failureName": "io.micronaut.http.client.exceptions.HttpClientResponseException",
          "failureDetail": "Internal Server Error: Failed to inject value for parameter [lockHolder] of class: com.github.example.dao.impl.InMemoryAccountDaoImpl\n\nMessage: No bean of type [com.github.example.holder.LockHolder] exists. Ensure the class is declared a bean and if you are using Java or Kotlin make sure you have enabled annotation processing.\nPath Taken: new AccountController(ModelMapper modelMapper,[AccountService accountService]) --\u003e new AccountServiceImpl([AccountDao accountDao]) --\u003e new InMemoryAccountDaoImpl([LockHolder lockHolder])",
          "isError": true
        },
        {
          "failureName": "io.micronaut.http.client.exceptions.HttpClientResponseException",
          "failureDetail": "Internal Server Error: Failed to inject value for parameter [lockHolder] of class: com.github.example.dao.impl.InMemoryAccountDaoImpl\n\nMessage: No bean of type [com.github.example.holder.LockHolder] exists. Ensure the class is declared a bean and if you are using Java or Kotlin make sure you have enabled annotation processing.\nPath Taken: new AccountController(ModelMapper modelMapper,[AccountService accountService]) --\u003e new AccountServiceImpl([AccountDao accountDao]) --\u003e new InMemoryAccountDaoImpl([LockHolder lockHolder])",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 10
    }
  ],
  "failingModule": "/root/workspace/DmitriiSerikov/money-transfer-service/441821049",
  "bugCommit": "https://github.com/DmitriiSerikov/money-transfer-service/compare/33699be94273...45fc1c69243f"
}