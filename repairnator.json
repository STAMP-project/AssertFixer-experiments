{
  "bugType": "only_fail",
  "hostname": "cyclone1",
  "repo": "INRIA/spoon",
  "metrics": {
    "BugCommitUrl": "http://github.com/INRIA/spoon/commit/bd4b071be38bcf639e2296e6e013a61d819ed84e",
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 5,
      "ComputeClasspath": 16,
      "ComputeTestDir": 3,
      "BuildProject": 97,
      "InitRepoToPush": 44,
      "ComputeSourceDir": 1,
      "ComputeModules": 0,
      "CloneRepository": 15,
      "CheckoutPatchedBuild": 0,
      "TestProject": 863,
      "AssertFixer": 30,
      "GatherTestInformation": 25,
      "CommitPatch": 17
    },
    "NbFailingTests": 21,
    "NbErroringTests": 0,
    "NbSkippingTests": 5,
    "NbRunningTests": 1580,
    "FailureNames": [
      "java.lang.AssertionError",
      "org.junit.ComparisonFailure"
    ],
    "ReproductionDate": "Oct 3, 2018 9:10:58 PM",
    "BuggyBuildId": 436782274,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/INRIA/spoon/builds/436782274",
    "BuggyBuildDate": "Oct 3, 2018 8:58:03 PM",
    "BugCommit": "bd4b071be38bcf639e2296e6e013a61d819ed84e",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 34,
    "NbFileApp": 645,
    "NbFileTests": 705,
    "NbCPU": 8,
    "FreeMemory": 346494320,
    "TotalMemory": 461897728,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 67242520,
      "ComputeClasspath": 78275464,
      "ComputeTestDir": 70932208,
      "BuildProject": 110041048,
      "InitRepoToPush": 78878384,
      "ComputeSourceDir": 344035616,
      "ComputeModules": 342221376,
      "CloneRepository": 107138136,
      "CheckoutPatchedBuild": 346494320,
      "TestProject": 101200800,
      "AssertFixer": 92285184,
      "GatherTestInformation": 75841752,
      "CommitPatch": 346494320
    },
    "NbSucceedingTests": 1559
  },
  "failing-test-cases": [
    {
      "className": "spoon.test.fieldaccesses.FieldAccessTest",
      "failingMethods": [
        "testFieldAccessInLambda"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c() -\u003e {\n    [spoon.test.fieldaccesses.testclasses.MyClass.]LOG.info(\"bla\");\n}\u003e but was:\u003c() -\u003e {\n    []LOG.info(\"bla\");\n}\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.targeted.TargetedExpressionTest",
      "failingMethods": [
        "testTargetsOfStaticFieldAccess"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[spoon.test.targeted.testclasses.Foo.]k\u003e but was:\u003c[]k\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.annotation.AnnotationTest",
      "failingMethods": [
        "testFieldAndMethodInAnnotation"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...ing value() default [spoon.test.annotation.testclasses.SuperAnnotation.]value;\u003e but was:\u003c...ing value() default []value;\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.variable.AccessFullyQualifiedFieldTest",
      "failingMethods": [
        "testNoFQNWhenShadowedByField",
        "testNoFQNWhenUsedInLoop",
        "testNoFQNWhenUsedInTryCatch",
        "testNoFQNWhenShadowedByLocalVariable"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "The x variable should be attributed with SPOONED_CLASSES",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "The xx variable should be attributed with SPOONED_CLASSES",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "The xx variable should be attributed with SPOONED_CLASSES",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "The xx variable is attributed with Launcher.SPOONED_CLASSES",
          "isError": false
        }
      ],
      "nbFailures": 4,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.visibility.VisibilityTest",
      "failingMethods": [
        "testFullyQualifiedNameOfTypeReferenceWithGeneric"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c([spoon.test.visibility.testclasses.A.B.]i)\u003e but was:\u003c([]i)\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.template.PatternTest",
      "failingMethods": [
        "testMatchForeachWithOuterSubstitution",
        "testMatchParameterValue",
        "testMatchGreedyMultiValueMinCount2",
        "testMatchParameterValueType",
        "testMatchParameterCondition",
        "testMatchReluctantMultivalueMinCount1",
        "testMatchReluctantMultivalue",
        "testMatchGreedyMultiValueUnlimited",
        "testMatchGreedyMultiValueMaxCountLimit",
        "testMatchForeach",
        "testMatchReluctantMultivalueExactly2",
        "testMatchIfElse",
        "testMatchPossesiveMultiValueMaxCount4"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[int i \u003d 0, i++, java.lang.System.out.println(i), java.lang.System.out.println(\"Xxxx\")]\u003e but was:\u003c[i++, java.lang.System.out.println(i), out.println(\"Xxxx\"), java.lang.System.out.println(((java.lang.String) (null)))]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "count\u003d0 expected:\u003c3\u003e but was:\u003c4\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[i++, java.lang.System.out.println(i), java.lang.System.out.println(\"Xxxx\")]\u003e but was:\u003c[java.lang.System.out.println(i), out.println(\"Xxxx\"), java.lang.System.out.println(((java.lang.String) (null)))]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[int cc \u003d 0, java.lang.System.out.println(\"Xxxx\"), cc++, java.lang.System.out.println(((java.lang.String) (null))), cc++]\u003e but was:\u003c[int cc \u003d 0]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c3\u003e but was:\u003c2\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c5\u003e but was:\u003c4\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[int i \u003d 0, i++, java.lang.System.out.println(i), java.lang.System.out.println(\"Xxxx\"), java.lang.System.out.println(((java.lang.String) (null)))]\u003e but was:\u003c[int i \u003d 0, i++, java.lang.System.out.println(i), out.println(\"Xxxx\"), java.lang.System.out.println(((java.lang.String) (null)))]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[int i \u003d 0, i++, java.lang.System.out.println(i), java.lang.System.out.println(\"Xxxx\"), java.lang.System.out.println(((java.lang.String) (null))), java.lang.System.out.println(\"last one\")]\u003e but was:\u003c[int i \u003d 0, i++, java.lang.System.out.println(i), out.println(\"Xxxx\"), java.lang.System.out.println(((java.lang.String) (null))), java.lang.System.out.println(\"last one\")]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c5\u003e but was:\u003c4\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c2\u003e but was:\u003c1\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c2\u003e but was:\u003c3\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c3\u003e but was:\u003c2\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c3\u003e but was:\u003c2\u003e",
          "isError": false
        }
      ],
      "nbFailures": 13,
      "nbErrors": 0
    }
  ],
  "failingModule": "/root/workspace/INRIA/spoon/436782274"
}