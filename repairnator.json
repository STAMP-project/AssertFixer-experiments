{
  "bugType": "only_fail",
  "hostname": "cyclone1",
  "repo": "OpenAPITools/openapi-generator",
  "metrics": {
    "NbFailingTests": 20,
    "NbErroringTests": 0,
    "NbSkippingTests": 0,
    "NbRunningTests": 432,
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 3,
      "ComputeClasspath": 5,
      "ComputeTestDir": 0,
      "BuildProject": 231,
      "InitRepoToPush": 16,
      "ComputeSourceDir": 2,
      "ComputeModules": 0,
      "CloneRepository": 29,
      "CheckoutPatchedBuild": 0,
      "TestProject": 21,
      "AssertFixer": 274,
      "GatherTestInformation": 0,
      "CommitPatch": 10
    },
    "FailureNames": [
      "mockit.internal.UnexpectedInvocation"
    ],
    "BugCommitUrl": "http://github.com/OpenAPITools/openapi-generator/commit/374ebecb5cc4640b8879bbc7d0d654d5b70e8764",
    "ReproductionDate": "Aug 5, 2018 5:10:05 PM",
    "BuggyBuildId": 412336354,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/OpenAPITools/openapi-generator/builds/412336354",
    "BuggyBuildDate": "Aug 5, 2018 5:09:07 PM",
    "BugCommit": "374ebecb5cc4640b8879bbc7d0d654d5b70e8764",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 65,
    "NbFileApp": 204,
    "NbFileTests": 120,
    "NbCPU": 8,
    "FreeMemory": 617169224,
    "TotalMemory": 1562902528,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 247323856,
      "ComputeClasspath": 34108880,
      "ComputeTestDir": 21009224,
      "BuildProject": 227487048,
      "InitRepoToPush": 38714320,
      "ComputeSourceDir": 614944024,
      "ComputeModules": 588098120,
      "CloneRepository": 240251872,
      "CheckoutPatchedBuild": 617169224,
      "TestProject": 219999288,
      "AssertFixer": 966177744,
      "GatherTestInformation": 205424600,
      "CommitPatch": 617169224
    },
    "NbSucceedingTests": 412
  },
  "failing-test-cases": [
    {
      "className": "org.openapitools.codegen.cmd.GenerateTest",
      "failingMethods": [
        "testInvokerPackage",
        "testModelPackage",
        "testAdditionalProperties",
        "testAuth",
        "testLanguageSpecificPrimitives",
        "testLibrary",
        "testRequiredArgs_LongArgs",
        "testInstantiationTypes",
        "testTemplateDir",
        "testArtifactVersion",
        "testTypeMappings",
        "testApiPackage",
        "testConfig",
        "testSystemProperties",
        "testSkipOverwrite",
        "testVerbose",
        "testArtifactId",
        "testImportMappings",
        "testGroupId",
        "testRequiredArgs_ShortArgs"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "mockit.internal.UnexpectedInvocation",
          "failureDetail": "Unexpected invocation of:\norg.openapitools.codegen.config.CodegenConfigurator#setValidateSpec(boolean)\n   with arguments: true\n   on mock instance: org.openapitools.codegen.config.CodegenConfigurator@3c22fc4c",
          "isError": false
        },
        {
          "failureName": "mockit.internal.UnexpectedInvocation",
          "failureDetail": "Unexpected invocation of:\norg.openapitools.codegen.config.CodegenConfigurator#setValidateSpec(boolean)\n   with arguments: true\n   on mock instance: org.openapitools.codegen.config.CodegenConfigurator@3c22fc4c",
          "isError": false
        },
        {
          "failureName": "mockit.internal.UnexpectedInvocation",
          "failureDetail": "Unexpected invocation of:\norg.openapitools.codegen.config.CodegenConfigurator#setValidateSpec(boolean)\n   with arguments: true\n   on mock instance: org.openapitools.codegen.config.CodegenConfigurator@3c22fc4c",
          "isError": false
        },
        {
          "failureName": "mockit.internal.UnexpectedInvocation",
          "failureDetail": "Unexpected invocation of:\norg.openapitools.codegen.config.CodegenConfigurator#setValidateSpec(boolean)\n   with arguments: true\n   on mock instance: org.openapitools.codegen.config.CodegenConfigurator@3c22fc4c",
          "isError": false
        },
        {
          "failureName": "mockit.internal.UnexpectedInvocation",
          "failureDetail": "Unexpected invocation of:\norg.openapitools.codegen.config.CodegenConfigurator#setValidateSpec(boolean)\n   with arguments: true\n   on mock instance: org.openapitools.codegen.config.CodegenConfigurator@3c22fc4c",
          "isError": false
        },
        {
          "failureName": "mockit.internal.UnexpectedInvocation",
          "failureDetail": "Unexpected invocation of:\norg.openapitools.codegen.config.CodegenConfigurator#setValidateSpec(boolean)\n   with arguments: true\n   on mock instance: org.openapitools.codegen.config.CodegenConfigurator@3c22fc4c",
          "isError": false
        },
        {
          "failureName": "mockit.internal.UnexpectedInvocation",
          "failureDetail": "Unexpected invocation of:\norg.openapitools.codegen.config.CodegenConfigurator#setValidateSpec(boolean)\n   with arguments: true\n   on mock instance: org.openapitools.codegen.config.CodegenConfigurator@3c22fc4c",
          "isError": false
        },
        {
          "failureName": "mockit.internal.UnexpectedInvocation",
          "failureDetail": "Unexpected invocation of:\norg.openapitools.codegen.config.CodegenConfigurator#setValidateSpec(boolean)\n   with arguments: true\n   on mock instance: org.openapitools.codegen.config.CodegenConfigurator@3c22fc4c",
          "isError": false
        },
        {
          "failureName": "mockit.internal.UnexpectedInvocation",
          "failureDetail": "Unexpected invocation of:\norg.openapitools.codegen.config.CodegenConfigurator#setValidateSpec(boolean)\n   with arguments: true\n   on mock instance: org.openapitools.codegen.config.CodegenConfigurator@3c22fc4c",
          "isError": false
        },
        {
          "failureName": "mockit.internal.UnexpectedInvocation",
          "failureDetail": "Unexpected invocation of:\norg.openapitools.codegen.config.CodegenConfigurator#setValidateSpec(boolean)\n   with arguments: true\n   on mock instance: org.openapitools.codegen.config.CodegenConfigurator@3c22fc4c",
          "isError": false
        },
        {
          "failureName": "mockit.internal.UnexpectedInvocation",
          "failureDetail": "Unexpected invocation of:\norg.openapitools.codegen.config.CodegenConfigurator#setValidateSpec(boolean)\n   with arguments: true\n   on mock instance: org.openapitools.codegen.config.CodegenConfigurator@3c22fc4c",
          "isError": false
        },
        {
          "failureName": "mockit.internal.UnexpectedInvocation",
          "failureDetail": "Unexpected invocation of:\norg.openapitools.codegen.config.CodegenConfigurator#setValidateSpec(boolean)\n   with arguments: true\n   on mock instance: org.openapitools.codegen.config.CodegenConfigurator@3c22fc4c",
          "isError": false
        },
        {
          "failureName": "mockit.internal.UnexpectedInvocation",
          "failureDetail": "Unexpected invocation of:\norg.openapitools.codegen.config.CodegenConfigurator#setValidateSpec(boolean)\n   with arguments: true\n   on mock instance: org.openapitools.codegen.config.CodegenConfigurator@3c22fc4c",
          "isError": false
        },
        {
          "failureName": "mockit.internal.UnexpectedInvocation",
          "failureDetail": "Unexpected invocation of:\norg.openapitools.codegen.config.CodegenConfigurator#setValidateSpec(boolean)\n   with arguments: true\n   on mock instance: org.openapitools.codegen.config.CodegenConfigurator@3c22fc4c",
          "isError": false
        },
        {
          "failureName": "mockit.internal.UnexpectedInvocation",
          "failureDetail": "Unexpected invocation of:\norg.openapitools.codegen.config.CodegenConfigurator#setValidateSpec(boolean)\n   with arguments: true\n   on mock instance: org.openapitools.codegen.config.CodegenConfigurator@3c22fc4c",
          "isError": false
        },
        {
          "failureName": "mockit.internal.UnexpectedInvocation",
          "failureDetail": "Unexpected invocation of:\norg.openapitools.codegen.config.CodegenConfigurator#setValidateSpec(boolean)\n   with arguments: true\n   on mock instance: org.openapitools.codegen.config.CodegenConfigurator@3c22fc4c",
          "isError": false
        },
        {
          "failureName": "mockit.internal.UnexpectedInvocation",
          "failureDetail": "Unexpected invocation of:\norg.openapitools.codegen.config.CodegenConfigurator#setValidateSpec(boolean)\n   with arguments: true\n   on mock instance: org.openapitools.codegen.config.CodegenConfigurator@3c22fc4c",
          "isError": false
        },
        {
          "failureName": "mockit.internal.UnexpectedInvocation",
          "failureDetail": "Unexpected invocation of:\norg.openapitools.codegen.config.CodegenConfigurator#setValidateSpec(boolean)\n   with arguments: true\n   on mock instance: org.openapitools.codegen.config.CodegenConfigurator@3c22fc4c",
          "isError": false
        },
        {
          "failureName": "mockit.internal.UnexpectedInvocation",
          "failureDetail": "Unexpected invocation of:\norg.openapitools.codegen.config.CodegenConfigurator#setValidateSpec(boolean)\n   with arguments: true\n   on mock instance: org.openapitools.codegen.config.CodegenConfigurator@3c22fc4c",
          "isError": false
        },
        {
          "failureName": "mockit.internal.UnexpectedInvocation",
          "failureDetail": "Unexpected invocation of:\norg.openapitools.codegen.config.CodegenConfigurator#setValidateSpec(boolean)\n   with arguments: true\n   on mock instance: org.openapitools.codegen.config.CodegenConfigurator@3c22fc4c",
          "isError": false
        }
      ],
      "nbFailures": 20,
      "nbErrors": 0
    }
  ],
  "failingModule": "/root/workspace/OpenAPITools/openapi-generator/412336354/modules/openapi-generator-cli"
}