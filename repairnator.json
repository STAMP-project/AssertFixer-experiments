{
  "totalNumberSkippingTests": 4,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "INRIA/spoon",
  "metrics": {
    "ReproductionDate": "May 24, 2018 8:41:08 PM",
    "BuggyBuildId": 383336005,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/INRIA/spoon/builds/383336005",
    "BuggyBuildDate": "May 24, 2018 8:40:45 PM",
    "BugCommit": "567846a584e4abc13f94597f16abcb082b7bbe58",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 1,
    "NbLibraries": 14,
    "NbFileApp": 1122,
    "NbFileTests": 665,
    "NbCPU": 8,
    "FreeMemory": 159388456,
    "TotalMemory": 1909981184,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 88999784,
      "ComputeClasspath": 77587280,
      "CloneRepository": 77995264,
      "ComputeTestDir": 76319240,
      "CheckoutPatchedBuild": 159388456,
      "TestProject": 62784520,
      "AssertFixer": 917555744,
      "BuildProject": 69729496,
      "GatherTestInformation": 79193232,
      "ComputeSourceDir": 77587280,
      "InitRepoToPush": 78566792,
      "CommitPatch": 159388456
    },
    "NbSucceedingTests": 1430,
    "BugCommitUrl": "http://github.com/INRIA/spoon/commit/567846a584e4abc13f94597f16abcb082b7bbe58",
    "NbFailingTests": 81,
    "NbErroringTests": 0,
    "NbSkippingTests": 4,
    "NbRunningTests": 1511,
    "FailureNames": [
      "java.lang.AssertionError"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 4,
      "ComputeClasspath": 4,
      "CloneRepository": 7,
      "ComputeTestDir": 0,
      "CheckoutPatchedBuild": 0,
      "TestProject": 404,
      "AssertFixer": 1800,
      "BuildProject": 44,
      "GatherTestInformation": 0,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 7,
      "CommitPatch": 7
    }
  },
  "failingModule": "/root/workspace/INRIA/spoon/383336005",
  "hostname": "spirals-HP-Z400-Workstation",
  "totalNumberFailingTests": 81,
  "error-types": [
    "java.lang.AssertionError"
  ],
  "totalNumberRunningTests": 1511,
  "failing-test-cases": [
    {
      "className": "spoon.test.parent.CollectionsContractTest",
      "failingMethods": [
        "testContract[CtModuleRequirement]",
        "testContract[CtEnum]",
        "testContract[CtField]",
        "testContract[CtArrayTypeReference]",
        "testContract[CtAssert]",
        "testContract[CtWildcardReference]",
        "testContract[CtVariableWrite]",
        "testContract[CtLocalVariable]",
        "testContract[CtUsedService]",
        "testContract[CtBreak]",
        "testContract[CtAnonymousExecutable]",
        "testContract[CtAnnotationFieldAccess]",
        "testContract[CtAssignment]",
        "testContract[CtLocalVariableReference]",
        "testContract[CtModule]",
        "testContract[CtArrayRead]",
        "testContract[CtPackage]",
        "testContract[CtJavaDoc]",
        "testContract[CtModuleReference]",
        "testContract[CtAnnotation]",
        "testContract[CtPackageReference]",
        "testContract[CtNewClass]",
        "testContract[CtSynchronized]",
        "testContract[CtInterface]",
        "testContract[CtTypeParameterReference]",
        "testContract[CtCatch]",
        "testContract[CtMethod]",
        "testContract[CtVariableRead]",
        "testContract[CtLiteral]",
        "testContract[CtTypeParameter]",
        "testContract[CtForEach]",
        "testContract[CtDo]",
        "testContract[CtProvidedService]",
        "testContract[CtCodeSnippetExpression]",
        "testContract[CtConstructor]",
        "testContract[CtExecutableReferenceExpression]",
        "testContract[CtThrow]",
        "testContract[CtEnumValue]",
        "testContract[CtConstructorCall]",
        "testContract[CtConditional]",
        "testContract[CtIf]",
        "testContract[CtStatementList]",
        "testContract[CtImport]",
        "testContract[CtTypeAccess]",
        "testContract[CtSuperAccess]",
        "testContract[CtWhile]",
        "testContract[CtExecutableReference]",
        "testContract[CtArrayWrite]",
        "testContract[CtParameterReference]",
        "testContract[CtOperatorAssignment]",
        "testContract[CtJavaDocTag]",
        "testContract[CtParameter]",
        "testContract[CtCatchVariableReference]",
        "testContract[CtFor]",
        "testContract[CtIntersectionTypeReference]",
        "testContract[CtFieldReference]",
        "testContract[CtThisAccess]",
        "testContract[CtPackageExport]",
        "testContract[CtCatchVariable]",
        "testContract[CtClass]",
        "testContract[CtUnaryOperator]",
        "testContract[CtBinaryOperator]",
        "testContract[CtInvocation]",
        "testContract[CtFieldWrite]",
        "testContract[CtTypeReference]",
        "testContract[CtSwitch]",
        "testContract[CtTryWithResource]",
        "testContract[CtFieldRead]",
        "testContract[CtReturn]",
        "testContract[CtTry]",
        "testContract[CtNewArray]",
        "testContract[CtComment]",
        "testContract[CtLambda]",
        "testContract[CtCodeSnippetStatement]",
        "testContract[CtCase]",
        "testContract[CtAnnotationType]",
        "testContract[CtContinue]",
        "testContract[CtAnnotationMethod]",
        "testContract[CtBlock]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtConditional#cast;READ_ONLY\nnormal;CtConditional#annotation;READ_ONLY\nnormal;CtConditional#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtProvidedService#implementationType;READ_ONLY\nnormal;CtProvidedService#annotation;READ_ONLY\nnormal;CtProvidedService#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtParameter#annotation;READ_ONLY\nnormal;CtParameter#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtWhile#annotation;READ_ONLY\nnormal;CtWhile#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtTypeReference#typeArgument;READ_ONLY\nnormal;CtTypeReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtCatchVariableReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtContinue#annotation;READ_ONLY\nnormal;CtContinue#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtInterface#typeMember;READ_ONLY\nnormal;CtInterface#interface;READ_ONLY\nnormal;CtInterface#typeParameter;READ_ONLY\nnormal;CtInterface#annotation;READ_ONLY\nnormal;CtInterface#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtAssignment#cast;READ_ONLY\nnormal;CtAssignment#annotation;READ_ONLY\nnormal;CtAssignment#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtBinaryOperator#cast;READ_ONLY\nnormal;CtBinaryOperator#annotation;READ_ONLY\nnormal;CtBinaryOperator#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtEnumValue#annotation;READ_ONLY\nnormal;CtEnumValue#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtModuleRequirement#annotation;READ_ONLY\nnormal;CtModuleRequirement#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtForEach#annotation;READ_ONLY\nnormal;CtForEach#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtConstructor#typeParameter;READ_ONLY\nnormal;CtConstructor#parameter;READ_ONLY\nnormal;CtConstructor#thrown;READ_ONLY\nnormal;CtConstructor#annotation;READ_ONLY\nnormal;CtConstructor#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtSuperAccess#cast;READ_ONLY\nnormal;CtSuperAccess#annotation;READ_ONLY\nnormal;CtSuperAccess#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtAnonymousExecutable#annotation;READ_ONLY\nnormal;CtAnonymousExecutable#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtComment#annotation;READ_ONLY\nnormal;CtComment#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtWildcardReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtThisAccess#cast;READ_ONLY\nnormal;CtThisAccess#annotation;READ_ONLY\nnormal;CtThisAccess#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtArrayWrite#cast;READ_ONLY\nnormal;CtArrayWrite#annotation;READ_ONLY\nnormal;CtArrayWrite#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtPackageReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtJavaDoc#annotation;READ_ONLY\nnormal;CtJavaDoc#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtArrayRead#cast;READ_ONLY\nnormal;CtArrayRead#annotation;READ_ONLY\nnormal;CtArrayRead#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtStatementList#statement;READ_ONLY\nnormal;CtStatementList#annotation;READ_ONLY\nnormal;CtStatementList#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtVariableWrite#cast;READ_ONLY\nnormal;CtVariableWrite#annotation;READ_ONLY\nnormal;CtVariableWrite#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtParameterReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtOperatorAssignment#cast;READ_ONLY\nnormal;CtOperatorAssignment#annotation;READ_ONLY\nnormal;CtOperatorAssignment#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtAnnotationFieldAccess#cast;READ_ONLY\nnormal;CtAnnotationFieldAccess#annotation;READ_ONLY\nnormal;CtAnnotationFieldAccess#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtAnnotationMethod#annotation;READ_ONLY\nnormal;CtAnnotationMethod#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtClass#typeMember;READ_ONLY\nnormal;CtClass#interface;READ_ONLY\nnormal;CtClass#typeParameter;READ_ONLY\nnormal;CtClass#annotation;READ_ONLY\nnormal;CtClass#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtBlock#annotation;READ_ONLY\nnormal;CtBlock#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtPackage#annotation;READ_ONLY\nnormal;CtPackage#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtTryWithResource#tryResource;READ_ONLY\nnormal;CtTryWithResource#catch;READ_ONLY\nnormal;CtTryWithResource#annotation;READ_ONLY\nnormal;CtTryWithResource#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtAssert#annotation;READ_ONLY\nnormal;CtAssert#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtSwitch#case;READ_ONLY\nnormal;CtSwitch#annotation;READ_ONLY\nnormal;CtSwitch#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtTry#catch;READ_ONLY\nnormal;CtTry#annotation;READ_ONLY\nnormal;CtTry#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtSynchronized#annotation;READ_ONLY\nnormal;CtSynchronized#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtImport#annotation;READ_ONLY\nnormal;CtImport#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Failed check of;CtTypeParameterReference#interface\nnormal;CtTypeParameterReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtInvocation#argument;READ_ONLY\nnormal;CtInvocation#cast;READ_ONLY\nnormal;CtInvocation#annotation;READ_ONLY\nnormal;CtInvocation#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtCodeSnippetExpression#cast;READ_ONLY\nnormal;CtCodeSnippetExpression#annotation;READ_ONLY\nnormal;CtCodeSnippetExpression#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtFieldWrite#cast;READ_ONLY\nnormal;CtFieldWrite#annotation;READ_ONLY\nnormal;CtFieldWrite#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtUnaryOperator#cast;READ_ONLY\nnormal;CtUnaryOperator#annotation;READ_ONLY\nnormal;CtUnaryOperator#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtExecutableReference#typeArgument;READ_ONLY\nnormal;CtExecutableReference#argumentType;READ_ONLY\nnormal;CtExecutableReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtFor#forInit;READ_ONLY\nnormal;CtFor#forUpdate;READ_ONLY\nnormal;CtFor#annotation;READ_ONLY\nnormal;CtFor#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtVariableRead#cast;READ_ONLY\nnormal;CtVariableRead#annotation;READ_ONLY\nnormal;CtVariableRead#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtTypeParameter#annotation;READ_ONLY\nnormal;CtTypeParameter#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtLocalVariable#annotation;READ_ONLY\nnormal;CtLocalVariable#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtIf#annotation;READ_ONLY\nnormal;CtIf#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtModule#moduleDirective;READ_ONLY\nnormal;CtModule#annotation;READ_ONLY\nnormal;CtModule#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtPackageExport#moduleRef;READ_ONLY\nnormal;CtPackageExport#annotation;READ_ONLY\nnormal;CtPackageExport#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtConstructorCall#argument;READ_ONLY\nnormal;CtConstructorCall#cast;READ_ONLY\nnormal;CtConstructorCall#annotation;READ_ONLY\nnormal;CtConstructorCall#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtCase#statement;READ_ONLY\nnormal;CtCase#annotation;READ_ONLY\nnormal;CtCase#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtModuleReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtCatch#annotation;READ_ONLY\nnormal;CtCatch#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtArrayTypeReference#typeArgument;READ_ONLY\nnormal;CtArrayTypeReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtMethod#typeParameter;READ_ONLY\nnormal;CtMethod#parameter;READ_ONLY\nnormal;CtMethod#thrown;READ_ONLY\nnormal;CtMethod#annotation;READ_ONLY\nnormal;CtMethod#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtLambda#parameter;READ_ONLY\nnormal;CtLambda#cast;READ_ONLY\nnormal;CtLambda#annotation;READ_ONLY\nnormal;CtLambda#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtNewArray#dimension;READ_ONLY\nnormal;CtNewArray#expression;READ_ONLY\nnormal;CtNewArray#cast;READ_ONLY\nnormal;CtNewArray#annotation;READ_ONLY\nnormal;CtNewArray#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtUsedService#annotation;READ_ONLY\nnormal;CtUsedService#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtIntersectionTypeReference#bound;READ_ONLY\nnormal;CtIntersectionTypeReference#typeArgument;READ_ONLY\nFailed check of;CtIntersectionTypeReference#interface\nnormal;CtIntersectionTypeReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtThrow#annotation;READ_ONLY\nnormal;CtThrow#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtLiteral#cast;READ_ONLY\nnormal;CtLiteral#annotation;READ_ONLY\nnormal;CtLiteral#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtReturn#annotation;READ_ONLY\nnormal;CtReturn#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtJavaDocTag#annotation;READ_ONLY\nnormal;CtJavaDocTag#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtField#annotation;READ_ONLY\nnormal;CtField#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtTypeAccess#cast;READ_ONLY\nnormal;CtTypeAccess#annotation;READ_ONLY\nnormal;CtTypeAccess#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtCodeSnippetStatement#annotation;READ_ONLY\nnormal;CtCodeSnippetStatement#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtDo#annotation;READ_ONLY\nnormal;CtDo#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtAnnotation#value;READ_ONLY\nnormal;CtAnnotation#annotation;READ_ONLY\nnormal;CtAnnotation#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtFieldRead#cast;READ_ONLY\nnormal;CtFieldRead#annotation;READ_ONLY\nnormal;CtFieldRead#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtBreak#annotation;READ_ONLY\nnormal;CtBreak#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtFieldReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtEnum#value;READ_ONLY\nnormal;CtEnum#typeMember;READ_ONLY\nnormal;CtEnum#interface;READ_ONLY\nnormal;CtEnum#annotation;READ_ONLY\nnormal;CtEnum#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtNewClass#argument;READ_ONLY\nnormal;CtNewClass#cast;READ_ONLY\nnormal;CtNewClass#annotation;READ_ONLY\nnormal;CtNewClass#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtLocalVariableReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtAnnotationType#typeMember;READ_ONLY\nnormal;CtAnnotationType#annotation;READ_ONLY\nnormal;CtAnnotationType#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtCatchVariable#multiType;READ_ONLY\nnormal;CtCatchVariable#annotation;READ_ONLY\nnormal;CtCatchVariable#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtExecutableReferenceExpression#cast;READ_ONLY\nnormal;CtExecutableReferenceExpression#annotation;READ_ONLY\nnormal;CtExecutableReferenceExpression#comment;READ_ONLY",
          "isError": false
        }
      ],
      "nbFailures": 79,
      "nbErrors": 0
    },
    {
      "className": "spoon.MavenLauncherTest",
      "failingMethods": [
        "mavenLauncherTestMultiModulesAndVariables",
        "spoonMavenLauncherTest"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Content of classpath: ",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c7\u003e but was:\u003c0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    }
  ]
}