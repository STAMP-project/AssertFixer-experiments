{
  "bugType": "only_fail",
  "hostname": "cyclone1",
  "repo": "CorfuDB/CorfuDB",
  "metrics": {
    "BugCommitUrl": "http://github.com/CorfuDB/CorfuDB/commit/15ca8f2c5551f628a6136f99dda5cc4e4915e3ae",
    "NbFailingTests": 0,
    "NbErroringTests": 155,
    "NbSkippingTests": 1,
    "NbRunningTests": 500,
    "ReproductionDate": "Aug 13, 2018 9:46:40 PM",
    "BuggyBuildId": 415595919,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/CorfuDB/CorfuDB/builds/415595919",
    "BuggyBuildDate": "Aug 13, 2018 9:41:33 PM",
    "BugCommit": "15ca8f2c5551f628a6136f99dda5cc4e4915e3ae",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 98,
    "NbFileApp": 342,
    "NbFileTests": 120,
    "NbCPU": 8,
    "FreeMemory": 293044888,
    "TotalMemory": 648544256,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 99891256,
      "ComputeClasspath": 134249816,
      "ComputeTestDir": 121476280,
      "BuildProject": 87235184,
      "InitRepoToPush": 137376544,
      "ComputeSourceDir": 285404464,
      "ComputeModules": 280028984,
      "CloneRepository": 94114616,
      "CheckoutPatchedBuild": 293044888,
      "TestProject": 101457160,
      "AssertFixer": 166557536,
      "GatherTestInformation": 78806992,
      "CommitPatch": 293046976
    },
    "NbSucceedingTests": 345,
    "FailureNames": [
      "java.util.concurrent.CompletionException"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 0,
      "ComputeClasspath": 10,
      "ComputeTestDir": 0,
      "BuildProject": 199,
      "InitRepoToPush": 19,
      "ComputeSourceDir": 0,
      "ComputeModules": 0,
      "CloneRepository": 261,
      "CheckoutPatchedBuild": 0,
      "TestProject": 10187,
      "AssertFixer": 50,
      "GatherTestInformation": 9,
      "CommitPatch": 3
    }
  },
  "failing-test-cases": [
    {
      "className": "org.corfudb.infrastructure.log.StreamLogFilesTest",
      "failingMethods": [],
      "erroringMethods": [
        "testRangeWriteTrim"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.corfudb.runtime.concurrent.MapsAsMQsTest",
      "failingMethods": [],
      "erroringMethods": [
        "useMapsAsMQs"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.corfudb.runtime.concurrent.MultipleNonOverlappingTest",
      "failingMethods": [],
      "erroringMethods": [
        "testStress2",
        "testStress"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.corfudb.recovery.FastObjectLoaderTest",
      "failingMethods": [],
      "erroringMethods": [
        "doNotReconstructEmptyCheckpoints",
        "ignoreStreamForRuntimeButNotStreamTails",
        "canReadWithCacheDisable",
        "canReloadMaps",
        "canReadRankOnlyEntries",
        "canReadCheckPointMultipleStream",
        "canReadWithTruncatedCheckPoint",
        "canRollBack",
        "canFindTailsWithCheckPoints",
        "doNotFailBecauseTrimIsFirst",
        "canReadMultipleCheckPointMultipleStreams",
        "whiteListModeWithCheckPoint",
        "canReadCheckPointMultipleStreamTrimWithLeftOver",
        "whiteListMode",
        "doNotReconstructTransactionStreams",
        "doReconstructTransactionStreamTail",
        "ignoreStreamCheckpoint",
        "canRecreateMixOfMaps",
        "canReadWithEntriesInterleavingCPS",
        "canRecreateMapWithCorrectSerializer",
        "canLoadWithCustomBulkRead",
        "failBecauseOfTrimAnd1Attempt",
        "blackListAndWhiteListAreMutuallyExclusive",
        "canRecreateCorfuTableWithIndex",
        "canReadCheckPointMultipleStreamsTrim",
        "canFindTailsWithFailedCheckpoint",
        "canReadWhenTheUserHasNoCheckpoint",
        "canFindTailsRecoverSequencerMode",
        "canReadCheckpointWithoutTrim",
        "canFindTailsWithOnlyCheckpointAndTrim",
        "canReadHoles",
        "canReadLogTerminatedWithCheckpoint",
        "canRecreateCorfuTable",
        "canRecreateCustomWithSerializer"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 34
    },
    {
      "className": "org.corfudb.runtime.view.QuorumReplicationStreamViewTest",
      "failingMethods": [],
      "erroringMethods": [
        "canFindInStream",
        "streamWithHoleFill",
        "canSeekOnStream"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "org.corfudb.runtime.collections.FGMapTest",
      "failingMethods": [],
      "erroringMethods": [
        "canClearInTX",
        "checkClearCalls",
        "abortRateIsLowForSimpleTX",
        "canClear",
        "canReadWriteToSingle",
        "loadsFollowedByGetsConcurrent",
        "canNestTX",
        "sizeIsCorrect"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "org.corfudb.runtime.checkpoint.CheckpointTrimTest",
      "failingMethods": [],
      "erroringMethods": [
        "testSuccessiveCheckpointTrim",
        "testCheckpointTrimDuringPlayback",
        "testCheckpointTrim"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "org.corfudb.runtime.concurrent.StreamSeekAtomicityTest",
      "failingMethods": [],
      "erroringMethods": [
        "ckCommitAtomicity",
        "ckCommitAtomicity3",
        "ckCommitAtomicity2"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "org.corfudb.infrastructure.ManagementServerTest",
      "failingMethods": [],
      "erroringMethods": [
        "triggerFailureHandler"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.corfudb.runtime.collections.CorfuTableTest",
      "failingMethods": [],
      "erroringMethods": [
        "openingCorfuTableTwice",
        "emptyIndexesReturnEmptyValues",
        "canReadFromEachIndex",
        "canReadFromMultipleIndices",
        "canReadWithoutIndexes",
        "doUpdateIndicesOnRemove"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 6
    },
    {
      "className": "org.corfudb.runtime.collections.CorfuMapTest",
      "failingMethods": [],
      "erroringMethods": [
        "modificationDuringTransactionCausesAbort",
        "canUpdateSingleObjectTransacationally",
        "canWriteScanAndFilterToSingle",
        "unusedMutatorAccessor",
        "smrMapCanContainCustomObjects",
        "collectionsStreamInterface",
        "canGetID",
        "objectViewCorrectlyReportsInsideTX",
        "smrMapCanContainCustomObjectsInsideTXes",
        "canReadWriteToSingle",
        "loadsFollowedByGetsConcurrent",
        "mutatorFollowedByATransaction",
        "canContainNullObjects",
        "bulkReads",
        "concurrentAbortMultiViewInterleaved",
        "multipleTXesAreAppliedWOAccessors",
        "loadsFollowedByGetsConcurrentMultiView",
        "canUpdateSingleObjectTransacationallyWhenCached",
        "readSetDiffFromWriteSet",
        "checkpointCorfuMap",
        "loadsFollowedByGets",
        "multipleTXesAreApplied",
        "canContainOtherCorfuObjects",
        "concurrentAbortMultiViewThreaded",
        "abortedTransactionsCannotBeReadOnSingleObject"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 25
    },
    {
      "className": "org.corfudb.runtime.collections.SMRMultiLogunitTest",
      "failingMethods": [],
      "erroringMethods": [
        "manyWritesThenRead",
        "multiThreadedManyWritesThenRead",
        "transactionalManyWritesThenRead",
        "writeDualRead",
        "simpleWriteRead"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "org.corfudb.infrastructure.LayoutServerTest",
      "failingMethods": [],
      "erroringMethods": [
        "testReboot"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.corfudb.runtime.collections.SMRMapTest",
      "failingMethods": [],
      "erroringMethods": [
        "modificationDuringTransactionCausesAbort",
        "canUpdateSingleObjectTransacationally",
        "canWriteScanAndFilterToSingle",
        "unusedMutatorAccessor",
        "smrMapCanContainCustomObjects",
        "collectionsStreamInterface",
        "canGetID",
        "canReadWriteToSinglePrimitive",
        "objectViewCorrectlyReportsInsideTX",
        "smrMapCanContainCustomObjectsInsideTXes",
        "canReadWriteToSingle",
        "loadsFollowedByGetsConcurrent",
        "mutatorFollowedByATransaction",
        "canContainNullObjects",
        "bulkReads",
        "concurrentAbortMultiViewInterleaved",
        "multipleTXesAreAppliedWOAccessors",
        "loadsFollowedByGetsConcurrentMultiView",
        "canUpdateSingleObjectTransacationallyWhenCached",
        "readSetDiffFromWriteSet",
        "loadsFollowedByGets",
        "multipleTXesAreApplied",
        "canContainOtherCorfuObjects",
        "concurrentAbortMultiViewThreaded",
        "abortedTransactionsCannotBeReadOnSingleObject"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 25
    },
    {
      "className": "org.corfudb.runtime.view.LayoutSealTest",
      "failingMethods": [],
      "erroringMethods": [
        "successfulQuorumSeal",
        "failingQuorumSeal",
        "failingChainSeal",
        "successfulChainSeal"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "org.corfudb.infrastructure.ReconfigurationEventHandlerTest",
      "failingMethods": [],
      "erroringMethods": [
        "updateLayoutOnFailure"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.corfudb.runtime.clients.ManagementHandlerTest",
      "failingMethods": [],
      "erroringMethods": [
        "handleFailure"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.corfudb.runtime.view.StreamViewTest",
      "failingMethods": [],
      "erroringMethods": [
        "canDoPreviousOnStream",
        "canReadWriteFromStream"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.corfudb.infrastructure.DataStoreTest",
      "failingMethods": [],
      "erroringMethods": [
        "testDatastoreEviction"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.corfudb.runtime.collections.PutIfAbsentMapTest",
      "failingMethods": [],
      "erroringMethods": [
        "putIfAbsentTest",
        "putIfAbsentTestConcurrent"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.corfudb.runtime.CorfuRuntimeTest",
      "failingMethods": [],
      "erroringMethods": [
        "customNetworkExceptionHandler",
        "doesNotUpdateToLayoutWithSmallerEpoch",
        "checkValidLayout",
        "canInstantiateRuntimeWithoutTestRef",
        "doesNotAllowReadsAfterSealAndBeforeNewLayout"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "org.corfudb.infrastructure.FailureDetectorTest",
      "failingMethods": [],
      "erroringMethods": [
        "pollFailures",
        "pollNoFailures"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.corfudb.runtime.checkpoint.CheckpointTest",
      "failingMethods": [],
      "erroringMethods": [
        "undoCkpointTest",
        "prefixTrimTwiceAtSameAddress",
        "emptyCkpointTest",
        "periodicCkpointTest",
        "periodicCkpointTrimTest",
        "transactionalReadAfterCheckpoint",
        "periodicCkpointNoUpdatesTest",
        "delayedCkpointTest"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "org.corfudb.runtime.collections.SMRMapEntrySetTest",
      "failingMethods": [],
      "erroringMethods": [
        "manipulateSets",
        "manipulateSetsConcurrent"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.corfudb.runtime.checkpoint.CheckpointSmokeTest",
      "failingMethods": [],
      "erroringMethods": [
        "emptyCheckPoint",
        "smoke1Test",
        "smoke2Test",
        "checkpointWriterInterleavedTest",
        "testEmptyMapCP",
        "checkpointWriterTest",
        "MultiCheckpointWriter2Test"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 7
    },
    {
      "className": "org.corfudb.infrastructure.HealingDetectorTest",
      "failingMethods": [],
      "erroringMethods": [
        "pollHealedNodes"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.corfudb.runtime.view.ObjectsViewTest",
      "failingMethods": [],
      "erroringMethods": [
        "abortedTransactionDoesNotConflict"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    }
  ],
  "failingModule": "/root/workspace/CorfuDB/CorfuDB/415595919/test",
  "bugCommit": "https://github.com/CorfuDB/CorfuDB/compare/9138ee912dd6...15ca8f2c5551"
}