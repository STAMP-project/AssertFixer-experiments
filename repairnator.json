{
  "bugType": "only_fail",
  "hostname": "cyclone1",
  "repo": "apache/calcite",
  "metrics": {
    "FailureNames": [
      "java.lang.AssertionError",
      "java.lang.RuntimeException"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 3,
      "ComputeClasspath": 5,
      "ComputeTestDir": 0,
      "BuildProject": 139,
      "InitRepoToPush": 5,
      "ComputeSourceDir": 1,
      "ComputeModules": 0,
      "CloneRepository": 20,
      "CheckoutPatchedBuild": 0,
      "TestProject": 453,
      "AssertFixer": 39,
      "GatherTestInformation": 0,
      "CommitPatch": 4
    },
    "NbFailingTests": 2,
    "NbErroringTests": 4,
    "NbSkippingTests": 112,
    "NbRunningTests": 4682,
    "BugCommitUrl": "http://github.com/apache/calcite/commit/3e5b90a22659b1a0a55c9fff096bd10a8cef2998",
    "ReproductionDate": "Sep 5, 2018 12:26:55 AM",
    "BuggyBuildId": 424535393,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/apache/calcite/builds/424535393",
    "BuggyBuildDate": "Sep 5, 2018 12:26:35 AM",
    "BugCommit": "3e5b90a22659b1a0a55c9fff096bd10a8cef2998",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 48,
    "NbFileApp": 1511,
    "NbFileTests": 215,
    "NbCPU": 8,
    "FreeMemory": 982562152,
    "TotalMemory": 1924661248,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 231686864,
      "ComputeClasspath": 266640856,
      "ComputeTestDir": 234191112,
      "BuildProject": 215188240,
      "InitRepoToPush": 270685744,
      "ComputeSourceDir": 957590872,
      "ComputeModules": 933940072,
      "CloneRepository": 123944272,
      "CheckoutPatchedBuild": 982562152,
      "TestProject": 200422608,
      "AssertFixer": 1124703272,
      "GatherTestInformation": 173559888,
      "CommitPatch": 982562152
    },
    "NbSucceedingTests": 4676
  },
  "failing-test-cases": [
    {
      "className": "org.apache.calcite.test.CalciteSqlOperatorTest",
      "failingMethods": [],
      "erroringMethods": [
        "testStddevFunc",
        "testStddevPopFunc",
        "testDecodeFunc",
        "testStddevSampFunc"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "java.sql.SQLException: Error while executing SQL \"select decode(p6, p5, p4, 1, p3, 1, p2, p1, p0) from (values (\u0027c\u0027, 2, \u0027z\u0027, \u0027b\u0027, \u0027a\u0027, 0, 1)) as t(p0, p1, p2, p3, p4, p5, p6)\": Error while compiling generated Java code:\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Object[] {\n    new Object[] {\n      \"c\",\n      2,\n      \"z\",\n      \"b\",\n      \"a\",\n      0,\n      1}});\n  return new org.apache.calcite.linq4j.AbstractEnumerable(){\n      public org.apache.calcite.linq4j.Enumerator enumerator() {\n        return new org.apache.calcite.linq4j.Enumerator(){\n            public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n            public void reset() {\n              inputEnumerator.reset();\n            }\n\n            public boolean moveNext() {\n              return inputEnumerator.moveNext();\n            }\n\n            public void close() {\n              inputEnumerator.close();\n            }\n\n            public Object current() {\n              final Object[] current \u003d (Object[]) inputEnumerator.current();\n              final int inp6_ \u003d org.apache.calcite.runtime.SqlFunctions.toInt(current[6]);\n              final Object v2 \u003d inp6_ \u003d\u003d 1;\n              return inp6_ \u003d\u003d org.apache.calcite.runtime.SqlFunctions.toInt(current[5]) ? (current[4] \u003d\u003d null ? (String) null : current[4].toString()) : v2 ? (current[3] \u003d\u003d null ? (String) null : current[3].toString()) : v2 ? (current[2] \u003d\u003d null ? (String) null : current[2].toString()) : inp6_ \u003d\u003d org.apache.calcite.runtime.SqlFunctions.toInt(current[1]) ? (current[0] \u003d\u003d null ? (String) null : current[0].toString()) : (String) null;\n            }\n\n          };\n      }\n\n    };\n}\n\n\npublic Class getElementType() {\n  return java.lang.String.class;\n}\n\n\n",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "java.sql.SQLException: Error while executing SQL \"SELECT stddev_samp(x) FROM (SELECT 5 AS x FROM (VALUES (1)))\": Error while compiling generated Java code:\npublic static class Record3_0 implements java.io.Serializable {\n  public int f0;\n  public long f1;\n  public int f2;\n  public Record3_0() {}\n  public boolean equals(Object o) {\n    if (this \u003d\u003d o) {\n      return true;\n    }\n    if (!(o instanceof Record3_0)) {\n      return false;\n    }\n    return this.f0 \u003d\u003d ((Record3_0) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record3_0) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record3_0) o).f2;\n  }\n\n  public int hashCode() {\n    int h \u003d 0;\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n    return h;\n  }\n\n  public int compareTo(Record3_0 that) {\n    int c;\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n    if (c !\u003d 0) {\n      return c;\n    }\n    return 0;\n  }\n\n  public String toString() {\n    return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n  }\n\n}\n\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n    1});\n  final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n    public org.apache.calcite.linq4j.Enumerator enumerator() {\n      return new org.apache.calcite.linq4j.Enumerator(){\n          public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n          public void reset() {\n            inputEnumerator.reset();\n          }\n\n          public boolean moveNext() {\n            return inputEnumerator.moveNext();\n          }\n\n          public void close() {\n            inputEnumerator.close();\n          }\n\n          public Object current() {\n            return new Object[] {\n                5,\n                $L4J$C$5_5};\n          }\n\n          static final int $L4J$C$5_5 \u003d 5 * 5;\n        };\n    }\n\n  };\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n    public Object apply() {\n      int a0s0;\n      a0s0 \u003d 0;\n      long a1s0;\n      a1s0 \u003d 0L;\n      int a2s0;\n      a2s0 \u003d 0;\n      Record3_0 record0;\n      record0 \u003d new Record3_0();\n      record0.f0 \u003d a0s0;\n      record0.f1 \u003d a1s0;\n      record0.f2 \u003d a2s0;\n      return record0;\n    }\n  }\n  .apply(), new org.apache.calcite.linq4j.function.Function2() {\n    public Record3_0 apply(Record3_0 acc, Object[] in) {\n      acc.f0 \u003d acc.f0 + org.apache.calcite.runtime.SqlFunctions.toInt(in[1]);\n      acc.f1++;\n      acc.f2 \u003d acc.f2 + org.apache.calcite.runtime.SqlFunctions.toInt(in[0]);\n      return acc;\n    }\n    public Record3_0 apply(Object acc, Object in) {\n      return apply(\n        (Record3_0) acc,\n        (Object[]) in);\n    }\n  }\n  , new org.apache.calcite.linq4j.function.Function1() {\n    public Object[] apply(Record3_0 acc) {\n      return new Object[] {\n          acc.f0,\n          acc.f1,\n          acc.f2};\n    }\n    public Object apply(Object acc) {\n      return apply(\n        (Record3_0) acc);\n    }\n  }\n  ));\n  return new org.apache.calcite.linq4j.AbstractEnumerable(){\n      public org.apache.calcite.linq4j.Enumerator enumerator() {\n        return new org.apache.calcite.linq4j.Enumerator(){\n            public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n            public void reset() {\n              inputEnumerator.reset();\n            }\n\n            public boolean moveNext() {\n              return inputEnumerator.moveNext();\n            }\n\n            public void close() {\n              inputEnumerator.close();\n            }\n\n            public Object current() {\n              final Object[] current \u003d (Object[]) inputEnumerator.current();\n              final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n              final int inp2_ \u003d org.apache.calcite.runtime.SqlFunctions.toInt(current[2]);\n              final java.math.BigDecimal v11 \u003d $L4J$C$new_java_math_BigDecimal_0_5_;\n              return (Object) (inp1_ \u003d\u003d 0L) || inp1_ \u003d\u003d 1L ? (Integer) null : Integer.valueOf((int) org.apache.calcite.runtime.SqlFunctions.power(((long) org.apache.calcite.runtime.SqlFunctions.toInt(current[0]) - (long) (inp2_ * inp2_) / inp1_) / (inp1_ - 1L), v11));\n            }\n\n            static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_0_5_ \u003d new java.math.BigDecimal(\n              \"0.5\");\n          };\n      }\n\n    };\n}\n\n\npublic Class getElementType() {\n  return java.lang.Integer.class;\n}\n\n\n",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "java.sql.SQLException: Error while executing SQL \"SELECT stddev(x) FROM (SELECT 5 AS x FROM (VALUES (1)))\": Error while compiling generated Java code:\npublic static class Record3_0 implements java.io.Serializable {\n  public int f0;\n  public long f1;\n  public int f2;\n  public Record3_0() {}\n  public boolean equals(Object o) {\n    if (this \u003d\u003d o) {\n      return true;\n    }\n    if (!(o instanceof Record3_0)) {\n      return false;\n    }\n    return this.f0 \u003d\u003d ((Record3_0) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record3_0) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record3_0) o).f2;\n  }\n\n  public int hashCode() {\n    int h \u003d 0;\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n    return h;\n  }\n\n  public int compareTo(Record3_0 that) {\n    int c;\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n    if (c !\u003d 0) {\n      return c;\n    }\n    return 0;\n  }\n\n  public String toString() {\n    return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n  }\n\n}\n\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n    1});\n  final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n    public org.apache.calcite.linq4j.Enumerator enumerator() {\n      return new org.apache.calcite.linq4j.Enumerator(){\n          public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n          public void reset() {\n            inputEnumerator.reset();\n          }\n\n          public boolean moveNext() {\n            return inputEnumerator.moveNext();\n          }\n\n          public void close() {\n            inputEnumerator.close();\n          }\n\n          public Object current() {\n            return new Object[] {\n                5,\n                $L4J$C$5_5};\n          }\n\n          static final int $L4J$C$5_5 \u003d 5 * 5;\n        };\n    }\n\n  };\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n    public Object apply() {\n      int a0s0;\n      a0s0 \u003d 0;\n      long a1s0;\n      a1s0 \u003d 0L;\n      int a2s0;\n      a2s0 \u003d 0;\n      Record3_0 record0;\n      record0 \u003d new Record3_0();\n      record0.f0 \u003d a0s0;\n      record0.f1 \u003d a1s0;\n      record0.f2 \u003d a2s0;\n      return record0;\n    }\n  }\n  .apply(), new org.apache.calcite.linq4j.function.Function2() {\n    public Record3_0 apply(Record3_0 acc, Object[] in) {\n      acc.f0 \u003d acc.f0 + org.apache.calcite.runtime.SqlFunctions.toInt(in[1]);\n      acc.f1++;\n      acc.f2 \u003d acc.f2 + org.apache.calcite.runtime.SqlFunctions.toInt(in[0]);\n      return acc;\n    }\n    public Record3_0 apply(Object acc, Object in) {\n      return apply(\n        (Record3_0) acc,\n        (Object[]) in);\n    }\n  }\n  , new org.apache.calcite.linq4j.function.Function1() {\n    public Object[] apply(Record3_0 acc) {\n      return new Object[] {\n          acc.f0,\n          acc.f1,\n          acc.f2};\n    }\n    public Object apply(Object acc) {\n      return apply(\n        (Record3_0) acc);\n    }\n  }\n  ));\n  return new org.apache.calcite.linq4j.AbstractEnumerable(){\n      public org.apache.calcite.linq4j.Enumerator enumerator() {\n        return new org.apache.calcite.linq4j.Enumerator(){\n            public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n            public void reset() {\n              inputEnumerator.reset();\n            }\n\n            public boolean moveNext() {\n              return inputEnumerator.moveNext();\n            }\n\n            public void close() {\n              inputEnumerator.close();\n            }\n\n            public Object current() {\n              final Object[] current \u003d (Object[]) inputEnumerator.current();\n              final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n              final int inp2_ \u003d org.apache.calcite.runtime.SqlFunctions.toInt(current[2]);\n              final java.math.BigDecimal v11 \u003d $L4J$C$new_java_math_BigDecimal_0_5_;\n              return (Object) (inp1_ \u003d\u003d 0L) || inp1_ \u003d\u003d 1L ? (Integer) null : Integer.valueOf((int) org.apache.calcite.runtime.SqlFunctions.power(((long) org.apache.calcite.runtime.SqlFunctions.toInt(current[0]) - (long) (inp2_ * inp2_) / inp1_) / (inp1_ - 1L), v11));\n            }\n\n            static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_0_5_ \u003d new java.math.BigDecimal(\n              \"0.5\");\n          };\n      }\n\n    };\n}\n\n\npublic Class getElementType() {\n  return java.lang.Integer.class;\n}\n\n\n",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "java.sql.SQLException: Error while executing SQL \"SELECT stddev_pop(x) FROM (SELECT 5 AS x FROM (VALUES (1)))\": Error while compiling generated Java code:\npublic static class Record3_0 implements java.io.Serializable {\n  public int f0;\n  public long f1;\n  public int f2;\n  public Record3_0() {}\n  public boolean equals(Object o) {\n    if (this \u003d\u003d o) {\n      return true;\n    }\n    if (!(o instanceof Record3_0)) {\n      return false;\n    }\n    return this.f0 \u003d\u003d ((Record3_0) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record3_0) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record3_0) o).f2;\n  }\n\n  public int hashCode() {\n    int h \u003d 0;\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n    h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n    return h;\n  }\n\n  public int compareTo(Record3_0 that) {\n    int c;\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n    if (c !\u003d 0) {\n      return c;\n    }\n    c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n    if (c !\u003d 0) {\n      return c;\n    }\n    return 0;\n  }\n\n  public String toString() {\n    return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \"}\";\n  }\n\n}\n\norg.apache.calcite.DataContext root;\n\npublic org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n  root \u003d root0;\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n    1});\n  final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n    public org.apache.calcite.linq4j.Enumerator enumerator() {\n      return new org.apache.calcite.linq4j.Enumerator(){\n          public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n          public void reset() {\n            inputEnumerator.reset();\n          }\n\n          public boolean moveNext() {\n            return inputEnumerator.moveNext();\n          }\n\n          public void close() {\n            inputEnumerator.close();\n          }\n\n          public Object current() {\n            return new Object[] {\n                5,\n                $L4J$C$5_5};\n          }\n\n          static final int $L4J$C$5_5 \u003d 5 * 5;\n        };\n    }\n\n  };\n  final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.singletonEnumerable(child.aggregate(new org.apache.calcite.linq4j.function.Function0() {\n    public Object apply() {\n      int a0s0;\n      a0s0 \u003d 0;\n      long a1s0;\n      a1s0 \u003d 0L;\n      int a2s0;\n      a2s0 \u003d 0;\n      Record3_0 record0;\n      record0 \u003d new Record3_0();\n      record0.f0 \u003d a0s0;\n      record0.f1 \u003d a1s0;\n      record0.f2 \u003d a2s0;\n      return record0;\n    }\n  }\n  .apply(), new org.apache.calcite.linq4j.function.Function2() {\n    public Record3_0 apply(Record3_0 acc, Object[] in) {\n      acc.f0 \u003d acc.f0 + org.apache.calcite.runtime.SqlFunctions.toInt(in[1]);\n      acc.f1++;\n      acc.f2 \u003d acc.f2 + org.apache.calcite.runtime.SqlFunctions.toInt(in[0]);\n      return acc;\n    }\n    public Record3_0 apply(Object acc, Object in) {\n      return apply(\n        (Record3_0) acc,\n        (Object[]) in);\n    }\n  }\n  , new org.apache.calcite.linq4j.function.Function1() {\n    public Object[] apply(Record3_0 acc) {\n      return new Object[] {\n          acc.f0,\n          acc.f1,\n          acc.f2};\n    }\n    public Object apply(Object acc) {\n      return apply(\n        (Record3_0) acc);\n    }\n  }\n  ));\n  return new org.apache.calcite.linq4j.AbstractEnumerable(){\n      public org.apache.calcite.linq4j.Enumerator enumerator() {\n        return new org.apache.calcite.linq4j.Enumerator(){\n            public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n            public void reset() {\n              inputEnumerator.reset();\n            }\n\n            public boolean moveNext() {\n              return inputEnumerator.moveNext();\n            }\n\n            public void close() {\n              inputEnumerator.close();\n            }\n\n            public Object current() {\n              final Object[] current \u003d (Object[]) inputEnumerator.current();\n              final long inp1_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[1]);\n              final int inp2_ \u003d org.apache.calcite.runtime.SqlFunctions.toInt(current[2]);\n              final java.math.BigDecimal v7 \u003d $L4J$C$new_java_math_BigDecimal_0_5_;\n              return (Object) (inp1_ \u003d\u003d 0L) ? (Integer) null : Integer.valueOf((int) org.apache.calcite.runtime.SqlFunctions.power(((long) org.apache.calcite.runtime.SqlFunctions.toInt(current[0]) - (long) (inp2_ * inp2_) / inp1_) / inp1_, v7));\n            }\n\n            static final java.math.BigDecimal $L4J$C$new_java_math_BigDecimal_0_5_ \u003d new java.math.BigDecimal(\n              \"0.5\");\n          };\n      }\n\n    };\n}\n\n\npublic Class getElementType() {\n  return java.lang.Integer.class;\n}\n\n\n",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "org.apache.calcite.test.CoreQuidemTest",
      "failingMethods": [
        "test[7: quidem(sql/winagg.iq)]",
        "test[3: quidem(sql/agg.iq)]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Files differ: /root/workspace/apache/calcite/424535393/core/target/test-classes/sql/surefire/sql/agg.iq /root/workspace/apache/calcite/424535393/core/target/test-classes/sql/agg.iq\n192,198c192,218\n\u003c +--------+----+----+----+---+\n\u003c | GENDER | P  | S  | SS | C |\n\u003c +--------+----+----+----+---+\n\u003c | F      | 17 | 19 | 19 | 5 |\n\u003c | M      | 17 | 20 | 20 | 3 |\n\u003c +--------+----+----+----+---+\n\u003c (2 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select gender,\n\u003e   stddev_pop(deptno) as p,\n\u003e   stddev_samp(deptno) as s,\n\u003e   stddev(deptno) as ss,\n\u003e   count(deptno) as c\n\u003e from emp\n\u003e group by gender\": Error while compiling generated Java code:\n\u003e public static class Record9_2 implements java.io.Serializable {\n\u003e   public int f0;\n\u003e   public boolean f1;\n\u003e   public int f2;\n\u003e   public boolean f3;\n\u003e   public long f4;\n\u003e   public int f5;\n\u003e   public boolean f6;\n\u003e   public int f7;\n\u003e   public boolean f8;\n\u003e   public Record9_2() {}\n\u003e   public boolean equals(Object o) {\n\u003e     if (this \u003d\u003d o) {\n\u003e       return true;\n\u003e     }\n\u003e     if (!(o instanceof Record9_2)) {\n\u003e       return false;\n\u003e     }\n\u003e     return this.f0 \u003d\u003d ((Record9_2) o).f0 \u0026\u0026 this.f1 \u003d\u003d ((Record9_2) o).f1 \u0026\u0026 this.f2 \u003d\u003d ((Record9_2) o).f2 \u0026\u0026 this.f3 \u003d\u003d ((Record9_2) o).f3 \u0026\u0026 this.f4 \u003d\u003d ((Record9_2) o).f4 \u0026\u0026 this.f5 \u003d\u003d ((Record9_2) o).f5 \u0026\u0026 this.f6 \u003d\u003d ((Record9_2) o).f6 \u0026\u0026 this.f7 \u003d\u003d ((Record9_2) o).f7 \u0026\u0026 this.f8 \u003d\u003d ((Record9_2) o).f8;\n\u003e   }\n199a220,690\n\u003e   public int hashCode() {\n\u003e     int h \u003d 0;\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f0);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f1);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f2);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f3);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f4);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f5);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f6);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f7);\n\u003e     h \u003d org.apache.calcite.runtime.Utilities.hash(h, this.f8);\n\u003e     return h;\n\u003e   }\n\u003e \n\u003e   public int compareTo(Record9_2 that) {\n\u003e     int c;\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f0, that.f0);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f1, that.f1);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f2, that.f2);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f3, that.f3);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f4, that.f4);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f5, that.f5);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f6, that.f6);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f7, that.f7);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     c \u003d org.apache.calcite.runtime.Utilities.compare(this.f8, that.f8);\n\u003e     if (c !\u003d 0) {\n\u003e       return c;\n\u003e     }\n\u003e     return 0;\n\u003e   }\n\u003e \n\u003e   public String toString() {\n\u003e     return \"{f0\u003d\" + this.f0 + \", f1\u003d\" + this.f1 + \", f2\u003d\" + this.f2 + \", f3\u003d\" + this.f3 + \", f4\u003d\" + this.f4 + \", f5\u003d\" + this.f5 + \", f6\u003d\" + this.f6 + \", f7\u003d\" + this.f7 + \", f8\u003d\" + this.f8 + \"}\";\n\u003e   }\n\u003e \n\u003e }\n\u003e \n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 10,\n\u003e                 \"F\"};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child1 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 10,\n\u003e                 \"M\"};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child2 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 20,\n\u003e                 \"M\"};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable2 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child3 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable2.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 30,\n\u003e                 \"F\"};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable3 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child4 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable3.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 30,\n\u003e                 \"F\"};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable4 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child5 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable4.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 50,\n\u003e                 \"M\"};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable5 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child6 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable5.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 50,\n\u003e                 \"F\"};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable6 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child7 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable6.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 60,\n\u003e                 \"F\"};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable7 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child8 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable7.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 null,\n\u003e                 \"F\"};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable8 \u003d child0.concat(child1).concat(child2).concat(child3).concat(child4).concat(child5).concat(child6).concat(child7).concat(child8);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable8.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final Integer inp0_0 \u003d (Integer) current[0];\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 inp0_0 \u003d\u003d null ? (Integer) null : Integer.valueOf(inp0_0.intValue() * inp0_0.intValue()),\n\u003e                 inp0_0 \u003d\u003d null ? (Integer) null : Integer.valueOf(inp0_0.intValue() * inp0_0.intValue()),\n\u003e                 inp0_0 \u003d\u003d null ? (Integer) null : Integer.valueOf(inp0_0.intValue() * inp0_0.intValue())};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable9 \u003d child.groupBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] a0) {\n\u003e       return a0[1] \u003d\u003d null ? (String) null : a0[1].toString();\n\u003e     }\n\u003e     public Object apply(Object a0) {\n\u003e       return apply(\n\u003e         (Object[]) a0);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function0() {\n\u003e     public Object apply() {\n\u003e       int a0s0;\n\u003e       boolean a0s1;\n\u003e       a0s1 \u003d false;\n\u003e       a0s0 \u003d 0;\n\u003e       int a1s0;\n\u003e       boolean a1s1;\n\u003e       a1s1 \u003d false;\n\u003e       a1s0 \u003d 0;\n\u003e       long a2s0;\n\u003e       a2s0 \u003d 0L;\n\u003e       int a3s0;\n\u003e       boolean a3s1;\n\u003e       a3s1 \u003d false;\n\u003e       a3s0 \u003d 0;\n\u003e       int a4s0;\n\u003e       boolean a4s1;\n\u003e       a4s1 \u003d false;\n\u003e       a4s0 \u003d 0;\n\u003e       Record9_2 record0;\n\u003e       record0 \u003d new Record9_2();\n\u003e       record0.f0 \u003d a0s0;\n\u003e       record0.f1 \u003d a0s1;\n\u003e       record0.f2 \u003d a1s0;\n\u003e       record0.f3 \u003d a1s1;\n\u003e       record0.f4 \u003d a2s0;\n\u003e       record0.f5 \u003d a3s0;\n\u003e       record0.f6 \u003d a3s1;\n\u003e       record0.f7 \u003d a4s0;\n\u003e       record0.f8 \u003d a4s1;\n\u003e       return record0;\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Record9_2 apply(Record9_2 acc, Object[] in) {\n\u003e       final Integer inp2_ \u003d (Integer) in[2];\n\u003e       if (inp2_ !\u003d null) {\n\u003e         acc.f1 \u003d true;\n\u003e         acc.f0 \u003d acc.f0 + inp2_.intValue();\n\u003e       }\n\u003e       final Integer inp0_ \u003d (Integer) in[0];\n\u003e       if (inp0_ !\u003d null) {\n\u003e         acc.f3 \u003d true;\n\u003e         acc.f2 \u003d acc.f2 + inp0_.intValue();\n\u003e       }\n\u003e       if (inp0_ !\u003d null) {\n\u003e         acc.f4++;\n\u003e       }\n\u003e       final Integer inp3_ \u003d (Integer) in[3];\n\u003e       if (inp3_ !\u003d null) {\n\u003e         acc.f6 \u003d true;\n\u003e         acc.f5 \u003d acc.f5 + inp3_.intValue();\n\u003e       }\n\u003e       final Integer inp4_ \u003d (Integer) in[4];\n\u003e       if (inp4_ !\u003d null) {\n\u003e         acc.f8 \u003d true;\n\u003e         acc.f7 \u003d acc.f7 + inp4_.intValue();\n\u003e       }\n\u003e       return acc;\n\u003e     }\n\u003e     public Record9_2 apply(Object acc, Object in) {\n\u003e       return apply(\n\u003e         (Record9_2) acc,\n\u003e         (Object[]) in);\n\u003e     }\n\u003e   }\n\u003e   , new org.apache.calcite.linq4j.function.Function2() {\n\u003e     public Object[] apply(String key, Record9_2 acc) {\n\u003e       return new Object[] {\n\u003e           key,\n\u003e           acc.f1 ? Integer.valueOf(acc.f0) : (Integer) null,\n\u003e           acc.f3 ? Integer.valueOf(acc.f2) : (Integer) null,\n\u003e           acc.f4,\n\u003e           acc.f6 ? Integer.valueOf(acc.f5) : (Integer) null,\n\u003e           acc.f8 ? Integer.valueOf(acc.f7) : (Integer) null};\n\u003e     }\n\u003e     public Object[] apply(Object key, Object acc) {\n\u003e       return apply(\n\u003e         (String) key,\n\u003e         (Record9_2) acc);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable9.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final Integer inp1_ \u003d (Integer) current[1];\n\u003e               final Integer inp2_ \u003d (Integer) current[2];\n\u003e               final long inp3_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[3]);\n\u003e               final java.math.BigDecimal v5 \u003d $L4J$C$new_java_math_BigDecimal_0_5_;\n\u003e               final Integer inp4_ \u003d (Integer) current[4];\n\u003e               final Object v11 \u003d inp3_ \u003d\u003d 1L;\n\u003e               final long v16 \u003d inp3_ - 1L;\n\u003e               final Integer inp5_ \u003d (Integer) current[5];\n\u003e               return new Object[] {\n\u003e                   current[0],\n\u003e                   inp1_ \u003d\u003d null || inp2_ \u003d\u003d null ? (Integer) null : Integer.valueOf((int) org.apache.calcite.runtime.SqlFunctions.power(((long) inp1_ (stack truncated)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Files differ: /root/workspace/apache/calcite/424535393/core/target/test-classes/sql/surefire/sql/winagg.iq /root/workspace/apache/calcite/424535393/core/target/test-classes/sql/winagg.iq\n577,586c577,582\n\u003c +-----+--------+--------+----------+------------+------------------------+\n\u003c | AGE | DEPTNO | GENDER | var_samp | covar_samp | covar_samp partitioned |\n\u003c +-----+--------+--------+----------+------------+------------------------+\n\u003c |   5 |     20 | F      |     1508 |         58 |                      0 |\n\u003c |  25 |     10 |        |     1508 |         58 |                     50 |\n\u003c |  80 |     20 | M      |     1508 |         58 |                     50 |\n\u003c |     |     40 | M      |     1508 |         58 |                      0 |\n\u003c |     |     40 | F      |     1508 |         58 |                      0 |\n\u003c +-----+--------+--------+----------+------------+------------------------+\n\u003c (5 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select emps.\"AGE\", emps.\"DEPTNO\", emps.\"GENDER\",\n\u003e  covar_samp(emps.\"AGE\", emps.\"AGE\") over() as \"var_samp\",\n\u003e  covar_samp(emps.\"DEPTNO\", emps.\"AGE\") over() as \"covar_samp\",\n\u003e  covar_samp(emps.\"EMPNO\", emps.\"DEPTNO\") over(partition by emps.\"MANAGER\") as \"covar_samp partitioned\"\n\u003e from emps order by emps.\"AGE\"\": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n587a584,1083\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 100,\n\u003e                 10,\n\u003e                 null,\n\u003e                 25,\n\u003e                 false};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child1 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 110,\n\u003e                 20,\n\u003e                 \"M\",\n\u003e                 80,\n\u003e                 false};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child2 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 110,\n\u003e                 40,\n\u003e                 \"M\",\n\u003e                 null,\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable2 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child3 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable2.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 120,\n\u003e                 20,\n\u003e                 \"F\",\n\u003e                 5,\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable3 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child4 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable3.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 130,\n\u003e                 40,\n\u003e                 \"F\",\n\u003e                 null,\n\u003e                 true};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable4 \u003d child0.concat(child1).concat(child2).concat(child3).concat(child4);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable source \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable4.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final Integer inp3_0 \u003d (Integer) current[3];\n\u003e             final int inp1_0 \u003d org.apache.calcite.runtime.SqlFunctions.toInt(current[1]);\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 current[3],\n\u003e                 current[4],\n\u003e                 inp3_0 \u003d\u003d null ? (Integer) null : Integer.valueOf(inp3_0.intValue() * inp3_0.intValue()),\n\u003e                 inp3_0,\n\u003e                 inp3_0 \u003d\u003d null ? (Integer) null : Integer.valueOf(inp1_0 * inp3_0.intValue()),\n\u003e                 org.apache.calcite.runtime.SqlFunctions.toInt(current[0]) * inp1_0};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   int prevStart;\n\u003e   int prevEnd;\n\u003e   final java.util.Comparator comparator \u003d new java.util.Comparator(){\n\u003e     public int compare(Object[] v0, Object[] v1) {\n\u003e       int c;\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((Object[]) o0, (Object[]) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final java.util.List tempList \u003d (java.util.List) source.into(new java.util.ArrayList());\n\u003e   final java.util.Iterator iterator \u003d org.apache.calcite.runtime.SortedMultiMap.singletonArrayIterator(comparator, tempList);\n\u003e   final java.util.ArrayList _list \u003d new java.util.ArrayList(\n\u003e     tempList.size());\n\u003e   long a0s0w0;\n\u003e   Long a0w0 \u003d (Long) null;\n\u003e   a0s0w0 \u003d 0L;\n\u003e   int a1s0w0;\n\u003e   Integer a1w0 \u003d (Integer) null;\n\u003e   a1s0w0 \u003d 0;\n\u003e   long a2s0w0;\n\u003e   Long a2w0 \u003d (Long) null;\n\u003e   a2s0w0 \u003d 0L;\n\u003e   int a3s0w0;\n\u003e   Integer a3w0 \u003d (Integer) null;\n\u003e   a3s0w0 \u003d 0;\n\u003e   long a4s0w0;\n\u003e   Long a4w0 \u003d (Long) null;\n\u003e   a4s0w0 \u003d 0L;\n\u003e   long a5s0w0;\n\u003e   Long a5w0 \u003d (Long) null;\n\u003e   a5s0w0 \u003d 0L;\n\u003e   int a6s0w0;\n\u003e   Integer a6w0 \u003d (Integer) null;\n\u003e   a6s0w0 \u003d 0;\n\u003e   int a7s0w0;\n\u003e   Integer a7w0 \u003d (Integer) null;\n\u003e   a7s0w0 \u003d 0;\n\u003e   long a8s0w0;\n\u003e   Long a8w0 \u003d (Long) null;\n\u003e   a8s0w0 \u003d 0L;\n\u003e   int a9s0w0;\n\u003e   Integer a9w0 \u003d (Integer) null;\n\u003e   a9s0w0 \u003d 0;\n\u003e   long a10s0w0;\n\u003e   Long a10w0 \u003d (Long) null;\n\u003e   a10s0w0 \u003d 0L;\n\u003e   while (iterator.hasNext()) {\n\u003e     final Object[] _rows \u003d (Object[]) iterator.next();\n\u003e     prevStart \u003d -1;\n\u003e     prevEnd \u003d 2147483647;\n\u003e     final int maxX \u003d _rows.length - 1;\n\u003e     for (int i \u003d 0; i \u003c _rows.length; ++i) {\n\u003e       final Object[] row \u003d (Object[]) _rows[i];\n\u003e       if (maxX !\u003d prevEnd) {\n\u003e         int actualStart;\n\u003e         if (maxX \u003c prevEnd) {\n\u003e           actualStart \u003d 0;\n\u003e           a0s0w0 \u003d 0L;\n\u003e           a1s0w0 \u003d 0;\n\u003e           a2s0w0 \u003d 0L;\n\u003e           a3s0w0 \u003d 0;\n\u003e           a4s0w0 \u003d 0L;\n\u003e           a5s0w0 \u003d 0L;\n\u003e           a6s0w0 \u003d 0;\n\u003e           a7s0w0 \u003d 0;\n\u003e           a8s0w0 \u003d 0L;\n\u003e           a9s0w0 \u003d 0;\n\u003e           a10s0w0 \u003d 0L;\n\u003e         } else {\n\u003e           actualStart \u003d prevEnd + 1;\n\u003e         }\n\u003e         prevEnd \u003d maxX;\n\u003e         for (int j \u003d actualStart; j \u003c\u003d maxX; ++j) {\n\u003e           final Object[] jRow \u003d (Object[]) _rows[j];\n\u003e           final Integer inp5_ \u003d (Integer) jRow[5];\n\u003e           if (inp5_ !\u003d null) {\n\u003e             a0s0w0++;\n\u003e           }\n\u003e           if (inp5_ !\u003d null) {\n\u003e             a1s0w0 \u003d a1s0w0 + inp5_.intValue();\n\u003e           }\n\u003e           final Integer inp3_ \u003d (Integer) jRow[3];\n\u003e           if (inp3_ !\u003d null) {\n\u003e             a2s0w0++;\n\u003e           }\n\u003e           if (inp3_ !\u003d null) {\n\u003e             a3s0w0 \u003d a3s0w0 + inp3_.intValue();\n\u003e           }\n\u003e           if (inp3_ !\u003d null) {\n\u003e             a4s0w0++;\n\u003e           }\n\u003e           final Integer inp7_ \u003d (Integer) jRow[7];\n\u003e           if (inp7_ !\u003d null) {\n\u003e             a5s0w0++;\n\u003e           }\n\u003e           if (inp7_ !\u003d null) {\n\u003e             a6s0w0 \u003d a6s0w0 + inp7_.intValue();\n\u003e           }\n\u003e           final Integer inp6_ \u003d (Integer) jRow[6];\n\u003e           if (inp6_ !\u003d null) {\n\u003e             a7s0w0 \u003d a7s0w0 + org.apache.calcite.runtime.SqlFunctions.toInt(jRow[1]);\n\u003e           }\n\u003e           if (inp6_ !\u003d null) {\n\u003e             a8s0w0++;\n\u003e           }\n\u003e           if (inp6_ !\u003d null) {\n\u003e             a9s0w0 \u003d a9s0w0 + inp6_.intValue();\n\u003e           }\n\u003e           if (inp6_ !\u003d null) {\n\u003e             a10s0w0++;\n\u003e           }\n\u003e         }\n\u003e         a0w0 \u003d Long.valueOf(a0s0w0);\n\u003e         a1w0 \u003d Integer.valueOf(a1s0w0);\n\u003e         a2w0 \u003d Long.valueOf(a2s0w0);\n\u003e         a3w0 \u003d Integer.valueOf(a3s0w0);\n\u003e         a4w0 \u003d Long.valueOf(a4s0w0);\n\u003e         a5w0 \u003d Long.valueOf(a5s0w0);\n\u003e         a6w0 \u003d Integer.valueOf(a6s0w0);\n\u003e         a7w0 \u003d Integer.valueOf(a7s0w0);\n\u003e         a8w0 \u003d Long.valueOf(a8s0w0);\n\u003e         a9w0 \u003d Integer.valueOf(a9s0w0);\n\u003e         a10w0 \u003d Long.valueOf(a10s0w0);\n\u003e       }\n\u003e       _list.add(new Object[] {\n\u003e         row[0],\n\u003e         row[1],\n\u003e         row[2],\n\u003e         row[3],\n\u003e         row[4],\n\u003e         row[5],\n\u003e         row[6],\n\u003e         row[7],\n\u003e         row[8],\n\u003e         a0w0,\n\u003e         a1w0,\n\u003e         a2w0,\n\u003e         a3w0,\n\u003e         a4w0,\n\u003e         a5w0,\n\u003e         a6w0,\n\u003e         a7w0,\n\u003e         a8w0,\n\u003e         a9w0,\n\u003e         a10w0});\n\u003e     }\n\u003e   }\n\u003e   tempList.clear();\n\u003e   final java.util.Comparator comparator0 \u003d new java.util.Comparator(){\n\u003e     public int compare(Object[] v0, Object[] v1) {\n\u003e       int c;\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((Object[]) o0, (Object[]) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.runtime.SortedMultiMap multiMap \u003d new org.apache.calcite.runtime.SortedMultiMap();\n\u003e   org.apache.calcite.linq4j.Linq4j.asEnumerable(_list).foreach(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object apply(Object[] v) {\n\u003e       boolean key \u003d org.apache.calcite.runtime.SqlFunctions.toBoolean(v[4]);\n\u003e       multiMap.putMulti(key, v);\n\u003e       return null;\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   final java.util.Iterator iterator0 \u003d multiMap.arrays(comparator0);\n\u003e   final java.util.ArrayList _list0 \u003d new java.util.ArrayList(\n\u003e     multiMap.size());\n\u003e   int a0s0w1;\n\u003e   Integer a0w1 \u003d (Integer) null;\n\u003e   a0s0w1 \u003d 0;\n\u003e   int a1s0w1;\n\u003e   Integer a1w1 \u003d (Integer) null;\n\u003e   a1s0w1 \u003d 0;\n\u003e   int a2s0w1;\n\u003e   Integer a2w1 \u003d (Integer) null;\n\u003e   a2s0w1 \u003d 0;\n\u003e   Long a3w1 \u003d (Long) null;\n\u003e   while (iterator0.hasNext()) {\n\u003e     final Object[] _rows \u003d (Object[]) iterator0.next();\n\u003e     prevStart \u003d -1;\n\u003e     prevEnd \u003d 2147483647;\n\u003e     final int maxX \u003d _rows.length - 1;\n\u003e     for (int i \u003d 0; i \u003c _rows.length; ++i) {\n\u003e       final Object[] row \u003d (Object[]) _rows[i];\n\u003e       if (maxX !\u003d prevEnd) {\n\u003e         int actualStart;\n\u003e         if (maxX \u003c prevEnd) {\n\u003e           actualStart \u003d 0;\n\u003e           a0s0w1 \u003d 0;\n\u003e           a1s0w1 \u003d 0;\n\u003e           a2s0w1 \u003d 0;\n\u003e         } else {\n\u003e           actualStart \u003d prevEnd + 1;\n\u003e         }\n\u003e         prevEnd \u003d maxX;\n\u003e         for (int j \u003d actualStart; j \u003c\u003d maxX; ++j) {\n\u003e           final Object[] jRow \u003d (Object[]) _rows[j];\n\u003e           a0s0w1 \u003d a0s0w1 + org.apache.calcite.runtime.SqlFunctions.toInt(jRow[8]);\n\u003e           a1s0w1 \u003d a1s0w1 + org.apache.calcite.runtime.SqlFunctions.toInt(jRow[0]);\n\u003e           a2s0w1 \u003d a2s0w1 + org.apache.calcite.runtime.SqlFunctions.toInt(jRow[1]);\n\u003e         }\n\u003e         a0w1 \u003d Integer.valueOf(a0s0w1);\n\u003e         a1w1 \u003d Integer.valueOf(a1s0w1);\n\u003e         a2w1 \u003d Integer.valueOf(a2s0w1);\n\u003e         a3w1 \u003d Long.valueOf(maxX + 1);\n\u003e       }\n\u003e       _list0.add(new Object[] {\n\u003e         row[0],\n\u003e         row[1],\n\u003e         row[2],\n\u003e         row[3],\n\u003e         row[4],\n\u003e         row[5],\n\u003e         row[6],\n\u003e         row[7],\n\u003e         row[8],\n\u003e         row[9],\n\u003e         row[10],\n\u003e         row[11],\n\u003e         row[12],\n\u003e         row[13],\n\u003e         row[14],\n\u003e         row[15],\n\u003e         row[16],\n\u003e         row[17],\n\u003e         row[18],\n\u003e         row[19],\n\u003e         a0w1,\n\u003e         a1w1,\n\u003e         a2w1,\n\u003e         a3w1});\n\u003e     }\n\u003e   }\n\u003e   multiMap.clear();\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable5 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(_list0).orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v) {\n\u003e       return (Integer) v[3];\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable5.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final int inp12_ \u003d org.apache.calcite.runtime.SqlFunctions.toInt(current[12]);\n\u003e               final long inp13_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[13]);\n\u003e               final long inp19_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[19]);\n\u003e               final long inp23_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[23]);\n\u003e               return new Object[] {\n\u003e                   current[3],\n\u003e                   current[1],\n\u003e                   current[2],\n\u003e                   org.apache.calcite.runtime.SqlFunctions.toLong(current[9]) \u003c\u003d 0L || (Object) (org.apache.calcite.runtime.SqlFunctions.toLong(current[11]) \u003c\u003d 0L) || (int) inp13_ \u003d\u003d 1 ? (Integer) null : Integer.valueOf((org.apache.calcite.runtime.SqlFunctions.toInt(current[10]) - inp12_ * inp12_ / (int) inp13_) / ((int) inp13_ - 1)),\n\u003e (                  org.apache.calcite.runtime.SqlFunctions.toInt(current[15]) - org.apache.calcite.runtime.SqlFunctions.toInt(current[16]) * org.apache.calcite.runtime.SqlFunctions.toInt(current[18]) / (int) inp19_) / ((int) inp19_ - 1),\n\u003e (                  org.apache.calcite.runtime.SqlFunctions.toInt(current[20]) - org.apache.calcite.runtime.SqlFunctions.toInt(current[21]) * org.apache.calcite.runtime.SqlFunctions.toInt(current[22]) / (int) inp23_) / ((int) inp23_ - 1)};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:163)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:227)\n\u003e  at net.hydromatic.quidem.Quidem.checkResult(Quidem.java:322)\n\u003e  at net. (stack truncated)\n599,608c1095,1101\n\u003c +-----+--------+--------+---------+----------------+----------+--------------------+\n\u003c | AGE | DEPTNO | GENDER | var_pop | var_pop by age | var_samp | var_samp by gender |\n\u003c +-----+--------+--------+---------+----------------+----------+--------------------+\n\u003c |   5 |     20 | F      |    1005 |              0 |     1508 |                    |\n\u003c |  25 |     10 |        |    1005 |              0 |     1508 |                    |\n\u003c |  80 |     20 | M      |    1005 |              0 |     1508 |                    |\n\u003c |     |     40 | F      |    1005 |                |     1508 |                    |\n\u003c |     |     40 | M      |    1005 |                |     1508 |                    |\n\u003c +-----+--------+--------+---------+----------------+----------+--------------------+\n\u003c (5 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select emps.\"AGE\", emps.\"DEPTNO\", emps.\"GENDER\",\n\u003e  var_pop(emps.\"AGE\") over() as \"var_pop\",\n\u003e  var_pop(emps.\"AGE\") over(partition by emps.\"AGE\") as \"var_pop by age\",\n\u003e  var_samp(emps.\"AGE\") over() as \"var_samp\",\n\u003e  var_samp(emps.\"AGE\") over(partition by emps.\"GENDER\") as \"var_samp by gender\"\n\u003e from emps order by emps.\"AGE\"\": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n609a1103,1601\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 10,\n\u003e                 null,\n\u003e                 25};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child1 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 20,\n\u003e                 \"M\",\n\u003e                 80};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child2 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 40,\n\u003e                 \"M\",\n\u003e                 null};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable2 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child3 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable2.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 20,\n\u003e                 \"F\",\n\u003e                 5};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable3 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child4 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable3.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 40,\n\u003e                 \"F\",\n\u003e                 null};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable4 \u003d child0.concat(child1).concat(child2).concat(child3).concat(child4);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable source \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable4.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final Integer inp2_0 \u003d (Integer) current[2];\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 inp2_0 \u003d\u003d null ? (Integer) null : Integer.valueOf(inp2_0.intValue() * inp2_0.intValue())};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   int prevStart;\n\u003e   int prevEnd;\n\u003e   final java.util.Comparator comparator \u003d new java.util.Comparator(){\n\u003e     public int compare(Object[] v0, Object[] v1) {\n\u003e       int c;\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((Object[]) o0, (Object[]) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final java.util.List tempList \u003d (java.util.List) source.into(new java.util.ArrayList());\n\u003e   final java.util.Iterator iterator \u003d org.apache.calcite.runtime.SortedMultiMap.singletonArrayIterator(comparator, tempList);\n\u003e   final java.util.ArrayList _list \u003d new java.util.ArrayList(\n\u003e     tempList.size());\n\u003e   long a0s0w0;\n\u003e   Long a0w0 \u003d (Long) null;\n\u003e   a0s0w0 \u003d 0L;\n\u003e   int a1s0w0;\n\u003e   Integer a1w0 \u003d (Integer) null;\n\u003e   a1s0w0 \u003d 0;\n\u003e   long a2s0w0;\n\u003e   Long a2w0 \u003d (Long) null;\n\u003e   a2s0w0 \u003d 0L;\n\u003e   int a3s0w0;\n\u003e   Integer a3w0 \u003d (Integer) null;\n\u003e   a3s0w0 \u003d 0;\n\u003e   while (iterator.hasNext()) {\n\u003e     final Object[] _rows \u003d (Object[]) iterator.next();\n\u003e     prevStart \u003d -1;\n\u003e     prevEnd \u003d 2147483647;\n\u003e     final int maxX \u003d _rows.length - 1;\n\u003e     for (int i \u003d 0; i \u003c _rows.length; ++i) {\n\u003e       final Object[] row \u003d (Object[]) _rows[i];\n\u003e       if (maxX !\u003d prevEnd) {\n\u003e         int actualStart;\n\u003e         if (maxX \u003c prevEnd) {\n\u003e           actualStart \u003d 0;\n\u003e           a0s0w0 \u003d 0L;\n\u003e           a1s0w0 \u003d 0;\n\u003e           a2s0w0 \u003d 0L;\n\u003e           a3s0w0 \u003d 0;\n\u003e         } else {\n\u003e           actualStart \u003d prevEnd + 1;\n\u003e         }\n\u003e         prevEnd \u003d maxX;\n\u003e         for (int j \u003d actualStart; j \u003c\u003d maxX; ++j) {\n\u003e           final Object[] jRow \u003d (Object[]) _rows[j];\n\u003e           final Integer inp3_ \u003d (Integer) jRow[3];\n\u003e           if (inp3_ !\u003d null) {\n\u003e             a0s0w0++;\n\u003e           }\n\u003e           if (inp3_ !\u003d null) {\n\u003e             a1s0w0 \u003d a1s0w0 + inp3_.intValue();\n\u003e           }\n\u003e           final Integer inp2_ \u003d (Integer) jRow[2];\n\u003e           if (inp2_ !\u003d null) {\n\u003e             a2s0w0++;\n\u003e           }\n\u003e           if (inp2_ !\u003d null) {\n\u003e             a3s0w0 \u003d a3s0w0 + inp2_.intValue();\n\u003e           }\n\u003e         }\n\u003e         a0w0 \u003d Long.valueOf(a0s0w0);\n\u003e         a1w0 \u003d Integer.valueOf(a1s0w0);\n\u003e         a2w0 \u003d Long.valueOf(a2s0w0);\n\u003e         a3w0 \u003d Integer.valueOf(a3s0w0);\n\u003e       }\n\u003e       _list.add(new Object[] {\n\u003e         row[0],\n\u003e         row[1],\n\u003e         row[2],\n\u003e         row[3],\n\u003e         a0w0,\n\u003e         a1w0,\n\u003e         a2w0,\n\u003e         a3w0});\n\u003e     }\n\u003e   }\n\u003e   tempList.clear();\n\u003e   final java.util.Comparator comparator0 \u003d new java.util.Comparator(){\n\u003e     public int compare(Object[] v0, Object[] v1) {\n\u003e       int c;\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((Object[]) o0, (Object[]) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.runtime.SortedMultiMap multiMap \u003d new org.apache.calcite.runtime.SortedMultiMap();\n\u003e   org.apache.calcite.linq4j.Linq4j.asEnumerable(_list).foreach(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object apply(Object[] v) {\n\u003e       Integer key \u003d (Integer) v[2];\n\u003e       multiMap.putMulti(key, v);\n\u003e       return null;\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   final java.util.Iterator iterator0 \u003d multiMap.arrays(comparator0);\n\u003e   final java.util.ArrayList _list0 \u003d new java.util.ArrayList(\n\u003e     multiMap.size());\n\u003e   long a0s0w1;\n\u003e   Long a0w1 \u003d (Long) null;\n\u003e   a0s0w1 \u003d 0L;\n\u003e   int a1s0w1;\n\u003e   Integer a1w1 \u003d (Integer) null;\n\u003e   a1s0w1 \u003d 0;\n\u003e   long a2s0w1;\n\u003e   Long a2w1 \u003d (Long) null;\n\u003e   a2s0w1 \u003d 0L;\n\u003e   int a3s0w1;\n\u003e   Integer a3w1 \u003d (Integer) null;\n\u003e   a3s0w1 \u003d 0;\n\u003e   while (iterator0.hasNext()) {\n\u003e     final Object[] _rows \u003d (Object[]) iterator0.next();\n\u003e     prevStart \u003d -1;\n\u003e     prevEnd \u003d 2147483647;\n\u003e     final int maxX \u003d _rows.length - 1;\n\u003e     for (int i \u003d 0; i \u003c _rows.length; ++i) {\n\u003e       final Object[] row \u003d (Object[]) _rows[i];\n\u003e       if (maxX !\u003d prevEnd) {\n\u003e         int actualStart;\n\u003e         if (maxX \u003c prevEnd) {\n\u003e           actualStart \u003d 0;\n\u003e           a0s0w1 \u003d 0L;\n\u003e           a1s0w1 \u003d 0;\n\u003e           a2s0w1 \u003d 0L;\n\u003e           a3s0w1 \u003d 0;\n\u003e         } else {\n\u003e           actualStart \u003d prevEnd + 1;\n\u003e         }\n\u003e         prevEnd \u003d maxX;\n\u003e         for (int j \u003d actualStart; j \u003c\u003d maxX; ++j) {\n\u003e           final Object[] jRow \u003d (Object[]) _rows[j];\n\u003e           final Integer inp3_ \u003d (Integer) jRow[3];\n\u003e           if (inp3_ !\u003d null) {\n\u003e             a0s0w1++;\n\u003e           }\n\u003e           if (inp3_ !\u003d null) {\n\u003e             a1s0w1 \u003d a1s0w1 + inp3_.intValue();\n\u003e           }\n\u003e           final Integer inp2_ \u003d (Integer) jRow[2];\n\u003e           if (inp2_ !\u003d null) {\n\u003e             a2s0w1++;\n\u003e           }\n\u003e           if (inp2_ !\u003d null) {\n\u003e             a3s0w1 \u003d a3s0w1 + inp2_.intValue();\n\u003e           }\n\u003e         }\n\u003e         a0w1 \u003d Long.valueOf(a0s0w1);\n\u003e         a1w1 \u003d Integer.valueOf(a1s0w1);\n\u003e         a2w1 \u003d Long.valueOf(a2s0w1);\n\u003e         a3w1 \u003d Integer.valueOf(a3s0w1);\n\u003e       }\n\u003e       _list0.add(new Object[] {\n\u003e         row[0],\n\u003e         row[1],\n\u003e         row[2],\n\u003e         row[3],\n\u003e         row[4],\n\u003e         row[5],\n\u003e         row[6],\n\u003e         row[7],\n\u003e         a0w1,\n\u003e         a1w1,\n\u003e         a2w1,\n\u003e         a3w1});\n\u003e     }\n\u003e   }\n\u003e   multiMap.clear();\n\u003e   final java.util.Comparator comparator1 \u003d new java.util.Comparator(){\n\u003e     public int compare(Object[] v0, Object[] v1) {\n\u003e       int c;\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((Object[]) o0, (Object[]) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   org.apache.calcite.linq4j.Linq4j.asEnumerable(_list0).foreach(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object apply(Object[] v) {\n\u003e       String key \u003d v[1] \u003d\u003d null ? (String) null : v[1].toString();\n\u003e       multiMap.putMulti(key, v);\n\u003e       return null;\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   final java.util.Iterator iterator1 \u003d multiMap.arrays(comparator1);\n\u003e   final java.util.ArrayList _list1 \u003d new java.util.ArrayList(\n\u003e     multiMap.size());\n\u003e   long a0s0w2;\n\u003e   Long a0w2 \u003d (Long) null;\n\u003e   a0s0w2 \u003d 0L;\n\u003e   int a1s0w2;\n\u003e   Integer a1w2 \u003d (Integer) null;\n\u003e   a1s0w2 \u003d 0;\n\u003e   long a2s0w2;\n\u003e   Long a2w2 \u003d (Long) null;\n\u003e   a2s0w2 \u003d 0L;\n\u003e   int a3s0w2;\n\u003e   Integer a3w2 \u003d (Integer) null;\n\u003e   a3s0w2 \u003d 0;\n\u003e   while (iterator1.hasNext()) {\n\u003e     final Object[] _rows \u003d (Object[]) iterator1.next();\n\u003e     prevStart \u003d -1;\n\u003e     prevEnd \u003d 2147483647;\n\u003e     final int maxX \u003d _rows.length - 1;\n\u003e     for (int i \u003d 0; i \u003c _rows.length; ++i) {\n\u003e       final Object[] row \u003d (Object[]) _rows[i];\n\u003e       if (maxX !\u003d prevEnd) {\n\u003e         int actualStart;\n\u003e         if (maxX \u003c prevEnd) {\n\u003e           actualStart \u003d 0;\n\u003e           a0s0w2 \u003d 0L;\n\u003e           a1s0w2 \u003d 0;\n\u003e           a2s0w2 \u003d 0L;\n\u003e           a3s0w2 \u003d 0;\n\u003e         } else {\n\u003e           actualStart \u003d prevEnd + 1;\n\u003e         }\n\u003e         prevEnd \u003d maxX;\n\u003e         for (int j \u003d actualStart; j \u003c\u003d maxX; ++j) {\n\u003e           final Object[] jRow \u003d (Object[]) _rows[j];\n\u003e           final Integer inp3_ \u003d (Integer) jRow[3];\n\u003e           if (inp3_ !\u003d null) {\n\u003e             a0s0w2++;\n\u003e           }\n\u003e           if (inp3_ !\u003d null) {\n\u003e             a1s0w2 \u003d a1s0w2 + inp3_.intValue();\n\u003e           }\n\u003e           final Integer inp2_ \u003d (Integer) jRow[2];\n\u003e           if (inp2_ !\u003d null) {\n\u003e             a2s0w2++;\n\u003e           }\n\u003e           if (inp2_ !\u003d null) {\n\u003e             a3s0w2 \u003d a3s0w2 + inp2_.intValue();\n\u003e           }\n\u003e         }\n\u003e         a0w2 \u003d Long.valueOf(a0s0w2);\n\u003e         a1w2 \u003d Integer.valueOf(a1s0w2);\n\u003e         a2w2 \u003d Long.valueOf(a2s0w2);\n\u003e         a3w2 \u003d Integer.valueOf(a3s0w2);\n\u003e       }\n\u003e       _list1.add(new Object[] {\n\u003e         row[0],\n\u003e         row[1],\n\u003e         row[2],\n\u003e         row[3],\n\u003e         row[4],\n\u003e         row[5],\n\u003e         row[6],\n\u003e         row[7],\n\u003e         row[8],\n\u003e         row[9],\n\u003e         row[10],\n\u003e         row[11],\n\u003e         a0w2,\n\u003e         a1w2,\n\u003e         a2w2,\n\u003e         a3w2});\n\u003e     }\n\u003e   }\n\u003e   multiMap.clear();\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable5 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(_list1).orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v) {\n\u003e       return (Integer) v[2];\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable5.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final int inp7_ \u003d org.apache.calcite.runtime.SqlFunctions.toInt(current[7]);\n\u003e               final long inp6_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[6]);\n\u003e               final boolean v4 \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[4]) \u003c\u003d 0L || (Object) (inp6_ \u003c\u003d 0L);\n\u003e               final int v7 \u003d org.apache.calcite.runtime.SqlFunctions.toInt(current[5]) - inp7_ * inp7_ / (int) inp6_;\n\u003e               final int inp11_ \u003d org.apache.calcite.runtime.SqlFunctions.toInt(current[11]);\n\u003e               final long inp10_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[10]);\n\u003e               final int inp15_ \u003d org.apache.calcite.runtime.SqlFunctions.toInt(current[15]);\n\u003e               final long inp14_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[14]);\n\u003e               return new Object[] {\n\u003e                   current[2],\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   v4 ? (Integer) null : Integer.valueOf(v7 / (int) inp6_),\n\u003e                   org.apache.calcite.runtime.SqlFunctions.toLong(current[8]) \u003c\u003d 0L || (Object) (inp10_ \u003c\u003d 0L) ? (Integer) null : Integer.valueOf((org.apache.calcite.runtime.SqlFunctions.toInt(current[9]) - inp11_ * inp11_ / (int) inp10_) / (int) inp10_),\n\u003e                   v4 || inp6_ \u003d\u003d 1L ? (Integer) null : Integer.valueOf((int) ((long) v7 / (inp6_ - 1L))),\n\u003e                   org.apache.calcite.runtime.SqlFunctions.toLong(current[12]) \u003c\u003d 0L || (Object) (inp14_ \u003c\u003d 0L) || inp14_ \u003d\u003d 1L ? (Integer) null : Int (stack truncated)\n623,632c1615,1619\n\u003c +-----+--------+-----------------------+-----------------------+\n\u003c | AGE | DEPTNO | regr_sxx(age, deptno) | regr_syy(age, deptno) |\n\u003c +-----+--------+-----------------------+-----------------------+\n\u003c |   5 |     20 |                    66 |                  3015 |\n\u003c |  25 |     10 |                    66 |                  3015 |\n\u003c |  80 |     20 |                    66 |                  3015 |\n\u003c |     |     40 |                    66 |                  3015 |\n\u003c |     |     40 |                    66 |                  3015 |\n\u003c +-----+--------+-----------------------+-----------------------+\n\u003c (5 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select emps.\"AGE\", emps.\"DEPTNO\",\n\u003e  regr_sxx(emps.\"AGE\", emps.\"DEPTNO\") over() as \"regr_sxx(age, deptno)\",\n\u003e  regr_syy(emps.\"AGE\", emps.\"DEPTNO\") over() as \"regr_syy(age, deptno)\"\n\u003e from emps order by emps.\"AGE\"\": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n633a1621,2070\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 10,\n\u003e                 25};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child1 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 20,\n\u003e                 80};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child2 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 40,\n\u003e                 null};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable2 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child3 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable2.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 20,\n\u003e                 5};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable3 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child4 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable3.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 40,\n\u003e                 null};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable4 \u003d child0.concat(child1).concat(child2).concat(child3).concat(child4);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable source \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable4.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final int inp0_0 \u003d org.apache.calcite.runtime.SqlFunctions.toInt(current[0]);\n\u003e             final Integer inp1_0 \u003d (Integer) current[1];\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 inp0_0,\n\u003e                 inp0_0 * inp0_0,\n\u003e                 inp1_0 \u003d\u003d null ? (Integer) null : Integer.valueOf(inp1_0.intValue() * inp1_0.intValue())};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   int prevStart;\n\u003e   int prevEnd;\n\u003e   final java.util.Comparator comparator \u003d new java.util.Comparator(){\n\u003e     public int compare(Object[] v0, Object[] v1) {\n\u003e       int c;\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((Object[]) o0, (Object[]) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final java.util.List tempList \u003d (java.util.List) source.into(new java.util.ArrayList());\n\u003e   final java.util.Iterator iterator \u003d org.apache.calcite.runtime.SortedMultiMap.singletonArrayIterator(comparator, tempList);\n\u003e   final java.util.ArrayList _list \u003d new java.util.ArrayList(\n\u003e     tempList.size());\n\u003e   int a0s0w0;\n\u003e   Integer a0w0 \u003d (Integer) null;\n\u003e   a0s0w0 \u003d 0;\n\u003e   int a1s0w0;\n\u003e   Integer a1w0 \u003d (Integer) null;\n\u003e   a1s0w0 \u003d 0;\n\u003e   long a2s0w0;\n\u003e   Long a2w0 \u003d (Long) null;\n\u003e   a2s0w0 \u003d 0L;\n\u003e   long a3s0w0;\n\u003e   Long a3w0 \u003d (Long) null;\n\u003e   a3s0w0 \u003d 0L;\n\u003e   long a4s0w0;\n\u003e   Long a4w0 \u003d (Long) null;\n\u003e   a4s0w0 \u003d 0L;\n\u003e   int a5s0w0;\n\u003e   Integer a5w0 \u003d (Integer) null;\n\u003e   a5s0w0 \u003d 0;\n\u003e   long a6s0w0;\n\u003e   Long a6w0 \u003d (Long) null;\n\u003e   a6s0w0 \u003d 0L;\n\u003e   int a7s0w0;\n\u003e   Integer a7w0 \u003d (Integer) null;\n\u003e   a7s0w0 \u003d 0;\n\u003e   long a8s0w0;\n\u003e   Long a8w0 \u003d (Long) null;\n\u003e   a8s0w0 \u003d 0L;\n\u003e   while (iterator.hasNext()) {\n\u003e     final Object[] _rows \u003d (Object[]) iterator.next();\n\u003e     prevStart \u003d -1;\n\u003e     prevEnd \u003d 2147483647;\n\u003e     final int maxX \u003d _rows.length - 1;\n\u003e     for (int i \u003d 0; i \u003c _rows.length; ++i) {\n\u003e       final Object[] row \u003d (Object[]) _rows[i];\n\u003e       if (maxX !\u003d prevEnd) {\n\u003e         int actualStart;\n\u003e         if (maxX \u003c prevEnd) {\n\u003e           actualStart \u003d 0;\n\u003e           a0s0w0 \u003d 0;\n\u003e           a1s0w0 \u003d 0;\n\u003e           a2s0w0 \u003d 0L;\n\u003e           a3s0w0 \u003d 0L;\n\u003e           a4s0w0 \u003d 0L;\n\u003e           a5s0w0 \u003d 0;\n\u003e           a6s0w0 \u003d 0L;\n\u003e           a7s0w0 \u003d 0;\n\u003e           a8s0w0 \u003d 0L;\n\u003e         } else {\n\u003e           actualStart \u003d prevEnd + 1;\n\u003e         }\n\u003e         prevEnd \u003d maxX;\n\u003e         for (int j \u003d actualStart; j \u003c\u003d maxX; ++j) {\n\u003e           final Object[] jRow \u003d (Object[]) _rows[j];\n\u003e           final Integer inp1_ \u003d (Integer) jRow[1];\n\u003e           if (inp1_ !\u003d null) {\n\u003e             a0s0w0 \u003d a0s0w0 + org.apache.calcite.runtime.SqlFunctions.toInt(jRow[3]);\n\u003e           }\n\u003e           if (inp1_ !\u003d null) {\n\u003e             a1s0w0 \u003d a1s0w0 + org.apache.calcite.runtime.SqlFunctions.toInt(jRow[2]);\n\u003e           }\n\u003e           if (inp1_ !\u003d null) {\n\u003e             a2s0w0++;\n\u003e           }\n\u003e           if (inp1_ !\u003d null) {\n\u003e             a3s0w0++;\n\u003e           }\n\u003e           final Integer inp4_ \u003d (Integer) jRow[4];\n\u003e           if (inp4_ !\u003d null) {\n\u003e             a4s0w0++;\n\u003e           }\n\u003e           if (inp4_ !\u003d null) {\n\u003e             a5s0w0 \u003d a5s0w0 + inp4_.intValue();\n\u003e           }\n\u003e           if (inp1_ !\u003d null) {\n\u003e             a6s0w0++;\n\u003e           }\n\u003e           if (inp1_ !\u003d null) {\n\u003e             a7s0w0 \u003d a7s0w0 + inp1_.intValue();\n\u003e           }\n\u003e           if (inp1_ !\u003d null) {\n\u003e             a8s0w0++;\n\u003e           }\n\u003e         }\n\u003e         a0w0 \u003d Integer.valueOf(a0s0w0);\n\u003e         a1w0 \u003d Integer.valueOf(a1s0w0);\n\u003e         a2w0 \u003d Long.valueOf(a2s0w0);\n\u003e         a3w0 \u003d Long.valueOf(a3s0w0);\n\u003e         a4w0 \u003d Long.valueOf(a4s0w0);\n\u003e         a5w0 \u003d Integer.valueOf(a5s0w0);\n\u003e         a6w0 \u003d Long.valueOf(a6s0w0);\n\u003e         a7w0 \u003d Integer.valueOf(a7s0w0);\n\u003e         a8w0 \u003d Long.valueOf(a8s0w0);\n\u003e       }\n\u003e       _list.add(new Object[] {\n\u003e         row[0],\n\u003e         row[1],\n\u003e         row[2],\n\u003e         row[3],\n\u003e         row[4],\n\u003e         a0w0,\n\u003e         a1w0,\n\u003e         a2w0,\n\u003e         a3w0,\n\u003e         a4w0,\n\u003e         a5w0,\n\u003e         a6w0,\n\u003e         a7w0,\n\u003e         a8w0});\n\u003e     }\n\u003e   }\n\u003e   tempList.clear();\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable5 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(_list).orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Integer apply(Object[] v) {\n\u003e       return (Integer) v[1];\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable5.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final int inp6_ \u003d org.apache.calcite.runtime.SqlFunctions.toInt(current[6]);\n\u003e               final long inp7_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[7]);\n\u003e               final int inp12_ \u003d org.apache.calcite.runtime.SqlFunctions.toInt(current[12]);\n\u003e               final long inp13_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[13]);\n\u003e               return new Object[] {\n\u003e                   current[1],\n\u003e                   current[0],\n\u003e                   Integer.valueOf((int) ((long) ((org.apache.calcite.runtime.SqlFunctions.toInt(current[5]) - inp6_ * inp6_ / (int) inp7_) / (int) inp7_) * org.apache.calcite.runtime.SqlFunctions.toLong(current[8]))),\n\u003e                   org.apache.calcite.runtime.SqlFunctions.toLong(current[9]) \u003c\u003d 0L || (Object) (org.apache.calcite.runtime.SqlFunctions.toLong(current[11]) \u003c\u003d 0L) ? (Integer) null : Integer.valueOf((int) ((long) ((org.apache.calcite.runtime.SqlFunctions.toInt(current[10]) - inp12_ * inp12_ / (int) inp13_) / (int) inp13_) * inp13_))};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:163)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:227)\n\u003e  at net.hydromatic.quidem.Quidem.checkResult(Quidem.java:322)\n\u003e  at net.hydromatic.quidem.Quidem.access$2800(Quidem.java:54)\n\u003e  at net.hydromatic.quidem.Quidem$ContextImpl.checkResult(Quidem.java:1747)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:1078)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1548)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:216)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:160)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:197)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 10,\n\u003e                 25};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child1 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 20,\n\u003e                 80};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child2 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enum (stack truncated)\n647,656c2084,2088\n\u003c +-----+--------+--------+-----------------------+-----------------------+\n\u003c | AGE | DEPTNO | GENDER | regr_sxx(age, deptno) | regr_syy(age, deptno) |\n\u003c +-----+--------+--------+-----------------------+-----------------------+\n\u003c |   5 |     20 | F      |                     0 |                     0 |\n\u003c |     |     40 | F      |                     0 |                     0 |\n\u003c |  80 |     20 | M      |                     0 |                     0 |\n\u003c |     |     40 | M      |                     0 |                     0 |\n\u003c |  25 |     10 |        |                     0 |                     0 |\n\u003c +-----+--------+--------+-----------------------+-----------------------+\n\u003c (5 rows)\n---\n\u003e java.sql.SQLException: Error while executing SQL \"select emps.\"AGE\", emps.\"DEPTNO\", emps.\"GENDER\",\n\u003e  regr_sxx(emps.\"AGE\", emps.\"DEPTNO\") over(partition by emps.\"GENDER\") as \"regr_sxx(age, deptno)\",\n\u003e  regr_syy(emps.\"AGE\", emps.\"DEPTNO\") over(partition by emps.\"GENDER\") as \"regr_syy(age, deptno)\"\n\u003e from emps order by emps.\"GENDER\"\": Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n657a2090,2540\n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 10,\n\u003e                 null,\n\u003e                 25};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child1 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 20,\n\u003e                 \"M\",\n\u003e                 80};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable1 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child2 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable1.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 40,\n\u003e                 \"M\",\n\u003e                 null};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable2 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child3 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable2.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 20,\n\u003e                 \"F\",\n\u003e                 5};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable3 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child4 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable3.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 40,\n\u003e                 \"F\",\n\u003e                 null};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable4 \u003d child0.concat(child1).concat(child2).concat(child3).concat(child4);\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable source \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable4.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e             final int inp0_0 \u003d org.apache.calcite.runtime.SqlFunctions.toInt(current[0]);\n\u003e             final Integer inp2_0 \u003d (Integer) current[2];\n\u003e             return new Object[] {\n\u003e                 current[0],\n\u003e                 current[1],\n\u003e                 current[2],\n\u003e                 inp0_0,\n\u003e                 inp0_0 * inp0_0,\n\u003e                 inp2_0 \u003d\u003d null ? (Integer) null : Integer.valueOf(inp2_0.intValue() * inp2_0.intValue())};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   int prevStart;\n\u003e   int prevEnd;\n\u003e   final java.util.Comparator comparator \u003d new java.util.Comparator(){\n\u003e     public int compare(Object[] v0, Object[] v1) {\n\u003e       int c;\n\u003e       return 0;\n\u003e     }\n\u003e \n\u003e     public int compare(Object o0, Object o1) {\n\u003e       return this.compare((Object[]) o0, (Object[]) o1);\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.runtime.SortedMultiMap multiMap \u003d new org.apache.calcite.runtime.SortedMultiMap();\n\u003e   source.foreach(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public Object apply(Object[] v) {\n\u003e       String key \u003d v[1] \u003d\u003d null ? (String) null : v[1].toString();\n\u003e       multiMap.putMulti(key, v);\n\u003e       return null;\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   );\n\u003e   final java.util.Iterator iterator \u003d multiMap.arrays(comparator);\n\u003e   final java.util.ArrayList _list \u003d new java.util.ArrayList(\n\u003e     multiMap.size());\n\u003e   int a0s0w0;\n\u003e   Integer a0w0 \u003d (Integer) null;\n\u003e   a0s0w0 \u003d 0;\n\u003e   int a1s0w0;\n\u003e   Integer a1w0 \u003d (Integer) null;\n\u003e   a1s0w0 \u003d 0;\n\u003e   long a2s0w0;\n\u003e   Long a2w0 \u003d (Long) null;\n\u003e   a2s0w0 \u003d 0L;\n\u003e   long a3s0w0;\n\u003e   Long a3w0 \u003d (Long) null;\n\u003e   a3s0w0 \u003d 0L;\n\u003e   long a4s0w0;\n\u003e   Long a4w0 \u003d (Long) null;\n\u003e   a4s0w0 \u003d 0L;\n\u003e   int a5s0w0;\n\u003e   Integer a5w0 \u003d (Integer) null;\n\u003e   a5s0w0 \u003d 0;\n\u003e   long a6s0w0;\n\u003e   Long a6w0 \u003d (Long) null;\n\u003e   a6s0w0 \u003d 0L;\n\u003e   int a7s0w0;\n\u003e   Integer a7w0 \u003d (Integer) null;\n\u003e   a7s0w0 \u003d 0;\n\u003e   long a8s0w0;\n\u003e   Long a8w0 \u003d (Long) null;\n\u003e   a8s0w0 \u003d 0L;\n\u003e   while (iterator.hasNext()) {\n\u003e     final Object[] _rows \u003d (Object[]) iterator.next();\n\u003e     prevStart \u003d -1;\n\u003e     prevEnd \u003d 2147483647;\n\u003e     final int maxX \u003d _rows.length - 1;\n\u003e     for (int i \u003d 0; i \u003c _rows.length; ++i) {\n\u003e       final Object[] row \u003d (Object[]) _rows[i];\n\u003e       if (maxX !\u003d prevEnd) {\n\u003e         int actualStart;\n\u003e         if (maxX \u003c prevEnd) {\n\u003e           actualStart \u003d 0;\n\u003e           a0s0w0 \u003d 0;\n\u003e           a1s0w0 \u003d 0;\n\u003e           a2s0w0 \u003d 0L;\n\u003e           a3s0w0 \u003d 0L;\n\u003e           a4s0w0 \u003d 0L;\n\u003e           a5s0w0 \u003d 0;\n\u003e           a6s0w0 \u003d 0L;\n\u003e           a7s0w0 \u003d 0;\n\u003e           a8s0w0 \u003d 0L;\n\u003e         } else {\n\u003e           actualStart \u003d prevEnd + 1;\n\u003e         }\n\u003e         prevEnd \u003d maxX;\n\u003e         for (int j \u003d actualStart; j \u003c\u003d maxX; ++j) {\n\u003e           final Object[] jRow \u003d (Object[]) _rows[j];\n\u003e           final Integer inp2_ \u003d (Integer) jRow[2];\n\u003e           if (inp2_ !\u003d null) {\n\u003e             a0s0w0 \u003d a0s0w0 + org.apache.calcite.runtime.SqlFunctions.toInt(jRow[4]);\n\u003e           }\n\u003e           if (inp2_ !\u003d null) {\n\u003e             a1s0w0 \u003d a1s0w0 + org.apache.calcite.runtime.SqlFunctions.toInt(jRow[3]);\n\u003e           }\n\u003e           if (inp2_ !\u003d null) {\n\u003e             a2s0w0++;\n\u003e           }\n\u003e           if (inp2_ !\u003d null) {\n\u003e             a3s0w0++;\n\u003e           }\n\u003e           final Integer inp5_ \u003d (Integer) jRow[5];\n\u003e           if (inp5_ !\u003d null) {\n\u003e             a4s0w0++;\n\u003e           }\n\u003e           if (inp5_ !\u003d null) {\n\u003e             a5s0w0 \u003d a5s0w0 + inp5_.intValue();\n\u003e           }\n\u003e           if (inp2_ !\u003d null) {\n\u003e             a6s0w0++;\n\u003e           }\n\u003e           if (inp2_ !\u003d null) {\n\u003e             a7s0w0 \u003d a7s0w0 + inp2_.intValue();\n\u003e           }\n\u003e           if (inp2_ !\u003d null) {\n\u003e             a8s0w0++;\n\u003e           }\n\u003e         }\n\u003e         a0w0 \u003d Integer.valueOf(a0s0w0);\n\u003e         a1w0 \u003d Integer.valueOf(a1s0w0);\n\u003e         a2w0 \u003d Long.valueOf(a2s0w0);\n\u003e         a3w0 \u003d Long.valueOf(a3s0w0);\n\u003e         a4w0 \u003d Long.valueOf(a4s0w0);\n\u003e         a5w0 \u003d Integer.valueOf(a5s0w0);\n\u003e         a6w0 \u003d Long.valueOf(a6s0w0);\n\u003e         a7w0 \u003d Integer.valueOf(a7s0w0);\n\u003e         a8w0 \u003d Long.valueOf(a8s0w0);\n\u003e       }\n\u003e       _list.add(new Object[] {\n\u003e         row[0],\n\u003e         row[1],\n\u003e         row[2],\n\u003e         row[3],\n\u003e         row[4],\n\u003e         row[5],\n\u003e         a0w0,\n\u003e         a1w0,\n\u003e         a2w0,\n\u003e         a3w0,\n\u003e         a4w0,\n\u003e         a5w0,\n\u003e         a6w0,\n\u003e         a7w0,\n\u003e         a8w0});\n\u003e     }\n\u003e   }\n\u003e   multiMap.clear();\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable5 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(_list).orderBy(new org.apache.calcite.linq4j.function.Function1() {\n\u003e     public String apply(Object[] v) {\n\u003e       return v[1] \u003d\u003d null ? (String) null : v[1].toString();\n\u003e     }\n\u003e     public Object apply(Object v) {\n\u003e       return apply(\n\u003e         (Object[]) v);\n\u003e     }\n\u003e   }\n\u003e   , org.apache.calcite.linq4j.function.Functions.nullsComparator(false, false));\n\u003e   return new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e       public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e         return new org.apache.calcite.linq4j.Enumerator(){\n\u003e             public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable5.enumerator();\n\u003e             public void reset() {\n\u003e               inputEnumerator.reset();\n\u003e             }\n\u003e \n\u003e             public boolean moveNext() {\n\u003e               return inputEnumerator.moveNext();\n\u003e             }\n\u003e \n\u003e             public void close() {\n\u003e               inputEnumerator.close();\n\u003e             }\n\u003e \n\u003e             public Object current() {\n\u003e               final Object[] current \u003d (Object[]) inputEnumerator.current();\n\u003e               final int inp7_ \u003d org.apache.calcite.runtime.SqlFunctions.toInt(current[7]);\n\u003e               final long inp8_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[8]);\n\u003e               final int inp13_ \u003d org.apache.calcite.runtime.SqlFunctions.toInt(current[13]);\n\u003e               final long inp14_ \u003d org.apache.calcite.runtime.SqlFunctions.toLong(current[14]);\n\u003e               return new Object[] {\n\u003e                   current[2],\n\u003e                   current[0],\n\u003e                   current[1],\n\u003e                   Integer.valueOf((int) ((long) ((org.apache.calcite.runtime.SqlFunctions.toInt(current[6]) - inp7_ * inp7_ / (int) inp8_) / (int) inp8_) * org.apache.calcite.runtime.SqlFunctions.toLong(current[9]))),\n\u003e                   org.apache.calcite.runtime.SqlFunctions.toLong(current[10]) \u003c\u003d 0L || (Object) (org.apache.calcite.runtime.SqlFunctions.toLong(current[12]) \u003c\u003d 0L) ? (Integer) null : Integer.valueOf((int) ((long) ((org.apache.calcite.runtime.SqlFunctions.toInt(current[11]) - inp13_ * inp13_ / (int) inp14_) / (int) inp14_) * inp14_))};\n\u003e             }\n\u003e \n\u003e           };\n\u003e       }\n\u003e \n\u003e     };\n\u003e }\n\u003e \n\u003e \n\u003e public Class getElementType() {\n\u003e   return java.lang.Object[].class;\n\u003e }\n\u003e \n\u003e \n\u003e \n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:56)\n\u003e  at org.apache.calcite.avatica.Helper.createException(Helper.java:41)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:163)\n\u003e  at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:227)\n\u003e  at net.hydromatic.quidem.Quidem.checkResult(Quidem.java:322)\n\u003e  at net.hydromatic.quidem.Quidem.access$2800(Quidem.java:54)\n\u003e  at net.hydromatic.quidem.Quidem$ContextImpl.checkResult(Quidem.java:1747)\n\u003e  at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:1078)\n\u003e  at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1548)\n\u003e  at net.hydromatic.quidem.Quidem.execute(Quidem.java:216)\n\u003e  at org.apache.calcite.test.QuidemTest.checkRun(QuidemTest.java:160)\n\u003e  at org.apache.calcite.test.QuidemTest.test(QuidemTest.java:197)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\u003e  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\u003e  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\u003e  at java.lang.reflect.Method.invoke(Method.java:498)\n\u003e  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\u003e  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\u003e  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\u003e  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\u003e  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\u003e  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\u003e  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\u003e  at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)\n\u003e  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\u003e  at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\u003e  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\u003e  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\u003e  at java.lang.Thread.run(Thread.java:745)\n\u003e Caused by: java.lang.RuntimeException: Error while compiling generated Java code:\n\u003e org.apache.calcite.DataContext root;\n\u003e \n\u003e public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root0) {\n\u003e   root \u003d root0;\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child0 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e             return inputEnumerator.moveNext();\n\u003e           }\n\u003e \n\u003e           public void close() {\n\u003e             inputEnumerator.close();\n\u003e           }\n\u003e \n\u003e           public Object current() {\n\u003e             return new Object[] {\n\u003e                 10,\n\u003e                 null,\n\u003e                 25};\n\u003e           }\n\u003e \n\u003e         };\n\u003e     }\n\u003e \n\u003e   };\n\u003e   final org.apache.calcite.linq4j.Enumerable _inputEnumerable0 \u003d org.apache.calcite.linq4j.Linq4j.asEnumerable(new Integer[] {\n\u003e     0});\n\u003e   final org.apache.calcite.linq4j.AbstractEnumerable child1 \u003d new org.apache.calcite.linq4j.AbstractEnumerable(){\n\u003e     public org.apache.calcite.linq4j.Enumerator enumerator() {\n\u003e       return new org.apache.calcite.linq4j.Enumerator(){\n\u003e           public final org.apache.calcite.linq4j.Enumerator inputEnumerator \u003d _inputEnumerable0.enumerator();\n\u003e           public void reset() {\n\u003e             inputEnumerator.reset();\n\u003e           }\n\u003e \n\u003e           public boolean moveNext() {\n\u003e  (stack truncated)\n",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    }
  ],
  "failingModule": "/root/workspace/apache/calcite/424535393/core"
}