{
  "bugType": "only_fail",
  "hostname": "cyclone1",
  "repo": "INRIA/spoon",
  "metrics": {
    "BugCommitUrl": "http://github.com/INRIA/spoon/commit/891ec3f4104dde60043215bd53916af280f9c5d4",
    "NbFailingTests": 11,
    "NbErroringTests": 3,
    "NbSkippingTests": 4,
    "NbRunningTests": 1536,
    "FailureNames": [
      "java.lang.AssertionError",
      "java.lang.NullPointerException",
      "org.junit.ComparisonFailure"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 4,
      "ComputeClasspath": 5,
      "ComputeTestDir": 0,
      "BuildProject": 64,
      "InitRepoToPush": 5,
      "ComputeSourceDir": 0,
      "ComputeModules": 0,
      "CloneRepository": 10,
      "CheckoutPatchedBuild": 0,
      "TestProject": 602,
      "AssertFixer": 12,
      "GatherTestInformation": 0,
      "CommitPatch": 4
    },
    "ReproductionDate": "Aug 22, 2018 7:02:00 PM",
    "BuggyBuildId": 419269227,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/INRIA/spoon/builds/419269227",
    "BuggyBuildDate": "Aug 22, 2018 7:01:15 PM",
    "BugCommit": "891ec3f4104dde60043215bd53916af280f9c5d4",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 33,
    "NbFileApp": 619,
    "NbFileTests": 692,
    "NbCPU": 8,
    "FreeMemory": 384839680,
    "TotalMemory": 783810560,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 80182264,
      "ComputeClasspath": 97068928,
      "ComputeTestDir": 89431272,
      "BuildProject": 71007384,
      "InitRepoToPush": 98242224,
      "ComputeSourceDir": 381527256,
      "ComputeModules": 381527256,
      "CloneRepository": 169383528,
      "CheckoutPatchedBuild": 384839680,
      "TestProject": 158576440,
      "AssertFixer": 241342728,
      "GatherTestInformation": 132634424,
      "CommitPatch": 384839680
    },
    "NbSucceedingTests": 1522
  },
  "failing-test-cases": [
    {
      "className": "spoon.test.reference.ExecutableReferenceGenericTest",
      "failingMethods": [
        "testExecutableReferences",
        "testOneReferenceWithGenericMethodOutOfTheClass",
        "testMultiReferenceBetweenMethodsWithGenericInSameClass"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c10\u003e but was:\u003c9\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cmethod1(T[ extends java.lang.String])\u003e but was:\u003cmethod1(T[])\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cmethod1(T[ extends java.lang.String])\u003e but was:\u003cmethod1(T[])\u003e",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 0
    },
    {
      "className": "spoon.reflect.visitor.CtScannerTest",
      "failingMethods": [
        "testScannerCallsAllProperties"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "no getBoundingType() in public void visitCtTypeParameterReference(final spoon.reflect.reference.CtTypeParameterReference ref) {\n    enter(ref);\n    scan(spoon.reflect.path.CtRole.PACKAGE_REF, ref.getPackage());\n    scan(spoon.reflect.path.CtRole.DECLARING_TYPE, ref.getDeclaringType());\n    scan(spoon.reflect.path.CtRole.ANNOTATION, ref.getAnnotations());\n    exit(ref);\n}",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.intercession.IntercessionTest",
      "failingMethods": [
        "testSettersAreAllGood"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Your setter setUpper in CtWildcardReference has a type reference who don\u0027t extends CtWildcardReference",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.api.APITest",
      "failingMethods": [],
      "erroringMethods": [
        "testSetterInNodes"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.methodreference.MethodReferenceTest",
      "failingMethods": [
        "testGetGenericExecutableReference",
        "testCompileMethodReferenceGeneratedBySpoon"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: is \u003c3\u003e\n     but: was \u003c1\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Can\u0027t compile testclasses because The method method(String, U) in the type Cloud\u003cString\u003e is not applicable for the arguments (String, InputStream) at /root/workspace/INRIA/spoon/419269227/target/spooned/spoon/test/methodreference/testclasses/Sun.java:7",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.method.MethodTest",
      "failingMethods": [],
      "erroringMethods": [
        "testSearchMethodWithGeneric"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.reflect.ast.AstCheckerTest",
      "failingMethods": [
        "testPushToStackChanges"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "setUpper(boolean) on spoon.support.reflect.reference.CtTypeParameterReferenceImpl\nsetBoundingType(spoon.reflect.reference.CtTypeReference) on spoon.support.reflect.reference.CtTypeParameterReferenceImpl\nsetBounds(java.util.List) on spoon.support.reflect.reference.CtWildcardReferenceImpl\n",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.reference.TypeReferenceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testClearBoundsForTypeParameterReference"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.replace.ReplaceParametrizedTest",
      "failingMethods": [
        "testContract[CtTypeParameterReference]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Settable field CtTypeParameterReference#boundingType\u003cspoon.reflect.reference.CtTypeReference\u003c? extends java.lang.Object\u003e\u003e should set value.\n",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.generics.GenericsTest",
      "failingMethods": [
        "testModelBuildingSimilarSignatureMethods",
        "testWildcard"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c4\u003e but was:\u003c3\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c2\u003e but was:\u003c1\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    }
  ],
  "failingModule": "/root/workspace/INRIA/spoon/419269227"
}