{
  "bugType": "only_fail",
  "hostname": "cyclone1",
  "repo": "nosan/embedded-cassandra",
  "metrics": {
    "BugCommitUrl": "http://github.com/nosan/embedded-cassandra/commit/dd339a776ed2c8f9c30a4e8dbd16b54204237bc1",
    "NbFailingTests": 3,
    "NbErroringTests": 6,
    "NbSkippingTests": 0,
    "NbRunningTests": 76,
    "ReproductionDate": "Jul 20, 2018 12:57:14 PM",
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/nosan/embedded-cassandra/builds/406188574",
    "BuggyBuildDate": "Jul 20, 2018 12:50:17 PM",
    "BugCommit": "dd339a776ed2c8f9c30a4e8dbd16b54204237bc1",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 31,
    "NbFileApp": 49,
    "NbFileTests": 48,
    "NbCPU": 8,
    "FreeMemory": 395731424,
    "TotalMemory": 1256194048,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 117256824,
      "ComputeClasspath": 112867344,
      "ComputeTestDir": 105068752,
      "BuildProject": 109178824,
      "InitRepoToPush": 113850880,
      "ComputeSourceDir": 395731424,
      "ComputeModules": 395731424,
      "CloneRepository": 122086360,
      "CheckoutPatchedBuild": 395731424,
      "TestProject": 100975872,
      "AssertFixer": 414394504,
      "GatherTestInformation": 95013760,
      "CommitPatch": 395731424
    },
    "NbSucceedingTests": 67,
    "BuggyBuildId": 406188574,
    "FailureNames": [
      "java.io.IOException",
      "java.lang.AssertionError"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 0,
      "ComputeClasspath": 9,
      "ComputeTestDir": 0,
      "BuildProject": 33,
      "InitRepoToPush": 1,
      "ComputeSourceDir": 0,
      "ComputeModules": 0,
      "CloneRepository": 3,
      "CheckoutPatchedBuild": 0,
      "TestProject": 60,
      "AssertFixer": 156,
      "GatherTestInformation": 0,
      "CommitPatch": 0
    }
  },
  "failing-test-cases": [
    {
      "className": "com.github.nosan.embedded.cassandra.process.CassandraStarterTests",
      "failingMethods": [
        "shouldStartCassandraWithDisableRpcAndNativeTransportPorts",
        "shouldFailWithInvalidConfigurationError"
      ],
      "erroringMethods": [
        "shouldBePossibleToStartMultiplyInstances",
        "shouldStartCassandraUsingRpcTransport",
        "shouldBeRestartedUsingNativeTransportPort",
        "shouldStartCassandraWithNativeTransport"
      ],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of java.io.IOException and exception with message a string containing \"Missing required directive CommitLogSync\")\n     but: exception with message a string containing \"Missing required directive CommitLogSync\" message was \"Could not start a process \u0027514\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \nPlease set or unset -Xmx and -Xms flags in pairs on jvm.options file.\n\n--- END --- \"\nStacktrace was: java.io.IOException: Could not start a process \u0027514\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \nPlease set or unset -Xmx and -Xms flags in pairs on jvm.options file.\n\n--- END --- \n at com.github.nosan.embedded.cassandra.process.CassandraProcess.onAfterProcessStart(CassandraProcess.java:97)\n at de.flapdoodle.embed.process.runtime.AbstractProcess.\u003cinit\u003e(AbstractProcess.java:116)\n at com.github.nosan.embedded.cassandra.process.CassandraProcess.\u003cinit\u003e(CassandraProcess.java:67)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:49)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:37)\n at de.flapdoodle.embed.process.runtime.Executable.start(Executable.java:108)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.invoke(CassandraStarterTests.java:136)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.invoke(CassandraStarterTests.java:127)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.shouldFailWithInvalidConfigurationError(CassandraStarterTests.java:83)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:272)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)\n",
          "isError": false
        },
        {
          "failureName": "java.io.IOException",
          "failureDetail": "Could not start a process \u0027571\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \nPlease set or unset -Xmx and -Xms flags in pairs on jvm.options file.\n\n--- END --- ",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of java.net.ConnectException and exception with message a string containing \"Connection refused\")\n     but: an instance of java.net.ConnectException \u003cjava.io.IOException: Could not start a process \u0027629\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \nPlease set or unset -Xmx and -Xms flags in pairs on jvm.options file.\n\n--- END --- \u003e is a java.io.IOException\nStacktrace was: java.io.IOException: Could not start a process \u0027629\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \nPlease set or unset -Xmx and -Xms flags in pairs on jvm.options file.\n\n--- END --- \n at com.github.nosan.embedded.cassandra.process.CassandraProcess.onAfterProcessStart(CassandraProcess.java:97)\n at de.flapdoodle.embed.process.runtime.AbstractProcess.\u003cinit\u003e(AbstractProcess.java:116)\n at com.github.nosan.embedded.cassandra.process.CassandraProcess.\u003cinit\u003e(CassandraProcess.java:67)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:49)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:37)\n at de.flapdoodle.embed.process.runtime.Executable.start(Executable.java:108)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.invoke(CassandraStarterTests.java:136)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.shouldStartCassandraWithDisableRpcAndNativeTransportPorts(CassandraStarterTests.java:115)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:272)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)\n",
          "isError": false
        },
        {
          "failureName": "java.io.IOException",
          "failureDetail": "Could not start a process \u0027686\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \nPlease set or unset -Xmx and -Xms flags in pairs on jvm.options file.\n\n--- END --- ",
          "isError": true
        },
        {
          "failureName": "java.io.IOException",
          "failureDetail": "Could not start a process \u0027743\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \nPlease set or unset -Xmx and -Xms flags in pairs on jvm.options file.\n\n--- END --- ",
          "isError": true
        },
        {
          "failureName": "java.io.IOException",
          "failureDetail": "Could not start a process \u0027800\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \nPlease set or unset -Xmx and -Xms flags in pairs on jvm.options file.\n\n--- END --- ",
          "isError": true
        }
      ],
      "nbFailures": 2,
      "nbErrors": 4
    },
    {
      "className": "com.github.nosan.embedded.cassandra.CassandraTests",
      "failingMethods": [
        "shouldNotStartCassandraIfCassandraHasBeenAlreadyStarted"
      ],
      "erroringMethods": [
        "shouldStartCassandraUsingDefaultConfiguration",
        "shouldBeAbleToRestartCassandra"
      ],
      "failures": [
        {
          "failureName": "java.io.IOException",
          "failureDetail": "Could not start a process \u0027926\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \nPlease set or unset -Xmx and -Xms flags in pairs on jvm.options file.\n\n--- END --- ",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of java.io.IOException and exception with message a string containing \"Cassandra has already been started\")\n     but: exception with message a string containing \"Cassandra has already been started\" message was \"Could not start a process \u0027982\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \nPlease set or unset -Xmx and -Xms flags in pairs on jvm.options file.\n\n--- END --- \"\nStacktrace was: java.io.IOException: Could not start a process \u0027982\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \nPlease set or unset -Xmx and -Xms flags in pairs on jvm.options file.\n\n--- END --- \n at com.github.nosan.embedded.cassandra.process.CassandraProcess.onAfterProcessStart(CassandraProcess.java:97)\n at de.flapdoodle.embed.process.runtime.AbstractProcess.\u003cinit\u003e(AbstractProcess.java:116)\n at com.github.nosan.embedded.cassandra.process.CassandraProcess.\u003cinit\u003e(CassandraProcess.java:67)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:49)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:37)\n at de.flapdoodle.embed.process.runtime.Executable.start(Executable.java:108)\n at com.github.nosan.embedded.cassandra.Cassandra.start(Cassandra.java:179)\n at com.github.nosan.embedded.cassandra.CassandraTests.invoke(CassandraTests.java:77)\n at com.github.nosan.embedded.cassandra.CassandraTests.shouldNotStartCassandraIfCassandraHasBeenAlreadyStarted(CassandraTests.java:54)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:272)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)\n",
          "isError": false
        },
        {
          "failureName": "java.io.IOException",
          "failureDetail": "Could not start a process \u00271039\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \nPlease set or unset -Xmx and -Xms flags in pairs on jvm.options file.\n\n--- END --- ",
          "isError": true
        }
      ],
      "nbFailures": 1,
      "nbErrors": 2
    }
  ],
  "failingModule": "/root/workspace/nosan/embedded-cassandra/406188574/embedded-cassandra",
  "bugCommit": "https://github.com/nosan/embedded-cassandra/compare/116006e847d7...dd339a776ed2"
}