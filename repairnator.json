{
  "bugType": "only_fail",
  "hostname": "cyclone1",
  "repo": "CorfuDB/CorfuDB",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 3,
      "ComputeClasspath": 11,
      "ComputeTestDir": 0,
      "BuildProject": 186,
      "InitRepoToPush": 18,
      "ComputeSourceDir": 0,
      "ComputeModules": 0,
      "CloneRepository": 277,
      "CheckoutPatchedBuild": 0,
      "TestProject": 14181,
      "AssertFixer": 28,
      "GatherTestInformation": 9,
      "CommitPatch": 2
    },
    "NbFailingTests": 0,
    "NbErroringTests": 217,
    "NbSkippingTests": 1,
    "NbRunningTests": 500,
    "FailureNames": [
      "java.util.concurrent.CompletionException"
    ],
    "ReproductionDate": "Aug 13, 2018 9:59:37 PM",
    "BuggyBuildId": 415595994,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/CorfuDB/CorfuDB/builds/415595994",
    "BuggyBuildDate": "Aug 13, 2018 9:51:21 PM",
    "BugCommit": "d552c9b5d39bab76ba10f09404617a5e7952ce5e",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 98,
    "NbFileApp": 342,
    "NbFileTests": 120,
    "NbCPU": 8,
    "FreeMemory": 138993152,
    "TotalMemory": 566755328,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 168004320,
      "ComputeClasspath": 185516152,
      "ComputeTestDir": 171118840,
      "BuildProject": 156789208,
      "InitRepoToPush": 186579176,
      "ComputeSourceDir": 132538152,
      "ComputeModules": 126549480,
      "CloneRepository": 90607680,
      "CheckoutPatchedBuild": 138993152,
      "TestProject": 175501624,
      "AssertFixer": 223536432,
      "GatherTestInformation": 151544568,
      "CommitPatch": 138993152
    },
    "NbSucceedingTests": 283,
    "BugCommitUrl": "http://github.com/CorfuDB/CorfuDB/commit/d552c9b5d39bab76ba10f09404617a5e7952ce5e"
  },
  "failing-test-cases": [
    {
      "className": "org.corfudb.runtime.object.transactions.ImplicitTransactionsTest",
      "failingMethods": [],
      "erroringMethods": [
        "implicitTransactionalMethodAreNotNested",
        "runtimeExceptionAbortNestedTransaction",
        "implicitTransactionalMethodIsInTransaction"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "org.corfudb.runtime.concurrent.MapsAsMQsTest",
      "failingMethods": [],
      "erroringMethods": [
        "useMapsAsMQs"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.corfudb.runtime.object.transactions.UndoTest",
      "failingMethods": [],
      "erroringMethods": [
        "canRollbackWithoutUndo",
        "ckMultiStreamRollback2",
        "ckMultiStreamRollback",
        "ckCorrectUndo",
        "canUndoAfterNoUndo",
        "ckRollbackToRightPlace"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 6
    },
    {
      "className": "org.corfudb.runtime.concurrent.MultipleNonOverlappingTest",
      "failingMethods": [],
      "erroringMethods": [
        "testStress2",
        "testStress"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.corfudb.runtime.object.transactions.SnapshotTransactionContextTest",
      "failingMethods": [],
      "erroringMethods": [
        "snapshotReadable",
        "snapshotReadableWithConcurrentWrites",
        "testSnapshotTxNestedExplicitTx",
        "ensureEmptyWriteSetIsNotWritten",
        "testSnapshotTxNestedImplicitTx"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "org.corfudb.recovery.FastObjectLoaderTest",
      "failingMethods": [],
      "erroringMethods": [
        "doNotReconstructEmptyCheckpoints",
        "ignoreStreamForRuntimeButNotStreamTails",
        "canReadWithCacheDisable",
        "canReloadMaps",
        "canReadRankOnlyEntries",
        "canReadCheckPointMultipleStream",
        "canReadWithTruncatedCheckPoint",
        "canRollBack",
        "canFindTailsWithCheckPoints",
        "doNotFailBecauseTrimIsFirst",
        "canReadMultipleCheckPointMultipleStreams",
        "whiteListModeWithCheckPoint",
        "canReadCheckPointMultipleStreamTrimWithLeftOver",
        "whiteListMode",
        "doNotReconstructTransactionStreams",
        "doReconstructTransactionStreamTail",
        "ignoreStreamCheckpoint",
        "canRecreateMixOfMaps",
        "canReadWithEntriesInterleavingCPS",
        "canRecreateMapWithCorrectSerializer",
        "canLoadWithCustomBulkRead",
        "failBecauseOfTrimAnd1Attempt",
        "blackListAndWhiteListAreMutuallyExclusive",
        "canRecreateCorfuTableWithIndex",
        "canReadCheckPointMultipleStreamsTrim",
        "canFindTailsWithFailedCheckpoint",
        "canReadWhenTheUserHasNoCheckpoint",
        "canFindTailsRecoverSequencerMode",
        "canReadCheckpointWithoutTrim",
        "canFindTailsWithOnlyCheckpointAndTrim",
        "canReadHoles",
        "canReadLogTerminatedWithCheckpoint",
        "canRecreateCorfuTable",
        "canRecreateCustomWithSerializer"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 34
    },
    {
      "className": "org.corfudb.runtime.object.CorfuSMRObjectConcurrencyTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCorfuSharedCounterConcurrentReads"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.corfudb.runtime.view.QuorumReplicationStreamViewTest",
      "failingMethods": [],
      "erroringMethods": [
        "streamWillHoleFill",
        "canDoPreviousOnStream",
        "canReadWriteFromStreamWithoutBackpointers",
        "canReadWriteFromCachedStream",
        "canFindInStream",
        "streamWithHoleFill",
        "streamCanSurviveOverwriteException",
        "canReadWriteFromStreamConcurrent",
        "canSeekOnStream",
        "testRemainingUpToWithTrim",
        "prefixTrimThrowsException",
        "canReadWriteFromStream"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 12
    },
    {
      "className": "org.corfudb.runtime.concurrent.StreamSeekAtomicityTest",
      "failingMethods": [],
      "erroringMethods": [
        "ckCommitAtomicity",
        "ckCommitAtomicity3",
        "ckCommitAtomicity2"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "org.corfudb.runtime.checkpoint.CheckpointTrimTest",
      "failingMethods": [],
      "erroringMethods": [
        "testSuccessiveCheckpointTrim",
        "testCheckpointTrimDuringPlayback",
        "testCheckpointTrim"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "org.corfudb.infrastructure.ManagementServerTest",
      "failingMethods": [],
      "erroringMethods": [
        "triggerFailureHandler"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.corfudb.runtime.object.transactions.SequencerCacheTest",
      "failingMethods": [],
      "erroringMethods": [
        "testSequencerCacheTrim"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.corfudb.infrastructure.LayoutServerTest",
      "failingMethods": [],
      "erroringMethods": [
        "testReboot"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.corfudb.runtime.view.ManagementViewTest",
      "failingMethods": [],
      "erroringMethods": [
        "sequencerFailoverBackpointerCheck",
        "checkHeartbeat",
        "testSequencerFailover",
        "verifyStateTransferAndMerge",
        "testNodeHealing",
        "queryClusterStatus",
        "updateTrailingLayoutServers",
        "removeSingleNodeFailure"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "org.corfudb.runtime.view.LayoutSealTest",
      "failingMethods": [],
      "erroringMethods": [
        "successfulQuorumSeal",
        "failingQuorumSeal",
        "failingChainSeal",
        "successfulChainSeal"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "org.corfudb.infrastructure.ReconfigurationEventHandlerTest",
      "failingMethods": [],
      "erroringMethods": [
        "updateLayoutOnFailure"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.corfudb.runtime.clients.ManagementHandlerTest",
      "failingMethods": [],
      "erroringMethods": [
        "handleFailure"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.corfudb.runtime.view.StreamViewTest",
      "failingMethods": [],
      "erroringMethods": [
        "streamWillHoleFill",
        "canDoPreviousOnStream",
        "canReadWriteFromStreamWithoutBackpointers",
        "canReadWriteFromCachedStream",
        "canFindInStream",
        "streamWithHoleFill",
        "streamCanSurviveOverwriteException",
        "canReadWriteFromStreamConcurrent",
        "canSeekOnStream",
        "testRemainingUpToWithTrim",
        "prefixTrimThrowsException",
        "canReadWriteFromStream"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 12
    },
    {
      "className": "org.corfudb.infrastructure.DataStoreTest",
      "failingMethods": [],
      "erroringMethods": [
        "testDatastoreEviction"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.corfudb.runtime.CorfuRuntimeTest",
      "failingMethods": [],
      "erroringMethods": [
        "customNetworkExceptionHandler",
        "doesNotUpdateToLayoutWithSmallerEpoch",
        "checkValidLayout",
        "canInstantiateRuntimeWithoutTestRef",
        "doesNotAllowReadsAfterSealAndBeforeNewLayout"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "org.corfudb.infrastructure.FailureDetectorTest",
      "failingMethods": [],
      "erroringMethods": [
        "pollFailures",
        "pollNoFailures"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.corfudb.runtime.checkpoint.CheckpointTest",
      "failingMethods": [],
      "erroringMethods": [
        "undoCkpointTest",
        "prefixTrimTwiceAtSameAddress",
        "emptyCkpointTest",
        "periodicCkpointTest",
        "periodicCkpointTrimTest",
        "transactionalReadAfterCheckpoint",
        "periodicCkpointNoUpdatesTest",
        "delayedCkpointTest"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "org.corfudb.runtime.object.transactions.OptimisticTXConcurrencyTest",
      "failingMethods": [],
      "erroringMethods": [
        "testOptimismInterleaved",
        "testNoWriteConflictSimpleOptimistic",
        "concurrentTransactionsNonConflictingKeysSameHash",
        "finegrainedUpdatesDoNotConflict",
        "testOptimismThreaded",
        "checkRollbackNested",
        "testOpacityInterleaved",
        "testAbortWWInterleaved",
        "testAbortWWThreaded",
        "ensureEmptyWriteSetIsNotWritten",
        "testOpacityThreaded"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 11
    },
    {
      "className": "org.corfudb.runtime.object.transactions.OptimisticTransactionContextTest",
      "failingMethods": [],
      "erroringMethods": [
        "writeOnlyTransactionCommitsInMemory",
        "IHashNoConflicts",
        "checkConflictParameters",
        "customSameHashAlwaysConflicts",
        "readOwnWrites",
        "nestedTransactionCanBeAborted",
        "modifyingMultipleKeysCausesAbort",
        "collide16Bit",
        "ensureEmptyWriteSetIsNotWritten",
        "checkSlowWriterTxAbortsOnHoleFill",
        "ExtendedIHashNoConflicts",
        "customHasDoesNotConflict",
        "checkSlowWriterTxAbortsOnOverwriteDiffData",
        "checkSlowWriterTxSucceedsOnSameDataOverwrite",
        "IHashAlwaysConflicts",
        "otherThreadCannotReadOptimisticWrites",
        "nestedTransactionsCanBeReadDuringCommit",
        "customConflictObjectsNoConflictNoAbort",
        "OptimisticStreamGetUpdatedCorrectlyWithNestedTransaction",
        "nestedTransactionsAreIsolatedAcrossThreads",
        "threadShouldAbortAfterConflict",
        "customConflictObjectsConflictAborts"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 22
    },
    {
      "className": "org.corfudb.runtime.view.ChainReplicationViewTest",
      "failingMethods": [],
      "erroringMethods": [
        "ensureAllUnitsContainData",
        "canReadWriteToSingle",
        "canReadWriteToMultiple",
        "canReadWriteToSingleConcurrent"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "org.corfudb.runtime.object.CompileProxyTest",
      "failingMethods": [],
      "erroringMethods": [
        "testObjectCounterCASConcurrency",
        "testObjectCompoundWriteConcurrency",
        "testObjectCompoundSimple",
        "testObjectCounterConcurrencyStream",
        "testTrimmedObject",
        "testObjectMapSimple",
        "testObjectCounterWriteConcurrency",
        "testCorfuMapConcurrency",
        "testObjectCounterReadConcurrency",
        "testObjectCounterSimple",
        "testObjectCompoundWriteConcurrencyStream"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 11
    },
    {
      "className": "org.corfudb.runtime.view.stream.BackpointerStreamViewTest",
      "failingMethods": [],
      "erroringMethods": [
        "headOfStreamBackpointerTermination",
        "hasNextTest",
        "readQueueTest",
        "moreReadQueueTest",
        "seekSkipTest"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "org.corfudb.runtime.view.SequencerViewTest",
      "failingMethods": [],
      "erroringMethods": [
        "checkStreamTokensWork",
        "canQueryMultipleStreams",
        "tokensAreIncrementing",
        "canAcquireFirstToken",
        "checkTokenWorks",
        "checkBackPointersWork"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 6
    },
    {
      "className": "org.corfudb.runtime.object.transactions.StreamTest",
      "failingMethods": [],
      "erroringMethods": [
        "testBackpointersSvOverwriteRetry",
        "testOverWriteRetry",
        "testConcurrentStreamRW",
        "mixBackpointers",
        "testTxnOverwriteRetry",
        "sequencerOverflowTest",
        "sequencerTrimTest"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 7
    },
    {
      "className": "org.corfudb.runtime.object.CorfuSMRObjectProxyTest",
      "failingMethods": [],
      "erroringMethods": [
        "canOpenObjectWithTwoRuntimes",
        "canUseCustomSerializer",
        "canReadWriteToSingle",
        "canUseAnnotations",
        "doesNotResetSerializerIfMapAlreadyExists"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "org.corfudb.runtime.checkpoint.CheckpointSmokeTest",
      "failingMethods": [],
      "erroringMethods": [
        "emptyCheckPoint",
        "smoke1Test",
        "smoke2Test",
        "checkpointWriterInterleavedTest",
        "testEmptyMapCP",
        "checkpointWriterTest",
        "MultiCheckpointWriter2Test"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 7
    },
    {
      "className": "org.corfudb.infrastructure.HealingDetectorTest",
      "failingMethods": [],
      "erroringMethods": [
        "pollHealedNodes"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.corfudb.runtime.object.transactions.WriteWriteTXConcurrencyTest",
      "failingMethods": [],
      "erroringMethods": [
        "finegrainedUpdatesDoNotConflict",
        "testOpacityInterleaved",
        "testAbortWWInterleaved",
        "testRWConflictWWInterleaved",
        "testAbortWWThreaded",
        "testNoWriteConflictSimpleWW",
        "testRWConflictWWThreaded",
        "ensureEmptyWriteSetIsNotWritten",
        "simpleWWTest",
        "testOpacityThreaded"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 10
    },
    {
      "className": "org.corfudb.runtime.object.transactions.WriteAfterWriteTransactionContextTest",
      "failingMethods": [],
      "erroringMethods": [
        "concurrentModificationsCauseAbort",
        "ensureEmptyWriteSetIsNotWritten"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.corfudb.runtime.view.LayoutManagementViewTest",
      "failingMethods": [],
      "erroringMethods": [
        "removeNodeTest"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.corfudb.runtime.view.LayoutViewTest",
      "failingMethods": [],
      "erroringMethods": [
        "cannotSetLayoutWithWrongId",
        "delayedProposeTest",
        "getConsensusFromCurrentMembers1Node",
        "prepareReturnLayoutWithHighestRank",
        "canTolerateLayoutServerFailure",
        "getConsensusFromCurrentMembers3Nodes",
        "canSetLayout",
        "reconfigurationDuringDataOperations"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "org.corfudb.runtime.object.transactions.TXsFromTwoRuntimesTest",
      "failingMethods": [],
      "erroringMethods": [
        "staggeredTXsConflict",
        "staggeredTXsNoConflict"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    }
  ],
  "failingModule": "/root/workspace/CorfuDB/CorfuDB/415595994/test"
}