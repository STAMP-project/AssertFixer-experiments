{
  "bugType": "only_fail",
  "hostname": "cyclone1",
  "repo": "AdrianLeeElder/MobstersREST",
  "metrics": {
    "ReproductionDate": "Oct 7, 2018 6:27:52 PM",
    "BuggyBuildId": 438304691,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/AdrianLeeElder/MobstersREST/builds/438304691",
    "BuggyBuildDate": "Oct 7, 2018 6:28:39 PM",
    "BugCommit": "64896f84b145a8694a70d9a7db046dd2c4478502",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 146,
    "NbFileApp": 101,
    "NbFileTests": 13,
    "NbCPU": 8,
    "FreeMemory": 141318864,
    "TotalMemory": 400556032,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 118735928,
      "ComputeClasspath": 132225424,
      "ComputeTestDir": 108111992,
      "BuildProject": 111519712,
      "InitRepoToPush": 134989576,
      "ComputeSourceDir": 123257240,
      "ComputeModules": 105206768,
      "CloneRepository": 122359216,
      "CheckoutPatchedBuild": 141318864,
      "TestProject": 94599120,
      "AssertFixer": 203394880,
      "GatherTestInformation": 84832088,
      "CommitPatch": 141318864
    },
    "NbSucceedingTests": 20,
    "BugCommitUrl": "http://github.com/AdrianLeeElder/MobstersREST/commit/64896f84b145a8694a70d9a7db046dd2c4478502",
    "NbFailingTests": 6,
    "NbErroringTests": 3,
    "NbSkippingTests": 0,
    "NbRunningTests": 29,
    "FailureNames": [
      "java.lang.IllegalStateException",
      "java.lang.AssertionError",
      "java.lang.NullPointerException"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 0,
      "ComputeClasspath": 10,
      "ComputeTestDir": 0,
      "BuildProject": 98,
      "InitRepoToPush": 2,
      "ComputeSourceDir": 0,
      "ComputeModules": 0,
      "CloneRepository": 4,
      "CheckoutPatchedBuild": 0,
      "TestProject": 14,
      "AssertFixer": 54,
      "GatherTestInformation": 0,
      "CommitPatch": 1
    }
  },
  "failing-test-cases": [
    {
      "className": "com.adrian.mobsters.service.proxy.SSLProxyExtracterTest",
      "failingMethods": [
        "getProxiesFromPageString"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[]\u003e but was:\u003c[Proxy(id\u003dnull, host\u003dnull, port\u003d0, inUse\u003dfalse, attempts\u003d0, failures\u003d0, successes\u003d0, httpsEnabled\u003dfalse, country\u003dnull, sinceLastUpdate\u003d0, outdated\u003dfalse, isEliteProxy\u003dfalse)]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.adrian.mobsters.service.ActionJobServiceImplTest",
      "failingMethods": [],
      "erroringMethods": [
        "actionJobFailure",
        "runActionJob"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from http://chromedriver.storage.googleapis.com/index.html",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from http://chromedriver.storage.googleapis.com/index.html",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "com.adrian.mobsters.service.DailyActionJobInitializerImplTest",
      "failingMethods": [],
      "erroringMethods": [
        "schedule"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.adrian.mobsters.api.v1.MobsterControllerTest",
      "failingMethods": [
        "createNewMobster"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Status expected:\u003c201\u003e but was:\u003c200\u003e\n\n\u003e POST /api/v1/mobster\n\u003e WebTestClient-Request-Id: [1]\n\u003e Content-Type: [application/json;charset\u003dUTF-8]\n\n{\"id\":\"1\",\"username\":\"zombie\",\"password\":\"\",\"actionJobs\":null}\n\n\u003c 200 OK\n\u003c \n\nContent not available yet\n",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.adrian.mobsters.service.ActionJobCreatorTest",
      "failingMethods": [
        "getSingleActionJob",
        "getAllDailyActionJobsForGivenListOfUsernames",
        "actionJobHasSuppliedMobsterUsername",
        "createActionJobForAllMobsters"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[ActionJob(id\u003dnull, mobster\u003dMobster(id\u003d1, username\u003dzombie, password\u003d, actionJobs\u003dnull), actionList\u003d[Action(id\u003dnull, name\u003dLogin, running\u003dfalse, complete\u003dfalse, queued\u003dfalse)], daily\u003dtrue, buyProperty\u003dfalse, failureCount\u003d0, frozen\u003dfalse, queued\u003dfalse, running\u003dfalse, complete\u003dfalse)]\u003e but was:\u003c[ActionJob(id\u003dnull, mobster\u003dMobster(id\u003d1, username\u003dzombie, password\u003d, actionJobs\u003dnull), actionList\u003d[Action(id\u003dnull, name\u003dLogin, running\u003dfalse, complete\u003dfalse, queued\u003dfalse)], daily\u003dtrue, buyProperty\u003dfalse, failureCount\u003d0, frozen\u003dfalse, queued\u003dtrue, running\u003dfalse, complete\u003dfalse)]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[ActionJob(id\u003dnull, mobster\u003dMobster(id\u003d1, username\u003dzombie, password\u003d, actionJobs\u003dnull), actionList\u003d[Action(id\u003dnull, name\u003dLogin, running\u003dfalse, complete\u003dfalse, queued\u003dfalse)], daily\u003dtrue, buyProperty\u003dfalse, failureCount\u003d0, frozen\u003dfalse, queued\u003dfalse, running\u003dfalse, complete\u003dfalse)]\u003e but was:\u003c[ActionJob(id\u003dnull, mobster\u003dMobster(id\u003d1, username\u003dzombie, password\u003d, actionJobs\u003dnull), actionList\u003d[Action(id\u003dnull, name\u003dLogin, running\u003dfalse, complete\u003dfalse, queued\u003dfalse)], daily\u003dtrue, buyProperty\u003dfalse, failureCount\u003d0, frozen\u003dfalse, queued\u003dtrue, running\u003dfalse, complete\u003dfalse)]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[ActionJob(id\u003dnull, mobster\u003dMobster(id\u003d1, username\u003dzombie, password\u003d, actionJobs\u003dnull), actionList\u003d[Action(id\u003dnull, name\u003dLogin, running\u003dfalse, complete\u003dfalse, queued\u003dfalse)], daily\u003dtrue, buyProperty\u003dfalse, failureCount\u003d0, frozen\u003dfalse, queued\u003dfalse, running\u003dfalse, complete\u003dfalse)]\u003e but was:\u003c[ActionJob(id\u003dnull, mobster\u003dMobster(id\u003d1, username\u003dzombie, password\u003d, actionJobs\u003dnull), actionList\u003d[Action(id\u003dnull, name\u003dLogin, running\u003dfalse, complete\u003dfalse, queued\u003dfalse)], daily\u003dtrue, buyProperty\u003dfalse, failureCount\u003d0, frozen\u003dfalse, queued\u003dtrue, running\u003dfalse, complete\u003dfalse)]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[ActionJob(id\u003dnull, mobster\u003dMobster(id\u003d1, username\u003dzombie, password\u003d, actionJobs\u003dnull), actionList\u003d[Action(id\u003dnull, name\u003dLogin, running\u003dfalse, complete\u003dfalse, queued\u003dfalse)], daily\u003dtrue, buyProperty\u003dfalse, failureCount\u003d0, frozen\u003dfalse, queued\u003dfalse, running\u003dfalse, complete\u003dfalse)]\u003e but was:\u003c[ActionJob(id\u003dnull, mobster\u003dMobster(id\u003d1, username\u003dzombie, password\u003d, actionJobs\u003dnull), actionList\u003d[Action(id\u003dnull, name\u003dLogin, running\u003dfalse, complete\u003dfalse, queued\u003dfalse)], daily\u003dtrue, buyProperty\u003dfalse, failureCount\u003d0, frozen\u003dfalse, queued\u003dtrue, running\u003dfalse, complete\u003dfalse)]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 4,
      "nbErrors": 0
    }
  ],
  "failingModule": "/root/workspace/AdrianLeeElder/MobstersREST/438304691/backend",
  "bugCommit": "https://github.com/AdrianLeeElder/MobstersREST/compare/51a4f539e07e...64896f84b145"
}