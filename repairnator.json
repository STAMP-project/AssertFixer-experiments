{
  "bugType": "only_fail",
  "hostname": "cyclone1",
  "repo": "apache/calcite",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 3,
      "ComputeClasspath": 5,
      "ComputeTestDir": 0,
      "BuildProject": 147,
      "InitRepoToPush": 5,
      "ComputeSourceDir": 0,
      "ComputeModules": 0,
      "CloneRepository": 19,
      "CheckoutPatchedBuild": 0,
      "TestProject": 458,
      "AssertFixer": 40,
      "GatherTestInformation": 0,
      "CommitPatch": 3
    },
    "NbFailingTests": 4,
    "NbErroringTests": 2,
    "NbSkippingTests": 110,
    "NbRunningTests": 4659,
    "ReproductionDate": "Aug 3, 2018 2:34:29 PM",
    "BuggyBuildId": 411715460,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/apache/calcite/builds/411715460",
    "BuggyBuildDate": "Aug 3, 2018 2:31:36 PM",
    "BugCommit": "d42fb2aac709fc1addea9be0c17e693ddc9d8648",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 46,
    "NbFileApp": 1507,
    "NbFileTests": 214,
    "NbCPU": 8,
    "FreeMemory": 703664072,
    "TotalMemory": 1473249280,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 103402328,
      "ComputeClasspath": 104621008,
      "ComputeTestDir": 74068920,
      "BuildProject": 90076832,
      "InitRepoToPush": 106229296,
      "ComputeSourceDir": 674030136,
      "ComputeModules": 651192928,
      "CloneRepository": 114952992,
      "CheckoutPatchedBuild": 703664072,
      "TestProject": 77672064,
      "AssertFixer": 419306584,
      "GatherTestInformation": 133187400,
      "CommitPatch": 703664072
    },
    "NbSucceedingTests": 4653,
    "BugCommitUrl": "http://github.com/apache/calcite/commit/d42fb2aac709fc1addea9be0c17e693ddc9d8648",
    "FailureNames": [
      "java.lang.StackOverflowError",
      "java.lang.RuntimeException",
      "java.lang.AssertionError",
      "org.junit.ComparisonFailure"
    ]
  },
  "failing-test-cases": [
    {
      "className": "org.apache.calcite.test.SqlToRelConverterTest",
      "failingMethods": [
        "testCase"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "plan expected:\u003c...icalProject(EXPR$0\u003d[[CASE(\u003d(\u0027a\u0027, \u0027a\u0027), 1, null)]])\n  LogicalValues(t...\u003e but was:\u003c...icalProject(EXPR$0\u003d[[1]])\n  LogicalValues(t...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "org.apache.calcite.test.RexProgramTest",
      "failingMethods": [],
      "erroringMethods": [
        "testFuzzy"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Exception in testFuzzy",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.apache.calcite.rel.rel2sql.RelToSqlConverterTest",
      "failingMethods": [
        "testSimpleJoinConditionWithIsNullOperators"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: is \"SELECT *\\nFROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\nINNER JOIN \\\"foodmart\\\".\\\"customer\\\" ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" \u003d \\\"customer\\\".\\\"customer_id\\\" OR FALSE AND FALSE OR \\\"customer\\\".\\\"occupation\\\" IS NULL\\nINNER JOIN \\\"foodmart\\\".\\\"product\\\" ON \\\"sales_fact_1997\\\".\\\"product_id\\\" \u003d \\\"product\\\".\\\"product_id\\\" OR TRUE OR TRUE\"\n     but: was \"SELECT *\\nFROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\nINNER JOIN \\\"foodmart\\\".\\\"customer\\\" ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" \u003d \\\"customer\\\".\\\"customer_id\\\" OR FALSE OR \\\"customer\\\".\\\"occupation\\\" IS NULL,\\n\\\"foodmart\\\".\\\"product\\\"\"",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "org.apache.calcite.test.RelMetadataTest",
      "failingMethods": [
        "testPullUpPredicatesOnNullableConstant",
        "testPullUpPredicatesForExprsItr"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: [IS NOT DISTINCT FROM($0, CASE(\u003d(1, 1), null, 1))]\n     but: was \u003c[IS NULL($0)]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: is \u003c18\u003e\n     but: was \u003c17\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "org.apache.calcite.test.CoreQuidemTest",
      "failingMethods": [],
      "erroringMethods": [
        "test[5: quidem(sql/sub-query.iq)]"
      ],
      "failures": [
        {
          "failureName": "java.lang.StackOverflowError",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    }
  ],
  "failingModule": "/root/workspace/apache/calcite/411715460/core"
}