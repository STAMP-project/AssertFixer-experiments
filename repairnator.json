{
  "bugType": "only_fail",
  "hostname": "cyclone1",
  "repo": "nychollas09/PontoInteligente",
  "metrics": {
    "BugCommitUrl": "http://github.com/nychollas09/PontoInteligente/commit/0f4794a256a27d0214d699dd5562832d17791f98",
    "NbFailingTests": 0,
    "NbErroringTests": 12,
    "NbSkippingTests": 0,
    "NbRunningTests": 17,
    "ReproductionDate": "Sep 10, 2018 8:13:09 PM",
    "BuggyBuildId": 426806255,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/nychollas09/PontoInteligente/builds/426806255",
    "BuggyBuildDate": "Sep 10, 2018 8:09:52 PM",
    "BugCommit": "0f4794a256a27d0214d699dd5562832d17791f98",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 68,
    "NbFileApp": 14,
    "NbFileTests": 7,
    "NbCPU": 8,
    "FreeMemory": 102064096,
    "TotalMemory": 136839168,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 122184864,
      "ComputeClasspath": 98313616,
      "ComputeTestDir": 86372808,
      "BuildProject": 116610168,
      "InitRepoToPush": 99953264,
      "ComputeSourceDir": 95980960,
      "ComputeModules": 89887784,
      "CloneRepository": 126010264,
      "CheckoutPatchedBuild": 102064096,
      "TestProject": 113528176,
      "AssertFixer": 108539568,
      "GatherTestInformation": 109989384,
      "CommitPatch": 102064096
    },
    "NbSucceedingTests": 5,
    "FailureNames": [
      "org.mockito.exceptions.misusing.UnfinishedStubbingException",
      "org.springframework.dao.DataIntegrityViolationException"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 0,
      "ComputeClasspath": 11,
      "ComputeTestDir": 0,
      "BuildProject": 25,
      "InitRepoToPush": 0,
      "ComputeSourceDir": 0,
      "ComputeModules": 0,
      "CloneRepository": 3,
      "CheckoutPatchedBuild": 0,
      "TestProject": 13,
      "AssertFixer": 176,
      "GatherTestInformation": 0,
      "CommitPatch": 0
    }
  },
  "failing-test-cases": [
    {
      "className": "br.com.falcao.PontoInteligente.api.repositorys.EmpresaRepositoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "testBuscarPorCnpj"
      ],
      "failures": [
        {
          "failureName": "org.springframework.dao.DataIntegrityViolationException",
          "failureDetail": "not-null property references a null or transient value : br.com.falcao.PontoInteligente.api.entitys.Empresa.dataAtualizacao; nested exception is org.hibernate.PropertyValueException: not-null property references a null or transient value : br.com.falcao.PontoInteligente.api.entitys.Empresa.dataAtualizacao",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "br.com.falcao.PontoInteligente.api.repositorys.LancamentoRepositoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "testBuscarLancamentosPorFuncionarioIdPaginado",
        "testBuscarLancamentosPorFuncionarioId"
      ],
      "failures": [
        {
          "failureName": "org.springframework.dao.DataIntegrityViolationException",
          "failureDetail": "not-null property references a null or transient value : br.com.falcao.PontoInteligente.api.entitys.Empresa.dataAtualizacao; nested exception is org.hibernate.PropertyValueException: not-null property references a null or transient value : br.com.falcao.PontoInteligente.api.entitys.Empresa.dataAtualizacao",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataIntegrityViolationException",
          "failureDetail": "not-null property references a null or transient value : br.com.falcao.PontoInteligente.api.entitys.Empresa.dataAtualizacao; nested exception is org.hibernate.PropertyValueException: not-null property references a null or transient value : br.com.falcao.PontoInteligente.api.entitys.Empresa.dataAtualizacao",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "br.com.falcao.PontoInteligente.api.repositorys.FuncionarioRepositoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "testBuscarFuncionarioPorEmailECpfParaCpfInvalido",
        "testBuscarFuncionarioPorEmail",
        "testBuscarFuncionarioPorCpf",
        "testBuscarFuncionarioPorEmailOuCpfParaEmailInvalido",
        "testBuscarFuncionarioPorEmailECpf"
      ],
      "failures": [
        {
          "failureName": "org.springframework.dao.DataIntegrityViolationException",
          "failureDetail": "not-null property references a null or transient value : br.com.falcao.PontoInteligente.api.entitys.Empresa.dataAtualizacao; nested exception is org.hibernate.PropertyValueException: not-null property references a null or transient value : br.com.falcao.PontoInteligente.api.entitys.Empresa.dataAtualizacao",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataIntegrityViolationException",
          "failureDetail": "not-null property references a null or transient value : br.com.falcao.PontoInteligente.api.entitys.Empresa.dataAtualizacao; nested exception is org.hibernate.PropertyValueException: not-null property references a null or transient value : br.com.falcao.PontoInteligente.api.entitys.Empresa.dataAtualizacao",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataIntegrityViolationException",
          "failureDetail": "not-null property references a null or transient value : br.com.falcao.PontoInteligente.api.entitys.Empresa.dataAtualizacao; nested exception is org.hibernate.PropertyValueException: not-null property references a null or transient value : br.com.falcao.PontoInteligente.api.entitys.Empresa.dataAtualizacao",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataIntegrityViolationException",
          "failureDetail": "not-null property references a null or transient value : br.com.falcao.PontoInteligente.api.entitys.Empresa.dataAtualizacao; nested exception is org.hibernate.PropertyValueException: not-null property references a null or transient value : br.com.falcao.PontoInteligente.api.entitys.Empresa.dataAtualizacao",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataIntegrityViolationException",
          "failureDetail": "not-null property references a null or transient value : br.com.falcao.PontoInteligente.api.entitys.Empresa.dataAtualizacao; nested exception is org.hibernate.PropertyValueException: not-null property references a null or transient value : br.com.falcao.PontoInteligente.api.entitys.Empresa.dataAtualizacao",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "br.com.falcao.PontoInteligente.api.services.FuncionarioServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testPersistirFuncionario",
        "testBuscarFuncionarioPorId",
        "testBuscarFuncionarioPorEmail",
        "testBuscarFuncionarioPorCpf"
      ],
      "failures": [
        {
          "failureName": "org.mockito.exceptions.misusing.UnfinishedStubbingException",
          "failureDetail": "\nUnfinished stubbing detected here:\n-\u003e at br.com.falcao.PontoInteligente.api.services.FuncionarioServiceTest.setUp(FuncionarioServiceTest.java:36)\n\nE.g. thenReturn() may be missing.\nExamples of correct stubbing:\n    when(mock.isOk()).thenReturn(true);\n    when(mock.isOk()).thenThrow(exception);\n    doThrow(exception).when(mock).someVoidMethod();\nHints:\n 1. missing thenReturn()\n 2. you are trying to stub a final method, which is not supported\n 3: you are stubbing the behaviour of another mock inside before \u0027thenReturn\u0027 instruction if completed\n",
          "isError": true
        },
        {
          "failureName": "org.mockito.exceptions.misusing.UnfinishedStubbingException",
          "failureDetail": "\nUnfinished stubbing detected here:\n-\u003e at br.com.falcao.PontoInteligente.api.services.FuncionarioServiceTest.setUp(FuncionarioServiceTest.java:36)\n\nE.g. thenReturn() may be missing.\nExamples of correct stubbing:\n    when(mock.isOk()).thenReturn(true);\n    when(mock.isOk()).thenThrow(exception);\n    doThrow(exception).when(mock).someVoidMethod();\nHints:\n 1. missing thenReturn()\n 2. you are trying to stub a final method, which is not supported\n 3: you are stubbing the behaviour of another mock inside before \u0027thenReturn\u0027 instruction if completed\n",
          "isError": true
        },
        {
          "failureName": "org.mockito.exceptions.misusing.UnfinishedStubbingException",
          "failureDetail": "\nUnfinished stubbing detected here:\n-\u003e at br.com.falcao.PontoInteligente.api.services.FuncionarioServiceTest.setUp(FuncionarioServiceTest.java:36)\n\nE.g. thenReturn() may be missing.\nExamples of correct stubbing:\n    when(mock.isOk()).thenReturn(true);\n    when(mock.isOk()).thenThrow(exception);\n    doThrow(exception).when(mock).someVoidMethod();\nHints:\n 1. missing thenReturn()\n 2. you are trying to stub a final method, which is not supported\n 3: you are stubbing the behaviour of another mock inside before \u0027thenReturn\u0027 instruction if completed\n",
          "isError": true
        },
        {
          "failureName": "org.mockito.exceptions.misusing.UnfinishedStubbingException",
          "failureDetail": "\nUnfinished stubbing detected here:\n-\u003e at br.com.falcao.PontoInteligente.api.services.FuncionarioServiceTest.setUp(FuncionarioServiceTest.java:36)\n\nE.g. thenReturn() may be missing.\nExamples of correct stubbing:\n    when(mock.isOk()).thenReturn(true);\n    when(mock.isOk()).thenThrow(exception);\n    doThrow(exception).when(mock).someVoidMethod();\nHints:\n 1. missing thenReturn()\n 2. you are trying to stub a final method, which is not supported\n 3: you are stubbing the behaviour of another mock inside before \u0027thenReturn\u0027 instruction if completed\n",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    }
  ],
  "failingModule": "/root/workspace/nychollas09/PontoInteligente/426806255",
  "bugCommit": "https://github.com/nychollas09/PontoInteligente/compare/5f36fa4d70d8...0f4794a256a2"
}