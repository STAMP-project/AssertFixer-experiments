{
  "bugType": "only_fail",
  "hostname": "cyclone1",
  "repo": "pabender/JMRI",
  "metrics": {
    "NbFailingTests": 8,
    "NbErroringTests": 7,
    "NbSkippingTests": 2125,
    "NbRunningTests": 34140,
    "BugCommitUrl": "http://github.com/pabender/JMRI/commit/46ef143e961c3a8c9366048027b53ef7f9c5d7bc",
    "ReproductionDate": "Sep 29, 2018 3:09:48 PM",
    "BuggyBuildId": 434973913,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/pabender/JMRI/builds/434973913",
    "BuggyBuildDate": "Sep 29, 2018 3:10:26 PM",
    "BugCommit": "46ef143e961c3a8c9366048027b53ef7f9c5d7bc",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 138,
    "NbFileApp": 4083,
    "NbFileTests": 4551,
    "NbCPU": 8,
    "FreeMemory": 927729880,
    "TotalMemory": 3352821760,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 103501248,
      "ComputeClasspath": 152104400,
      "ComputeTestDir": 246457560,
      "BuildProject": 90132232,
      "InitRepoToPush": 156499320,
      "ComputeSourceDir": 914554464,
      "ComputeModules": 914552376,
      "CloneRepository": 262881160,
      "CheckoutPatchedBuild": 927729880,
      "TestProject": 71724664,
      "AssertFixer": 1155875816,
      "GatherTestInformation": 274780712,
      "CommitPatch": 927729880
    },
    "NbSucceedingTests": 34125,
    "FailureNames": [
      "org.junit.AssumptionViolatedException",
      "java.lang.AssertionError",
      "java.lang.NullPointerException"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 1,
      "ComputeClasspath": 9,
      "ComputeTestDir": 0,
      "BuildProject": 106,
      "InitRepoToPush": 58,
      "ComputeSourceDir": 1,
      "ComputeModules": 0,
      "CloneRepository": 224,
      "CheckoutPatchedBuild": 0,
      "TestProject": 1177,
      "AssertFixer": 187,
      "GatherTestInformation": 2,
      "CommitPatch": 42
    }
  },
  "failing-test-cases": [
    {
      "className": "jmri.jmrix.can.cbus.CbusDccOpsModeProgrammerTest",
      "failingMethods": [
        "testWriteCVNullListener"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Unexpected ERROR or higher messages emitted",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "jmri.jmrix.zimo.Mx1ProgrammerTest",
      "failingMethods": [],
      "erroringMethods": [
        "testWriteCVNullListener"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "jmri.jmrix.sprog.SprogProgrammerTest",
      "failingMethods": [
        "testWriteCVNullListener"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Unexpected ERROR or higher messages emitted",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "jmri.jmrix.rps.trackingpanel.RpsTrackingPanelTest",
      "failingMethods": [
        "testShow"
      ],
      "erroringMethods": [
        "testShow"
      ],
      "failures": [
        {
          "failureName": "org.junit.AssumptionViolatedException",
          "failureDetail": "got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Unexpected ERROR or higher messages emitted",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 1
    },
    {
      "className": "jmri.jmrix.dccpp.DCCppOpsModeProgrammerTest",
      "failingMethods": [],
      "erroringMethods": [
        "testWriteCVNullListener"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "jmri.jmrix.can.cbus.CbusProgrammerTest",
      "failingMethods": [],
      "erroringMethods": [
        "testWriteCVNullListener"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "jmri.implementation.DefaultConditionalTest",
      "failingMethods": [
        "testActionPlaySound"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Unexpected ERROR or higher messages emitted",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "jmri.jmrix.rps.swing.debugger.DebuggerTimePaneTest",
      "failingMethods": [
        "testCTor"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Unexpected ERROR or higher messages emitted",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "jmri.jmrix.openlcb.OlcbTurnoutInheritedTest",
      "failingMethods": [
        "testInvertedCommandClosed"
      ],
      "erroringMethods": [
        "testInvertedCommandClosed"
      ],
      "failures": [
        {
          "failureName": "org.junit.AssumptionViolatedException",
          "failureDetail": "got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Unexpected ERROR or higher messages emitted",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 1
    },
    {
      "className": "jmri.jmrix.tams.TamsProgrammerTest",
      "failingMethods": [],
      "erroringMethods": [
        "testWriteCVNullListener"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "jmri.jmrix.loconet.spjfile.SpjFileTest",
      "failingMethods": [
        "testPlayWav"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Level mismatch when looking for WARN message: \"line not supported: interface SourceDataLine supporting format PCM_UNSIGNED 11200.0 Hz, 8 bit, mono, 1 bytes/frame, \" found \"error opening line: javax.sound.sampled.LineUnavailableException\"",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "jmri.jmrix.maple.SerialSensorTest",
      "failingMethods": [
        "testDebounce"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Unexpected ERROR or higher messages emitted",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "jmri.jmrix.tams.TamsOpsModeProgrammerTest",
      "failingMethods": [],
      "erroringMethods": [
        "testWriteCVNullListener"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    }
  ],
  "failingModule": "/root/workspace/pabender/JMRI/434973913",
  "bugCommit": "https://github.com/pabender/JMRI/compare/9fd565f517e8...46ef143e961c"
}