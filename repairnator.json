{
  "bugType": "only_fail",
  "hostname": "cyclone1",
  "repo": "spring-cloud/spring-cloud-stream",
  "metrics": {
    "ReproductionDate": "Aug 4, 2018 3:43:11 AM",
    "BuggyBuildId": 411977877,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/spring-cloud/spring-cloud-stream/builds/411977877",
    "BuggyBuildDate": "Aug 4, 2018 3:39:04 AM",
    "BugCommit": "4e787edbb45fbab987a3bff9172e347543f8ac88",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 70,
    "NbFileApp": 185,
    "NbFileTests": 121,
    "NbCPU": 8,
    "FreeMemory": 169667712,
    "TotalMemory": 361234432,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 184306392,
      "ComputeClasspath": 82691880,
      "ComputeTestDir": 114392832,
      "BuildProject": 167937520,
      "InitRepoToPush": 85282016,
      "ComputeSourceDir": 85972520,
      "ComputeModules": 509426248,
      "CloneRepository": 103202992,
      "CheckoutPatchedBuild": 169667712,
      "TestProject": 155414416,
      "AssertFixer": 203702072,
      "GatherTestInformation": 141842120,
      "CommitPatch": 169667712
    },
    "NbSucceedingTests": 55,
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 3,
      "ComputeClasspath": 23,
      "ComputeTestDir": 0,
      "BuildProject": 236,
      "InitRepoToPush": 1,
      "ComputeSourceDir": 0,
      "ComputeModules": 0,
      "CloneRepository": 5,
      "CheckoutPatchedBuild": 0,
      "TestProject": 42,
      "AssertFixer": 4,
      "GatherTestInformation": 0,
      "CommitPatch": 1
    },
    "NbFailingTests": 1,
    "NbErroringTests": 60,
    "NbSkippingTests": 1,
    "NbRunningTests": 116,
    "FailureNames": [
      "java.lang.IllegalStateException",
      "java.lang.AssertionError",
      "org.springframework.beans.factory.BeanDefinitionStoreException",
      "org.springframework.beans.factory.support.BeanDefinitionOverrideException"
    ],
    "BugCommitUrl": "http://github.com/spring-cloud/spring-cloud-stream/commit/4e787edbb45fbab987a3bff9172e347543f8ac88"
  },
  "failing-test-cases": [
    {
      "className": "org.springframework.cloud.stream.binder.SinkBindingWithDefaultsTests",
      "failingMethods": [],
      "erroringMethods": [
        "testSourceOutputChannelBound"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.springframework.cloud.stream.binder.ArbitraryInterfaceWithDefaultsTests",
      "failingMethods": [],
      "erroringMethods": [
        "testArbitraryInterfaceChannelsBound"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.springframework.cloud.stream.binding.InvalidBindingConfigurationTests",
      "failingMethods": [
        "testDuplicateBeanByBindingConfig"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": " Expecting:  \u003c\"Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.utils.MockBinderRegistryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.\"\u003e to contain:  \u003c\"bean definition with this name already exists\"\u003e ",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "org.springframework.cloud.stream.binder.tck.ContentTypeTckTests",
      "failingMethods": [],
      "erroringMethods": [
        "byteArrayMessageToStringJsonMessageStreamListener",
        "stringToMapMessageStreamListenerOriginalContentType",
        "overrideMessageConverter_defaultContentTypeBinding",
        "kryo_pojoToPojo",
        "byteArrayToPojoInboundContentTypeHeader",
        "pojoToByteArray",
        "stringToPojoInboundContentTypeBinding",
        "byteArrayToPojoInboundContentTypeBinding",
        "pojoToByteArrayOutboundContentTypeBinding",
        "stringToMapStreamListener",
        "pojoMessageToStringMessageServiceActivator",
        "byteArrayToByteArray",
        "byteArrayToByteArrayInboundOutboundContentTypeBinding",
        "pojoToStringOutboundContentTypeBinding",
        "toCollectionWithParameterizedType",
        "kryo_pojoToPojoContentTypeHeader",
        "customMessageConverter_defaultContentTypeBinding",
        "withInternalPipeline",
        "byteArrayMessageToStringMessageStreamListener",
        "pojoToPojo",
        "pojoToString",
        "stringToMapMessageStreamListener",
        "_jsonToPojoWrongDefaultContentTypeProperty",
        "stringToPojoInboundContentTypeHeader",
        "pojoMessageToStringMessage",
        "_toStringDefaultContentTypePropertyUnknownContentType"
      ],
      "failures": [
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 26
    },
    {
      "className": "org.springframework.cloud.stream.binder.ArbitraryInterfaceWithBindingTargetsTests",
      "failingMethods": [],
      "erroringMethods": [
        "testArbitraryInterfaceChannelsBound"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.springframework.cloud.stream.binder.SourceBindingWithDefaultsTests",
      "failingMethods": [],
      "erroringMethods": [
        "testSourceOutputChannelBound"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.springframework.cloud.stream.binder.BinderAwareChannelResolverTests",
      "failingMethods": [],
      "erroringMethods": [
        "propertyPassthrough",
        "resolveNonRegisteredChannel",
        "resolveChannel"
      ],
      "failures": [
        {
          "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
          "failureDetail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
          "failureDetail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
          "failureDetail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "org.springframework.cloud.stream.binder.SourceBindingWithGlobalPropertiesOnlyTest",
      "failingMethods": [],
      "erroringMethods": [
        "testGlobalPropertiesSet"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.springframework.cloud.stream.interceptor.BoundChannelsInterceptedTest",
      "failingMethods": [],
      "erroringMethods": [
        "testBoundChannelsIntercepted"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.springframework.cloud.stream.binder.ProcessorBindingsWithDefaultsTests",
      "failingMethods": [],
      "erroringMethods": [
        "testSourceOutputChannelBound"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.springframework.cloud.stream.binder.ExtendedPropertiesBinderAwareChannelResolverTests",
      "failingMethods": [],
      "erroringMethods": [
        "propertyPassthrough",
        "resolveNonRegisteredChannel",
        "resolveChannel"
      ],
      "failures": [
        {
          "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
          "failureDetail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
          "failureDetail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
          "failureDetail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "org.springframework.cloud.stream.binder.SourceBindingWithGlobalPropertiesTest",
      "failingMethods": [],
      "erroringMethods": [
        "testGlobalPropertiesSet"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.springframework.cloud.stream.binder.LifecycleBinderTests",
      "failingMethods": [],
      "erroringMethods": [
        "testOnlySmartLifecyclesStarted"
      ],
      "failures": [
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.utils.MockBinderRegistryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.springframework.cloud.stream.binding.CustomPartitionedProducerTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCustomPartitionedProducerAsSingletons",
        "testCustomPartitionedProducer",
        "testCustomPartitionedProducerByName"
      ],
      "failures": [
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.utils.MockBinderRegistryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.utils.MockBinderRegistryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.utils.MockBinderRegistryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "org.springframework.cloud.stream.config.SpelExpressionConverterConfigurationTests",
      "failingMethods": [],
      "erroringMethods": [
        "converterCorrectlyInstalled"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.springframework.cloud.stream.binder.InputOutputBindingOrderTest",
      "failingMethods": [],
      "erroringMethods": [
        "testInputOutputBindingOrder"
      ],
      "failures": [
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.utils.MockBinderRegistryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.springframework.cloud.stream.binder.ErrorBindingTests",
      "failingMethods": [],
      "erroringMethods": [
        "testErrorChannelNotBoundByDefault"
      ],
      "failures": [
        {
          "failureName": "org.springframework.beans.factory.support.BeanDefinitionOverrideException",
          "failureDetail": "Invalid bean definition with name \u0027binderTypeRegistry\u0027 defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration: Cannot register bean definition [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.utils.MockBinderRegistryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.utils.MockBinderRegistryConfiguration] for bean \u0027binderTypeRegistry\u0027: There is already [Root bean: class [null]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d3; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dorg.springframework.cloud.stream.config.BinderFactoryConfiguration; factoryMethodName\u003dbinderTypeRegistry; initMethodName\u003dnull; destroyMethodName\u003d(inferred); defined in org.springframework.cloud.stream.config.BinderFactoryConfiguration] bound.",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.springframework.cloud.stream.binder.PollableConsumerTests",
      "failingMethods": [],
      "erroringMethods": [
        "testConvertSimpler",
        "testConvertMap",
        "testErrors",
        "testEmbedded",
        "testConvertSimple",
        "testSimple",
        "testConvertList",
        "testErrorsNoRetry"
      ],
      "failures": [
        {
          "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
          "failureDetail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
          "failureDetail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
          "failureDetail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
          "failureDetail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
          "failureDetail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
          "failureDetail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
          "failureDetail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
          "isError": true
        },
        {
          "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
          "failureDetail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "org.springframework.cloud.stream.binder.SinkBindingWithDefaultTargetsTests",
      "failingMethods": [],
      "erroringMethods": [
        "testSourceOutputChannelBound"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.springframework.cloud.stream.binder.SourceBindingWithBindingTargetsTests",
      "failingMethods": [],
      "erroringMethods": [
        "testSourceOutputChannelBound"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.springframework.cloud.stream.config.BindingServiceConfigurationTests",
      "failingMethods": [],
      "erroringMethods": [
        "valdateImportedConfiguartionHandlerPostProcessing"
      ],
      "failures": [
        {
          "failureName": "org.springframework.beans.factory.BeanDefinitionStoreException",
          "failureDetail": "Invalid bean definition with name \u0027integrationArgumentResolverMessageConverter\u0027 defined in org.springframework.cloud.stream.config.ContentTypeConfiguration: @Bean definition illegally overridden by existing bean definition: Generic bean: class [org.springframework.integration.support.converter.ConfigurableCompositeMessageConverter]; scope\u003d; abstract\u003dfalse; lazyInit\u003dfalse; autowireMode\u003d0; dependencyCheck\u003d0; autowireCandidate\u003dtrue; primary\u003dfalse; factoryBeanName\u003dnull; factoryMethodName\u003dnull; initMethodName\u003dnull; destroyMethodName\u003dnull",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.springframework.cloud.stream.binder.ProcessorBindingWithBindingTargetsTests",
      "failingMethods": [],
      "erroringMethods": [
        "testSourceOutputChannelBound"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.springframework.cloud.stream.partitioning.PartitionedConsumerTest",
      "failingMethods": [],
      "erroringMethods": [
        "testBindingPartitionedConsumer"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    }
  ],
  "failingModule": "/root/workspace/spring-cloud/spring-cloud-stream/411977877/spring-cloud-stream"
}