{
  "bugType": "only_fail",
  "hostname": "cyclone1",
  "repo": "INRIA/spoon",
  "metrics": {
    "BugCommitUrl": "http://github.com/INRIA/spoon/commit/894fb45996bcbe52b0ef9f2241f10b3652fc8479",
    "NbFailingTests": 24,
    "NbErroringTests": 3,
    "NbSkippingTests": 5,
    "NbRunningTests": 1560,
    "FailureNames": [
      "java.lang.AssertionError",
      "java.lang.NullPointerException",
      "spoon.compiler.ModelBuildingException"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 7,
      "ComputeClasspath": 4,
      "ComputeTestDir": 0,
      "BuildProject": 88,
      "InitRepoToPush": 6,
      "ComputeSourceDir": 3,
      "ComputeModules": 0,
      "CloneRepository": 9,
      "CheckoutPatchedBuild": 0,
      "TestProject": 644,
      "AssertFixer": 17,
      "GatherTestInformation": 0,
      "CommitPatch": 5
    },
    "ReproductionDate": "Sep 24, 2018 4:20:43 PM",
    "BuggyBuildId": 432488060,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/INRIA/spoon/builds/432488060",
    "BuggyBuildDate": "Sep 24, 2018 4:20:41 PM",
    "BugCommit": "894fb45996bcbe52b0ef9f2241f10b3652fc8479",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 33,
    "NbFileApp": 638,
    "NbFileTests": 703,
    "NbCPU": 8,
    "FreeMemory": 413862904,
    "TotalMemory": 914358272,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 72512488,
      "ComputeClasspath": 99429312,
      "ComputeTestDir": 91465712,
      "BuildProject": 64500744,
      "InitRepoToPush": 100052368,
      "ComputeSourceDir": 411535000,
      "ComputeModules": 411535000,
      "CloneRepository": 114543376,
      "CheckoutPatchedBuild": 413862904,
      "TestProject": 99015520,
      "AssertFixer": 353402328,
      "GatherTestInformation": 73713008,
      "CommitPatch": 413862904
    },
    "NbSucceedingTests": 1533
  },
  "failing-test-cases": [
    {
      "className": "spoon.test.refactoring.RefactoringTest",
      "failingMethods": [
        "testRefactoringClassChangeAllCtTypeReferenceAssociatedWithClassConcerned"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected null, but was:\u003cpublic class AClass extends spoon.test.refactoring.testclasses.AbstractClass {\n    public AClass(java.lang.String arg0) {\n    }\n\n    public AClass() {\n    }\n\n    public boolean isMySubclass(java.lang.Object arg0) {\n    }\n\n    private final java.lang.String string;\n}\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.api.APITest",
      "failingMethods": [
        "testInvalidateCacheOfCompiler"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.template.TemplateTest",
      "failingMethods": [
        "substituteTypeAccessReference"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Can\u0027t compile testclasses because This method must return a result of type Spliterator\u003cT\u003e at /root/workspace/INRIA/spoon/432488060/target/spooned/test/template/testclasses/java/lang/Iterable.java:7",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.main.MainTest",
      "failingMethods": [
        "testTest",
        "test",
        "testMain_checkShadow",
        "testMyRoleInParent"
      ],
      "erroringMethods": [
        "testMain_checkModifiers",
        "testSourcePositionTreeIsCorrectlyOrdered"
      ],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "java.io.File is not clearly a test class, it should contain \u0027test\u0027 either in its package name or class name",
          "isError": false
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected same:\u003ctype\u003e was not:\u003cannotationType\u003e",
          "isError": false
        }
      ],
      "nbFailures": 4,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.methodreference.MethodReferenceTest",
      "failingMethods": [
        "testNoClasspathSuperExecutable"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.imports.ImportTest",
      "failingMethods": [
        "testStaticMethodWithDifferentClassSameNameJava7NoCollision",
        "testJavaLangIsConsideredAsImportedButNotForSubPackages",
        "testStaticMethodWithDifferentClassSameNameCollision",
        "testStaticMethodWithDifferentClassSameNameJava3NoCollision",
        "testMultipleCU"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Can\u0027t compile spooned-staticjava3 because Syntax error, parameterized types are only available if source level is 1.5 or greater at /root/workspace/INRIA/spoon/432488060/target/spooned-staticjava3/junit/textui/TestRunner.java:57",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Can\u0027t compile spooned-staticmethod because This method must return a result of type int at /root/workspace/INRIA/spoon/432488060/target/spooned-staticmethod/junit/framework/TestCase.java:101",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Can\u0027t compile spooned-multiplecu because Default methods are allowed only at source level 1.8 or above at /root/workspace/INRIA/spoon/432488060/target/spooned-multiplecu/java/util/function/BiFunction.java:6",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Can\u0027t compile spooned-javalang-sub because The blank final field serialVersionUID may not have been initialized at /root/workspace/INRIA/spoon/432488060/target/spooned-javalang-sub/java/lang/IllegalArgumentException.java:17",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Can\u0027t compile spooned-apache because Syntax error, parameterized types are only available if source level is 1.5 or greater at /root/workspace/INRIA/spoon/432488060/target/spooned-apache/junit/textui/TestRunner.java:57",
          "isError": false
        }
      ],
      "nbFailures": 5,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.ctClass.CtClassTest",
      "failingMethods": [],
      "erroringMethods": [
        "testDefaultConstructorAreOk"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "Native methods do not specify a body at /root/workspace/INRIA/spoon/432488060/Object.java:14",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.imports.ImportScannerTest",
      "failingMethods": [
        "testImportOnSpoon"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Import scanner missed 2 imports expected:\u003c0\u003e but was:\u003c2\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.variable.AccessFullyQualifiedFieldTest",
      "failingMethods": [
        "testStaticImportWithAutoImport",
        "testNoFQNAndStaticImport",
        "testNoFQNWhenShadowedByField",
        "testNoFQNWhenUsedInLoop",
        "testNoFQNWhenUsedInTryCatch",
        "testNoFQNWhenShadowedByLocalVariable"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "The java file should contain import for Launcher",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "The java file should contain import for Launcher",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "The result should contain a static import for spoon.Launcher.SPOONED_CLASSES",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "The java file should contain import for Launcher",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "The result should contain a static import for spoon.Launcher.SPOONED_CLASSES",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "The java file should contain import for Launcher",
          "isError": false
        }
      ],
      "nbFailures": 6,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.prettyprinter.PrinterTest",
      "failingMethods": [
        "testAutoimportModeDontImportUselessStatic",
        "testJDTBatchCompilerCanBeBuild"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "The result should contain import type: ",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Can\u0027t compile spoon-jdtbatchcompiler because Illegal modifier for the member enum Process; only public, protected, private \u0026 static are permitted at /root/workspace/INRIA/spoon/432488060/target/spoon-jdtbatchcompiler/spoon/support/compiler/SpoonProgress.java:13",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.filters.FilterTest",
      "failingMethods": [
        "testInvocationFilterWithExecutableInLibrary"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected null, but was:\u003cpublic int size() {\n}\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.compilation.CompilationTest",
      "failingMethods": [
        "testExoticClassLoader"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c3\u003e but was:\u003c2\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    }
  ],
  "failingModule": "/root/workspace/INRIA/spoon/432488060"
}