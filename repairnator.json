{
  "bugType": "only_fail",
  "hostname": "cyclone1",
  "repo": "scobal/seyren",
  "metrics": {
    "BugCommitUrl": "http://github.com/scobal/seyren/commit/1d3ac3f2e7a61e26ce7ef37de16e24b239497f6a",
    "NbFailingTests": 2,
    "NbErroringTests": 7,
    "NbSkippingTests": 0,
    "NbRunningTests": 106,
    "ReproductionDate": "Sep 24, 2018 1:50:34 PM",
    "BuggyBuildId": 432431322,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/scobal/seyren/builds/432431322",
    "BuggyBuildDate": "Sep 24, 2018 1:50:47 PM",
    "BugCommit": "1d3ac3f2e7a61e26ce7ef37de16e24b239497f6a",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 52,
    "NbFileApp": 73,
    "NbFileTests": 23,
    "NbCPU": 8,
    "FreeMemory": 229732312,
    "TotalMemory": 832045056,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 107211200,
      "ComputeClasspath": 130298552,
      "ComputeTestDir": 122096264,
      "BuildProject": 99667384,
      "InitRepoToPush": 131511632,
      "ComputeSourceDir": 219996352,
      "ComputeModules": 219996352,
      "CloneRepository": 119780456,
      "CheckoutPatchedBuild": 229732312,
      "TestProject": 98027488,
      "AssertFixer": 229737248,
      "GatherTestInformation": 93168672,
      "CommitPatch": 229732312
    },
    "NbSucceedingTests": 97,
    "FailureNames": [
      "com.github.restdriver.clientdriver.exception.ClientDriverFailedExpectationException",
      "java.lang.AssertionError"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 2,
      "ComputeClasspath": 5,
      "ComputeTestDir": 0,
      "BuildProject": 87,
      "InitRepoToPush": 0,
      "ComputeSourceDir": 0,
      "ComputeModules": 0,
      "CloneRepository": 3,
      "CheckoutPatchedBuild": 0,
      "TestProject": 11,
      "AssertFixer": 52,
      "GatherTestInformation": 0,
      "CommitPatch": 0
    }
  },
  "failing-test-cases": [
    {
      "className": "com.seyren.core.util.graphite.GraphiteHttpClientTest",
      "failingMethods": [],
      "erroringMethods": [
        "gettingChartFromGraphiteIsHandledWhenWarnThresholdIsProvided",
        "authIsUsedGettingChartFromGraphite",
        "axesCanBeHiddenWhenGettingChartFromGraphite",
        "gettingChartFromGraphiteIsHandledWhenBothThresholdsAreProvided",
        "gettingChartFromGraphiteIsHandledWhenErrorThresholdIsProvided",
        "gettingChartFromGraphiteIsHandledWhenThresholdsAreNotProvided",
        "legendCanBeHiddenWhenGettingChartFromGraphite"
      ],
      "failures": [
        {
          "failureName": "com.github.restdriver.clientdriver.exception.ClientDriverFailedExpectationException",
          "failureDetail": "1 unexpected request(s):\n  HttpRealRequest: GET /render/; PARAMS: [bgcolor\u003d[black],uniq\u003d[1537789936280],fgcolor\u003d[white],width\u003d[300],from\u003d[-90minutes],hideAxes\u003d[true],hideLegend\u003d[false],target\u003d[hello.world],height\u003d[200],colorList\u003d[blue,green,red,purple,brown,yellow,aqua,grey,magenta,pink,gold,rose]]; HEADERS: [host: localhost:35773,connection: keep-alive,accept-encoding: gzip,deflate,user-agent: Apache-HttpClient/4.3.6 (java 1.5)]; CONTENT TYPE null; BODY ;\n\n1 expectation(s):\n  expected: 1, actual: 0 -\u003e ClientDriverRequest: GET \"/render/\"; ANY PARAMS: false; PARAMS: [uniq\u003d[A string matching the regular expression: [0-9]+],width\u003d[\"300\"],from\u003d[\"-90minutes\"],hideAxes\u003d[\"true\"],hideLegend\u003d[\"false\"],target\u003d[\"hello.world\"],height\u003d[\"200\"]]; HEADERS: []; NOT HEADERS: []; CONTENT TYPE null; BODY null;",
          "isError": true
        },
        {
          "failureName": "com.github.restdriver.clientdriver.exception.ClientDriverFailedExpectationException",
          "failureDetail": "1 unexpected request(s):\n  HttpRealRequest: GET /render/; PARAMS: [bgcolor\u003d[black],uniq\u003d[1537789936321],fgcolor\u003d[white],width\u003d[300],from\u003d[-1hours],hideAxes\u003d[false],hideLegend\u003d[false],target\u003d[hello.world, alias(dashed(color(constantLine(3.2),\"yellow\")),\"warn level\")],height\u003d[200],colorList\u003d[blue,green,red,purple,brown,yellow,aqua,grey,magenta,pink,gold,rose]]; HEADERS: [host: localhost:44550,connection: keep-alive,accept-encoding: gzip,deflate,user-agent: Apache-HttpClient/4.3.6 (java 1.5)]; CONTENT TYPE null; BODY ;\n\n1 expectation(s):\n  expected: 1, actual: 0 -\u003e ClientDriverRequest: GET \"/render/\"; ANY PARAMS: false; PARAMS: [uniq\u003d[A string matching the regular expression: [0-9]+],width\u003d[\"300\"],from\u003d[\"-1hours\"],hideAxes\u003d[\"false\"],hideLegend\u003d[\"false\"],target\u003d[\"alias(dashed(color(constantLine(3.2),\\\"yellow\\\")),\\\"warn level\\\")\", \"hello.world\"],height\u003d[\"200\"]]; HEADERS: []; NOT HEADERS: []; CONTENT TYPE null; BODY null;",
          "isError": true
        },
        {
          "failureName": "com.github.restdriver.clientdriver.exception.ClientDriverFailedExpectationException",
          "failureDetail": "1 unexpected request(s):\n  HttpRealRequest: GET /render/; PARAMS: [bgcolor\u003d[black],uniq\u003d[1537789936411],fgcolor\u003d[white],width\u003d[300],from\u003d[-1hours],hideAxes\u003d[false],hideLegend\u003d[false],target\u003d[hello.world],height\u003d[200],colorList\u003d[blue,green,red,purple,brown,yellow,aqua,grey,magenta,pink,gold,rose]]; HEADERS: [authorization: Basic c2V5cmVuOnMzeXIzTg\u003d\u003d,host: localhost:38490,connection: keep-alive,accept-encoding: gzip,deflate,user-agent: Apache-HttpClient/4.3.6 (java 1.5)]; CONTENT TYPE null; BODY ;\n\n1 expectation(s):\n  expected: 1, actual: 0 -\u003e ClientDriverRequest: GET \"/render/\"; ANY PARAMS: false; PARAMS: [uniq\u003d[A string matching the regular expression: [0-9]+],width\u003d[\"300\"],from\u003d[\"-1hours\"],hideAxes\u003d[\"false\"],hideLegend\u003d[\"false\"],target\u003d[\"hello.world\"],height\u003d[\"200\"]]; HEADERS: [authorization: \"Basic c2V5cmVuOnMzeXIzTg\u003d\u003d\"]; NOT HEADERS: []; CONTENT TYPE null; BODY null;",
          "isError": true
        },
        {
          "failureName": "com.github.restdriver.clientdriver.exception.ClientDriverFailedExpectationException",
          "failureDetail": "1 unexpected request(s):\n  HttpRealRequest: GET /render/; PARAMS: [bgcolor\u003d[black],uniq\u003d[1537789936436],fgcolor\u003d[white],width\u003d[300],from\u003d[-1hours],hideAxes\u003d[false],hideLegend\u003d[false],target\u003d[alias(dashed(color(constantLine(5.6),\"red\")),\"error level\"), hello.world],height\u003d[200],colorList\u003d[blue,green,red,purple,brown,yellow,aqua,grey,magenta,pink,gold,rose]]; HEADERS: [authorization: Basic c2V5cmVuOnMzeXIzTg\u003d\u003d,host: localhost:39818,connection: keep-alive,accept-encoding: gzip,deflate,user-agent: Apache-HttpClient/4.3.6 (java 1.5)]; CONTENT TYPE null; BODY ;\n\n1 expectation(s):\n  expected: 1, actual: 0 -\u003e ClientDriverRequest: GET \"/render/\"; ANY PARAMS: false; PARAMS: [uniq\u003d[A string matching the regular expression: [0-9]+],width\u003d[\"300\"],from\u003d[\"-1hours\"],hideAxes\u003d[\"false\"],hideLegend\u003d[\"false\"],target\u003d[\"alias(dashed(color(constantLine(5.6),\\\"red\\\")),\\\"error level\\\")\", \"hello.world\"],height\u003d[\"200\"]]; HEADERS: []; NOT HEADERS: []; CONTENT TYPE null; BODY null;",
          "isError": true
        },
        {
          "failureName": "com.github.restdriver.clientdriver.exception.ClientDriverFailedExpectationException",
          "failureDetail": "1 unexpected request(s):\n  HttpRealRequest: GET /render/; PARAMS: [bgcolor\u003d[black],uniq\u003d[1537789936476],fgcolor\u003d[white],width\u003d[300],from\u003d[-1hours],hideAxes\u003d[false],hideLegend\u003d[false],target\u003d[hello.world],height\u003d[200],colorList\u003d[blue,green,red,purple,brown,yellow,aqua,grey,magenta,pink,gold,rose]]; HEADERS: [host: localhost:39208,connection: keep-alive,accept-encoding: gzip,deflate,user-agent: Apache-HttpClient/4.3.6 (java 1.5)]; CONTENT TYPE null; BODY ;\n\n1 expectation(s):\n  expected: 1, actual: 0 -\u003e ClientDriverRequest: GET \"/render/\"; ANY PARAMS: false; PARAMS: [uniq\u003d[A string matching the regular expression: [0-9]+],width\u003d[\"300\"],from\u003d[\"-1hours\"],hideAxes\u003d[\"false\"],hideLegend\u003d[\"false\"],target\u003d[\"hello.world\"],height\u003d[\"200\"]]; HEADERS: []; NOT HEADERS: []; CONTENT TYPE null; BODY null;",
          "isError": true
        },
        {
          "failureName": "com.github.restdriver.clientdriver.exception.ClientDriverFailedExpectationException",
          "failureDetail": "1 unexpected request(s):\n  HttpRealRequest: GET /render/; PARAMS: [bgcolor\u003d[black],uniq\u003d[1537789936496],fgcolor\u003d[white],width\u003d[300],from\u003d[-1hours],hideAxes\u003d[false],hideLegend\u003d[false],target\u003d[alias(dashed(color(constantLine(5.6),\"red\")),\"error level\"), hello.world, alias(dashed(color(constantLine(3.2),\"yellow\")),\"warn level\")],height\u003d[200],colorList\u003d[blue,green,red,purple,brown,yellow,aqua,grey,magenta,pink,gold,rose]]; HEADERS: [host: localhost:46535,connection: keep-alive,accept-encoding: gzip,deflate,user-agent: Apache-HttpClient/4.3.6 (java 1.5)]; CONTENT TYPE null; BODY ;\n\n1 expectation(s):\n  expected: 1, actual: 0 -\u003e ClientDriverRequest: GET \"/render/\"; ANY PARAMS: false; PARAMS: [uniq\u003d[A string matching the regular expression: [0-9]+],width\u003d[\"300\"],from\u003d[\"-1hours\"],hideAxes\u003d[\"false\"],hideLegend\u003d[\"false\"],target\u003d[\"hello.world\", \"alias(dashed(color(constantLine(3.2),\\\"yellow\\\")),\\\"warn level\\\")\", \"alias(dashed(color(constantLine(5.6),\\\"red\\\")),\\\"error level\\\")\"],height\u003d[\"200\"]]; HEADERS: []; NOT HEADERS: []; CONTENT TYPE null; BODY null;",
          "isError": true
        },
        {
          "failureName": "com.github.restdriver.clientdriver.exception.ClientDriverFailedExpectationException",
          "failureDetail": "1 unexpected request(s):\n  HttpRealRequest: GET /render/; PARAMS: [bgcolor\u003d[black],uniq\u003d[1537789936516],fgcolor\u003d[white],width\u003d[300],from\u003d[-1hours],hideAxes\u003d[false],hideLegend\u003d[true],target\u003d[hello.world],height\u003d[200],colorList\u003d[blue,green,red,purple,brown,yellow,aqua,grey,magenta,pink,gold,rose]]; HEADERS: [host: localhost:35271,connection: keep-alive,accept-encoding: gzip,deflate,user-agent: Apache-HttpClient/4.3.6 (java 1.5)]; CONTENT TYPE null; BODY ;\n\n1 expectation(s):\n  expected: 1, actual: 0 -\u003e ClientDriverRequest: GET \"/render/\"; ANY PARAMS: false; PARAMS: [uniq\u003d[A string matching the regular expression: [0-9]+],width\u003d[\"300\"],from\u003d[\"-1hours\"],hideAxes\u003d[\"false\"],hideLegend\u003d[\"true\"],target\u003d[\"hello.world\"],height\u003d[\"200\"]]; HEADERS: []; NOT HEADERS: []; CONTENT TYPE null; BODY null;",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 7
    },
    {
      "className": "com.seyren.core.service.notification.SlackNotificationServiceTest",
      "failingMethods": [
        "basicSlackTest",
        "mentionChannelWhenTargetContainsExclamationTest"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: a string containing \"*ERROR*+test-check\"\n     but: was \"token\u003d\u0026channel\u003dtarget\u0026text\u003d+Check+%3Chttp%3A%2F%2Flocalhost%3A39960%2Fslack%2F%23%2Fchecks%2F123%7C*test-check*%3E+has+entered+its+ERROR+state++%3C%21channel%3E\u0026username\u003dSeyren\u0026icon_url\u003d\"",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: a string containing \"*ERROR*+test-check\"\n     but: was \"token\u003d\u0026channel\u003dtarget\u0026text\u003d+Check+%3Chttp%3A%2F%2Flocalhost%3A45037%2Fslack%2F%23%2Fchecks%2F123%7C*test-check*%3E+has+entered+its+ERROR+state++\u0026username\u003dSeyren\u0026icon_url\u003d\"",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    }
  ],
  "failingModule": "/root/workspace/scobal/seyren/432431322/seyren-core"
}