{
  "bugType": "only_fail",
  "hostname": "cyclone1",
  "repo": "gregorydgraham/DBvolution7",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 0,
      "ComputeClasspath": 8,
      "ComputeTestDir": 0,
      "BuildProject": 144,
      "InitRepoToPush": 1,
      "ComputeSourceDir": 1,
      "ComputeModules": 0,
      "CloneRepository": 8,
      "CheckoutPatchedBuild": 0,
      "TestProject": 45,
      "AssertFixer": 1800,
      "GatherTestInformation": 0,
      "CommitPatch": 1
    },
    "NbFailingTests": 1,
    "NbErroringTests": 171,
    "NbSkippingTests": 0,
    "NbRunningTests": 1028,
    "FailureNames": [
      "java.lang.AssertionError",
      "nz.co.gregs.dbvolution.exceptions.DBRuntimeException"
    ],
    "BugCommitUrl": "http://github.com/gregorydgraham/DBvolution7/commit/6c015718cb5d9f0b2633fc1b92624456750294ec",
    "ReproductionDate": "Sep 17, 2018 1:50:07 AM",
    "BuggyBuildId": 429361851,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/gregorydgraham/DBvolution7/builds/429361851",
    "BuggyBuildDate": "Sep 17, 2018 1:50:19 AM",
    "BugCommit": "6c015718cb5d9f0b2633fc1b92624456750294ec",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 42,
    "NbFileApp": 390,
    "NbFileTests": 120,
    "NbCPU": 8,
    "FreeMemory": 885908840,
    "TotalMemory": 2026897408,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 134562464,
      "ComputeClasspath": 153895072,
      "ComputeTestDir": 147134648,
      "BuildProject": 123062984,
      "InitRepoToPush": 156488168,
      "ComputeSourceDir": 1401998160,
      "ComputeModules": 1401996072,
      "CloneRepository": 144399168,
      "CheckoutPatchedBuild": 885908840,
      "TestProject": 115606384,
      "AssertFixer": 363458464,
      "GatherTestInformation": 102067072,
      "CommitPatch": 885908840
    },
    "NbSucceedingTests": 856
  },
  "failing-test-cases": [
    {
      "className": "nz.co.gregs.dbvolution.expressions.spatial2D.Point2DExpressionTest",
      "failingMethods": [],
      "erroringMethods": [
        "testValueUsingLongs[H2BlankDB]",
        "testGetX[H2BlankDB]",
        "testMaxY[H2BlankDB]",
        "testGetQueryableDatatypeForExpressionValue[H2BlankDB]",
        "testValue[H2BlankDB]",
        "testStringResult[H2BlankDB]",
        "testIsAggregator[H2BlankDB]",
        "testDistance[H2BlankDB]",
        "testIsNot_Point2D[H2BlankDB]",
        "testHasMagnitude[H2BlankDB]",
        "testMinY[H2BlankDB]",
        "testGetTablesInvolved[H2BlankDB]",
        "testToWKTValue[H2BlankDB]",
        "testGetIncludesNull[H2BlankDB]",
        "testIs_Point2DResult[H2BlankDB]",
        "testMagnitude[H2BlankDB]",
        "testBoundingBox[H2BlankDB]",
        "testGetY[H2BlankDB]",
        "testValueUsingPoint2DResult[H2BlankDB]",
        "testIs_Point[H2BlankDB]",
        "testDimension[H2BlankDB]",
        "testCopy[H2BlankDB]",
        "testMaxX[H2BlankDB]",
        "testIsPurelyFunctional[H2BlankDB]",
        "testMinX[H2BlankDB]",
        "testSpatialDimension[H2BlankDB]"
      ],
      "failures": [
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 26
    },
    {
      "className": "nz.co.gregs.dbvolution.datatypes.DBPasswordHashTest",
      "failingMethods": [],
      "erroringMethods": [
        "testDBPasswordHash[H2BlankDB]"
      ],
      "failures": [
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "nz.co.gregs.dbvolution.expressions.spatial2D.MultiPoint2DExpressionTest",
      "failingMethods": [],
      "erroringMethods": [
        "testIsNot_MultiPoint2DResult[H2BlankDB]",
        "testIsNot_MultiPoint2D[H2BlankDB]",
        "testIs_MultiPoint[H2BlankDB]",
        "testValueWithMultiPoint2DResult[H2BlankDB]",
        "testGetMaxX[H2BlankDB]",
        "testPointAtIndex_int[H2BlankDB]",
        "testGetQueryableDatatypeForExpressionValue[H2BlankDB]",
        "testValue[H2BlankDB]",
        "testPointAtIndex_long[H2BlankDB]",
        "testStringResult[H2BlankDB]",
        "testIsAggregator[H2BlankDB]",
        "testHasMagnitude[H2BlankDB]",
        "testGetTablesInvolved[H2BlankDB]",
        "testGetMinX[H2BlankDB]",
        "testSpatialDimensions[H2BlankDB]",
        "testNumberOfPoints[H2BlankDB]",
        "testLine2DResult[H2BlankDB]",
        "testGetIncludesNull[H2BlankDB]",
        "testMagnitude[H2BlankDB]",
        "testValueWithPointArray[H2BlankDB]",
        "testBoundingBox[H2BlankDB]",
        "testGetMaxY[H2BlankDB]",
        "testGetMinY[H2BlankDB]",
        "testDimension[H2BlankDB]",
        "testIs_MultiPoint2DResult[H2BlankDB]",
        "testIsPurelyFunctional[H2BlankDB]"
      ],
      "failures": [
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 26
    },
    {
      "className": "nz.co.gregs.dbvolution.actions.DBActionListCreationTest",
      "failingMethods": [],
      "erroringMethods": [
        "insertAndRevertWithAutoIncrementTest[H2BlankDB]"
      ],
      "failures": [
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "nz.co.gregs.dbvolution.reflection.DataModelTest",
      "failingMethods": [
        "testGetDBDatabaseCreationMethodsStaticWithoutParameters[H2BlankDB]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Unable to invoke nz.co.gregs.dbvolution.generic.AbstractTest.SQLiteTestDB.getFromSettings()",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "nz.co.gregs.dbvolution.actions.DBInsertTest",
      "failingMethods": [],
      "erroringMethods": [
        "testSaveWithDefaultValues[H2BlankDB]",
        "testSaveWithoutValues[H2BlankDB]"
      ],
      "failures": [
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "nz.co.gregs.dbvolution.expressions.spatial2D.LineSegment2DExpressionTest",
      "failingMethods": [],
      "erroringMethods": [
        "testValueWithLineSegment2DResult[H2BlankDB]",
        "testIntersectionWithPoint[H2BlankDB]",
        "testGetMaxX[H2BlankDB]",
        "testIsNot_Line[H2BlankDB]",
        "testGetQueryableDatatypeForExpressionValue[H2BlankDB]",
        "testValue[H2BlankDB]",
        "testStringResult[H2BlankDB]",
        "testIsAggregator[H2BlankDB]",
        "testIntersectsUsingPoints[H2BlankDB]",
        "testIntersectionWithDoubles[H2BlankDB]",
        "testIs_LineSegment2DResult[H2BlankDB]",
        "testIsNot_LineSegment2DResult[H2BlankDB]",
        "testIs_Line[H2BlankDB]",
        "testValueWithDoubles[H2BlankDB]",
        "testHasMagnitude[H2BlankDB]",
        "testGetTablesInvolved[H2BlankDB]",
        "testIntersectsUsingCoordinates[H2BlankDB]",
        "testGetMinX[H2BlankDB]",
        "testSpatialDimensions[H2BlankDB]",
        "testToWKTValue[H2BlankDB]",
        "testIntersectionWithLineSegment[H2BlankDB]",
        "testIntersectsUsingLineSegment[H2BlankDB]",
        "testValueWithPoints[H2BlankDB]",
        "testGetIncludesNull[H2BlankDB]",
        "testMagnitude[H2BlankDB]",
        "testIntersectionWithCoordinates[H2BlankDB]",
        "testIntersectionWith[H2BlankDB]",
        "testBoundingBox[H2BlankDB]",
        "testGetMaxY[H2BlankDB]",
        "testGetMinY[H2BlankDB]",
        "testIntersects[H2BlankDB]",
        "testDimension[H2BlankDB]",
        "testCopy[H2BlankDB]",
        "testIsPurelyFunctional[H2BlankDB]"
      ],
      "failures": [
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 34
    },
    {
      "className": "nz.co.gregs.dbvolution.datatypes.DBNumberTest",
      "failingMethods": [],
      "erroringMethods": [
        "testGetSQLDatatype[H2BlankDB]"
      ],
      "failures": [
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "nz.co.gregs.dbvolution.expressions.spatial2D.Line2DExpressionTest",
      "failingMethods": [],
      "erroringMethods": [
        "testIntersectsUsingLineString[H2BlankDB]",
        "testIs_Line2DResult[H2BlankDB]",
        "testGetMaxX[H2BlankDB]",
        "testIntersectionPoints[H2BlankDB]",
        "testGetQueryableDatatypeForExpressionValue[H2BlankDB]",
        "testIntersectsUsingCoordsArray[H2BlankDB]",
        "testValue[H2BlankDB]",
        "testStringResult[H2BlankDB]",
        "testIntersectionWithMultiPoint2DExpression[H2BlankDB]",
        "testIsAggregator[H2BlankDB]",
        "testIntersectionWithCoordArray[H2BlankDB]",
        "testValueWithLine2DResult[H2BlankDB]",
        "testIntersectionWithPointArray[H2BlankDB]",
        "testIs_Line[H2BlankDB]",
        "testHasMagnitude[H2BlankDB]",
        "testGetTablesInvolved[H2BlankDB]",
        "testGetMinX[H2BlankDB]",
        "testGetIncludesNull[H2BlankDB]",
        "testMagnitude[H2BlankDB]",
        "testIntersectionWith[H2BlankDB]",
        "testIntersectionWithLineString[H2BlankDB]",
        "testBoundingBox[H2BlankDB]",
        "testGetMaxY[H2BlankDB]",
        "testGetMinY[H2BlankDB]",
        "testIntersects[H2BlankDB]",
        "testDimension[H2BlankDB]",
        "testIntersectsUsingPointArray[H2BlankDB]",
        "testCopy[H2BlankDB]",
        "testIsPurelyFunctional[H2BlankDB]",
        "testSpatialDimension[H2BlankDB]"
      ],
      "failures": [
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 30
    },
    {
      "className": "nz.co.gregs.dbvolution.expressions.BooleanArrayExpressionTest",
      "failingMethods": [],
      "erroringMethods": [
        "testIsExpression[H2BlankDB]",
        "testIsNotExpression[H2BlankDB]",
        "testIsExpressionWithNull[H2BlankDB]",
        "testIsExpressionWithBooleanArrayResult[H2BlankDB]"
      ],
      "failures": [
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "nz.co.gregs.dbvolution.datatypes.DBLargeTextTest",
      "failingMethods": [],
      "erroringMethods": [
        "retrieveStringWithBinaryObjectAndAutoIncrement[H2BlankDB]"
      ],
      "failures": [
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "nz.co.gregs.dbvolution.expressions.spatial2D.Polygon2DExpressionTest",
      "failingMethods": [],
      "erroringMethods": [
        "testIs[H2BlankDB]",
        "testHasMagnitude[H2BlankDB]",
        "testOverlaps[H2BlankDB]",
        "testUnitSquare[H2BlankDB]",
        "testTouches[H2BlankDB]",
        "testIsNull[H2BlankDB]",
        "testIntersects[H2BlankDB]",
        "testDimensions[H2BlankDB]",
        "testIntersection[H2BlankDB]",
        "testContains[H2BlankDB]"
      ],
      "failures": [
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 10
    },
    {
      "className": "nz.co.gregs.dbvolution.datatypes.DBBooleanTest",
      "failingMethods": [],
      "erroringMethods": [
        "testGetValue[H2BlankDB]",
        "testPermittedAndExcludedValues[H2BlankDB]"
      ],
      "failures": [
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "nz.co.gregs.dbvolution.datatypes.DBLargeBinaryTest",
      "failingMethods": [],
      "erroringMethods": [
        "retrieveStringWithBinaryObjectAndAutoIncrement[H2BlankDB]"
      ],
      "failures": [
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "nz.co.gregs.dbvolution.datatypes.DBDateOnlyTest",
      "failingMethods": [],
      "erroringMethods": [
        "testGetSQLDatatype[H2BlankDB]"
      ],
      "failures": [
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "nz.co.gregs.dbvolution.OuterJoinTest",
      "failingMethods": [],
      "erroringMethods": [
        "testANSIInnerJoinQueryCreation[H2BlankDB]",
        "testOuterJoinQueryCreatesEmptyRows[H2BlankDB]",
        "testFullOuterJoinWithSimpleCriteria[H2BlankDB]",
        "testANSIQueryCreation[H2BlankDB]",
        "testANSIFullOuterQueryCreation[H2BlankDB]",
        "testExpressionsInLeftOuterOnClause[H2BlankDB]",
        "testSimpleLeftOuterJoin[H2BlankDB]",
        "testOuterJoinQueryAvoidsBadOrder[H2BlankDB]",
        "testSimpleCriteriaInOnClause[H2BlankDB]",
        "demonstrateAccessingEachRowWithOptionalTables[H2BlankDB]"
      ],
      "failures": [
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 10
    },
    {
      "className": "nz.co.gregs.dbvolution.datatypes.DBBooleanArrayTest",
      "failingMethods": [],
      "erroringMethods": [
        "testGetFromResultSet[H2BlankDB]"
      ],
      "failures": [
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "nz.co.gregs.dbvolution.DBRecursiveQueryTest",
      "failingMethods": [],
      "erroringMethods": [
        "getTreeFromRoot[H2BlankDB]",
        "descendSimpleTree[H2BlankDB]",
        "checkForeignKeyInvolvesQueryTablesException[H2BlankDB]",
        "getPathsToRoot[H2BlankDB]",
        "descendTreeFrom2TableQueryToPathsList[H2BlankDB]",
        "ascendSimpleTreeWithoutTableName[H2BlankDB]",
        "descendSimpleTreeWithoutTableName[H2BlankDB]",
        "checkForeignKeyIsRecursiveException[H2BlankDB]",
        "ascendTreeFrom2TableQuery[H2BlankDB]",
        "checkColumnIsNotAForeignKeyException[H2BlankDB]",
        "checkEverythingWorksForStringIDs[H2BlankDB]",
        "descendTreeFrom2TableQuery[H2BlankDB]",
        "ascendTreeFrom2TableQueryToPathsList[H2BlankDB]",
        "getTreesFromRoot[H2BlankDB]",
        "ascendSimpleTree[H2BlankDB]",
        "getPathToRoot[H2BlankDB]"
      ],
      "failures": [
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 16
    },
    {
      "className": "nz.co.gregs.dbvolution.datatypes.DBDateRepeatTest",
      "failingMethods": [],
      "erroringMethods": [
        "basicTest[H2BlankDB]"
      ],
      "failures": [
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "nz.co.gregs.dbvolution.datatypes.DBJavaObjectTest",
      "failingMethods": [],
      "erroringMethods": [
        "testTableCreation[H2BlankDB]"
      ],
      "failures": [
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "nz.co.gregs.dbvolution.expressions.StringExpressionTest",
      "failingMethods": [],
      "erroringMethods": [
        "testFindFirstNumber[H2BlankDB]",
        "testFindFirstInteger[H2BlankDB]"
      ],
      "failures": [
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        },
        {
          "failureName": "nz.co.gregs.dbvolution.exceptions.DBRuntimeException",
          "failureDetail": "Synchronisation Failed:nz.co.gregs.dbvolution.datatypes.DBInteger.setValueFromDatabase(java.lang.Long)",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    }
  ],
  "failingModule": "/root/workspace/gregorydgraham/DBvolution7/429361851",
  "bugCommit": "https://github.com/gregorydgraham/DBvolution7/compare/ef93c194748c...6c015718cb5d"
}