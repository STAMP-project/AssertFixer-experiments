/*
 * mzTab validation API.
 * This is an mzTab validation service.
 *
 * OpenAPI spec version: 1.1.0
 * Contact: nils.hoffmann@isas.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.isas.mztab1_1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import de.isas.mztab1_1.model.Parameter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import javax.xml.bind.annotation.*;
import javax.validation.constraints.*;
import javax.validation.Valid;
import de.isas.lipidomics.jmztabm.validation.constraints.*;
/**
 * OptColumnMapping
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-31T17:58:50.083+02:00")
@XmlRootElement(name = "OptColumnMapping")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "OptColumnMapping")
public class OptColumnMapping {

  public static enum Properties {
      identifier("identifier"), 
      param("param"), 
      value("value");

    private final String propertyName;

    private Properties(String propertyName) {
      this.propertyName = propertyName;
    }

    public String getPropertyName() {
      return propertyName;
    }

    public String toString() {
      return propertyName;
    }

    public String toUpper() {
      return propertyName.toUpperCase();
    }

    public static Properties of(String value) {
      if(value==null) {
        throw new NullPointerException("Argument value must not be null!");
      }
      return Arrays.asList(Properties.values()).stream().filter(m -> m.propertyName.equals(value.toLowerCase())).findAny().orElseThrow(IllegalArgumentException::new);
    }
  };
  
  @JsonProperty("identifier")
  @JacksonXmlProperty(localName = "identifier")
  @XmlElement(name = "identifier")
  private String identifier = null;
  @JsonProperty("param")
  @JacksonXmlProperty(localName = "param")
  @XmlElement(name = "param")
  private Parameter param = null;
  @JsonProperty("value")
  @JacksonXmlProperty(localName = "value")
  @XmlElement(name = "value")
  private String value = null;

  public OptColumnMapping identifier(String identifier) {
   this.identifier = identifier;
   return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  public OptColumnMapping param(Parameter param) {
   this.param = param;
   return this;
  }

   /**
   * Get param
   * @return param
  **/
  @Valid
  @ApiModelProperty(value = "")
  public Parameter getParam() {
    return param;
  }

  public void setParam(Parameter param) {
    this.param = param;
  }


  public OptColumnMapping value(String value) {
   this.value = value;
   return this;
  }

   /**
   * Get value
   * @return value
  **/
  @ApiModelProperty(value = "")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OptColumnMapping optColumnMapping = (OptColumnMapping) o;
    return Objects.equals(this.identifier, optColumnMapping.identifier) &&
        Objects.equals(this.param, optColumnMapping.param) &&
        Objects.equals(this.value, optColumnMapping.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identifier, param, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OptColumnMapping {\n");
    
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    param: ").append(toIndentedString(param)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

