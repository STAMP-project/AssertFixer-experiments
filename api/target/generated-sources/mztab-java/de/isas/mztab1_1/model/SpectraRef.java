/*
 * mzTab validation API.
 * This is an mzTab validation service.
 *
 * OpenAPI spec version: 1.1.0
 * Contact: nils.hoffmann@isas.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.isas.mztab1_1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import de.isas.mztab1_1.model.MsRun;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import javax.xml.bind.annotation.*;
import javax.validation.constraints.*;
import javax.validation.Valid;
import de.isas.lipidomics.jmztabm.validation.constraints.*;
/**
 * SpectraRef
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-31T17:58:50.083+02:00")
@XmlRootElement(name = "SpectraRef")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "SpectraRef")
public class SpectraRef {

  public static enum Properties {
      msRun("ms_run"), 
      reference("reference");

    private final String propertyName;

    private Properties(String propertyName) {
      this.propertyName = propertyName;
    }

    public String getPropertyName() {
      return propertyName;
    }

    public String toString() {
      return propertyName;
    }

    public String toUpper() {
      return propertyName.toUpperCase();
    }

    public static Properties of(String value) {
      if(value==null) {
        throw new NullPointerException("Argument value must not be null!");
      }
      return Arrays.asList(Properties.values()).stream().filter(m -> m.propertyName.equals(value.toLowerCase())).findAny().orElseThrow(IllegalArgumentException::new);
    }
  };
  
  @JsonProperty("ms_run")
  @JacksonXmlProperty(localName = "ms_run")
  @XmlElement(name = "ms_run")
  private MsRun msRun = null;
  @JsonProperty("reference")
  @JacksonXmlProperty(localName = "reference")
  @XmlElement(name = "reference")
  private String reference = null;

  public SpectraRef msRun(MsRun msRun) {
   this.msRun = msRun;
   return this;
  }

   /**
   * Get msRun
   * @return msRun
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  public MsRun getMsRun() {
    return msRun;
  }

  public void setMsRun(MsRun msRun) {
    this.msRun = msRun;
  }


  public SpectraRef reference(String reference) {
   this.reference = reference;
   return this;
  }

   /**
   * Get reference
   * @return reference
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "")
  public String getReference() {
    return reference;
  }

  public void setReference(String reference) {
    this.reference = reference;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpectraRef spectraRef = (SpectraRef) o;
    return Objects.equals(this.msRun, spectraRef.msRun) &&
        Objects.equals(this.reference, spectraRef.reference);
  }

  @Override
  public int hashCode() {
    return Objects.hash(msRun, reference);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpectraRef {\n");
    
    sb.append("    msRun: ").append(toIndentedString(msRun)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

