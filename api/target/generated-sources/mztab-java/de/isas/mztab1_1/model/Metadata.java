/*
 * mzTab validation API.
 * This is an mzTab validation service.
 *
 * OpenAPI spec version: 1.1.0
 * Contact: nils.hoffmann@isas.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.isas.mztab1_1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import de.isas.mztab1_1.model.Assay;
import de.isas.mztab1_1.model.CV;
import de.isas.mztab1_1.model.ColumnParameterMapping;
import de.isas.mztab1_1.model.Contact;
import de.isas.mztab1_1.model.Database;
import de.isas.mztab1_1.model.Instrument;
import de.isas.mztab1_1.model.MsRun;
import de.isas.mztab1_1.model.Parameter;
import de.isas.mztab1_1.model.Publication;
import de.isas.mztab1_1.model.Sample;
import de.isas.mztab1_1.model.SampleProcessing;
import de.isas.mztab1_1.model.Software;
import de.isas.mztab1_1.model.StudyVariable;
import de.isas.mztab1_1.model.Uri;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import javax.xml.bind.annotation.*;
import javax.validation.constraints.*;
import javax.validation.Valid;
import de.isas.lipidomics.jmztabm.validation.constraints.*;
/**
 * Metadata
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-31T17:58:50.083+02:00")
@XmlRootElement(name = "Metadata")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "Metadata")
public class Metadata {

  public static enum Properties {
      prefix("prefix"), 
      mzTabVersion("mzTab-version"), 
      mzTabID("mzTab-ID"), 
      title("title"), 
      description("description"), 
      sampleProcessing("sample_processing"), 
      instrument("instrument"), 
      software("software"), 
      publication("publication"), 
      contact("contact"), 
      uri("uri"), 
      externalStudyUri("external_study_uri"), 
      quantificationMethod("quantification_method"), 
      studyVariable("study_variable"), 
      assay("assay"), 
      msRun("ms_run"), 
      custom("custom"), 
      sample("sample"), 
      cv("cv"), 
      database("database"), 
      derivatizationAgent("derivatization_agent"), 
      smallMoleculeQuantificationUnit("small_molecule-quantification_unit"), 
      smallMoleculeFeatureQuantificationUnit("small_molecule_feature-quantification_unit"), 
      smallMoleculeIdentificationReliability("small_molecule-identification_reliability"), 
      idConfidenceMeasure("id_confidence_measure"), 
      colunitSmallMolecule("colunit-small_molecule"), 
      colunitSmallMoleculeFeature("colunit-small_molecule_feature"), 
      colunitSmallMoleculeEvidence("colunit-small_molecule_evidence");

    private final String propertyName;

    private Properties(String propertyName) {
      this.propertyName = propertyName;
    }

    public String getPropertyName() {
      return propertyName;
    }

    public String toString() {
      return propertyName;
    }

    public String toUpper() {
      return propertyName.toUpperCase();
    }

    public static Properties of(String value) {
      if(value==null) {
        throw new NullPointerException("Argument value must not be null!");
      }
      return Arrays.asList(Properties.values()).stream().filter(m -> m.propertyName.equals(value.toLowerCase())).findAny().orElseThrow(IllegalArgumentException::new);
    }
  };
  
  /**
   * Gets or Sets prefix
   */
  public enum PrefixEnum {
    MTD("MTD");

    private String value;

    PrefixEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PrefixEnum fromValue(String text) {
      for (PrefixEnum b : PrefixEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("prefix")
  @JacksonXmlProperty(localName = "prefix")
  @XmlElement(name = "prefix")
  private PrefixEnum prefix = PrefixEnum.MTD;
  @JsonProperty("mzTab-version")
  @JacksonXmlProperty(localName = "mzTab-version")
  @XmlElement(name = "mzTab-version")
  private String mzTabVersion = null;
  @JsonProperty("mzTab-ID")
  @JacksonXmlProperty(localName = "mzTab-ID")
  @XmlElement(name = "mzTab-ID")
  private String mzTabID = null;
  @JsonProperty("title")
  @JacksonXmlProperty(localName = "title")
  @XmlElement(name = "title")
  private String title = null;
  @JsonProperty("description")
  @JacksonXmlProperty(localName = "description")
  @XmlElement(name = "description")
  private String description = null;
  @JsonProperty("sample_processing")
  // Is a container wrapped=false
  // items.name=sampleProcessing items.baseName=sampleProcessing items.xmlName= items.xmlNamespace=
  // items.example= items.type=SampleProcessing
  @XmlElement(name = "sampleProcessing")
  private List<SampleProcessing> sampleProcessing = null;
  @JsonProperty("instrument")
  // Is a container wrapped=false
  // items.name=instrument items.baseName=instrument items.xmlName= items.xmlNamespace=
  // items.example= items.type=Instrument
  @XmlElement(name = "instrument")
  private List<Instrument> instrument = null;
  @JsonProperty("software")
  // Is a container wrapped=false
  // items.name=software items.baseName=software items.xmlName= items.xmlNamespace=
  // items.example= items.type=Software
  @XmlElement(name = "software")
  private List<Software> software = new ArrayList<>();
  @JsonProperty("publication")
  // Is a container wrapped=false
  // items.name=publication items.baseName=publication items.xmlName= items.xmlNamespace=
  // items.example= items.type=Publication
  @XmlElement(name = "publication")
  private List<Publication> publication = null;
  @JsonProperty("contact")
  // Is a container wrapped=false
  // items.name=contact items.baseName=contact items.xmlName= items.xmlNamespace=
  // items.example= items.type=Contact
  @XmlElement(name = "contact")
  private List<Contact> contact = null;
  @JsonProperty("uri")
  // Is a container wrapped=false
  // items.name=uri items.baseName=uri items.xmlName= items.xmlNamespace=
  // items.example= items.type=Uri
  @XmlElement(name = "uri")
  private List<Uri> uri = null;
  @JsonProperty("external_study_uri")
  // Is a container wrapped=false
  // items.name=externalStudyUri items.baseName=externalStudyUri items.xmlName= items.xmlNamespace=
  // items.example= items.type=Uri
  @XmlElement(name = "externalStudyUri")
  private List<Uri> externalStudyUri = null;
  @JsonProperty("quantification_method")
  @JacksonXmlProperty(localName = "quantification_method")
  @XmlElement(name = "quantification_method")
  private Parameter quantificationMethod = null;
  @JsonProperty("study_variable")
  // Is a container wrapped=false
  // items.name=studyVariable items.baseName=studyVariable items.xmlName= items.xmlNamespace=
  // items.example= items.type=StudyVariable
  @XmlElement(name = "studyVariable")
  private List<StudyVariable> studyVariable = new ArrayList<>();
  @JsonProperty("assay")
  // Is a container wrapped=false
  // items.name=assay items.baseName=assay items.xmlName= items.xmlNamespace=
  // items.example= items.type=Assay
  @XmlElement(name = "assay")
  private List<Assay> assay = new ArrayList<>();
  @JsonProperty("ms_run")
  // Is a container wrapped=false
  // items.name=msRun items.baseName=msRun items.xmlName= items.xmlNamespace=
  // items.example= items.type=MsRun
  @XmlElement(name = "msRun")
  private List<MsRun> msRun = new ArrayList<>();
  @JsonProperty("custom")
  // Is a container wrapped=false
  // items.name=custom items.baseName=custom items.xmlName= items.xmlNamespace=
  // items.example= items.type=Parameter
  @XmlElement(name = "custom")
  private List<Parameter> custom = null;
  @JsonProperty("sample")
  // Is a container wrapped=false
  // items.name=sample items.baseName=sample items.xmlName= items.xmlNamespace=
  // items.example= items.type=Sample
  @XmlElement(name = "sample")
  private List<Sample> sample = null;
  @JsonProperty("cv")
  // Is a container wrapped=false
  // items.name=cv items.baseName=cv items.xmlName= items.xmlNamespace=
  // items.example= items.type=CV
  @XmlElement(name = "cv")
  private List<CV> cv = new ArrayList<>();
  @JsonProperty("database")
  // Is a container wrapped=false
  // items.name=database items.baseName=database items.xmlName= items.xmlNamespace=
  // items.example= items.type=Database
  @XmlElement(name = "database")
  private List<Database> database = new ArrayList<>();
  @JsonProperty("derivatization_agent")
  // Is a container wrapped=false
  // items.name=derivatizationAgent items.baseName=derivatizationAgent items.xmlName= items.xmlNamespace=
  // items.example= items.type=Parameter
  @XmlElement(name = "derivatizationAgent")
  private List<Parameter> derivatizationAgent = null;
  @JsonProperty("small_molecule-quantification_unit")
  @JacksonXmlProperty(localName = "small_molecule-quantification_unit")
  @XmlElement(name = "small_molecule-quantification_unit")
  private Parameter smallMoleculeQuantificationUnit = null;
  @JsonProperty("small_molecule_feature-quantification_unit")
  @JacksonXmlProperty(localName = "small_molecule_feature-quantification_unit")
  @XmlElement(name = "small_molecule_feature-quantification_unit")
  private Parameter smallMoleculeFeatureQuantificationUnit = null;
  @JsonProperty("small_molecule-identification_reliability")
  @JacksonXmlProperty(localName = "small_molecule-identification_reliability")
  @XmlElement(name = "small_molecule-identification_reliability")
  private Parameter smallMoleculeIdentificationReliability = null;
  @JsonProperty("id_confidence_measure")
  // Is a container wrapped=false
  // items.name=idConfidenceMeasure items.baseName=idConfidenceMeasure items.xmlName= items.xmlNamespace=
  // items.example= items.type=Parameter
  @XmlElement(name = "idConfidenceMeasure")
  private List<Parameter> idConfidenceMeasure = new ArrayList<>();
  @JsonProperty("colunit-small_molecule")
  // Is a container wrapped=false
  // items.name=colunitSmallMolecule items.baseName=colunitSmallMolecule items.xmlName= items.xmlNamespace=
  // items.example= items.type=ColumnParameterMapping
  @XmlElement(name = "colunitSmallMolecule")
  private List<ColumnParameterMapping> colunitSmallMolecule = null;
  @JsonProperty("colunit-small_molecule_feature")
  // Is a container wrapped=false
  // items.name=colunitSmallMoleculeFeature items.baseName=colunitSmallMoleculeFeature items.xmlName= items.xmlNamespace=
  // items.example= items.type=ColumnParameterMapping
  @XmlElement(name = "colunitSmallMoleculeFeature")
  private List<ColumnParameterMapping> colunitSmallMoleculeFeature = null;
  @JsonProperty("colunit-small_molecule_evidence")
  // Is a container wrapped=false
  // items.name=colunitSmallMoleculeEvidence items.baseName=colunitSmallMoleculeEvidence items.xmlName= items.xmlNamespace=
  // items.example= items.type=ColumnParameterMapping
  @XmlElement(name = "colunitSmallMoleculeEvidence")
  private List<ColumnParameterMapping> colunitSmallMoleculeEvidence = null;

  public Metadata prefix(PrefixEnum prefix) {
   this.prefix = prefix;
   return this;
  }

   /**
   * Get prefix
   * @return prefix
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "")
  public PrefixEnum getPrefix() {
    return prefix;
  }

  public void setPrefix(PrefixEnum prefix) {
    this.prefix = prefix;
  }


  public Metadata mzTabVersion(String mzTabVersion) {
   this.mzTabVersion = mzTabVersion;
   return this;
  }

   /**
   * Get mzTabVersion
   * @return mzTabVersion
  **/
  @NotNull
 @Pattern(regexp="^\\\\d{1}\\.\\\\d{1}\\.\\\\d{1}-[A-Z]{1}$")  @ApiModelProperty(example = "MTD mzTab-version 1.1.0-M", required = true, value = "")
  public String getMzTabVersion() {
    return mzTabVersion;
  }

  public void setMzTabVersion(String mzTabVersion) {
    this.mzTabVersion = mzTabVersion;
  }


  public Metadata mzTabID(String mzTabID) {
   this.mzTabID = mzTabID;
   return this;
  }

   /**
   * Get mzTabID
   * @return mzTabID
  **/
  @NotNull
  @ApiModelProperty(example = "MTD mzTab-ID PRIDE_1234", required = true, value = "")
  public String getMzTabID() {
    return mzTabID;
  }

  public void setMzTabID(String mzTabID) {
    this.mzTabID = mzTabID;
  }


  public Metadata title(String title) {
   this.title = title;
   return this;
  }

   /**
   * Get title
   * @return title
  **/
  @NotNull
  @ApiModelProperty(example = "MTD title My first test experiment", required = true, value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public Metadata description(String description) {
   this.description = description;
   return this;
  }

   /**
   * Get description
   * @return description
  **/
  @NotNull
  @ApiModelProperty(example = "MTD description An experiment investigating the effects of Il-6.", required = true, value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public Metadata sampleProcessing(List<SampleProcessing> sampleProcessing) {
   this.sampleProcessing = sampleProcessing;
   return this;
  }

  public Metadata addSampleProcessingItem(SampleProcessing sampleProcessingItem) {
    if (this.sampleProcessing == null) {
      this.sampleProcessing = new ArrayList<>();
    }
    this.sampleProcessing.add(sampleProcessingItem);
    return this;
  }

   /**
   * Get sampleProcessing
   * @return sampleProcessing
  **/
  @Valid
  @ApiModelProperty(value = "")
  public List<SampleProcessing> getSampleProcessing() {
    return sampleProcessing;
  }

  public void setSampleProcessing(List<SampleProcessing> sampleProcessing) {
    this.sampleProcessing = sampleProcessing;
  }


  public Metadata instrument(List<Instrument> instrument) {
   this.instrument = instrument;
   return this;
  }

  public Metadata addInstrumentItem(Instrument instrumentItem) {
    if (this.instrument == null) {
      this.instrument = new ArrayList<>();
    }
    this.instrument.add(instrumentItem);
    return this;
  }

   /**
   * Get instrument
   * @return instrument
  **/
  @Valid
  @ApiModelProperty(value = "")
  public List<Instrument> getInstrument() {
    return instrument;
  }

  public void setInstrument(List<Instrument> instrument) {
    this.instrument = instrument;
  }


  public Metadata software(List<Software> software) {
   this.software = software;
   return this;
  }

  public Metadata addSoftwareItem(Software softwareItem) {
    this.software.add(softwareItem);
    return this;
  }

   /**
   * Get software
   * @return software
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  public List<Software> getSoftware() {
    return software;
  }

  public void setSoftware(List<Software> software) {
    this.software = software;
  }


  public Metadata publication(List<Publication> publication) {
   this.publication = publication;
   return this;
  }

  public Metadata addPublicationItem(Publication publicationItem) {
    if (this.publication == null) {
      this.publication = new ArrayList<>();
    }
    this.publication.add(publicationItem);
    return this;
  }

   /**
   * Get publication
   * @return publication
  **/
  @Valid
  @ApiModelProperty(value = "")
  public List<Publication> getPublication() {
    return publication;
  }

  public void setPublication(List<Publication> publication) {
    this.publication = publication;
  }


  public Metadata contact(List<Contact> contact) {
   this.contact = contact;
   return this;
  }

  public Metadata addContactItem(Contact contactItem) {
    if (this.contact == null) {
      this.contact = new ArrayList<>();
    }
    this.contact.add(contactItem);
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @Valid
  @ApiModelProperty(value = "")
  public List<Contact> getContact() {
    return contact;
  }

  public void setContact(List<Contact> contact) {
    this.contact = contact;
  }


  public Metadata uri(List<Uri> uri) {
   this.uri = uri;
   return this;
  }

  public Metadata addUriItem(Uri uriItem) {
    if (this.uri == null) {
      this.uri = new ArrayList<>();
    }
    this.uri.add(uriItem);
    return this;
  }

   /**
   * Get uri
   * @return uri
  **/
  @Valid
  @ApiModelProperty(value = "")
  public List<Uri> getUri() {
    return uri;
  }

  public void setUri(List<Uri> uri) {
    this.uri = uri;
  }


  public Metadata externalStudyUri(List<Uri> externalStudyUri) {
   this.externalStudyUri = externalStudyUri;
   return this;
  }

  public Metadata addExternalStudyUriItem(Uri externalStudyUriItem) {
    if (this.externalStudyUri == null) {
      this.externalStudyUri = new ArrayList<>();
    }
    this.externalStudyUri.add(externalStudyUriItem);
    return this;
  }

   /**
   * Get externalStudyUri
   * @return externalStudyUri
  **/
  @Valid
  @ApiModelProperty(value = "")
  public List<Uri> getExternalStudyUri() {
    return externalStudyUri;
  }

  public void setExternalStudyUri(List<Uri> externalStudyUri) {
    this.externalStudyUri = externalStudyUri;
  }


  public Metadata quantificationMethod(Parameter quantificationMethod) {
   this.quantificationMethod = quantificationMethod;
   return this;
  }

   /**
   * Get quantificationMethod
   * @return quantificationMethod
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  public Parameter getQuantificationMethod() {
    return quantificationMethod;
  }

  public void setQuantificationMethod(Parameter quantificationMethod) {
    this.quantificationMethod = quantificationMethod;
  }


  public Metadata studyVariable(List<StudyVariable> studyVariable) {
   this.studyVariable = studyVariable;
   return this;
  }

  public Metadata addStudyVariableItem(StudyVariable studyVariableItem) {
    this.studyVariable.add(studyVariableItem);
    return this;
  }

   /**
   * Get studyVariable
   * @return studyVariable
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  public List<StudyVariable> getStudyVariable() {
    return studyVariable;
  }

  public void setStudyVariable(List<StudyVariable> studyVariable) {
    this.studyVariable = studyVariable;
  }


  public Metadata assay(List<Assay> assay) {
   this.assay = assay;
   return this;
  }

  public Metadata addAssayItem(Assay assayItem) {
    this.assay.add(assayItem);
    return this;
  }

   /**
   * Get assay
   * @return assay
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  public List<Assay> getAssay() {
    return assay;
  }

  public void setAssay(List<Assay> assay) {
    this.assay = assay;
  }


  public Metadata msRun(List<MsRun> msRun) {
   this.msRun = msRun;
   return this;
  }

  public Metadata addMsRunItem(MsRun msRunItem) {
    this.msRun.add(msRunItem);
    return this;
  }

   /**
   * Get msRun
   * @return msRun
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  public List<MsRun> getMsRun() {
    return msRun;
  }

  public void setMsRun(List<MsRun> msRun) {
    this.msRun = msRun;
  }


  public Metadata custom(List<Parameter> custom) {
   this.custom = custom;
   return this;
  }

  public Metadata addCustomItem(Parameter customItem) {
    if (this.custom == null) {
      this.custom = new ArrayList<>();
    }
    this.custom.add(customItem);
    return this;
  }

   /**
   * Get custom
   * @return custom
  **/
  @Valid
  @ApiModelProperty(value = "")
  public List<Parameter> getCustom() {
    return custom;
  }

  public void setCustom(List<Parameter> custom) {
    this.custom = custom;
  }


  public Metadata sample(List<Sample> sample) {
   this.sample = sample;
   return this;
  }

  public Metadata addSampleItem(Sample sampleItem) {
    if (this.sample == null) {
      this.sample = new ArrayList<>();
    }
    this.sample.add(sampleItem);
    return this;
  }

   /**
   * Get sample
   * @return sample
  **/
  @Valid
  @ApiModelProperty(value = "")
  public List<Sample> getSample() {
    return sample;
  }

  public void setSample(List<Sample> sample) {
    this.sample = sample;
  }


  public Metadata cv(List<CV> cv) {
   this.cv = cv;
   return this;
  }

  public Metadata addCvItem(CV cvItem) {
    this.cv.add(cvItem);
    return this;
  }

   /**
   * Get cv
   * @return cv
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  public List<CV> getCv() {
    return cv;
  }

  public void setCv(List<CV> cv) {
    this.cv = cv;
  }


  public Metadata database(List<Database> database) {
   this.database = database;
   return this;
  }

  public Metadata addDatabaseItem(Database databaseItem) {
    this.database.add(databaseItem);
    return this;
  }

   /**
   * Get database
   * @return database
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  public List<Database> getDatabase() {
    return database;
  }

  public void setDatabase(List<Database> database) {
    this.database = database;
  }


  public Metadata derivatizationAgent(List<Parameter> derivatizationAgent) {
   this.derivatizationAgent = derivatizationAgent;
   return this;
  }

  public Metadata addDerivatizationAgentItem(Parameter derivatizationAgentItem) {
    if (this.derivatizationAgent == null) {
      this.derivatizationAgent = new ArrayList<>();
    }
    this.derivatizationAgent.add(derivatizationAgentItem);
    return this;
  }

   /**
   * Get derivatizationAgent
   * @return derivatizationAgent
  **/
  @Valid
  @ApiModelProperty(value = "")
  public List<Parameter> getDerivatizationAgent() {
    return derivatizationAgent;
  }

  public void setDerivatizationAgent(List<Parameter> derivatizationAgent) {
    this.derivatizationAgent = derivatizationAgent;
  }


  public Metadata smallMoleculeQuantificationUnit(Parameter smallMoleculeQuantificationUnit) {
   this.smallMoleculeQuantificationUnit = smallMoleculeQuantificationUnit;
   return this;
  }

   /**
   * Get smallMoleculeQuantificationUnit
   * @return smallMoleculeQuantificationUnit
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  public Parameter getSmallMoleculeQuantificationUnit() {
    return smallMoleculeQuantificationUnit;
  }

  public void setSmallMoleculeQuantificationUnit(Parameter smallMoleculeQuantificationUnit) {
    this.smallMoleculeQuantificationUnit = smallMoleculeQuantificationUnit;
  }


  public Metadata smallMoleculeFeatureQuantificationUnit(Parameter smallMoleculeFeatureQuantificationUnit) {
   this.smallMoleculeFeatureQuantificationUnit = smallMoleculeFeatureQuantificationUnit;
   return this;
  }

   /**
   * Get smallMoleculeFeatureQuantificationUnit
   * @return smallMoleculeFeatureQuantificationUnit
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  public Parameter getSmallMoleculeFeatureQuantificationUnit() {
    return smallMoleculeFeatureQuantificationUnit;
  }

  public void setSmallMoleculeFeatureQuantificationUnit(Parameter smallMoleculeFeatureQuantificationUnit) {
    this.smallMoleculeFeatureQuantificationUnit = smallMoleculeFeatureQuantificationUnit;
  }


  public Metadata smallMoleculeIdentificationReliability(Parameter smallMoleculeIdentificationReliability) {
   this.smallMoleculeIdentificationReliability = smallMoleculeIdentificationReliability;
   return this;
  }

   /**
   * Get smallMoleculeIdentificationReliability
   * @return smallMoleculeIdentificationReliability
  **/
  @Valid
  @ApiModelProperty(value = "")
  public Parameter getSmallMoleculeIdentificationReliability() {
    return smallMoleculeIdentificationReliability;
  }

  public void setSmallMoleculeIdentificationReliability(Parameter smallMoleculeIdentificationReliability) {
    this.smallMoleculeIdentificationReliability = smallMoleculeIdentificationReliability;
  }


  public Metadata idConfidenceMeasure(List<Parameter> idConfidenceMeasure) {
   this.idConfidenceMeasure = idConfidenceMeasure;
   return this;
  }

  public Metadata addIdConfidenceMeasureItem(Parameter idConfidenceMeasureItem) {
    this.idConfidenceMeasure.add(idConfidenceMeasureItem);
    return this;
  }

   /**
   * Get idConfidenceMeasure
   * @return idConfidenceMeasure
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  public List<Parameter> getIdConfidenceMeasure() {
    return idConfidenceMeasure;
  }

  public void setIdConfidenceMeasure(List<Parameter> idConfidenceMeasure) {
    this.idConfidenceMeasure = idConfidenceMeasure;
  }


  public Metadata colunitSmallMolecule(List<ColumnParameterMapping> colunitSmallMolecule) {
   this.colunitSmallMolecule = colunitSmallMolecule;
   return this;
  }

  public Metadata addColunitSmallMoleculeItem(ColumnParameterMapping colunitSmallMoleculeItem) {
    if (this.colunitSmallMolecule == null) {
      this.colunitSmallMolecule = new ArrayList<>();
    }
    this.colunitSmallMolecule.add(colunitSmallMoleculeItem);
    return this;
  }

   /**
   * Get colunitSmallMolecule
   * @return colunitSmallMolecule
  **/
  @Valid
  @ApiModelProperty(value = "")
  public List<ColumnParameterMapping> getColunitSmallMolecule() {
    return colunitSmallMolecule;
  }

  public void setColunitSmallMolecule(List<ColumnParameterMapping> colunitSmallMolecule) {
    this.colunitSmallMolecule = colunitSmallMolecule;
  }


  public Metadata colunitSmallMoleculeFeature(List<ColumnParameterMapping> colunitSmallMoleculeFeature) {
   this.colunitSmallMoleculeFeature = colunitSmallMoleculeFeature;
   return this;
  }

  public Metadata addColunitSmallMoleculeFeatureItem(ColumnParameterMapping colunitSmallMoleculeFeatureItem) {
    if (this.colunitSmallMoleculeFeature == null) {
      this.colunitSmallMoleculeFeature = new ArrayList<>();
    }
    this.colunitSmallMoleculeFeature.add(colunitSmallMoleculeFeatureItem);
    return this;
  }

   /**
   * Get colunitSmallMoleculeFeature
   * @return colunitSmallMoleculeFeature
  **/
  @Valid
  @ApiModelProperty(value = "")
  public List<ColumnParameterMapping> getColunitSmallMoleculeFeature() {
    return colunitSmallMoleculeFeature;
  }

  public void setColunitSmallMoleculeFeature(List<ColumnParameterMapping> colunitSmallMoleculeFeature) {
    this.colunitSmallMoleculeFeature = colunitSmallMoleculeFeature;
  }


  public Metadata colunitSmallMoleculeEvidence(List<ColumnParameterMapping> colunitSmallMoleculeEvidence) {
   this.colunitSmallMoleculeEvidence = colunitSmallMoleculeEvidence;
   return this;
  }

  public Metadata addColunitSmallMoleculeEvidenceItem(ColumnParameterMapping colunitSmallMoleculeEvidenceItem) {
    if (this.colunitSmallMoleculeEvidence == null) {
      this.colunitSmallMoleculeEvidence = new ArrayList<>();
    }
    this.colunitSmallMoleculeEvidence.add(colunitSmallMoleculeEvidenceItem);
    return this;
  }

   /**
   * Get colunitSmallMoleculeEvidence
   * @return colunitSmallMoleculeEvidence
  **/
  @Valid
  @ApiModelProperty(value = "")
  public List<ColumnParameterMapping> getColunitSmallMoleculeEvidence() {
    return colunitSmallMoleculeEvidence;
  }

  public void setColunitSmallMoleculeEvidence(List<ColumnParameterMapping> colunitSmallMoleculeEvidence) {
    this.colunitSmallMoleculeEvidence = colunitSmallMoleculeEvidence;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Metadata metadata = (Metadata) o;
    return Objects.equals(this.prefix, metadata.prefix) &&
        Objects.equals(this.mzTabVersion, metadata.mzTabVersion) &&
        Objects.equals(this.mzTabID, metadata.mzTabID) &&
        Objects.equals(this.title, metadata.title) &&
        Objects.equals(this.description, metadata.description) &&
        Objects.equals(this.sampleProcessing, metadata.sampleProcessing) &&
        Objects.equals(this.instrument, metadata.instrument) &&
        Objects.equals(this.software, metadata.software) &&
        Objects.equals(this.publication, metadata.publication) &&
        Objects.equals(this.contact, metadata.contact) &&
        Objects.equals(this.uri, metadata.uri) &&
        Objects.equals(this.externalStudyUri, metadata.externalStudyUri) &&
        Objects.equals(this.quantificationMethod, metadata.quantificationMethod) &&
        Objects.equals(this.studyVariable, metadata.studyVariable) &&
        Objects.equals(this.assay, metadata.assay) &&
        Objects.equals(this.msRun, metadata.msRun) &&
        Objects.equals(this.custom, metadata.custom) &&
        Objects.equals(this.sample, metadata.sample) &&
        Objects.equals(this.cv, metadata.cv) &&
        Objects.equals(this.database, metadata.database) &&
        Objects.equals(this.derivatizationAgent, metadata.derivatizationAgent) &&
        Objects.equals(this.smallMoleculeQuantificationUnit, metadata.smallMoleculeQuantificationUnit) &&
        Objects.equals(this.smallMoleculeFeatureQuantificationUnit, metadata.smallMoleculeFeatureQuantificationUnit) &&
        Objects.equals(this.smallMoleculeIdentificationReliability, metadata.smallMoleculeIdentificationReliability) &&
        Objects.equals(this.idConfidenceMeasure, metadata.idConfidenceMeasure) &&
        Objects.equals(this.colunitSmallMolecule, metadata.colunitSmallMolecule) &&
        Objects.equals(this.colunitSmallMoleculeFeature, metadata.colunitSmallMoleculeFeature) &&
        Objects.equals(this.colunitSmallMoleculeEvidence, metadata.colunitSmallMoleculeEvidence);
  }

  @Override
  public int hashCode() {
    return Objects.hash(prefix, mzTabVersion, mzTabID, title, description, sampleProcessing, instrument, software, publication, contact, uri, externalStudyUri, quantificationMethod, studyVariable, assay, msRun, custom, sample, cv, database, derivatizationAgent, smallMoleculeQuantificationUnit, smallMoleculeFeatureQuantificationUnit, smallMoleculeIdentificationReliability, idConfidenceMeasure, colunitSmallMolecule, colunitSmallMoleculeFeature, colunitSmallMoleculeEvidence);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Metadata {\n");
    
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    mzTabVersion: ").append(toIndentedString(mzTabVersion)).append("\n");
    sb.append("    mzTabID: ").append(toIndentedString(mzTabID)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    sampleProcessing: ").append(toIndentedString(sampleProcessing)).append("\n");
    sb.append("    instrument: ").append(toIndentedString(instrument)).append("\n");
    sb.append("    software: ").append(toIndentedString(software)).append("\n");
    sb.append("    publication: ").append(toIndentedString(publication)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    externalStudyUri: ").append(toIndentedString(externalStudyUri)).append("\n");
    sb.append("    quantificationMethod: ").append(toIndentedString(quantificationMethod)).append("\n");
    sb.append("    studyVariable: ").append(toIndentedString(studyVariable)).append("\n");
    sb.append("    assay: ").append(toIndentedString(assay)).append("\n");
    sb.append("    msRun: ").append(toIndentedString(msRun)).append("\n");
    sb.append("    custom: ").append(toIndentedString(custom)).append("\n");
    sb.append("    sample: ").append(toIndentedString(sample)).append("\n");
    sb.append("    cv: ").append(toIndentedString(cv)).append("\n");
    sb.append("    database: ").append(toIndentedString(database)).append("\n");
    sb.append("    derivatizationAgent: ").append(toIndentedString(derivatizationAgent)).append("\n");
    sb.append("    smallMoleculeQuantificationUnit: ").append(toIndentedString(smallMoleculeQuantificationUnit)).append("\n");
    sb.append("    smallMoleculeFeatureQuantificationUnit: ").append(toIndentedString(smallMoleculeFeatureQuantificationUnit)).append("\n");
    sb.append("    smallMoleculeIdentificationReliability: ").append(toIndentedString(smallMoleculeIdentificationReliability)).append("\n");
    sb.append("    idConfidenceMeasure: ").append(toIndentedString(idConfidenceMeasure)).append("\n");
    sb.append("    colunitSmallMolecule: ").append(toIndentedString(colunitSmallMolecule)).append("\n");
    sb.append("    colunitSmallMoleculeFeature: ").append(toIndentedString(colunitSmallMoleculeFeature)).append("\n");
    sb.append("    colunitSmallMoleculeEvidence: ").append(toIndentedString(colunitSmallMoleculeEvidence)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

