/*
 * mzTab validation API.
 * This is an mzTab validation service.
 *
 * OpenAPI spec version: 1.1.0
 * Contact: nils.hoffmann@isas.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.isas.mztab1_1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import de.isas.mztab1_1.model.IndexedElement;
import de.isas.mztab1_1.model.Parameter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import javax.xml.bind.annotation.*;
import javax.validation.constraints.*;
import javax.validation.Valid;
import de.isas.lipidomics.jmztabm.validation.constraints.*;
/**
 * Database
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-31T17:58:50.083+02:00")
@XmlRootElement(name = "Database")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "Database")
public class Database extends IndexedElement {

  public static enum Properties {
      param("param"), 
      prefix("prefix"), 
      version("version"), 
      url("url");

    private final String propertyName;

    private Properties(String propertyName) {
      this.propertyName = propertyName;
    }

    public String getPropertyName() {
      return propertyName;
    }

    public String toString() {
      return propertyName;
    }

    public String toUpper() {
      return propertyName.toUpperCase();
    }

    public static Properties of(String value) {
      if(value==null) {
        throw new NullPointerException("Argument value must not be null!");
      }
      return Arrays.asList(Properties.values()).stream().filter(m -> m.propertyName.equals(value.toLowerCase())).findAny().orElseThrow(IllegalArgumentException::new);
    }
  };
  
  @JsonProperty("param")
  @JacksonXmlProperty(localName = "param")
  @XmlElement(name = "param")
  private Parameter param = null;
  @JsonProperty("prefix")
  @JacksonXmlProperty(localName = "prefix")
  @XmlElement(name = "prefix")
  private String prefix = null;
  @JsonProperty("version")
  @JacksonXmlProperty(localName = "version")
  @XmlElement(name = "version")
  private String version = null;
  @JsonProperty("url")
  @JacksonXmlProperty(localName = "url")
  @XmlElement(name = "url")
  private String url = null;
  
  @Override
  public Database id(Integer id) {
   super.setId(id);
   return this;
  }
  
  @Override
  public Database elementType(String elementType) {
   super.setElementType(elementType);
   return this;
  }

  public Database param(Parameter param) {
   this.param = param;
   return this;
  }

   /**
   * Get param
   * @return param
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  public Parameter getParam() {
    return param;
  }

  public void setParam(Parameter param) {
    this.param = param;
  }


  public Database prefix(String prefix) {
   this.prefix = prefix;
   return this;
  }

   /**
   * Get prefix
   * @return prefix
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "")
  public String getPrefix() {
    return prefix;
  }

  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }


  public Database version(String version) {
   this.version = version;
   return this;
  }

   /**
   * Get version
   * @return version
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  public Database url(String url) {
   this.url = url;
   return this;
  }

   /**
   * Get url
   * @return url
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Database database = (Database) o;
    return Objects.equals(this.param, database.param) &&
        Objects.equals(this.prefix, database.prefix) &&
        Objects.equals(this.version, database.version) &&
        Objects.equals(this.url, database.url) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(param, prefix, version, url, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Database {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    param: ").append(toIndentedString(param)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

