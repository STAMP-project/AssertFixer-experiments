/*
 * mzTab validation API.
 * This is an mzTab validation service.
 *
 * OpenAPI spec version: 1.1.0
 * Contact: nils.hoffmann@isas.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.isas.mztab1_1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import de.isas.mztab1_1.model.IndexedElement;
import de.isas.mztab1_1.model.Parameter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import javax.xml.bind.annotation.*;
import javax.validation.constraints.*;
import javax.validation.Valid;
import de.isas.lipidomics.jmztabm.validation.constraints.*;
/**
 * Sample
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-31T17:58:50.083+02:00")
@XmlRootElement(name = "Sample")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "Sample")
public class Sample extends IndexedElement {

  public static enum Properties {
      name("name"), 
      custom("custom"), 
      idConfidenceMeasure("id_confidence_measure"), 
      species("species"), 
      tissue("tissue"), 
      cellType("cell_type"), 
      disease("disease"), 
      description("description");

    private final String propertyName;

    private Properties(String propertyName) {
      this.propertyName = propertyName;
    }

    public String getPropertyName() {
      return propertyName;
    }

    public String toString() {
      return propertyName;
    }

    public String toUpper() {
      return propertyName.toUpperCase();
    }

    public static Properties of(String value) {
      if(value==null) {
        throw new NullPointerException("Argument value must not be null!");
      }
      return Arrays.asList(Properties.values()).stream().filter(m -> m.propertyName.equals(value.toLowerCase())).findAny().orElseThrow(IllegalArgumentException::new);
    }
  };
  
  @JsonProperty("name")
  @JacksonXmlProperty(localName = "name")
  @XmlElement(name = "name")
  private String name = null;
  @JsonProperty("custom")
  // Is a container wrapped=false
  // items.name=custom items.baseName=custom items.xmlName= items.xmlNamespace=
  // items.example= items.type=Parameter
  @XmlElement(name = "custom")
  private List<Parameter> custom = null;
  @JsonProperty("id_confidence_measure")
  // Is a container wrapped=false
  // items.name=idConfidenceMeasure items.baseName=idConfidenceMeasure items.xmlName= items.xmlNamespace=
  // items.example= items.type=Parameter
  @XmlElement(name = "idConfidenceMeasure")
  private List<Parameter> idConfidenceMeasure = null;
  @JsonProperty("species")
  // Is a container wrapped=false
  // items.name=species items.baseName=species items.xmlName= items.xmlNamespace=
  // items.example= items.type=Parameter
  @XmlElement(name = "species")
  private List<Parameter> species = null;
  @JsonProperty("tissue")
  // Is a container wrapped=false
  // items.name=tissue items.baseName=tissue items.xmlName= items.xmlNamespace=
  // items.example= items.type=Parameter
  @XmlElement(name = "tissue")
  private List<Parameter> tissue = null;
  @JsonProperty("cell_type")
  // Is a container wrapped=false
  // items.name=cellType items.baseName=cellType items.xmlName= items.xmlNamespace=
  // items.example= items.type=Parameter
  @XmlElement(name = "cellType")
  private List<Parameter> cellType = null;
  @JsonProperty("disease")
  // Is a container wrapped=false
  // items.name=disease items.baseName=disease items.xmlName= items.xmlNamespace=
  // items.example= items.type=Parameter
  @XmlElement(name = "disease")
  private List<Parameter> disease = null;
  @JsonProperty("description")
  @JacksonXmlProperty(localName = "description")
  @XmlElement(name = "description")
  private String description = null;
  
  @Override
  public Sample id(Integer id) {
   super.setId(id);
   return this;
  }
  
  @Override
  public Sample elementType(String elementType) {
   super.setElementType(elementType);
   return this;
  }

  public Sample name(String name) {
   this.name = name;
   return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Sample custom(List<Parameter> custom) {
   this.custom = custom;
   return this;
  }

  public Sample addCustomItem(Parameter customItem) {
    if (this.custom == null) {
      this.custom = new ArrayList<>();
    }
    this.custom.add(customItem);
    return this;
  }

   /**
   * Get custom
   * @return custom
  **/
  @Valid
  @ApiModelProperty(value = "")
  public List<Parameter> getCustom() {
    return custom;
  }

  public void setCustom(List<Parameter> custom) {
    this.custom = custom;
  }


  public Sample idConfidenceMeasure(List<Parameter> idConfidenceMeasure) {
   this.idConfidenceMeasure = idConfidenceMeasure;
   return this;
  }

  public Sample addIdConfidenceMeasureItem(Parameter idConfidenceMeasureItem) {
    if (this.idConfidenceMeasure == null) {
      this.idConfidenceMeasure = new ArrayList<>();
    }
    this.idConfidenceMeasure.add(idConfidenceMeasureItem);
    return this;
  }

   /**
   * Get idConfidenceMeasure
   * @return idConfidenceMeasure
  **/
  @Valid
  @ApiModelProperty(value = "")
  public List<Parameter> getIdConfidenceMeasure() {
    return idConfidenceMeasure;
  }

  public void setIdConfidenceMeasure(List<Parameter> idConfidenceMeasure) {
    this.idConfidenceMeasure = idConfidenceMeasure;
  }


  public Sample species(List<Parameter> species) {
   this.species = species;
   return this;
  }

  public Sample addSpeciesItem(Parameter speciesItem) {
    if (this.species == null) {
      this.species = new ArrayList<>();
    }
    this.species.add(speciesItem);
    return this;
  }

   /**
   * Get species
   * @return species
  **/
  @Valid
  @ApiModelProperty(value = "")
  public List<Parameter> getSpecies() {
    return species;
  }

  public void setSpecies(List<Parameter> species) {
    this.species = species;
  }


  public Sample tissue(List<Parameter> tissue) {
   this.tissue = tissue;
   return this;
  }

  public Sample addTissueItem(Parameter tissueItem) {
    if (this.tissue == null) {
      this.tissue = new ArrayList<>();
    }
    this.tissue.add(tissueItem);
    return this;
  }

   /**
   * Get tissue
   * @return tissue
  **/
  @Valid
  @ApiModelProperty(value = "")
  public List<Parameter> getTissue() {
    return tissue;
  }

  public void setTissue(List<Parameter> tissue) {
    this.tissue = tissue;
  }


  public Sample cellType(List<Parameter> cellType) {
   this.cellType = cellType;
   return this;
  }

  public Sample addCellTypeItem(Parameter cellTypeItem) {
    if (this.cellType == null) {
      this.cellType = new ArrayList<>();
    }
    this.cellType.add(cellTypeItem);
    return this;
  }

   /**
   * Get cellType
   * @return cellType
  **/
  @Valid
  @ApiModelProperty(value = "")
  public List<Parameter> getCellType() {
    return cellType;
  }

  public void setCellType(List<Parameter> cellType) {
    this.cellType = cellType;
  }


  public Sample disease(List<Parameter> disease) {
   this.disease = disease;
   return this;
  }

  public Sample addDiseaseItem(Parameter diseaseItem) {
    if (this.disease == null) {
      this.disease = new ArrayList<>();
    }
    this.disease.add(diseaseItem);
    return this;
  }

   /**
   * Get disease
   * @return disease
  **/
  @Valid
  @ApiModelProperty(value = "")
  public List<Parameter> getDisease() {
    return disease;
  }

  public void setDisease(List<Parameter> disease) {
    this.disease = disease;
  }


  public Sample description(String description) {
   this.description = description;
   return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Sample sample = (Sample) o;
    return Objects.equals(this.name, sample.name) &&
        Objects.equals(this.custom, sample.custom) &&
        Objects.equals(this.idConfidenceMeasure, sample.idConfidenceMeasure) &&
        Objects.equals(this.species, sample.species) &&
        Objects.equals(this.tissue, sample.tissue) &&
        Objects.equals(this.cellType, sample.cellType) &&
        Objects.equals(this.disease, sample.disease) &&
        Objects.equals(this.description, sample.description) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, custom, idConfidenceMeasure, species, tissue, cellType, disease, description, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Sample {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    custom: ").append(toIndentedString(custom)).append("\n");
    sb.append("    idConfidenceMeasure: ").append(toIndentedString(idConfidenceMeasure)).append("\n");
    sb.append("    species: ").append(toIndentedString(species)).append("\n");
    sb.append("    tissue: ").append(toIndentedString(tissue)).append("\n");
    sb.append("    cellType: ").append(toIndentedString(cellType)).append("\n");
    sb.append("    disease: ").append(toIndentedString(disease)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

