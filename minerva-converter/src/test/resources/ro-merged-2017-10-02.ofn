Prefix(:=<http://purl.obolibrary.org/obo/ro.owl#>)
Prefix(dc:=<http://purl.org/dc/elements/1.1/>)
Prefix(obo:=<http://purl.obolibrary.org/obo/>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(cito:=<http://purl.org/spar/cito/>)
Prefix(foaf:=<http://xmlns.com/foaf/0.1/>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(swrl:=<http://www.w3.org/2003/11/swrl#>)
Prefix(swrla:=<http://swrl.stanford.edu/ontologies/3.3/swrla.owl#>)
Prefix(swrlb:=<http://www.w3.org/2003/11/swrlb#>)
Prefix(subsets:=<http://purl.obolibrary.org/obo/ro/subsets#>)
Prefix(oboInOwl:=<http://www.geneontology.org/formats/oboInOwl#>)


Ontology(<http://purl.obolibrary.org/obo/ro.owl>
<http://purl.obolibrary.org/obo/ro/releases/2017-10-02/ro.owl>
Annotation(dc:description "The OBO Relations Ontology (RO) is a collection of OWL relations (ObjectProperties) intended for use across a wide variety of biological ontologies."@en)
Annotation(dc:source <http://obofoundry.org/ro>)
Annotation(dc:source obo:pato.owl)
Annotation(dc:title "OBO Relations Ontology"@en)
Annotation(oboInOwl:hasOBOFormatVersion "1.2"^^xsd:string)
Annotation(rdfs:comment "Includes Ontology(OntologyID(Anonymous-21)) [Axioms: 26 Logical Axioms: 0]"^^xsd:string)
Annotation(rdfs:comment "Includes Ontology(OntologyID(Anonymous-21)) [Axioms: 32 Logical Axioms: 0]"^^xsd:string)
Annotation(rdfs:comment "This ontology is intended for encoding constraints on ro/core in a way that is usable by EL reasoners such as Elk. In future this ontology may be derived by some automatic or semi-automatic translation process from a more direct encoding.")
Annotation(foaf:homepage " https://github.com/oborel/obo-relations/"^^xsd:anyURI)
Annotation(foaf:homepage "https://github.com/oborel/obo-relations/wiki/ROCore"^^xsd:anyURI)

Declaration(Class(obo:BFO_0000002))
Declaration(Class(obo:BFO_0000003))
Declaration(Class(obo:BFO_0000004))
Declaration(Class(obo:BFO_0000005))
Declaration(Class(obo:BFO_0000015))
Declaration(Class(obo:BFO_0000016))
Declaration(Class(obo:BFO_0000017))
Declaration(Class(obo:BFO_0000019))
Declaration(Class(obo:BFO_0000020))
Declaration(Class(obo:BFO_0000023))
Declaration(Class(obo:BFO_0000031))
Declaration(Class(obo:BFO_0000034))
Declaration(Class(obo:BFO_0000040))
Declaration(Class(obo:BFO_0000141))
Declaration(Class(obo:CARO_0000003))
Declaration(Class(obo:CARO_0000006))
Declaration(Class(obo:CARO_0000007))
Declaration(Class(obo:CARO_0000011))
Declaration(Class(obo:CARO_0000014))
Declaration(Class(obo:CARO_0001000))
Declaration(Class(obo:CARO_0001001))
Declaration(Class(obo:CARO_0010000))
Declaration(Class(obo:CL_0000000))
Declaration(Class(obo:CL_0000540))
Declaration(Class(obo:ENVO_00000428))
Declaration(Class(obo:ENVO_01000254))
Declaration(Class(obo:GO_0003674))
Declaration(Class(obo:GO_0003824))
Declaration(Class(obo:GO_0004842))
Declaration(Class(obo:GO_0004872))
Declaration(Class(obo:GO_0005515))
Declaration(Class(obo:GO_0005634))
Declaration(Class(obo:GO_0007610))
Declaration(Class(obo:GO_0007631))
Declaration(Class(obo:GO_0008150))
Declaration(Class(obo:GO_0016020))
Declaration(Class(obo:GO_0016301))
Declaration(Class(obo:GO_0016740))
Declaration(Class(obo:GO_0016772))
Declaration(Class(obo:GO_0016874))
Declaration(Class(obo:GO_0016879))
Declaration(Class(obo:GO_0016881))
Declaration(Class(obo:GO_0019787))
Declaration(Class(obo:GO_0030424))
Declaration(Class(obo:GO_0030425))
Declaration(Class(obo:GO_0042734))
Declaration(Class(obo:GO_0042995))
Declaration(Class(obo:GO_0043005))
Declaration(Class(obo:GO_0044403))
Declaration(Class(obo:GO_0044419))
Declaration(Class(obo:GO_0044456))
Declaration(Class(obo:GO_0044464))
Declaration(Class(obo:GO_0045202))
Declaration(Class(obo:GO_0045211))
Declaration(Class(obo:GO_0048018))
Declaration(Class(obo:GO_0050896))
Declaration(Class(obo:GO_0051702))
Declaration(Class(obo:GO_0051704))
Declaration(Class(obo:GO_0051705))
Declaration(Class(obo:GO_0051816))
Declaration(Class(obo:GO_0051850))
Declaration(Class(obo:GO_0072519))
Declaration(Class(obo:GO_0085030))
Declaration(Class(obo:GO_0085031))
Declaration(Class(obo:PATO_0000001))
Declaration(Class(obo:PATO_0000051))
Declaration(Class(obo:PATO_0000052))
Declaration(Class(obo:PATO_0000141))
Declaration(Class(obo:PATO_0000402))
Declaration(Class(obo:PATO_0001199))
Declaration(Class(obo:PATO_0001241))
Declaration(Class(obo:PATO_0002009))
Declaration(Class(obo:PATO_0002124))
Declaration(Class(obo:RO_0002310))
Declaration(Class(obo:RO_0002532))
Declaration(Class(obo:RO_0002533))
Declaration(Class(obo:RO_0002534))
Declaration(Class(obo:RO_0002577))
Declaration(Class(oboInOwl:ObsoleteClass))
Declaration(ObjectProperty(obo:BFO_0000050))
Declaration(ObjectProperty(obo:BFO_0000051))
Declaration(ObjectProperty(obo:BFO_0000054))
Declaration(ObjectProperty(obo:BFO_0000055))
Declaration(ObjectProperty(obo:BFO_0000060))
Declaration(ObjectProperty(obo:BFO_0000062))
Declaration(ObjectProperty(obo:BFO_0000063))
Declaration(ObjectProperty(obo:BFO_0000066))
Declaration(ObjectProperty(obo:BFO_0000067))
Declaration(ObjectProperty(obo:R0_0009004))
Declaration(ObjectProperty(obo:RO_0000052))
Declaration(ObjectProperty(obo:RO_0000053))
Declaration(ObjectProperty(obo:RO_0000056))
Declaration(ObjectProperty(obo:RO_0000057))
Declaration(ObjectProperty(obo:RO_0000058))
Declaration(ObjectProperty(obo:RO_0000059))
Declaration(ObjectProperty(obo:RO_0000079))
Declaration(ObjectProperty(obo:RO_0000080))
Declaration(ObjectProperty(obo:RO_0000081))
Declaration(ObjectProperty(obo:RO_0000085))
Declaration(ObjectProperty(obo:RO_0000086))
Declaration(ObjectProperty(obo:RO_0000087))
Declaration(ObjectProperty(obo:RO_0000091))
Declaration(ObjectProperty(obo:RO_0000092))
Declaration(ObjectProperty(obo:RO_0000300))
Declaration(ObjectProperty(obo:RO_0000301))
Declaration(ObjectProperty(obo:RO_0000302))
Declaration(ObjectProperty(obo:RO_0001000))
Declaration(ObjectProperty(obo:RO_0001001))
Declaration(ObjectProperty(obo:RO_0001015))
Declaration(ObjectProperty(obo:RO_0001018))
Declaration(ObjectProperty(obo:RO_0001019))
Declaration(ObjectProperty(obo:RO_0001020))
Declaration(ObjectProperty(obo:RO_0001021))
Declaration(ObjectProperty(obo:RO_0001022))
Declaration(ObjectProperty(obo:RO_0001023))
Declaration(ObjectProperty(obo:RO_0001025))
Declaration(ObjectProperty(obo:RO_0002000))
Declaration(ObjectProperty(obo:RO_0002001))
Declaration(ObjectProperty(obo:RO_0002002))
Declaration(ObjectProperty(obo:RO_0002003))
Declaration(ObjectProperty(obo:RO_0002004))
Declaration(ObjectProperty(obo:RO_0002005))
Declaration(ObjectProperty(obo:RO_0002006))
Declaration(ObjectProperty(obo:RO_0002007))
Declaration(ObjectProperty(obo:RO_0002008))
Declaration(ObjectProperty(obo:RO_0002009))
Declaration(ObjectProperty(obo:RO_0002010))
Declaration(ObjectProperty(obo:RO_0002011))
Declaration(ObjectProperty(obo:RO_0002012))
Declaration(ObjectProperty(obo:RO_0002013))
Declaration(ObjectProperty(obo:RO_0002014))
Declaration(ObjectProperty(obo:RO_0002015))
Declaration(ObjectProperty(obo:RO_0002016))
Declaration(ObjectProperty(obo:RO_0002017))
Declaration(ObjectProperty(obo:RO_0002018))
Declaration(ObjectProperty(obo:RO_0002019))
Declaration(ObjectProperty(obo:RO_0002020))
Declaration(ObjectProperty(obo:RO_0002021))
Declaration(ObjectProperty(obo:RO_0002022))
Declaration(ObjectProperty(obo:RO_0002023))
Declaration(ObjectProperty(obo:RO_0002024))
Declaration(ObjectProperty(obo:RO_0002025))
Declaration(ObjectProperty(obo:RO_0002081))
Declaration(ObjectProperty(obo:RO_0002082))
Declaration(ObjectProperty(obo:RO_0002083))
Declaration(ObjectProperty(obo:RO_0002084))
Declaration(ObjectProperty(obo:RO_0002085))
Declaration(ObjectProperty(obo:RO_0002086))
Declaration(ObjectProperty(obo:RO_0002087))
Declaration(ObjectProperty(obo:RO_0002088))
Declaration(ObjectProperty(obo:RO_0002089))
Declaration(ObjectProperty(obo:RO_0002090))
Declaration(ObjectProperty(obo:RO_0002091))
Declaration(ObjectProperty(obo:RO_0002092))
Declaration(ObjectProperty(obo:RO_0002093))
Declaration(ObjectProperty(obo:RO_0002100))
Declaration(ObjectProperty(obo:RO_0002101))
Declaration(ObjectProperty(obo:RO_0002102))
Declaration(ObjectProperty(obo:RO_0002103))
Declaration(ObjectProperty(obo:RO_0002104))
Declaration(ObjectProperty(obo:RO_0002105))
Declaration(ObjectProperty(obo:RO_0002106))
Declaration(ObjectProperty(obo:RO_0002107))
Declaration(ObjectProperty(obo:RO_0002108))
Declaration(ObjectProperty(obo:RO_0002109))
Declaration(ObjectProperty(obo:RO_0002110))
Declaration(ObjectProperty(obo:RO_0002111))
Declaration(ObjectProperty(obo:RO_0002112))
Declaration(ObjectProperty(obo:RO_0002113))
Declaration(ObjectProperty(obo:RO_0002114))
Declaration(ObjectProperty(obo:RO_0002115))
Declaration(ObjectProperty(obo:RO_0002120))
Declaration(ObjectProperty(obo:RO_0002121))
Declaration(ObjectProperty(obo:RO_0002130))
Declaration(ObjectProperty(obo:RO_0002131))
Declaration(ObjectProperty(obo:RO_0002132))
Declaration(ObjectProperty(obo:RO_0002134))
Declaration(ObjectProperty(obo:RO_0002150))
Declaration(ObjectProperty(obo:RO_0002151))
Declaration(ObjectProperty(obo:RO_0002156))
Declaration(ObjectProperty(obo:RO_0002157))
Declaration(ObjectProperty(obo:RO_0002158))
Declaration(ObjectProperty(obo:RO_0002159))
Declaration(ObjectProperty(obo:RO_0002160))
Declaration(ObjectProperty(obo:RO_0002162))
Declaration(ObjectProperty(obo:RO_0002163))
Declaration(ObjectProperty(obo:RO_0002170))
Declaration(ObjectProperty(obo:RO_0002176))
Declaration(ObjectProperty(obo:RO_0002177))
Declaration(ObjectProperty(obo:RO_0002178))
Declaration(ObjectProperty(obo:RO_0002179))
Declaration(ObjectProperty(obo:RO_0002180))
Declaration(ObjectProperty(obo:RO_0002200))
Declaration(ObjectProperty(obo:RO_0002201))
Declaration(ObjectProperty(obo:RO_0002202))
Declaration(ObjectProperty(obo:RO_0002203))
Declaration(ObjectProperty(obo:RO_0002204))
Declaration(ObjectProperty(obo:RO_0002205))
Declaration(ObjectProperty(obo:RO_0002206))
Declaration(ObjectProperty(obo:RO_0002207))
Declaration(ObjectProperty(obo:RO_0002208))
Declaration(ObjectProperty(obo:RO_0002209))
Declaration(ObjectProperty(obo:RO_0002210))
Declaration(ObjectProperty(obo:RO_0002211))
Declaration(ObjectProperty(obo:RO_0002212))
Declaration(ObjectProperty(obo:RO_0002213))
Declaration(ObjectProperty(obo:RO_0002214))
Declaration(ObjectProperty(obo:RO_0002215))
Declaration(ObjectProperty(obo:RO_0002216))
Declaration(ObjectProperty(obo:RO_0002217))
Declaration(ObjectProperty(obo:RO_0002218))
Declaration(ObjectProperty(obo:RO_0002219))
Declaration(ObjectProperty(obo:RO_0002220))
Declaration(ObjectProperty(obo:RO_0002221))
Declaration(ObjectProperty(obo:RO_0002222))
Declaration(ObjectProperty(obo:RO_0002223))
Declaration(ObjectProperty(obo:RO_0002224))
Declaration(ObjectProperty(obo:RO_0002225))
Declaration(ObjectProperty(obo:RO_0002226))
Declaration(ObjectProperty(obo:RO_0002227))
Declaration(ObjectProperty(obo:RO_0002228))
Declaration(ObjectProperty(obo:RO_0002229))
Declaration(ObjectProperty(obo:RO_0002230))
Declaration(ObjectProperty(obo:RO_0002231))
Declaration(ObjectProperty(obo:RO_0002232))
Declaration(ObjectProperty(obo:RO_0002233))
Declaration(ObjectProperty(obo:RO_0002234))
Declaration(ObjectProperty(obo:RO_0002235))
Declaration(ObjectProperty(obo:RO_0002236))
Declaration(ObjectProperty(obo:RO_0002237))
Declaration(ObjectProperty(obo:RO_0002240))
Declaration(ObjectProperty(obo:RO_0002241))
Declaration(ObjectProperty(obo:RO_0002242))
Declaration(ObjectProperty(obo:RO_0002243))
Declaration(ObjectProperty(obo:RO_0002244))
Declaration(ObjectProperty(obo:RO_0002245))
Declaration(ObjectProperty(obo:RO_0002246))
Declaration(ObjectProperty(obo:RO_0002248))
Declaration(ObjectProperty(obo:RO_0002249))
Declaration(ObjectProperty(obo:RO_0002252))
Declaration(ObjectProperty(obo:RO_0002253))
Declaration(ObjectProperty(obo:RO_0002254))
Declaration(ObjectProperty(obo:RO_0002255))
Declaration(ObjectProperty(obo:RO_0002256))
Declaration(ObjectProperty(obo:RO_0002257))
Declaration(ObjectProperty(obo:RO_0002258))
Declaration(ObjectProperty(obo:RO_0002260))
Declaration(ObjectProperty(obo:RO_0002261))
Declaration(ObjectProperty(obo:RO_0002262))
Declaration(ObjectProperty(obo:RO_0002263))
Declaration(ObjectProperty(obo:RO_0002264))
Declaration(ObjectProperty(obo:RO_0002285))
Declaration(ObjectProperty(obo:RO_0002286))
Declaration(ObjectProperty(obo:RO_0002287))
Declaration(ObjectProperty(obo:RO_0002291))
Declaration(ObjectProperty(obo:RO_0002292))
Declaration(ObjectProperty(obo:RO_0002293))
Declaration(ObjectProperty(obo:RO_0002295))
Declaration(ObjectProperty(obo:RO_0002296))
Declaration(ObjectProperty(obo:RO_0002297))
Declaration(ObjectProperty(obo:RO_0002298))
Declaration(ObjectProperty(obo:RO_0002299))
Declaration(ObjectProperty(obo:RO_0002300))
Declaration(ObjectProperty(obo:RO_0002301))
Declaration(ObjectProperty(obo:RO_0002302))
Declaration(ObjectProperty(obo:RO_0002303))
Declaration(ObjectProperty(obo:RO_0002304))
Declaration(ObjectProperty(obo:RO_0002305))
Declaration(ObjectProperty(obo:RO_0002309))
Declaration(ObjectProperty(obo:RO_0002312))
Declaration(ObjectProperty(obo:RO_0002313))
Declaration(ObjectProperty(obo:RO_0002314))
Declaration(ObjectProperty(obo:RO_0002315))
Declaration(ObjectProperty(obo:RO_0002320))
Declaration(ObjectProperty(obo:RO_0002321))
Declaration(ObjectProperty(obo:RO_0002322))
Declaration(ObjectProperty(obo:RO_0002323))
Declaration(ObjectProperty(obo:RO_0002324))
Declaration(ObjectProperty(obo:RO_0002325))
Declaration(ObjectProperty(obo:RO_0002326))
Declaration(ObjectProperty(obo:RO_0002327))
Declaration(ObjectProperty(obo:RO_0002328))
Declaration(ObjectProperty(obo:RO_0002329))
Declaration(ObjectProperty(obo:RO_0002330))
Declaration(ObjectProperty(obo:RO_0002331))
Declaration(ObjectProperty(obo:RO_0002332))
Declaration(ObjectProperty(obo:RO_0002333))
Declaration(ObjectProperty(obo:RO_0002334))
Declaration(ObjectProperty(obo:RO_0002335))
Declaration(ObjectProperty(obo:RO_0002336))
Declaration(ObjectProperty(obo:RO_0002337))
Declaration(ObjectProperty(obo:RO_0002338))
Declaration(ObjectProperty(obo:RO_0002339))
Declaration(ObjectProperty(obo:RO_0002340))
Declaration(ObjectProperty(obo:RO_0002341))
Declaration(ObjectProperty(obo:RO_0002342))
Declaration(ObjectProperty(obo:RO_0002343))
Declaration(ObjectProperty(obo:RO_0002344))
Declaration(ObjectProperty(obo:RO_0002345))
Declaration(ObjectProperty(obo:RO_0002348))
Declaration(ObjectProperty(obo:RO_0002349))
Declaration(ObjectProperty(obo:RO_0002350))
Declaration(ObjectProperty(obo:RO_0002351))
Declaration(ObjectProperty(obo:RO_0002352))
Declaration(ObjectProperty(obo:RO_0002353))
Declaration(ObjectProperty(obo:RO_0002354))
Declaration(ObjectProperty(obo:RO_0002355))
Declaration(ObjectProperty(obo:RO_0002356))
Declaration(ObjectProperty(obo:RO_0002357))
Declaration(ObjectProperty(obo:RO_0002360))
Declaration(ObjectProperty(obo:RO_0002371))
Declaration(ObjectProperty(obo:RO_0002372))
Declaration(ObjectProperty(obo:RO_0002373))
Declaration(ObjectProperty(obo:RO_0002374))
Declaration(ObjectProperty(obo:RO_0002375))
Declaration(ObjectProperty(obo:RO_0002376))
Declaration(ObjectProperty(obo:RO_0002377))
Declaration(ObjectProperty(obo:RO_0002378))
Declaration(ObjectProperty(obo:RO_0002379))
Declaration(ObjectProperty(obo:RO_0002380))
Declaration(ObjectProperty(obo:RO_0002381))
Declaration(ObjectProperty(obo:RO_0002382))
Declaration(ObjectProperty(obo:RO_0002383))
Declaration(ObjectProperty(obo:RO_0002384))
Declaration(ObjectProperty(obo:RO_0002385))
Declaration(ObjectProperty(obo:RO_0002386))
Declaration(ObjectProperty(obo:RO_0002387))
Declaration(ObjectProperty(obo:RO_0002388))
Declaration(ObjectProperty(obo:RO_0002400))
Declaration(ObjectProperty(obo:RO_0002401))
Declaration(ObjectProperty(obo:RO_0002402))
Declaration(ObjectProperty(obo:RO_0002403))
Declaration(ObjectProperty(obo:RO_0002404))
Declaration(ObjectProperty(obo:RO_0002405))
Declaration(ObjectProperty(obo:RO_0002406))
Declaration(ObjectProperty(obo:RO_0002407))
Declaration(ObjectProperty(obo:RO_0002408))
Declaration(ObjectProperty(obo:RO_0002409))
Declaration(ObjectProperty(obo:RO_0002410))
Declaration(ObjectProperty(obo:RO_0002411))
Declaration(ObjectProperty(obo:RO_0002412))
Declaration(ObjectProperty(obo:RO_0002413))
Declaration(ObjectProperty(obo:RO_0002414))
Declaration(ObjectProperty(obo:RO_0002418))
Declaration(ObjectProperty(obo:RO_0002424))
Declaration(ObjectProperty(obo:RO_0002425))
Declaration(ObjectProperty(obo:RO_0002426))
Declaration(ObjectProperty(obo:RO_0002427))
Declaration(ObjectProperty(obo:RO_0002428))
Declaration(ObjectProperty(obo:RO_0002429))
Declaration(ObjectProperty(obo:RO_0002430))
Declaration(ObjectProperty(obo:RO_0002431))
Declaration(ObjectProperty(obo:RO_0002432))
Declaration(ObjectProperty(obo:RO_0002433))
Declaration(ObjectProperty(obo:RO_0002434))
Declaration(ObjectProperty(obo:RO_0002435))
Declaration(ObjectProperty(obo:RO_0002436))
Declaration(ObjectProperty(obo:RO_0002437))
Declaration(ObjectProperty(obo:RO_0002438))
Declaration(ObjectProperty(obo:RO_0002439))
Declaration(ObjectProperty(obo:RO_0002440))
Declaration(ObjectProperty(obo:RO_0002441))
Declaration(ObjectProperty(obo:RO_0002442))
Declaration(ObjectProperty(obo:RO_0002443))
Declaration(ObjectProperty(obo:RO_0002444))
Declaration(ObjectProperty(obo:RO_0002445))
Declaration(ObjectProperty(obo:RO_0002446))
Declaration(ObjectProperty(obo:RO_0002447))
Declaration(ObjectProperty(obo:RO_0002448))
Declaration(ObjectProperty(obo:RO_0002449))
Declaration(ObjectProperty(obo:RO_0002450))
Declaration(ObjectProperty(obo:RO_0002451))
Declaration(ObjectProperty(obo:RO_0002452))
Declaration(ObjectProperty(obo:RO_0002453))
Declaration(ObjectProperty(obo:RO_0002454))
Declaration(ObjectProperty(obo:RO_0002455))
Declaration(ObjectProperty(obo:RO_0002456))
Declaration(ObjectProperty(obo:RO_0002457))
Declaration(ObjectProperty(obo:RO_0002458))
Declaration(ObjectProperty(obo:RO_0002459))
Declaration(ObjectProperty(obo:RO_0002460))
Declaration(ObjectProperty(obo:RO_0002461))
Declaration(ObjectProperty(obo:RO_0002462))
Declaration(ObjectProperty(obo:RO_0002463))
Declaration(ObjectProperty(obo:RO_0002464))
Declaration(ObjectProperty(obo:RO_0002465))
Declaration(ObjectProperty(obo:RO_0002466))
Declaration(ObjectProperty(obo:RO_0002467))
Declaration(ObjectProperty(obo:RO_0002468))
Declaration(ObjectProperty(obo:RO_0002469))
Declaration(ObjectProperty(obo:RO_0002470))
Declaration(ObjectProperty(obo:RO_0002471))
Declaration(ObjectProperty(obo:RO_0002472))
Declaration(ObjectProperty(obo:RO_0002473))
Declaration(ObjectProperty(obo:RO_0002476))
Declaration(ObjectProperty(obo:RO_0002477))
Declaration(ObjectProperty(obo:RO_0002478))
Declaration(ObjectProperty(obo:RO_0002479))
Declaration(ObjectProperty(obo:RO_0002480))
Declaration(ObjectProperty(obo:RO_0002481))
Declaration(ObjectProperty(obo:RO_0002482))
Declaration(ObjectProperty(obo:RO_0002485))
Declaration(ObjectProperty(obo:RO_0002486))
Declaration(ObjectProperty(obo:RO_0002487))
Declaration(ObjectProperty(obo:RO_0002488))
Declaration(ObjectProperty(obo:RO_0002489))
Declaration(ObjectProperty(obo:RO_0002490))
Declaration(ObjectProperty(obo:RO_0002491))
Declaration(ObjectProperty(obo:RO_0002492))
Declaration(ObjectProperty(obo:RO_0002493))
Declaration(ObjectProperty(obo:RO_0002494))
Declaration(ObjectProperty(obo:RO_0002495))
Declaration(ObjectProperty(obo:RO_0002496))
Declaration(ObjectProperty(obo:RO_0002497))
Declaration(ObjectProperty(obo:RO_0002500))
Declaration(ObjectProperty(obo:RO_0002501))
Declaration(ObjectProperty(obo:RO_0002502))
Declaration(ObjectProperty(obo:RO_0002503))
Declaration(ObjectProperty(obo:RO_0002505))
Declaration(ObjectProperty(obo:RO_0002506))
Declaration(ObjectProperty(obo:RO_0002507))
Declaration(ObjectProperty(obo:RO_0002508))
Declaration(ObjectProperty(obo:RO_0002509))
Declaration(ObjectProperty(obo:RO_0002510))
Declaration(ObjectProperty(obo:RO_0002511))
Declaration(ObjectProperty(obo:RO_0002512))
Declaration(ObjectProperty(obo:RO_0002513))
Declaration(ObjectProperty(obo:RO_0002514))
Declaration(ObjectProperty(obo:RO_0002515))
Declaration(ObjectProperty(obo:RO_0002516))
Declaration(ObjectProperty(obo:RO_0002517))
Declaration(ObjectProperty(obo:RO_0002518))
Declaration(ObjectProperty(obo:RO_0002519))
Declaration(ObjectProperty(obo:RO_0002520))
Declaration(ObjectProperty(obo:RO_0002521))
Declaration(ObjectProperty(obo:RO_0002522))
Declaration(ObjectProperty(obo:RO_0002523))
Declaration(ObjectProperty(obo:RO_0002524))
Declaration(ObjectProperty(obo:RO_0002525))
Declaration(ObjectProperty(obo:RO_0002526))
Declaration(ObjectProperty(obo:RO_0002527))
Declaration(ObjectProperty(obo:RO_0002528))
Declaration(ObjectProperty(obo:RO_0002529))
Declaration(ObjectProperty(obo:RO_0002530))
Declaration(ObjectProperty(obo:RO_0002531))
Declaration(ObjectProperty(obo:RO_0002551))
Declaration(ObjectProperty(obo:RO_0002552))
Declaration(ObjectProperty(obo:RO_0002553))
Declaration(ObjectProperty(obo:RO_0002554))
Declaration(ObjectProperty(obo:RO_0002555))
Declaration(ObjectProperty(obo:RO_0002556))
Declaration(ObjectProperty(obo:RO_0002557))
Declaration(ObjectProperty(obo:RO_0002558))
Declaration(ObjectProperty(obo:RO_0002559))
Declaration(ObjectProperty(obo:RO_0002563))
Declaration(ObjectProperty(obo:RO_0002564))
Declaration(ObjectProperty(obo:RO_0002565))
Declaration(ObjectProperty(obo:RO_0002566))
Declaration(ObjectProperty(obo:RO_0002567))
Declaration(ObjectProperty(obo:RO_0002568))
Declaration(ObjectProperty(obo:RO_0002569))
Declaration(ObjectProperty(obo:RO_0002570))
Declaration(ObjectProperty(obo:RO_0002571))
Declaration(ObjectProperty(obo:RO_0002572))
Declaration(ObjectProperty(obo:RO_0002573))
Declaration(ObjectProperty(obo:RO_0002574))
Declaration(ObjectProperty(obo:RO_0002576))
Declaration(ObjectProperty(obo:RO_0002578))
Declaration(ObjectProperty(obo:RO_0002583))
Declaration(ObjectProperty(obo:RO_0002584))
Declaration(ObjectProperty(obo:RO_0002585))
Declaration(ObjectProperty(obo:RO_0002586))
Declaration(ObjectProperty(obo:RO_0002587))
Declaration(ObjectProperty(obo:RO_0002588))
Declaration(ObjectProperty(obo:RO_0002589))
Declaration(ObjectProperty(obo:RO_0002590))
Declaration(ObjectProperty(obo:RO_0002591))
Declaration(ObjectProperty(obo:RO_0002592))
Declaration(ObjectProperty(obo:RO_0002593))
Declaration(ObjectProperty(obo:RO_0002595))
Declaration(ObjectProperty(obo:RO_0002596))
Declaration(ObjectProperty(obo:RO_0002597))
Declaration(ObjectProperty(obo:RO_0002598))
Declaration(ObjectProperty(obo:RO_0002599))
Declaration(ObjectProperty(obo:RO_0002600))
Declaration(ObjectProperty(obo:RO_0002606))
Declaration(ObjectProperty(obo:RO_0002607))
Declaration(ObjectProperty(obo:RO_0002608))
Declaration(ObjectProperty(obo:RO_0002609))
Declaration(ObjectProperty(obo:RO_0002610))
Declaration(ObjectProperty(obo:RO_0002614))
Declaration(ObjectProperty(obo:RO_0002615))
Declaration(ObjectProperty(obo:RO_0002616))
Declaration(ObjectProperty(obo:RO_0002618))
Declaration(ObjectProperty(obo:RO_0002619))
Declaration(ObjectProperty(obo:RO_0002622))
Declaration(ObjectProperty(obo:RO_0002623))
Declaration(ObjectProperty(obo:RO_0002624))
Declaration(ObjectProperty(obo:RO_0002625))
Declaration(ObjectProperty(obo:RO_0002626))
Declaration(ObjectProperty(obo:RO_0002627))
Declaration(ObjectProperty(obo:RO_0002629))
Declaration(ObjectProperty(obo:RO_0002630))
Declaration(ObjectProperty(obo:RO_0002632))
Declaration(ObjectProperty(obo:RO_0002633))
Declaration(ObjectProperty(obo:RO_0002634))
Declaration(ObjectProperty(obo:RO_0002635))
Declaration(ObjectProperty(obo:RO_0002636))
Declaration(ObjectProperty(obo:RO_0002637))
Declaration(ObjectProperty(obo:RO_0002638))
Declaration(ObjectProperty(obo:RO_0002639))
Declaration(ObjectProperty(obo:RO_0002640))
Declaration(ObjectProperty(obo:RO_0002641))
Declaration(ObjectProperty(obo:RO_0003000))
Declaration(ObjectProperty(obo:RO_0003001))
Declaration(ObjectProperty(obo:RO_0003002))
Declaration(ObjectProperty(obo:RO_0003003))
Declaration(ObjectProperty(obo:RO_0003301))
Declaration(ObjectProperty(obo:RO_0003302))
Declaration(ObjectProperty(obo:RO_0003303))
Declaration(ObjectProperty(obo:RO_0003304))
Declaration(ObjectProperty(obo:RO_0003305))
Declaration(ObjectProperty(obo:RO_0003306))
Declaration(ObjectProperty(obo:RO_0003307))
Declaration(ObjectProperty(obo:RO_0003308))
Declaration(ObjectProperty(obo:RO_0003309))
Declaration(ObjectProperty(obo:RO_0003310))
Declaration(ObjectProperty(obo:RO_0003311))
Declaration(ObjectProperty(obo:RO_0008501))
Declaration(ObjectProperty(obo:RO_0008502))
Declaration(ObjectProperty(obo:RO_0008503))
Declaration(ObjectProperty(obo:RO_0008504))
Declaration(ObjectProperty(obo:RO_0008505))
Declaration(ObjectProperty(obo:RO_0008506))
Declaration(ObjectProperty(obo:RO_0008507))
Declaration(ObjectProperty(obo:RO_0008508))
Declaration(ObjectProperty(obo:RO_0009001))
Declaration(ObjectProperty(obo:RO_0009002))
Declaration(ObjectProperty(obo:RO_0009003))
Declaration(ObjectProperty(obo:RO_0009005))
Declaration(ObjectProperty(obo:RO_0009501))
Declaration(ObjectProperty(obo:RO_HOM0000000))
Declaration(ObjectProperty(obo:RO_HOM0000001))
Declaration(ObjectProperty(obo:RO_HOM0000002))
Declaration(ObjectProperty(obo:RO_HOM0000003))
Declaration(ObjectProperty(obo:RO_HOM0000004))
Declaration(ObjectProperty(obo:RO_HOM0000005))
Declaration(ObjectProperty(obo:RO_HOM0000006))
Declaration(ObjectProperty(obo:RO_HOM0000007))
Declaration(ObjectProperty(obo:RO_HOM0000008))
Declaration(ObjectProperty(obo:RO_HOM0000009))
Declaration(ObjectProperty(obo:RO_HOM0000010))
Declaration(ObjectProperty(obo:RO_HOM0000011))
Declaration(ObjectProperty(obo:RO_HOM0000012))
Declaration(ObjectProperty(obo:RO_HOM0000013))
Declaration(ObjectProperty(obo:RO_HOM0000014))
Declaration(ObjectProperty(obo:RO_HOM0000015))
Declaration(ObjectProperty(obo:RO_HOM0000016))
Declaration(ObjectProperty(obo:RO_HOM0000017))
Declaration(ObjectProperty(obo:RO_HOM0000018))
Declaration(ObjectProperty(obo:RO_HOM0000019))
Declaration(ObjectProperty(obo:RO_HOM0000020))
Declaration(ObjectProperty(obo:RO_HOM0000022))
Declaration(ObjectProperty(obo:RO_HOM0000023))
Declaration(ObjectProperty(obo:RO_HOM0000024))
Declaration(ObjectProperty(obo:RO_HOM0000025))
Declaration(ObjectProperty(obo:RO_HOM0000026))
Declaration(ObjectProperty(obo:RO_HOM0000027))
Declaration(ObjectProperty(obo:RO_HOM0000028))
Declaration(ObjectProperty(obo:RO_HOM0000029))
Declaration(ObjectProperty(obo:RO_HOM0000030))
Declaration(ObjectProperty(obo:RO_HOM0000031))
Declaration(ObjectProperty(obo:RO_HOM0000032))
Declaration(ObjectProperty(obo:RO_HOM0000033))
Declaration(ObjectProperty(obo:RO_HOM0000034))
Declaration(ObjectProperty(obo:RO_HOM0000036))
Declaration(ObjectProperty(obo:RO_HOM0000037))
Declaration(ObjectProperty(obo:RO_HOM0000042))
Declaration(ObjectProperty(obo:RO_HOM0000043))
Declaration(ObjectProperty(obo:RO_HOM0000044))
Declaration(ObjectProperty(obo:RO_HOM0000045))
Declaration(ObjectProperty(obo:RO_HOM0000046))
Declaration(ObjectProperty(obo:RO_HOM0000047))
Declaration(ObjectProperty(obo:RO_HOM0000048))
Declaration(ObjectProperty(obo:RO_HOM0000049))
Declaration(ObjectProperty(obo:RO_HOM0000050))
Declaration(ObjectProperty(obo:RO_HOM0000051))
Declaration(ObjectProperty(obo:RO_HOM0000052))
Declaration(ObjectProperty(obo:RO_HOM0000053))
Declaration(ObjectProperty(obo:RO_HOM0000054))
Declaration(ObjectProperty(obo:RO_HOM0000055))
Declaration(ObjectProperty(obo:RO_HOM0000057))
Declaration(ObjectProperty(obo:RO_HOM0000058))
Declaration(ObjectProperty(obo:RO_HOM0000060))
Declaration(ObjectProperty(obo:RO_HOM0000061))
Declaration(ObjectProperty(obo:RO_HOM0000062))
Declaration(ObjectProperty(obo:RO_HOM0000063))
Declaration(ObjectProperty(obo:RO_HOM0000065))
Declaration(ObjectProperty(obo:RO_HOM0000066))
Declaration(ObjectProperty(obo:RO_HOM0000068))
Declaration(ObjectProperty(obo:RO_HOM0000069))
Declaration(ObjectProperty(obo:RO_HOM0000071))
Declaration(ObjectProperty(obo:RO_HOM0000072))
Declaration(ObjectProperty(obo:RO_HOM0000073))
Declaration(ObjectProperty(obo:RO_HOM0000074))
Declaration(ObjectProperty(obo:RO_HOM0000075))
Declaration(ObjectProperty(owl:topObjectProperty))
Declaration(NamedIndividual(obo:IAO_0000122))
Declaration(NamedIndividual(obo:IAO_0000125))
Declaration(NamedIndividual(obo:IAO_0000428))
Declaration(NamedIndividual(obo:RO_0001901))
Declaration(NamedIndividual(obo:RO_0001902))
Declaration(AnnotationProperty(obo:IAO_0000111))
Declaration(AnnotationProperty(obo:IAO_0000112))
Declaration(AnnotationProperty(obo:IAO_0000114))
Declaration(AnnotationProperty(obo:IAO_0000115))
Declaration(AnnotationProperty(obo:IAO_0000116))
Declaration(AnnotationProperty(obo:IAO_0000117))
Declaration(AnnotationProperty(obo:IAO_0000118))
Declaration(AnnotationProperty(obo:IAO_0000119))
Declaration(AnnotationProperty(obo:IAO_0000232))
Declaration(AnnotationProperty(obo:IAO_0000412))
Declaration(AnnotationProperty(obo:IAO_0000424))
Declaration(AnnotationProperty(obo:IAO_0000425))
Declaration(AnnotationProperty(obo:IAO_0000426))
Declaration(AnnotationProperty(obo:IAO_0000589))
Declaration(AnnotationProperty(obo:IAO_0000600))
Declaration(AnnotationProperty(obo:RO_0001900))
Declaration(AnnotationProperty(obo:RO_0002161))
Declaration(AnnotationProperty(obo:RO_0002171))
Declaration(AnnotationProperty(obo:RO_0002172))
Declaration(AnnotationProperty(obo:RO_0002173))
Declaration(AnnotationProperty(obo:RO_0002174))
Declaration(AnnotationProperty(obo:RO_0002175))
Declaration(AnnotationProperty(obo:RO_0002259))
Declaration(AnnotationProperty(obo:RO_0002416))
Declaration(AnnotationProperty(obo:RO_0002419))
Declaration(AnnotationProperty(obo:RO_0002420))
Declaration(AnnotationProperty(obo:RO_0002421))
Declaration(AnnotationProperty(obo:RO_0002422))
Declaration(AnnotationProperty(obo:RO_0002423))
Declaration(AnnotationProperty(obo:RO_0002474))
Declaration(AnnotationProperty(obo:RO_0002475))
Declaration(AnnotationProperty(obo:RO_0002483))
Declaration(AnnotationProperty(obo:RO_0002484))
Declaration(AnnotationProperty(obo:RO_0002504))
Declaration(AnnotationProperty(obo:RO_0002535))
Declaration(AnnotationProperty(obo:RO_0002536))
Declaration(AnnotationProperty(obo:RO_0002537))
Declaration(AnnotationProperty(obo:RO_0002538))
Declaration(AnnotationProperty(obo:RO_0002539))
Declaration(AnnotationProperty(obo:RO_0002540))
Declaration(AnnotationProperty(obo:RO_0002541))
Declaration(AnnotationProperty(obo:RO_0002542))
Declaration(AnnotationProperty(obo:RO_0002543))
Declaration(AnnotationProperty(obo:RO_0002544))
Declaration(AnnotationProperty(obo:RO_0002545))
Declaration(AnnotationProperty(obo:RO_0002546))
Declaration(AnnotationProperty(obo:RO_0002547))
Declaration(AnnotationProperty(obo:RO_0002548))
Declaration(AnnotationProperty(obo:RO_0002549))
Declaration(AnnotationProperty(obo:RO_0002550))
Declaration(AnnotationProperty(obo:RO_0002560))
Declaration(AnnotationProperty(obo:RO_0002561))
Declaration(AnnotationProperty(obo:RO_0002562))
Declaration(AnnotationProperty(obo:RO_0002575))
Declaration(AnnotationProperty(obo:RO_0002579))
Declaration(AnnotationProperty(obo:RO_0002580))
Declaration(AnnotationProperty(obo:RO_0002581))
Declaration(AnnotationProperty(obo:RO_0002582))
Declaration(AnnotationProperty(obo:RO_0002594))
Declaration(AnnotationProperty(obo:RO_0002601))
Declaration(AnnotationProperty(obo:RO_0002602))
Declaration(AnnotationProperty(obo:RO_0002603))
Declaration(AnnotationProperty(obo:RO_0002604))
Declaration(AnnotationProperty(obo:RO_0002605))
Declaration(AnnotationProperty(obo:RO_0002611))
Declaration(AnnotationProperty(obo:RO_0002612))
Declaration(AnnotationProperty(obo:RO_0002613))
Declaration(AnnotationProperty(obo:RO_0002617))
Declaration(AnnotationProperty(subsets:ro-eco))
Declaration(AnnotationProperty(dc:contributor))
Declaration(AnnotationProperty(dc:creator))
Declaration(AnnotationProperty(dc:description))
Declaration(AnnotationProperty(dc:publisher))
Declaration(AnnotationProperty(dc:source))
Declaration(AnnotationProperty(dc:title))
Declaration(AnnotationProperty(cito:citesAsAuthority))
Declaration(AnnotationProperty(swrla:isRuleEnabled))
Declaration(AnnotationProperty(oboInOwl:SubsetProperty))
Declaration(AnnotationProperty(oboInOwl:created_by))
Declaration(AnnotationProperty(oboInOwl:creation_date))
Declaration(AnnotationProperty(oboInOwl:hasBroadSynonym))
Declaration(AnnotationProperty(oboInOwl:hasDbXref))
Declaration(AnnotationProperty(oboInOwl:hasExactSynonym))
Declaration(AnnotationProperty(oboInOwl:hasOBOFormatVersion))
Declaration(AnnotationProperty(oboInOwl:hasRelatedSynonym))
Declaration(AnnotationProperty(oboInOwl:id))
Declaration(AnnotationProperty(oboInOwl:inSubset))
Declaration(AnnotationProperty(oboInOwl:shorthand))
Declaration(AnnotationProperty(rdfs:comment))
Declaration(AnnotationProperty(rdfs:label))
Declaration(AnnotationProperty(foaf:homepage))
Declaration(AnnotationProperty(foaf:page))
############################
#   Annotation Properties
############################

# Annotation Property: obo:IAO_0000111 (editor preferred term)

AnnotationAssertion(rdfs:label obo:IAO_0000111 "editor preferred term"@en)

# Annotation Property: obo:IAO_0000112 (example of usage)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000112 obo:IAO_0000122)
AnnotationAssertion(rdfs:label obo:IAO_0000112 "example of usage"@en)

# Annotation Property: obo:IAO_0000114 (has curation status)

AnnotationAssertion(rdfs:label obo:IAO_0000114 "has curation status"@en)

# Annotation Property: obo:IAO_0000115 (definition)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000115 obo:IAO_0000122)
AnnotationAssertion(rdfs:label obo:IAO_0000115 "definition"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000115 "definition"^^xsd:string)

# Annotation Property: obo:IAO_0000116 (editor note)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000116 obo:IAO_0000122)
AnnotationAssertion(rdfs:label obo:IAO_0000116 "editor note"@en)

# Annotation Property: obo:IAO_0000117 (term editor)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000117 obo:IAO_0000122)
AnnotationAssertion(rdfs:label obo:IAO_0000117 "term editor"@en)

# Annotation Property: obo:IAO_0000118 (alternative term)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000118 obo:IAO_0000125)
AnnotationAssertion(rdfs:label obo:IAO_0000118 "alternative term"@en)

# Annotation Property: obo:IAO_0000119 (definition source)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000119 obo:IAO_0000122)
AnnotationAssertion(rdfs:label obo:IAO_0000119 "definition source"@en)

# Annotation Property: obo:IAO_0000232 (curator note)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000232 obo:IAO_0000122)
AnnotationAssertion(rdfs:label obo:IAO_0000232 "curator note"@en)

# Annotation Property: obo:IAO_0000412 (imported from)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000412 obo:IAO_0000125)
AnnotationAssertion(rdfs:label obo:IAO_0000412 "imported from"@en)

# Annotation Property: obo:IAO_0000424 (expand expression to)

AnnotationAssertion(rdfs:label obo:IAO_0000424 "expand expression to"@en)

# Annotation Property: obo:IAO_0000425 (expand assertion to)

AnnotationAssertion(rdfs:label obo:IAO_0000425 "expand assertion to"@en)

# Annotation Property: obo:IAO_0000426 (first order logic expression)

AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000426 "An assertion that holds between an OWL Object Property and a string or literal, where the value of the string or literal is a Common Logic sentence of collection of sentences that define the Object Property.")
AnnotationAssertion(rdfs:label obo:IAO_0000426 "first order logic expression"@en)
SubAnnotationPropertyOf(obo:IAO_0000426 obo:RO_0002422)

# Annotation Property: obo:IAO_0000589 (OBO foundry unique label)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000589 obo:IAO_0000125)
AnnotationAssertion(rdfs:label obo:IAO_0000589 "OBO foundry unique label"@en)

# Annotation Property: obo:IAO_0000600 (elucidation)

AnnotationAssertion(rdfs:label obo:IAO_0000600 "elucidation"@en)

# Annotation Property: obo:RO_0001900 (temporal interpretation)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0001900 "An assertion that holds between an OWL Object Property and a temporal interpretation that elucidates how OWL Class Axioms that use this property are to be interpreted in a temporal context.")
AnnotationAssertion(rdfs:label obo:RO_0001900 "temporal interpretation"@en)
AnnotationAssertion(foaf:page obo:RO_0001900 "https://github.com/oborel/obo-relations/wiki/ROAndTime"^^xsd:anyURI)
SubAnnotationPropertyOf(obo:RO_0001900 obo:RO_0002422)

# Annotation Property: obo:RO_0002161 (never in taxon)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002161 "tooth SubClassOf 'never in taxon' value 'Aves'")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002161 "x never in taxon T if and only if T is a class, and x does not instantiate the class expression \"in taxon some T\". Note that this is a shortcut relation, and should be used as a hasValue restriction in OWL.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002161 "Chris Mungall"@en)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002161 <http://www.ncbi.nlm.nih.gov/pubmed/17921072>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002161 <http://www.ncbi.nlm.nih.gov/pubmed/20973947>)
AnnotationAssertion(obo:IAO_0000425 obo:RO_0002161 "?X DisjointWith RO_0002162 some ?Y ")
AnnotationAssertion(rdfs:label obo:RO_0002161 "never in taxon"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002161 <https://github.com/obophenotype/uberon/wiki/Taxon-constraints>)
SubAnnotationPropertyOf(obo:RO_0002161 obo:RO_0002172)

# Annotation Property: obo:RO_0002171 (mutually spatially disjoint with)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002171 "A is mutually_spatially_disjoint_with B if both A and B are classes, and there exists no p such that p is part_of some A and p is part_of some B.")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002171 "non-overlapping with")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002171 "shares no parts with")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002171 <http://www.ncbi.nlm.nih.gov/pubmed/22293552>)
AnnotationAssertion(obo:IAO_0000425 obo:RO_0002171 "Class: <http://www.w3.org/2002/07/owl#Nothing> EquivalentTo: (BFO_0000050 some ?X) and (BFO_0000050 some ?Y)")
AnnotationAssertion(rdfs:label obo:RO_0002171 "mutually spatially disjoint with"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002171 obo:RO_0002163)
AnnotationAssertion(foaf:page obo:RO_0002171 "https://github.com/obophenotype/uberon/wiki/Part-disjointness-Design-Pattern"^^xsd:anyURI)
SubAnnotationPropertyOf(obo:RO_0002171 obo:RO_0002420)

# Annotation Property: obo:RO_0002172 (taxonomic class assertion)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002172 "An assertion that holds between an ontology class and an organism taxon class, which is intepreted to yield some relationship between instances of the ontology class and the taxon.")
AnnotationAssertion(rdfs:label obo:RO_0002172 "taxonomic class assertion"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002172 <https://github.com/obophenotype/uberon/wiki/Taxon-constraints>)
SubAnnotationPropertyOf(obo:RO_0002172 obo:RO_0002420)

# Annotation Property: obo:RO_0002173 (ambiguous for taxon)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002173 "S ambiguous_for_taxon T if the class S does not have a clear referent in taxon T. An example would be the class 'manual digit 1', which encompasses a homology hypotheses that is accepted for some species (e.g. human and mouse), but does not have a clear referent in Aves - the referent is dependent on the hypothesis embraced, and also on the ontogenetic stage.  [PHENOSCPAE:asilomar_mtg]")
AnnotationAssertion(rdfs:label obo:RO_0002173 "ambiguous for taxon"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002173 <https://github.com/obophenotype/uberon/wiki/Taxon-constraints>)
SubAnnotationPropertyOf(obo:RO_0002173 obo:RO_0002172)

# Annotation Property: obo:RO_0002174 (dubious for taxon)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002174 "S dubious_for_taxon T if it is probably the case that no instances of S can be found in any instance of T.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002174 "https://orcid.org/0000-0002-6601-2165")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002174 <http://www.ncbi.nlm.nih.gov/pubmed/22293552>)
AnnotationAssertion(rdfs:comment obo:RO_0002174 "This relation lacks a strong logical interpretation, but can be used in place of never_in_taxon where it is desirable to state that the definition of the class is too strict for the taxon under consideration, but placing a never_in_taxon link would result in a chain of inconsistencies that will take ongoing coordinated effort to resolve. Example: metencephalon in teleost")
AnnotationAssertion(rdfs:label obo:RO_0002174 "dubious for taxon"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002174 <https://github.com/obophenotype/uberon/wiki/Taxon-constraints>)
SubAnnotationPropertyOf(obo:RO_0002174 obo:RO_0002172)

# Annotation Property: obo:RO_0002175 (present in taxon)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002175 "S present_in_taxon T if some instance of T has some S. This does not means that all instances of T have an S - it may only be certain life stages or sexes that have S")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002175 "https://orcid.org/0000-0002-6601-2165")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002175 <http://www.ncbi.nlm.nih.gov/pubmed/22293552>)
AnnotationAssertion(rdfs:label obo:RO_0002175 "present in taxon"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002175 <https://github.com/obophenotype/uberon/wiki/Taxon-constraints>)
SubAnnotationPropertyOf(obo:RO_0002175 obo:RO_0002172)

# Annotation Property: obo:RO_0002259 (defined by inverse)

AnnotationAssertion(rdfs:label obo:RO_0002259 "defined by inverse")
SubAnnotationPropertyOf(obo:RO_0002259 oboInOwl:SubsetProperty)

# Annotation Property: obo:RO_0002416 (logical macro assertion)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002416 "An assertion that involves at least one OWL object that is intended to be expanded into one or more logical axioms. The logical expansion can yield axioms expressed using any formal logical system, including, but not limited to OWL2-DL.")
AnnotationAssertion(rdfs:label obo:RO_0002416 "logical macro assertion"@en)
AnnotationAssertion(foaf:page obo:RO_0002416 "https://github.com/oborel/obo-relations/wiki/ShortcutRelations"^^xsd:anyURI)

# Annotation Property: obo:RO_0002419 (annotation property cardinality)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002419 "An assertion that holds between an OWL Annotation Property P and a non-negative integer N, with the interpretation: for any P(i j) it must be the case that | { k : P(i k) } | = N.")
AnnotationAssertion(rdfs:label obo:RO_0002419 "annotation property cardinality"@en)
SubAnnotationPropertyOf(obo:RO_0002419 obo:RO_0002423)
AnnotationPropertyRange(obo:RO_0002419 xsd:nonNegativeInteger)

# Annotation Property: obo:RO_0002420 (logical macro assertion on a class)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002420 "A logical macro assertion whose domain is an IRI for a class")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002420 "The domain for this class can be considered to be owl:Class, but we cannot assert this in OWL2-DL")
AnnotationAssertion(rdfs:label obo:RO_0002420 "logical macro assertion on a class"@en)
SubAnnotationPropertyOf(obo:RO_0002420 obo:RO_0002416)

# Annotation Property: obo:RO_0002421 (logical macro assertion on a property)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002421 "A logical macro assertion whose domain is an IRI for a property")
AnnotationAssertion(rdfs:label obo:RO_0002421 "logical macro assertion on a property"@en)
SubAnnotationPropertyOf(obo:RO_0002421 obo:RO_0002416)

# Annotation Property: obo:RO_0002422 (logical macro assertion on an object property)

AnnotationAssertion(rdfs:label obo:RO_0002422 "logical macro assertion on an object property"@en)
SubAnnotationPropertyOf(obo:RO_0002422 obo:RO_0002421)

# Annotation Property: obo:RO_0002423 (logical macro assertion on an annotation property)

AnnotationAssertion(rdfs:label obo:RO_0002423 "logical macro assertion on an annotation property"@en)
SubAnnotationPropertyOf(obo:RO_0002423 obo:RO_0002421)

# Annotation Property: obo:RO_0002474 (dispositional interpretation)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002474 "An assertion that holds between an OWL Object Property and a dispositional interpretation that elucidates how OWL Class Axioms or OWL Individuals that use this property are to be interpreted in a dispositional context. For example,  A binds B may be interpreted as A have a mutual disposition that is realized by binding to the other one.")
AnnotationAssertion(rdfs:label obo:RO_0002474 "dispositional interpretation")
SubAnnotationPropertyOf(obo:RO_0002474 obo:RO_0002422)

# Annotation Property: obo:RO_0002475 (has no connections with)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002475 "'pectoral appendage skeleton' has no connections with 'pelvic appendage skeleton'")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002475 "A is has_no_connections_with B if there are no parts of A or B that have a connection with the other.")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002475 "shares no connection with")
AnnotationAssertion(obo:IAO_0000425 obo:RO_0002475 "Class: <http://www.w3.org/2002/07/owl#Nothing> EquivalentTo: (BFO_0000050 some ?X) and (RO_0002170 some (BFO_0000050 some ?Y))")
AnnotationAssertion(rdfs:label obo:RO_0002475 "has no connections with")
SubAnnotationPropertyOf(obo:RO_0002475 obo:RO_0002420)

# Annotation Property: obo:RO_0002483 (inherited annotation property)

AnnotationAssertion(rdfs:label obo:RO_0002483 "inherited annotation property")

# Annotation Property: obo:RO_0002484 (curator guidance link)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002484 "Connects an ontology entity (class, property, etc) to a URL from which curator guidance can be obtained. This assertion is inherited in the same manner as functional annotations (e.g. for GO, over SubClassOf and part_of)")
AnnotationAssertion(rdfs:label obo:RO_0002484 "curator guidance link")
SubAnnotationPropertyOf(obo:RO_0002484 obo:RO_0002483)

# Annotation Property: obo:RO_0002504 (always present in taxon)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002504 "brain always_present_in_taxon 'Vertebrata'")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002504 "forelimb always_present_in_taxon Euarchontoglires")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002504 "S always_present_in_taxon T if every fully formed member of taxon T has part some S, or is an instance of S")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002504 "This is a very strong relation. Often we will not have enough evidence to know for sure that there are no species within a lineage that lack the structure - loss is common in evolution. However, there are some statements we can make with confidence - no vertebrate lineage could persist without a brain or a heart. All primates are limbed. ")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002504 "never lost in")
AnnotationAssertion(rdfs:label obo:RO_0002504 "always present in taxon")
SubAnnotationPropertyOf(obo:RO_0002504 obo:RO_0002175)

# Annotation Property: obo:RO_0002535 (temporal logical macro assertion on a class)

AnnotationAssertion(obo:IAO_0000232 obo:RO_0002535 "This properties were created originally for the annotation of developmental or life cycle stages, such as for example Carnegie Stage 20 in humans. ")
AnnotationAssertion(rdfs:label obo:RO_0002535 "temporal logical macro assertion on a class")
SubAnnotationPropertyOf(obo:RO_0002535 obo:RO_0002420)

# Annotation Property: obo:RO_0002536 (measurement property has unit)

AnnotationAssertion(rdfs:label obo:RO_0002536 "measurement property has unit")
SubAnnotationPropertyOf(obo:RO_0002536 obo:RO_0002423)

# Annotation Property: obo:RO_0002537 (has start time value)

AnnotationAssertion(rdfs:label obo:RO_0002537 "has start time value")
SubAnnotationPropertyOf(obo:RO_0002537 obo:RO_0002535)

# Annotation Property: obo:RO_0002538 (has end time value)

AnnotationAssertion(rdfs:label obo:RO_0002538 "has end time value")
SubAnnotationPropertyOf(obo:RO_0002538 obo:RO_0002535)

# Annotation Property: obo:RO_0002539 (start, days post fertilization)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002539 "Count of number of days intervening between the start of the stage and the time of fertilization according to a reference model. Note that the first day of development has the value of 0 for this property.")
AnnotationAssertion(rdfs:label obo:RO_0002539 "start, days post fertilization")
SubAnnotationPropertyOf(obo:RO_0002539 obo:RO_0002537)

# Annotation Property: obo:RO_0002540 (end, days post fertilization)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002540 "Count of number of days intervening between the end of the stage and the time of fertilization according to a reference model. Note that the first day of development has the value of 1 for this property.")
AnnotationAssertion(rdfs:label obo:RO_0002540 "end, days post fertilization")
SubAnnotationPropertyOf(obo:RO_0002540 obo:RO_0002538)

# Annotation Property: obo:RO_0002541 (start, years post birth)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002541 "Count of number of years intervening between the start of the stage and the time of birth according to a reference model. Note that the first year of post-birth development has the value of 0 for this property, and the period during which the child is one year old has the value 1.")
AnnotationAssertion(rdfs:label obo:RO_0002541 "start, years post birth")
SubAnnotationPropertyOf(obo:RO_0002541 obo:RO_0002537)

# Annotation Property: obo:RO_0002542 (end, years post birth)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002542 "Count of number of years intervening between the end of the stage and the time of birth according to a reference model. Note that the first year of post-birth development has the value of 1 for this property, and the period during which the child is one year old has the value 2")
AnnotationAssertion(rdfs:label obo:RO_0002542 "end, years post birth")
SubAnnotationPropertyOf(obo:RO_0002542 obo:RO_0002538)

# Annotation Property: obo:RO_0002543 (start, months post birth)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002543 "Count of number of months intervening between the start of the stage and the time of birth according to a reference model. Note that the first month of post-birth development has the value of 0 for this property, and the period during which the child is one month old has the value 1.")
AnnotationAssertion(rdfs:label obo:RO_0002543 "start, months post birth")
SubAnnotationPropertyOf(obo:RO_0002543 obo:RO_0002537)

# Annotation Property: obo:RO_0002544 (end, months post birth)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002544 "Count of number of months intervening between the end of the stage and the time of birth according to a reference model. Note that the first month of post-birth development has the value of 1 for this property, and the period during which the child is one month old has the value 2")
AnnotationAssertion(rdfs:label obo:RO_0002544 "end, months post birth")
SubAnnotationPropertyOf(obo:RO_0002544 obo:RO_0002538)

# Annotation Property: obo:RO_0002545 (month of gestation)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002545 "Defines the start and end of a stage with a duration of 1 month, relative to either the time of fertilization or last menstrual period of the mother (to be clarified), counting from one, in terms of a reference model. Thus if month_of_gestation=3, then the stage is 2 month in.")
AnnotationAssertion(rdfs:label obo:RO_0002545 "month of gestation")
SubAnnotationPropertyOf(obo:RO_0002545 obo:RO_0002535)

# Annotation Property: obo:RO_0002546 (has developmental stage marker)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002546 "A relationship between a stage class and an anatomical structure or developmental process class, in which the stage is characterized by the appearance of the structure or the occurrence of the biological process")
AnnotationAssertion(rdfs:label obo:RO_0002546 "has developmental stage marker")
SubAnnotationPropertyOf(obo:RO_0002546 obo:RO_0002535)

# Annotation Property: obo:RO_0002547 (start, days post coitum)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002547 "Count of number of days intervening between the start of the stage and the time of coitum.")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002547 "For mouse staging: assuming that it takes place around midnight during a 7pm to 5am dark cycle (noon of the day on which the vaginal plug is found, the embryos are aged 0.5 days post coitum)")
AnnotationAssertion(rdfs:label obo:RO_0002547 "start, days post coitum")
SubAnnotationPropertyOf(obo:RO_0002547 obo:RO_0002537)

# Annotation Property: obo:RO_0002548 (end, days post coitum)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002548 "Count of number of days intervening between the end of the stage and the time of coitum.")
AnnotationAssertion(rdfs:label obo:RO_0002548 "end, days post coitum")
SubAnnotationPropertyOf(obo:RO_0002548 obo:RO_0002538)

# Annotation Property: obo:RO_0002549 (start, weeks post birth)

AnnotationAssertion(rdfs:label obo:RO_0002549 "start, weeks post birth")
SubAnnotationPropertyOf(obo:RO_0002549 obo:RO_0002537)

# Annotation Property: obo:RO_0002550 (end, weeks post birth)

AnnotationAssertion(rdfs:label obo:RO_0002550 "end, weeks post birth")
SubAnnotationPropertyOf(obo:RO_0002550 obo:RO_0002538)

# Annotation Property: obo:RO_0002560 (is asymmetric relational form of process class)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002560 "If Rel is the relational form of a process Pr, then it follow that: Rel(x,y) <-> exists p : Pr(p), x subject-partner-in p, y object-partner-in p")
AnnotationAssertion(rdfs:label obo:RO_0002560 "is asymmetric relational form of process class")
AnnotationAssertion(foaf:page obo:RO_0002560 "https://github.com/oborel/obo-relations/wiki/InteractionRelations"^^xsd:anyURI)
SubAnnotationPropertyOf(obo:RO_0002560 obo:RO_0002562)

# Annotation Property: obo:RO_0002561 (is symmetric relational form of process class)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002561 "If Rel is the relational form of a process Pr, then it follow that: Rel(x,y) <-> exists p : Pr(p), x partner-in p, y partner-in p")
AnnotationAssertion(rdfs:label obo:RO_0002561 "is symmetric relational form of process class")
AnnotationAssertion(foaf:page obo:RO_0002561 "https://github.com/oborel/obo-relations/wiki/InteractionRelations"^^xsd:anyURI)
SubAnnotationPropertyOf(obo:RO_0002561 obo:RO_0002562)

# Annotation Property: obo:RO_0002562 (is relational form of process class)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002562 "R is the relational form of a process if and only if either (1) R is the symmetric relational form of a process or (2) R is the asymmetric relational form of a process")
AnnotationAssertion(rdfs:label obo:RO_0002562 "is relational form of process class")
AnnotationAssertion(foaf:page obo:RO_0002562 "https://github.com/oborel/obo-relations/wiki/InteractionRelations"^^xsd:anyURI)
SubAnnotationPropertyOf(obo:RO_0002562 obo:RO_0002594)

# Annotation Property: obo:RO_0002575 (is direct form of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002575 "relation p is the direct form of relation q iff p is a subPropertyOf q, p does not have the Transitive characteristic, q does have the Transitive characteristic, and for all x, y: x q y -> exists z1, z2, ..., zn such that x p z1 ... z2n y")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002575 "The general property hierarchy is:

  \"directly P\" SubPropertyOf \"P\"
  Transitive(P)

Where we have an annotation assertion

  \"directly P\" \"is direct form of\" \"P\"")
AnnotationAssertion(obo:RO_0002423 obo:RO_0002575 "If we have the annotation P is-direct-form-of Q, and we have inverses P' and Q', then it follows that P' is-direct-form-of Q'")
AnnotationAssertion(dc:creator obo:RO_0002575 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002575 "is direct form of")
SubAnnotationPropertyOf(obo:RO_0002575 obo:RO_0002422)

# Annotation Property: obo:RO_0002579 (is indirect form of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002579 "relation p is the indirect form of relation q iff p is a subPropertyOf q, and there exists some p' such that p' is the direct form of q, p' o p' -> p, and forall x,y : x q y -> either (1) x p y or (2) x p' y")
AnnotationAssertion(dc:creator obo:RO_0002579 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002579 "is indirect form of")
SubAnnotationPropertyOf(obo:RO_0002579 obo:RO_0002422)

# Annotation Property: obo:RO_0002580 (logical macro assertion on an axiom)

AnnotationAssertion(rdfs:label obo:RO_0002580 "logical macro assertion on an axiom")
SubAnnotationPropertyOf(obo:RO_0002580 obo:RO_0002416)

# Annotation Property: obo:RO_0002581 (is a defining property chain axiom)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002581 "If R <- P o Q is a defining property chain axiom, then it also holds that R -> P o Q. Note that this cannot be expressed directly in OWL")
AnnotationAssertion(rdfs:label obo:RO_0002581 "is a defining property chain axiom")
SubAnnotationPropertyOf(obo:RO_0002581 obo:RO_0002580)

# Annotation Property: obo:RO_0002582 (is a defining property chain axiom where second argument is reflexive)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002582 "If R <- P o Q is a defining property chain axiom, then (1) R -> P o Q holds and (2) Q is either reflexive or locally reflexive. A corollary of this is that P SubPropertyOf R.")
AnnotationAssertion(rdfs:label obo:RO_0002582 "is a defining property chain axiom where second argument is reflexive")
SubAnnotationPropertyOf(obo:RO_0002582 obo:RO_0002581)

# Annotation Property: obo:RO_0002594 (is relational form of a class)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002594 "An annotation property that connects an object property to a class, where the object property is derived from or a shortcut property for the class. The exact semantics of this annotation may vary on a case by case basis.")
AnnotationAssertion(rdfs:label obo:RO_0002594 "is relational form of a class")
SubAnnotationPropertyOf(obo:RO_0002594 obo:RO_0002422)

# Annotation Property: obo:RO_0002601 (logical macro assertion involving identity)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002601 "A shortcut relationship that holds between two entities based on their identity criteria")
AnnotationAssertion(rdfs:label obo:RO_0002601 "logical macro assertion involving identity")
SubAnnotationPropertyOf(obo:RO_0002601 obo:RO_0002416)

# Annotation Property: obo:RO_0002602 (in approximate one to one relationship with)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002602 "A shortcut relationship between two entities x and y1, such that the intent is that the relationship is functional and inverse function, but there is no guarantee that this property holds.")
AnnotationAssertion(rdfs:label obo:RO_0002602 "in approximate one to one relationship with")
SubAnnotationPropertyOf(obo:RO_0002602 obo:RO_0002601)

# Annotation Property: obo:RO_0002603 (is approximately equivalent to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002603 "x is approximately equivalent to y if it is the case that x is equivalent, identical or near-equivalent to y")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002603 "The precise meaning of this property is dependent upon some contexts. It is intended to group multiple possible formalisms. Possibilities include a probabilistic interpretation, for example, Pr(x=y) > 0.95. Other possibilities include reified statements of belief, for example, \"Database D states that x=y\"")
AnnotationAssertion(rdfs:label obo:RO_0002603 "is approximately equivalent to")
SubAnnotationPropertyOf(obo:RO_0002603 obo:RO_0002602)

# Annotation Property: obo:RO_0002604 (is opposite of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002604 "'anterior end of organism' is-opposite-of 'posterior end of organism'")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002604 "'increase in temperature' is-opposite-of 'decrease in temperature'")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002604 "x is the opposite of y if there exists some distance metric M, and there exists no z such as M(x,z) <= M(x,y) or M(y,z) <= M(y,x).")
AnnotationAssertion(rdfs:label obo:RO_0002604 "is opposite of")
SubAnnotationPropertyOf(obo:RO_0002604 obo:RO_0002602)

# Annotation Property: obo:RO_0002605 (is indistinguishable from)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002605 "x is indistinguishable from y if there exists some distance metric M, and there exists no z such as M(x,z) <= M(x,y) or M(y,z) <= M(y,x).")
AnnotationAssertion(rdfs:label obo:RO_0002605 "is indistinguishable from")
SubAnnotationPropertyOf(obo:RO_0002605 obo:RO_0002603)

# Annotation Property: obo:RO_0002611 (evidential logical macro assertion on an axiom)

AnnotationAssertion(rdfs:label obo:RO_0002611 "evidential logical macro assertion on an axiom")
SubAnnotationPropertyOf(obo:RO_0002611 obo:RO_0002580)

# Annotation Property: obo:RO_0002612 (axiom has evidence)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002612 "A relationship between a sentence and an instance of a piece of evidence in which the evidence supports the axiom")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002612 "This annotation property is intended to be used in an OWL Axiom Annotation to connect an OWL Axiom to an instance of an ECO (evidence type ontology class). Because in OWL, all axiom annotations must use an Annotation Property, the value of the annotation cannot be an OWL individual, the convention is to use an IRI of the individual.")
AnnotationAssertion(rdfs:label obo:RO_0002612 "axiom has evidence")
SubAnnotationPropertyOf(obo:RO_0002612 obo:RO_0002611)

# Annotation Property: obo:RO_0002613 (axiom contradicted by evidence)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002613 "A relationship between a sentence and an instance of a piece of evidence in which the evidence contradicts the axiom")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002613 "This annotation property is intended to be used in an OWL Axiom Annotation to connect an OWL Axiom to an instance of an ECO (evidence type ontology class). Because in OWL, all axiom annotations must use an Annotation Property, the value of the annotation cannot be an OWL individual, the convention is to use an IRI of the individual.")
AnnotationAssertion(rdfs:label obo:RO_0002613 "axiom contradicted by evidence")
SubAnnotationPropertyOf(obo:RO_0002613 obo:RO_0002611)

# Annotation Property: obo:RO_0002617 (is representative IRI for equivalence set)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002617 "In the context of a particular project, the IRI with CURIE NCBIGene:64327 (which in this example denotes a class) is considered to be representative. This means that if we have equivalent classes with IRIs OMIM:605522, ENSEMBL:ENSG00000105983, HGNC:13243 forming an equivalence set, the NCBIGene is considered the representative member IRI. Depending on the policies of the project, the classes may be merged, or the NCBIGene IRI may be chosen as the default in a user interface context.")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002617 "this property relates an IRI to the xsd boolean value \"True\" if the IRI is intended to be the representative IRI for a collection of classes that are mutually equivalent.")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002617 "If it is necessary to make the context explicit, an axiom annotation can be added to the annotation assertion")
AnnotationAssertion(rdfs:label obo:RO_0002617 "is representative IRI for equivalence set")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002617 "OWLAPI Reasoner documentation for representativeElement, which follows a similar idea, but selects an arbitrary member")
SubAnnotationPropertyOf(obo:RO_0002617 obo:RO_0002601)

# Annotation Property: subsets:ro-eco (eco subset)

AnnotationAssertion(rdfs:label subsets:ro-eco "eco subset")
SubAnnotationPropertyOf(subsets:ro-eco oboInOwl:SubsetProperty)

# Annotation Property: oboInOwl:SubsetProperty (subset_property)

AnnotationAssertion(rdfs:label oboInOwl:SubsetProperty "subset_property"^^xsd:string)

# Annotation Property: oboInOwl:hasBroadSynonym (has_broad_synonym)

AnnotationAssertion(rdfs:label oboInOwl:hasBroadSynonym "has_broad_synonym"^^xsd:string)

# Annotation Property: oboInOwl:hasDbXref (database_cross_reference)

AnnotationAssertion(rdfs:label oboInOwl:hasDbXref "database_cross_reference"^^xsd:string)

# Annotation Property: oboInOwl:hasExactSynonym (has_exact_synonym)

AnnotationAssertion(rdfs:label oboInOwl:hasExactSynonym "has_exact_synonym"^^xsd:string)

# Annotation Property: oboInOwl:hasOBOFormatVersion (has_obo_format_version)

AnnotationAssertion(rdfs:label oboInOwl:hasOBOFormatVersion "has_obo_format_version"^^xsd:string)

# Annotation Property: oboInOwl:hasRelatedSynonym (has_related_synonym)

AnnotationAssertion(rdfs:label oboInOwl:hasRelatedSynonym "has_related_synonym"^^xsd:string)

# Annotation Property: oboInOwl:inSubset (in_subset)

AnnotationAssertion(rdfs:label oboInOwl:inSubset "in_subset"^^xsd:string)

# Annotation Property: oboInOwl:shorthand (shorthand)

AnnotationAssertion(rdfs:label oboInOwl:shorthand "shorthand"^^xsd:string)

# Annotation Property: rdfs:isDefinedBy (rdfs:isDefinedBy)

AnnotationAssertion(Annotation(rdfs:comment "This is an experimental annotation") obo:IAO_0000589 rdfs:isDefinedBy "is defined by")


############################
#   Object Properties
############################

# Object Property: obo:BFO_0000050 (part of)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000050 "is part of"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000050 "my brain is part of my body (continuant parthood, two material entities)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000050 "my stomach cavity is part of my stomach (continuant parthood, immaterial entity is part of material entity)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000050 "this day is part of this year (occurrent parthood)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000050 "a core relation that holds between a part and its whole"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000050 "Everything is part of itself. Any part of any part of a thing is itself part of that thing. Two distinct things cannot be part of each other."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000050 "Occurrents are not subject to change and so parthood between occurrents holds for all the times that the part exists. Many continuants are subject to change, so parthood between continuants will only hold at certain times, but this is difficult to specify in OWL. See https://code.google.com/p/obo-relations/wiki/ROAndTime"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000050 "Parthood requires the part and the whole to have compatible classes: only an occurrent can be part of an occurrent; only a process can be part of a process; only a continuant can be part of a continuant; only an independent continuant can be part of an independent continuant; only an immaterial entity can be part of an immaterial entity; only a specifically dependent continuant can be part of a specifically dependent continuant; only a generically dependent continuant can be part of a generically dependent continuant. (This list is not exhaustive.)

A continuant cannot be part of an occurrent: use 'participates in'. An occurrent cannot be part of a continuant: use 'has participant'. A material entity cannot be part of an immaterial entity: use 'has location'. A specifically dependent continuant cannot be part of an independent continuant: use 'inheres in'. An independent continuant cannot be part of a specifically dependent continuant: use 'bearer of'."@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000050 "part_of"@en)
AnnotationAssertion(obo:RO_0001900 obo:BFO_0000050 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:BFO_0000050 "part of"@en)
AnnotationAssertion(rdfs:seeAlso obo:BFO_0000050 <http://ontologydesignpatterns.org/wiki/Community:Parts_and_Collections>)
AnnotationAssertion(rdfs:seeAlso obo:BFO_0000050 <http://ontologydesignpatterns.org/wiki/Submissions:PartOf>)
AnnotationAssertion(rdfs:seeAlso obo:BFO_0000050 "http://www.obofoundry.org/ro/#OBO_REL:part_of")
SubObjectPropertyOf(obo:BFO_0000050 obo:RO_0002131)
InverseObjectProperties(obo:BFO_0000050 obo:BFO_0000051)
TransitiveObjectProperty(obo:BFO_0000050)

# Object Property: obo:BFO_0000051 (has part)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000051 "has part"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000051 "my body has part my brain (continuant parthood, two material entities)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000051 "my stomach has part my stomach cavity (continuant parthood, material entity has part immaterial entity)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000051 "this year has part this day (occurrent parthood)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000051 "a core relation that holds between a whole and its part"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000051 "Everything has itself as a part. Any part of any part of a thing is itself part of that thing. Two distinct things cannot have each other as a part."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000051 "Occurrents are not subject to change and so parthood between occurrents holds for all the times that the part exists. Many continuants are subject to change, so parthood between continuants will only hold at certain times, but this is difficult to specify in OWL. See https://code.google.com/p/obo-relations/wiki/ROAndTime"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000051 "Parthood requires the part and the whole to have compatible classes: only an occurrent have an occurrent as part; only a process can have a process as part; only a continuant can have a continuant as part; only an independent continuant can have an independent continuant as part; only a specifically dependent continuant can have a specifically dependent continuant as part; only a generically dependent continuant can have a generically dependent continuant as part. (This list is not exhaustive.)

A continuant cannot have an occurrent as part: use 'participates in'. An occurrent cannot have a continuant as part: use 'has participant'. An immaterial entity cannot have a material entity as part: use 'location of'. An independent continuant cannot have a specifically dependent continuant as part: use 'bearer of'. A specifically dependent continuant cannot have an independent continuant as part: use 'inheres in'."@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000051 "has_part"@en)
AnnotationAssertion(obo:RO_0001900 obo:BFO_0000051 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:BFO_0000051 "has part"@en)
SubObjectPropertyOf(obo:BFO_0000051 obo:RO_0002131)
TransitiveObjectProperty(obo:BFO_0000051)

# Object Property: obo:BFO_0000054 (realized in)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000054 "realized in"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000054 "this disease is realized in this disease course"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000054 "this fragility is realized in this shattering"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000054 "this investigator role is realized in this investigation"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000054 "is realized by"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000054 "realized_in"@en)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000054 "[copied from inverse property 'realizes'] to say that b realizes c at t is to assert that there is some material entity d & b is a process which has participant d at t & c is a disposition or role of which d is bearer_of at t& the type instantiated by b is correlated with the type instantiated by c. (axiom label in BFO2 Reference: [059-003])"@en)
AnnotationAssertion(rdfs:comment obo:BFO_0000054 "Paraphrase of elucidation: a relation between a realizable entity and a process, where there is some material entity that is bearer of the realizable entity and participates in the process, and the realizable entity comes to be realized in the course of the process")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000054 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000054 "realized in"@en)
InverseObjectProperties(obo:BFO_0000054 obo:BFO_0000055)
ObjectPropertyDomain(obo:BFO_0000054 obo:BFO_0000017)
ObjectPropertyRange(obo:BFO_0000054 obo:BFO_0000015)

# Object Property: obo:BFO_0000055 (realizes)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000055 "realizes"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000055 "this disease course realizes this disease"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000055 "this investigation realizes this investigator role"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000055 "this shattering realizes this fragility"@en)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000055 "to say that b realizes c at t is to assert that there is some material entity d & b is a process which has participant d at t & c is a disposition or role of which d is bearer_of at t& the type instantiated by b is correlated with the type instantiated by c. (axiom label in BFO2 Reference: [059-003])"@en)
AnnotationAssertion(rdfs:comment obo:BFO_0000055 "Paraphrase of elucidation: a relation between a process and a realizable entity, where there is some material entity that is bearer of the realizable entity and participates in the process, and the realizable entity comes to be realized in the course of the process")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000055 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000055 "realizes"@en)
ObjectPropertyDomain(obo:BFO_0000055 obo:BFO_0000015)
ObjectPropertyRange(obo:BFO_0000055 obo:BFO_0000017)

# Object Property: obo:BFO_0000060 (obsolete preceded by)

AnnotationAssertion(rdfs:comment obo:BFO_0000060 "accidentally included in BFO 1.2 proposal
        - should have been BFO_0000062"@en)
AnnotationAssertion(rdfs:label obo:BFO_0000060 "obsolete preceded by"@en)
TransitiveObjectProperty(obo:BFO_0000060)

# Object Property: obo:BFO_0000062 (preceded by)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000062 "preceded by"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000062 "x is preceded by y if and only if the time point at which y ends is before or equivalent to the time point at which x starts. Formally: x preceded by y iff ω(y) <= α(x), where α is a function that maps a process to a start point, and ω is a function that maps a process to an end point."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000062 "An example is: translation preceded_by transcription; aging preceded_by development (not however death preceded_by aging). Where derives_from links classes of continuants, preceded_by links classes of processes. Clearly, however, these two relations are not independent of each other. Thus if cells of type C1 derive_from cells of type C, then any cell division involving an instance of C1 in a given lineage is preceded_by cellular processes involving an instance of C.    The assertion P preceded_by P1 tells us something about Ps in general: that is, it tells us something about what happened earlier, given what we know about what happened later. Thus it does not provide information pointing in the opposite direction, concerning instances of P1 in general; that is, that each is such as to be succeeded by some instance of P. Note that an assertion to the effect that P preceded_by P1 is rather weak; it tells us little about the relations between the underlying instances in virtue of which the preceded_by relation obtains. Typically we will be interested in stronger relations, for example in the relation immediately_preceded_by, or in relations which combine preceded_by with a condition to the effect that the corresponding instances of P and P1 share participants, or that their participants are connected by relations of derivation, or (as a first step along the road to a treatment of causality) that the one process in some way affects (for example, initiates or regulates) the other."@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000062 "is preceded by"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000062 "preceded_by"@en)
AnnotationAssertion(dc:source obo:BFO_0000062 "http://www.obofoundry.org/ro/#OBO_REL:preceded_by")
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000062 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:BFO_0000062 "preceded by"@en)
SubObjectPropertyOf(obo:BFO_0000062 obo:RO_0002086)
InverseObjectProperties(obo:BFO_0000062 obo:BFO_0000063)
TransitiveObjectProperty(obo:BFO_0000062)
ObjectPropertyDomain(obo:BFO_0000062 obo:BFO_0000003)
ObjectPropertyRange(obo:BFO_0000062 obo:BFO_0000003)

# Object Property: obo:BFO_0000063 (precedes)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000063 "precedes"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000063 "x precedes y if and only if the time point at which x ends is before or equivalent to the time point at which y starts. Formally: x precedes y iff ω(x) <= α(y), where α is a function that maps a process to a start point, and ω is a function that maps a process to an end point."@en)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000063 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:BFO_0000063 "precedes"@en)
SubObjectPropertyOf(obo:BFO_0000063 obo:RO_0002222)
TransitiveObjectProperty(obo:BFO_0000063)
ObjectPropertyDomain(obo:BFO_0000063 obo:BFO_0000003)
ObjectPropertyRange(obo:BFO_0000063 obo:BFO_0000003)

# Object Property: obo:BFO_0000066 (occurs in)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000066 "occurs in"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000066 "b occurs_in c =def b is a process and c is a material entity or immaterial entity& there exists a spatiotemporal region r and b occupies_spatiotemporal_region r.& forall(t) if b exists_at t then c exists_at t & there exist spatial regions s and s’ where & b spatially_projects_onto s at t& c is occupies_spatial_region s’ at t& s is a proper_continuant_part_of s’ at t"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000066 "occurs_in"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000066 "unfolds in"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000066 "unfolds_in"@en)
AnnotationAssertion(rdfs:comment obo:BFO_0000066 "Paraphrase of definition: a relation between a process and an independent continuant, in which the process takes place entirely within the independent continuant")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000066 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000066 "occurs in"@en)
InverseObjectProperties(obo:BFO_0000066 obo:BFO_0000067)
ObjectPropertyDomain(obo:BFO_0000066 obo:BFO_0000003)
ObjectPropertyRange(obo:BFO_0000066 obo:BFO_0000004)

# Object Property: obo:BFO_0000067 (contains process)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000067 "site of"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000067 "[copied from inverse property 'occurs in'] b occurs_in c =def b is a process and c is a material entity or immaterial entity& there exists a spatiotemporal region r and b occupies_spatiotemporal_region r.& forall(t) if b exists_at t then c exists_at t & there exist spatial regions s and s’ where & b spatially_projects_onto s at t& c is occupies_spatial_region s’ at t& s is a proper_continuant_part_of s’ at t"@en)
AnnotationAssertion(rdfs:comment obo:BFO_0000067 "Paraphrase of definition: a relation between an independent continuant and a process, in which the process takes place entirely within the independent continuant")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000067 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000067 "contains process"@en)

# Object Property: obo:R0_0009004 (has consumer)

AnnotationAssertion(obo:IAO_0000112 obo:R0_0009004 "sardine has consumer some homo sapiens"@en)
AnnotationAssertion(obo:IAO_0000114 obo:R0_0009004 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:R0_0009004 "'has consumer' is a relation between a material entity and an organism in which the former can normally be digested or otherwise absorbed by the latter without immediate or persistent ill effect."@en)
AnnotationAssertion(obo:IAO_0000117 obo:R0_0009004 "Damion Dooley")
AnnotationAssertion(rdfs:label obo:R0_0009004 "has consumer"@en)

# Object Property: obo:RO_0000052 (inheres in)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000052 "inheres in"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000052 "this fragility inheres in this vase"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000052 "this red color inheres in this apple"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000052 "a relation between a specifically dependent continuant (the dependent) and an independent continuant (the bearer), in which the dependent specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000052 "A dependent inheres in its bearer at all times for which the dependent exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000052 "inheres_in"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0000052 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0000052 "inheres in"@en)
SubObjectPropertyOf(obo:RO_0000052 obo:RO_0002314)
InverseObjectProperties(obo:RO_0000052 obo:RO_0000053)

# Object Property: obo:RO_0000053 (bearer of)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000053 "bearer of"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000053 "this apple is bearer of this red color"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000053 "this vase is bearer of this fragility"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000053 "a relation between an independent continuant (the bearer) and a specifically dependent continuant (the dependent), in which the dependent specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000053 "A bearer can have many dependents, and its dependents can exist for different periods of time, but none of its dependents can exist when the bearer does not exist."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000053 "bearer_of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000053 "is bearer of"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0000053 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0000053 "bearer of"@en)
ObjectPropertyRange(obo:RO_0000053 obo:BFO_0000020)

# Object Property: obo:RO_0000056 (participates in)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000056 "participates in"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000056 "this blood clot participates in this blood coagulation"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000056 "this input material (or this output material) participates in this process"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000056 "this investigator participates in this investigation"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000056 "a relation between a continuant and a process, in which the continuant is somehow involved in the process"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000056 "participates_in"@en)
AnnotationAssertion(rdfs:label obo:RO_0000056 "participates in"@en)
InverseObjectProperties(obo:RO_0000056 obo:RO_0000057)
ObjectPropertyDomain(obo:RO_0000056 obo:BFO_0000002)
ObjectPropertyRange(obo:RO_0000056 obo:BFO_0000003)

# Object Property: obo:RO_0000057 (has participant)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000057 "has participant"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000057 "this blood coagulation has participant this blood clot"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000057 "this investigation has participant this investigator"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000057 "this process has participant this input material (or this output material)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000057 "a relation between a process and a continuant, in which the continuant is somehow involved in the process"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000057 "Has_participant is a primitive instance-level relation between a process, a continuant, and a time at which the continuant participates in some way in the process. The relation obtains, for example, when this particular process of oxygen exchange across this particular alveolar membrane has_participant this particular sample of hemoglobin at this particular time."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000057 "has_participant"@en)
AnnotationAssertion(dc:source obo:RO_0000057 "http://www.obofoundry.org/ro/#OBO_REL:has_participant")
AnnotationAssertion(rdfs:label obo:RO_0000057 "has participant"@en)
ObjectPropertyDomain(obo:RO_0000057 obo:BFO_0000003)
ObjectPropertyRange(obo:RO_0000057 obo:BFO_0000002)

# Object Property: obo:RO_0000058 (is concretized as)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000058 "A journal article is an information artifact that inheres in some number of printed journals. For each copy of the printed journal there is some quality that carries the journal article, such as a pattern of ink. The journal article (a generically dependent continuant) is concretized as the quality (a specifically dependent continuant), and both depend on that copy of the printed journal (an independent continuant)."@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000058 "An investigator reads a protocol and forms a plan to carry out an assay. The plan is a realizable entity (a specifically dependent continuant) that concretizes the protocol (a generically dependent continuant), and both depend on the investigator (an independent continuant). The plan is then realized by the assay (a process)."@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000058 "A relationship between a generically dependent continuant and a specifically dependent continuant, in which the generically dependent continuant depends on some independent continuant in virtue of the fact that the specifically dependent continuant also depends on that same independent continuant. A generically dependent continuant may be concretized as multiple specifically dependent continuants."@en)
AnnotationAssertion(rdfs:label obo:RO_0000058 "is concretized as"@en)
InverseObjectProperties(obo:RO_0000058 obo:RO_0000059)
ObjectPropertyDomain(obo:RO_0000058 obo:BFO_0000031)
ObjectPropertyRange(obo:RO_0000058 obo:BFO_0000020)

# Object Property: obo:RO_0000059 (concretizes)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000059 "A journal article is an information artifact that inheres in some number of printed journals. For each copy of the printed journal there is some quality that carries the journal article, such as a pattern of ink. The quality (a specifically dependent continuant) concretizes the journal article (a generically dependent continuant), and both depend on that copy of the printed journal (an independent continuant)."@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000059 "An investigator reads a protocol and forms a plan to carry out an assay. The plan is a realizable entity (a specifically dependent continuant) that concretizes the protocol (a generically dependent continuant), and both depend on the investigator (an independent continuant). The plan is then realized by the assay (a process)."@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000059 "A relationship between a specifically dependent continuant and a generically dependent continuant, in which the generically dependent continuant depends on some independent continuant in virtue of the fact that the specifically dependent continuant also depends on that same independent continuant. Multiple specifically dependent continuants can concretize the same generically dependent continuant."@en)
AnnotationAssertion(rdfs:label obo:RO_0000059 "concretizes"@en)
ObjectPropertyDomain(obo:RO_0000059 obo:BFO_0000020)
ObjectPropertyRange(obo:RO_0000059 obo:BFO_0000031)

# Object Property: obo:RO_0000079 (function of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000079 "this catalysis function is a function of this enzyme"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000079 "a relation between a function and an independent continuant (the bearer), in which the function specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000079 "A function inheres in its bearer at all times for which the function exists, however the function need not be realized at all the times that the function exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000079 "function_of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000079 "is function of"@en)
AnnotationAssertion(rdfs:label obo:RO_0000079 "function of"@en)
SubObjectPropertyOf(obo:RO_0000079 obo:RO_0000052)
InverseObjectProperties(obo:RO_0000079 obo:RO_0000085)
ObjectPropertyDomain(obo:RO_0000079 obo:BFO_0000034)

# Object Property: obo:RO_0000080 (quality of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000080 "this red color is a quality of this apple"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000080 "a relation between a quality and an independent continuant (the bearer), in which the quality specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000080 "A quality inheres in its bearer at all times for which the quality exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000080 "is quality of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000080 "quality_of"@en)
AnnotationAssertion(rdfs:label obo:RO_0000080 "quality of"@en)
SubObjectPropertyOf(obo:RO_0000080 obo:RO_0000052)
InverseObjectProperties(obo:RO_0000080 obo:RO_0000086)

# Object Property: obo:RO_0000081 (role of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000081 "this investigator role is a role of this person"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000081 "a relation between a role and an independent continuant (the bearer), in which the role specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000081 "A role inheres in its bearer at all times for which the role exists, however the role need not be realized at all the times that the role exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000081 "is role of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000081 "role_of"@en)
AnnotationAssertion(rdfs:label obo:RO_0000081 "role of"@en)
SubObjectPropertyOf(obo:RO_0000081 obo:RO_0000052)
InverseObjectProperties(obo:RO_0000081 obo:RO_0000087)

# Object Property: obo:RO_0000085 (has function)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000085 "this enzyme has function this catalysis function (more colloquially: this enzyme has this catalysis function)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000085 "a relation between an independent continuant (the bearer) and a function, in which the function specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000085 "A bearer can have many functions, and its functions can exist for different periods of time, but none of its functions can exist when the bearer does not exist. A function need not be realized at all the times that the function exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000085 "has_function"@en)
AnnotationAssertion(rdfs:label obo:RO_0000085 "has function"@en)
SubObjectPropertyOf(obo:RO_0000085 obo:RO_0000053)
ObjectPropertyDomain(obo:RO_0000085 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0000085 obo:BFO_0000034)

# Object Property: obo:RO_0000086 (has quality)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000086 "this apple has quality this red color"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000086 "a relation between an independent continuant (the bearer) and a quality, in which the quality specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000086 "A bearer can have many qualities, and its qualities can exist for different periods of time, but none of its qualities can exist when the bearer does not exist."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000086 "has_quality"@en)
AnnotationAssertion(rdfs:label obo:RO_0000086 "has quality"@en)
SubObjectPropertyOf(obo:RO_0000086 obo:RO_0000053)
ObjectPropertyRange(obo:RO_0000086 obo:BFO_0000019)

# Object Property: obo:RO_0000087 (has role)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000087 "this person has role this investigator role (more colloquially: this person has this role of investigator)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000087 "a relation between an independent continuant (the bearer) and a role, in which the role specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000087 "A bearer can have many roles, and its roles can exist for different periods of time, but none of its roles can exist when the bearer does not exist. A role need not be realized at all the times that the role exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000087 "has_role"@en)
AnnotationAssertion(rdfs:label obo:RO_0000087 "has role"@en)
SubObjectPropertyOf(obo:RO_0000087 obo:RO_0000053)
ObjectPropertyDomain(obo:RO_0000087 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0000087 obo:BFO_0000023)

# Object Property: obo:RO_0000091 (has disposition)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0000091 "a relation between an independent continuant (the bearer) and a disposition, in which the disposition specifically depends on the bearer for its existence"@en)
AnnotationAssertion(rdfs:label obo:RO_0000091 "has disposition"@en)
SubObjectPropertyOf(obo:RO_0000091 obo:RO_0000053)
InverseObjectProperties(obo:RO_0000091 obo:RO_0000092)
ObjectPropertyDomain(obo:RO_0000091 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0000091 obo:BFO_0000016)

# Object Property: obo:RO_0000092 (disposition of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0000092 "inverse of has disposition")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0000092 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0000092 "disposition of"@en)
SubObjectPropertyOf(obo:RO_0000092 obo:RO_0000052)

# Object Property: obo:RO_0000300 (in neural circuit with)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0000300 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000300 "A relation that holds between two neurons connected directly via a synapse, or indirectly via a series of synaptically connected neurons."@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0000300 "David Osumi-Sutherland"@en)
AnnotationAssertion(obo:IAO_0000426 obo:RO_0000300 "(forall (?x ?y) 
	(iff 
		(neural_circuit_path  ?x ?y)
		(and
			(\"neuron ; CL_0000540\" ?x)
			(\"neuron ; CL_0000540\" ?y)
			(or 
				(synapsed_by ?x ?y) 
				(synapsed_to ?x ?y))))) 

(forall (...s ?x ?y ?z) 
	(iff 
		(neural_circuit_path  ...s ?x ?y ?z)
		(and
			(neural_circuit_path  ...s ?x ?y)
			(\"neuron ; CL_0000540\" ?z)
			(or 
				(synapsed_by ?y ?z) 
				(synapsed_to ?y ?z))))) 

(forall (?x ?y) 
	(iff 
		(in_neural_circuit_with ?x ?y)
		(exists (...s)
			(neural_circuit_path  ?x ...s ?y)))) "^^xsd:string)
AnnotationAssertion(obo:RO_0001900 obo:RO_0000300 obo:RO_0001901)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0000300 <http://www.ncbi.nlm.nih.gov/pubmed/22402613>)
AnnotationAssertion(rdfs:label obo:RO_0000300 "in neural circuit with"@en)
TransitiveObjectProperty(obo:RO_0000300)

# Object Property: obo:RO_0000301 (upstream in neural circuit with)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0000301 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000301 "A relation that holds between a neuron that is synapsed_to another neuron or a neuron that is connected indirectly to another by a chain of neurons, each synapsed_to the next."@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0000301 "David Osumi-Sutherland"@en)
AnnotationAssertion(obo:IAO_0000426 obo:RO_0000301 "(forall (?x ?y) 
	(iff 
		(upstream_neural_circuit_path  ?x ?y)
		(and
			(\"neuron ; CL_0000540\" ?x)
			(\"neuron ; CL_0000540\" ?y)
			(synapsed_to ?x ?y))))


(forall (...s ?x ?y ?z) 
	(iff 
		(upstream_neural_circuit_path ...s ?x ?y ?z )
		(and
			(upstream_neural_circuit_path ...s ?x ?y)
			(\"neuron ; CL_0000540\" ?z)
			(synapsed_to ?y ?z))))
			
(forall (?x ?y) 
	(iff 
		(upstream_in_neural_circuit_with ?x ?y)
		(exists (...s)
			(upstream_neural_circuit_path  ?x ...s ?y))))"^^xsd:string)
AnnotationAssertion(obo:RO_0001900 obo:RO_0000301 obo:RO_0001901)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0000301 <http://www.ncbi.nlm.nih.gov/pubmed/22402613>)
AnnotationAssertion(rdfs:label obo:RO_0000301 "upstream in neural circuit with"@en)
SubObjectPropertyOf(obo:RO_0000301 obo:RO_0000300)
TransitiveObjectProperty(obo:RO_0000301)

# Object Property: obo:RO_0000302 (downstream in neural circuit with)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0000302 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000302 "A relation that holds between a neuron that is synapsed_to another neuron or a neuron that is connected indirectly to another by a chain of neurons, each synapsed_to the next."@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0000302 "David Osumi-Sutherland"@en)
AnnotationAssertion(obo:IAO_0000426 obo:RO_0000302 "(forall (?x ?y) 
	(iff 
		(downstream_neural_circuit_path  ?x ?y)
		(and
			(\"neuron ; CL_0000540\" ?x)
			(\"neuron ; CL_0000540\" ?y)
			(synapsed_by ?x ?y))))


(forall (...s ?x ?y ?z) 
	(iff 
		(downstream_neural_circuit_path ...s ?x ?y ?z )
		(and
			(downstream_neural_circuit_path ...s ?x ?y)
			(\"neuron ; CL_0000540\" ?z)
			(synapsed_by ?y ?z))))
			
(forall (?x ?y) 
	(iff 
		(downstream_in_neural_circuit_with ?x ?y)
		(exists (...s)
			(downstream_neural_circuit_path  ?x ...s ?y)))) 
			"^^xsd:string)
AnnotationAssertion(obo:RO_0001900 obo:RO_0000302 obo:RO_0001901)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0000302 <http://www.ncbi.nlm.nih.gov/pubmed/22402613>)
AnnotationAssertion(rdfs:label obo:RO_0000302 "downstream in neural circuit with"@en)
SubObjectPropertyOf(obo:RO_0000302 obo:RO_0000300)
TransitiveObjectProperty(obo:RO_0000302)

# Object Property: obo:RO_0001000 (derives from)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0001000 "this cell derives from this parent cell (cell division)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0001000 "this nucleus derives from this parent nucleus (nuclear division)"@en)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0001000 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0001000 "a relation between two distinct material entities, the new entity and the old entity, in which the new entity begins to exist when the old entity ceases to exist, and the new entity inherits the significant portion of the matter of the old entity"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0001000 "This is a very general relation. More specific relations are preferred when applicable, such as 'directly develops from'."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0001000 "derives_from"@en)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0001000 "This relation is taken from the RO2005 version of RO. It may be obsoleted and replaced by relations with different definitions. See also the 'develops from' family of relations.")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0001000 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0001000 "derives from"@en)
InverseObjectProperties(obo:RO_0001000 obo:RO_0001001)

# Object Property: obo:RO_0001001 (derives into)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0001001 "this parent cell derives into this cell (cell division)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0001001 "this parent nucleus derives into this nucleus (nuclear division)"@en)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0001001 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0001001 "a relation between two distinct material entities, the old entity and the new entity, in which the new entity begins to exist when the old entity ceases to exist, and the new entity inherits the significant portion of the matter of the old entity"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0001001 "This is a very general relation. More specific relations are preferred when applicable, such as 'directly develops into'. To avoid making statements about a future that may not come to pass, it is often better to use the backward-looking 'derives from' rather than the forward-looking 'derives into'."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0001001 "derives_into"@en)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0001001 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0001001 "derives into"@en)

# Object Property: obo:RO_0001015 (location of)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0001015 "is location of"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0001015 "my head is the location of my brain"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0001015 "this cage is the location of this rat"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0001015 "a relation between two independent continuants, the location and the target, in which the target is entirely within the location"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0001015 "Most location relations will only hold at certain times, but this is difficult to specify in OWL. See https://code.google.com/p/obo-relations/wiki/ROAndTime"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0001015 "location_of"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0001015 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0001015 "location of"@en)
InverseObjectProperties(obo:RO_0001015 obo:RO_0001025)
TransitiveObjectProperty(obo:RO_0001015)

# Object Property: obo:RO_0001018 (contained in)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0001018 "contained in"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0001018 "Containment is location not involving parthood, and arises only where some immaterial continuant is involved.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0001018 "Containment obtains in each case between material and immaterial continuants, for instance: lung contained_in thoracic cavity; bladder contained_in pelvic cavity. Hence containment is not a transitive relation.    If c part_of c1 at t then we have also, by our definition and by the axioms of mereology applied to spatial regions, c located_in c1 at t. Thus, many examples of instance-level location relations for continuants are in fact cases of instance-level parthood. For material continuants location and parthood coincide. Containment is location not involving parthood, and arises only where some immaterial continuant is involved. To understand this relation, we first define overlap for continuants as follows:    c1 overlap c2 at t =def for some c, c part_of c1 at t and c part_of c2 at t. The containment relation on the instance level can then be defined (see definition):"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0001018 "Intended meaning:
domain: material entity
range: spatial region or site (immaterial continuant)
        "@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0001018 "contained_in"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0001018 obo:RO_0001901)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0001018 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0001018 "contained in"@en)
InverseObjectProperties(obo:RO_0001018 obo:RO_0001019)
ObjectPropertyDomain(obo:RO_0001018 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0001018 obo:BFO_0000004)

# Object Property: obo:RO_0001019 (contains)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0001019 "contains"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0001019 obo:RO_0001901)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0001019 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0001019 "contains"@en)

# Object Property: obo:RO_0001020 (is allergic trigger for)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0001020 "penicillin (CHEBI:17334) is allergic trigger for penicillin allergy (DOID:0060520)")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0001020 "A relation between a material entity and a condition (a phenotype or disease) of a host, in which the material entity is not part of the host, and is considered harmless to non-allergic hosts, and the condition results in pathological processes that include an abnormally strong immune response against the material entity.")
AnnotationAssertion(rdfs:label obo:RO_0001020 "is allergic trigger for"@en)
SubObjectPropertyOf(obo:RO_0001020 obo:RO_0003302)
InverseObjectProperties(obo:RO_0001020 obo:RO_0001022)
ObjectPropertyDomain(obo:RO_0001020 obo:BFO_0000040)

# Object Property: obo:RO_0001021 (is autoimmune trigger for)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0001021 "A relation between a material entity and a condition (a phenotype or disease) of a host, in which the material entity is part of the host itself, and the condition results in pathological processes that include an abnormally strong immune response against the material entity.")
AnnotationAssertion(rdfs:label obo:RO_0001021 "is autoimmune trigger for"@en)
SubObjectPropertyOf(obo:RO_0001021 obo:RO_0003302)
InverseObjectProperties(obo:RO_0001021 obo:RO_0001023)
ObjectPropertyDomain(obo:RO_0001021 obo:BFO_0000040)

# Object Property: obo:RO_0001022 (has allergic trigger)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0001022 "penicillin allergy (DOID:0060520) has allergic trigger penicillin (CHEBI:17334)")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0001022 "A relation between a condition (a phenotype or disease) of a host and a material entity, in which the material entity is not part of the host, and is considered harmless to non-allergic hosts, and the condition results in pathological processes that include an abnormally strong immune response against the material entity.")
AnnotationAssertion(rdfs:label obo:RO_0001022 "has allergic trigger"@en)
SubObjectPropertyOf(obo:RO_0001022 obo:RO_0003302)
ObjectPropertyRange(obo:RO_0001022 obo:BFO_0000040)

# Object Property: obo:RO_0001023 (has autoimmune trigger)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0001023 "A relation between a condition (a phenotype or disease) of a host and a material entity, in which the material entity is part of the host itself, and the condition results in pathological processes that include an abnormally strong immune response against the material entity.")
AnnotationAssertion(rdfs:label obo:RO_0001023 "has autoimmune trigger"@en)
SubObjectPropertyOf(obo:RO_0001023 obo:RO_0003302)
ObjectPropertyRange(obo:RO_0001023 obo:BFO_0000040)

# Object Property: obo:RO_0001025 (located in)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0001025 "located in"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0001025 "my brain is located in my head"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0001025 "this rat is located in this cage"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0001025 "a relation between two independent continuants, the target and the location, in which the target is entirely within the location"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0001025 "Location as a relation between instances: The primitive instance-level relation c located_in r at t reflects the fact that each continuant is at any given time associated with exactly one spatial region, namely its exact location. Following we can use this relation to define a further instance-level location relation - not between a continuant and the region which it exactly occupies, but rather between one continuant and another. c is located in c1, in this sense, whenever the spatial region occupied by c is part_of the spatial region occupied by c1.    Note that this relation comprehends both the relation of exact location between one continuant and another which obtains when r and r1 are identical (for example, when a portion of fluid exactly fills a cavity), as well as those sorts of inexact location relations which obtain, for example, between brain and head or between ovum and uterus"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0001025 "Most location relations will only hold at certain times, but this is difficult to specify in OWL. See https://code.google.com/p/obo-relations/wiki/ROAndTime"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0001025 "located_in"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0001025 obo:RO_0001901)
AnnotationAssertion(dc:source obo:RO_0001025 "http://www.obofoundry.org/ro/#OBO_REL:located_in")
AnnotationAssertion(rdfs:label obo:RO_0001025 "located in"@en)
TransitiveObjectProperty(obo:RO_0001025)

# Object Property: obo:RO_0002000 (2D boundary of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002000 "the surface of my skin is a 2D boundary of my body"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002000 "a relation between a 2D immaterial entity (the boundary) and a material entity, in which the boundary delimits the material entity"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002000 "A 2D boundary may have holes and gaps, but it must be a single connected entity, not an aggregate of several disconnected parts."@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002000 "Although the boundary is two-dimensional, it exists in three-dimensional space and thus has a 3D shape."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002000 "2D_boundary_of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002000 "boundary of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002000 "is 2D boundary of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002000 "is boundary of"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002000 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002000 "2D boundary of"@en)
SubObjectPropertyOf(obo:RO_0002000 obo:RO_0002323)
InverseObjectProperties(obo:RO_0002000 obo:RO_0002002)

# Object Property: obo:RO_0002001 (aligned with)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002001 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002001 "David Osumi-Sutherland")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002001 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002001 "aligned with"@en)
TransitiveObjectProperty(obo:RO_0002001)

# Object Property: obo:RO_0002002 (has 2D boundary)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002002 "my body has 2D boundary the surface of my skin"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002002 "a relation between a material entity and a 2D immaterial entity (the boundary), in which the boundary delimits the material entity"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002002 "A 2D boundary may have holes and gaps, but it must be a single connected entity, not an aggregate of several disconnected parts."@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002002 "Although the boundary is two-dimensional, it exists in three-dimensional space and thus has a 3D shape."@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002002 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002002 "has boundary"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002002 "has_2D_boundary"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002002 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002002 "has 2D boundary"@en)
SubObjectPropertyOf(obo:RO_0002002 obo:RO_0002323)
ObjectPropertyDomain(obo:RO_0002002 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002002 obo:BFO_0000141)

# Object Property: obo:RO_0002003 (electrically_synapsed_to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002003 "A relation that holds between two neurons that are electrically coupled via gap junctions.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002003 "David Osumi-Sutherland")
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002003 <http://www.ncbi.nlm.nih.gov/pubmed/22402613>)
AnnotationAssertion(rdfs:label obo:RO_0002003 "electrically_synapsed_to"^^xsd:string)
SubObjectPropertyOf(obo:RO_0002003 obo:RO_0000300)

# Object Property: obo:RO_0002004 (tracheates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002004 "The relationship that holds between a trachea or tracheole and an antomical structure that is contained in (and so provides an oxygen supply to)."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002004 "David Osumi-Sutherland")
AnnotationAssertion(rdfs:label obo:RO_0002004 "tracheates"@en)
SubObjectPropertyOf(obo:RO_0002004 obo:RO_0001018)

# Object Property: obo:RO_0002005 (innervated_by)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002005 "David Osumi-Sutherland")
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002005 "http://www.ncbi.nlm.nih.gov/pubmed/22402613"^^xsd:anyURI)
AnnotationAssertion(rdfs:label obo:RO_0002005 "innervated_by"@en)
InverseObjectProperties(obo:RO_0002005 obo:RO_0002134)

# Object Property: obo:RO_0002006 (has synaptic terminal of)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002006 "David Osumi-Sutherland")
AnnotationAssertion(rdfs:label obo:RO_0002006 "has synaptic terminal of"@en)
SubObjectPropertyOf(obo:RO_0002006 obo:RO_0002131)
InverseObjectProperties(obo:RO_0002006 obo:RO_0002130)

# Object Property: obo:RO_0002007 (bounding layer of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002007 "X outer_layer_of Y iff:
. X :continuant that bearer_of some PATO:laminar
. X part_of Y
. exists Z :surface
. X has_boundary Z
. Z boundary_of Y

has_boundary: http://purl.obolibrary.org/obo/RO_0002002
boundary_of: http://purl.obolibrary.org/obo/RO_0002000")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002007 "David Osumi-Sutherland")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002007 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002007 "A relationship that applies between a continuant and its outer, bounding layer.  Examples include the relationship between a multicellular organism and its integument, between an animal cell and its plasma membrane, and between a membrane bound organelle and its outer/bounding membrane.")
AnnotationAssertion(rdfs:label obo:RO_0002007 "bounding layer of"@en)
SubObjectPropertyOf(obo:RO_0002007 obo:BFO_0000050)
ObjectPropertyDomain(obo:RO_0002007 ObjectIntersectionOf(obo:BFO_0000040 ObjectSomeValuesFrom(obo:RO_0000053 obo:PATO_0002124)))
ObjectPropertyRange(obo:RO_0002007 obo:BFO_0000040)

# Object Property: obo:RO_0002008 (coincident with)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002008 "A relation that holds between two linear structures that are approximately parallel to each other for their entire length and where either the two structures are adjacent to each other or one is part of the other."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002008 "Note from NCEAS meeting: consider changing primary label")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002008 "David Osumi-Sutherland")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002008 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002008 "Example: if we define region of chromosome as any subdivision of a chromosome along its long axis, then we can define a region of chromosome that contains only gene x as 'chromosome region' that coincident_with some 'gene x', where the term gene X corresponds to a genomic sequence.")
AnnotationAssertion(rdfs:label obo:RO_0002008 "coincident with")
SubObjectPropertyOf(obo:RO_0002008 obo:RO_0002323)
ObjectPropertyDomain(obo:RO_0002008 ObjectIntersectionOf(obo:BFO_0000002 ObjectSomeValuesFrom(obo:RO_0000053 obo:PATO_0001199)))
ObjectPropertyRange(obo:RO_0002008 ObjectIntersectionOf(obo:BFO_0000002 ObjectSomeValuesFrom(obo:RO_0000053 obo:PATO_0001199)))

# Object Property: obo:RO_0002009 (cell expresses)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002009 "A relation that applies between a cell(c) and a gene(g) , where the process of 'transcription, DNA templated (GO_0006351)' is occuring in in cell c and that process has input gene g.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002009 "David Osumi-Sutherland")
AnnotationAssertion(dc:description obo:RO_0002009 "x 'cell expresses' y iff:
cell(x)
AND gene(y)
AND exists some 'transcription, DNA templated (GO_0006351)'(t)
AND t occurs_in x
AND t has_input y")
AnnotationAssertion(rdfs:label obo:RO_0002009 "cell expresses")
SubObjectPropertyOf(obo:RO_0002009 obo:RO_0002292)
ObjectPropertyDomain(obo:RO_0002009 obo:CL_0000000)

# Object Property: obo:RO_0002010 (regulates in other organism)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002010 "x 'regulates in other organism' y if and only if: (x is the realization of a function to exert an effect on the frequency, rate or extent of y) AND (the agents of x are produced by organism o1 and the agents of y are produced by organism o2).")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002010 "David Osumi-Sutherland")
AnnotationAssertion(rdfs:label obo:RO_0002010 "regulates in other organism")
SubObjectPropertyOf(obo:RO_0002010 obo:RO_0002418)
ObjectPropertyDomain(obo:RO_0002010 obo:BFO_0000015)
ObjectPropertyRange(obo:RO_0002010 obo:BFO_0000015)

# Object Property: obo:RO_0002011 (regulates transport of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002011 "A relationship that holds between a  process that regulates a transport process and the entity transported by that process.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002011 "David Osumi-Sutherland")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002011 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002011 "regulates transport of")

# Object Property: obo:RO_0002012 (occurent part of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002012 "A part of relation that applies only between occurents.")
AnnotationAssertion(rdfs:label obo:RO_0002012 "occurent part of")
SubObjectPropertyOf(obo:RO_0002012 obo:BFO_0000050)
SubObjectPropertyOf(obo:RO_0002012 obo:RO_0002418)
ObjectPropertyDomain(obo:RO_0002012 obo:BFO_0000003)
ObjectPropertyRange(obo:RO_0002012 obo:BFO_0000003)

# Object Property: obo:RO_0002013 (has regulatory component activity)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002013 "A 'has regulatory component activity' B if A and B are GO molecular functions (GO_0003674), A has_component B and A is regulated by B.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002013 "dos"^^xsd:string)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002013 "2017-05-24T09:30:46Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0002013 "has regulatory component activity")
SubObjectPropertyOf(obo:RO_0002013 obo:RO_0002017)
SubObjectPropertyOf(obo:RO_0002013 obo:RO_0002334)

# Object Property: obo:RO_0002014 (has negative regulatory component activity)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002014 "A relationship that holds between a GO molecular function and a component of that molecular function that negatively regulates the activity of the whole.  More formally, A 'has regulatory component activity' B iff :A and B are GO molecular functions (GO_0003674), A has_component B and A is negatively regulated by B.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002014 "dos"^^xsd:string)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002014 "2017-05-24T09:31:01Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:comment obo:RO_0002014 "By convention GO molecular functions are classified by their effector function.  Internal regulatory functions are treated as components.  For example, NMDA glutmate receptor activity is a cation channel activity with positive regulatory component 'glutamate binding' and negative regulatory components including 'zinc binding' and 'magnesium binding'.")
AnnotationAssertion(rdfs:label obo:RO_0002014 "has negative regulatory component activity")
SubObjectPropertyOf(obo:RO_0002014 obo:RO_0002013)
SubObjectPropertyOf(obo:RO_0002014 obo:RO_0002335)

# Object Property: obo:RO_0002015 (has positive regulatory component activity)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002015 "A relationship that holds between a GO molecular function and a component of that molecular function that positively regulates the activity of the whole.  More formally, A 'has regulatory component activity' B iff :A and B are GO molecular functions (GO_0003674), A has_component B and A is positively regulated by B.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002015 "dos"^^xsd:string)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002015 "2017-05-24T09:31:17Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:comment obo:RO_0002015 "By convention GO molecular functions are classified by their effector function and internal regulatory functions are treated as components.  So, for example calmodulin has a protein binding activity that has positive regulatory component activity calcium binding activity. Receptor tyrosine kinase activity is a tyrosine kinase activity that has positive regulatory component 'ligand binding'.")
AnnotationAssertion(rdfs:label obo:RO_0002015 "has positive regulatory component activity")
SubObjectPropertyOf(obo:RO_0002015 obo:RO_0002013)
SubObjectPropertyOf(obo:RO_0002015 obo:RO_0002336)

# Object Property: obo:RO_0002016 (has necessary component activity)

AnnotationAssertion(oboInOwl:created_by obo:RO_0002016 "dos"^^xsd:string)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002016 "2017-05-24T09:36:08Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:comment obo:RO_0002016 "A has necessary component activity B if A and B are GO molecular functions  (GO_0003674), A has_component B and B is necessary for A.  For example,  ATPase coupled transporter activity has necessary component ATPase activity; transcript factor activity has necessary component DNA binding activity.")
AnnotationAssertion(rdfs:label obo:RO_0002016 "has necessary component activity")
SubObjectPropertyOf(obo:RO_0002016 obo:RO_0002017)
SubObjectPropertyOf(obo:RO_0002016 obo:RO_0002336)

# Object Property: obo:RO_0002017 (has component activity)

AnnotationAssertion(oboInOwl:created_by obo:RO_0002017 "dos"^^xsd:string)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002017 "2017-05-24T09:44:33Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:comment obo:RO_0002017 "A 'has component activity' B if A is A and B are molecular functions (GO_0003674) and A has_component B.")
AnnotationAssertion(rdfs:label obo:RO_0002017 "has component activity")
SubObjectPropertyOf(obo:RO_0002017 obo:RO_0002018)

# Object Property: obo:RO_0002018 (has component process)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002018 "w 'has process component' p if p and w are processes,  w 'has part' p and w is such that it can be directly disassembled into into n parts p, p2, p3, ..., pn, where these parts are of similar type.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002018 "dos"^^xsd:string)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002018 "2017-05-24T09:49:21Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0002018 "has component process")
SubObjectPropertyOf(obo:RO_0002018 obo:RO_0002180)

# Object Property: obo:RO_0002019 (has ligand)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002019 "A relationship that holds between between a receptor and an chemical entity, typically a small molecule or peptide, that carries information between cells or compartments of a cell and which binds the receptor and regulates its effector function.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002019 "dos"^^xsd:string)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002019 "2017-07-19T17:30:36Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0002019 "has ligand")
SubObjectPropertyOf(obo:RO_0002019 obo:RO_0002233)
ObjectPropertyDomain(obo:RO_0002019 obo:GO_0004872)

# Object Property: obo:RO_0002020 (transports)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002020 "Holds between p and c when p is a transport process or transporter activity and the outcome of this p is to move c from one location to another.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002020 "dos"^^xsd:string)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002020 "2017-07-20T17:11:08Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0002020 "transports")
SubObjectPropertyOf(obo:RO_0002020 obo:RO_0002313)

# Object Property: obo:RO_0002021 (occurs across)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002021 "A relationship between a process and a barrier, where the process occurs in a region spanning the barrier. For cellular processes the barrier is typically a membrane. Examples include transport across a membrane and membrane depolarization.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002021 "dos"^^xsd:string)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002021 "2017-07-20T17:19:37Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0002021 "occurs across")
SubObjectPropertyOf(obo:RO_0002021 obo:RO_0002479)

# Object Property: obo:RO_0002022 (directly regulated by)

AnnotationAssertion(oboInOwl:created_by obo:RO_0002022 "dos"^^xsd:string)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002022 "2017-09-17T13:52:24Z"^^xsd:dateTime)
AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:dos") rdfs:comment obo:RO_0002022 "Process(P2) is directly regulated by process(P1) iff: P1 regulates P2 via direct physical interaction between an agent executing P1 (or some part of P1) and an agent executing P2 (or some part of P2).  For example, if protein A has protein binding activity(P1) that targets protein B and this binding  regulates the kinase activity (P2) of protein B then P1 directly regulates P2.")
AnnotationAssertion(rdfs:label obo:RO_0002022 "directly regulated by")
SubObjectPropertyOf(obo:RO_0002022 obo:RO_0002334)
InverseObjectProperties(obo:RO_0002022 obo:RO_0002578)

# Object Property: obo:RO_0002023 (directly negatively regulated by)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:dos") obo:IAO_0000115 obo:RO_0002023 "Process(P2) is directly negatively regulated by process(P1) iff: P1 negatively regulates P2 via direct physical interaction between an agent executing P1 (or some part of P1) and an agent executing P2 (or some part of P2).  For example, if protein A has protein binding activity(P1) that targets protein B and this binding  negatively regulates the kinase activity (P2) of protein B then P2 directly negatively regulated by P1.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002023 "dos"^^xsd:string)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002023 "2017-09-17T13:52:38Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0002023 "directly negatively regulated by")
SubObjectPropertyOf(obo:RO_0002023 obo:RO_0002022)
InverseObjectProperties(obo:RO_0002023 obo:RO_0002630)

# Object Property: obo:RO_0002024 (directly positively regulated by)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:dos") obo:IAO_0000115 obo:RO_0002024 "Process(P2) is directly postively regulated by process(P1) iff: P1 positively regulates P2 via direct physical interaction between an agent executing P1 (or some part of P1) and an agent executing P2 (or some part of P2).  For example, if protein A has protein binding activity(P1) that targets protein B and this binding positively regulates the kinase activity (P2) of protein B then P2 is directly postively regulated by P1.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002024 "dos"^^xsd:string)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002024 "2017-09-17T13:52:47Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0002024 "directly positively regulated by")
SubObjectPropertyOf(obo:RO_0002024 obo:RO_0002022)
InverseObjectProperties(obo:RO_0002024 obo:RO_0002629)

# Object Property: obo:RO_0002025 (has effector activity)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:dos") obo:IAO_0000115 obo:RO_0002025 "A 'has effector activity' B if A and B are GO molecular functions (GO_0003674),  A 'has component activity' B and B is the effector (output function) of B.  Each compound function has only one effector activity.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002025 "dos"^^xsd:string)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002025 "2017-09-22T14:14:36Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:comment obo:RO_0002025 "This relation is designed for constructing compound molecular functions, typically in combination with one or more regulatory component activity relations.")
AnnotationAssertion(rdfs:label obo:RO_0002025 "has effector activity")
SubObjectPropertyOf(obo:RO_0002025 obo:RO_0002017)
SubObjectPropertyOf(obo:RO_0002025 obo:RO_0002211)
FunctionalObjectProperty(obo:RO_0002025)

# Object Property: obo:RO_0002081 (before or simultaneous with)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002081 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002081 "<="@en)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002081 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002081 "Primitive instance level timing relation between events")
AnnotationAssertion(rdfs:label obo:RO_0002081 "before or simultaneous with"@en)
SubObjectPropertyOf(obo:RO_0002081 obo:RO_0002222)

# Object Property: obo:RO_0002082 (simultaneous with)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002082 "David Osumi-Sutherland")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002082 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002082 "t1 simultaneous_with t2 iff:=  t1 before_or_simultaneous_with t2  and not (t1 before t2)"@en)
AnnotationAssertion(rdfs:label obo:RO_0002082 "simultaneous with"@en)
SubObjectPropertyOf(obo:RO_0002082 obo:RO_0002081)
TransitiveObjectProperty(obo:RO_0002082)

# Object Property: obo:RO_0002083 (before)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002083 "David Osumi-Sutherland")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002083 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002083 "t1 before t2 iff:=  t1 before_or_simulataneous_with t2  and not (t1 simultaeous_with t2)"@en)
AnnotationAssertion(rdfs:label obo:RO_0002083 "before"@en)
SubObjectPropertyOf(obo:RO_0002083 obo:RO_0002081)
TransitiveObjectProperty(obo:RO_0002083)

# Object Property: obo:RO_0002084 (during which ends)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002084 "David Osumi-Sutherland")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002084 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002084 "Previously had ID  http://purl.obolibrary.org/obo/RO_0002122 in test files in sandpit - but this seems to have been dropped from ro-edit.owl at some point.  No re-use under this ID AFAIK, but leaving note here in case we run in to clashes down the line.  Official ID now chosen from DOS ID range.")
AnnotationAssertion(rdfs:label obo:RO_0002084 "during which ends"@en)
SubObjectPropertyOf(obo:RO_0002084 obo:RO_0002222)
InverseObjectProperties(obo:RO_0002084 obo:RO_0002093)

# Object Property: obo:RO_0002085 (encompasses)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002085 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002085 "di")
AnnotationAssertion(rdfs:comment obo:RO_0002085 "Previously had ID  http://purl.obolibrary.org/obo/RO_0002124 in test files in sandpit - but this seems to have been dropped from ro-edit.owl at some point.  No re-use under this ID AFAIK, but leaving note here in case we run in to clashes down the line.  Official ID now chosen from DOS ID range.")
AnnotationAssertion(rdfs:label obo:RO_0002085 "encompasses"@en)
SubObjectPropertyOf(obo:RO_0002085 obo:RO_0002088)
InverseObjectProperties(obo:RO_0002085 obo:RO_0002092)
TransitiveObjectProperty(obo:RO_0002085)

# Object Property: obo:RO_0002086 (ends after)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002086 "David Osumi-Sutherland")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002086 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002086 "X ends_after Y iff: end(Y) before_or_simultaneous_with end(X)"@en)
AnnotationAssertion(rdfs:label obo:RO_0002086 "ends after"@en)
SubObjectPropertyOf(obo:RO_0002086 obo:RO_0002222)
TransitiveObjectProperty(obo:RO_0002086)

# Object Property: obo:RO_0002087 (immediately preceded by)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002087 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002087 "starts_at_end_of")
AnnotationAssertion(rdfs:comment obo:RO_0002087 "X immediately_preceded_by Y iff: end(X) simultaneous_with start(Y)"@en)
AnnotationAssertion(rdfs:label obo:RO_0002087 "immediately preceded by"@en)
SubObjectPropertyOf(obo:RO_0002087 obo:BFO_0000062)
InverseObjectProperties(obo:RO_0002087 obo:RO_0002090)

# Object Property: obo:RO_0002088 (during which starts)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002088 "David Osumi-Sutherland")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002088 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002088 "Previously had ID  http://purl.obolibrary.org/obo/RO_0002123 in test files in sandpit - but this seems to have been dropped from ro-edit.owl at some point.  No re-use under this ID AFAIK, but leaving note here in case we run in to clashes down the line.  Official ID now chosen from DOS ID range.")
AnnotationAssertion(rdfs:label obo:RO_0002088 "during which starts"@en)
SubObjectPropertyOf(obo:RO_0002088 obo:RO_0002222)
InverseObjectProperties(obo:RO_0002088 obo:RO_0002091)

# Object Property: obo:RO_0002089 (starts before)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002089 "David Osumi-Sutherland")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002089 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002089 "starts before"@en)
SubObjectPropertyOf(obo:RO_0002089 obo:RO_0002222)
TransitiveObjectProperty(obo:RO_0002089)

# Object Property: obo:RO_0002090 (immediately precedes)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002090 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002090 "ends_at_start_of")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002090 "meets")
AnnotationAssertion(obo:RO_0002575 obo:RO_0002090 obo:BFO_0000063)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002090 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002090 "X immediately_precedes_Y iff: end(X) simultaneous_with start(Y)"@en)
AnnotationAssertion(rdfs:label obo:RO_0002090 "immediately precedes"@en)
SubObjectPropertyOf(obo:RO_0002090 obo:BFO_0000063)

# Object Property: obo:RO_0002091 (starts during)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002091 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002091 "io")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002091 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002091 "X starts_during Y iff: (start(Y) before_or_simultaneous_with start(X)) AND (start(X) before_or_simultaneous_with end(Y))"@en)
AnnotationAssertion(rdfs:label obo:RO_0002091 "starts during"@en)
SubObjectPropertyOf(obo:RO_0002091 obo:RO_0002222)
ObjectPropertyDomain(obo:RO_0002091 obo:BFO_0000003)
ObjectPropertyRange(obo:RO_0002091 obo:BFO_0000003)

# Object Property: obo:RO_0002092 (happens during)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002092 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002092 "d")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002092 "during")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002092 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002092 "X happens_during Y iff: (start(Y) before_or_simultaneous_with start(X)) AND (end(X) before_or_simultaneous_with end(Y))"@en)
AnnotationAssertion(rdfs:label obo:RO_0002092 "happens during"@en)
SubObjectPropertyOf(obo:RO_0002092 obo:RO_0002093)
TransitiveObjectProperty(obo:RO_0002092)

# Object Property: obo:RO_0002093 (ends during)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002093 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002093 "o")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002093 "overlaps")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002093 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002093 "X ends_during Y iff: ((start(Y) before_or_simultaneous_with end(X)) AND end(X) before_or_simultaneous_with end(Y). "@en)
AnnotationAssertion(rdfs:label obo:RO_0002093 "ends during"@en)
SubObjectPropertyOf(obo:RO_0002093 obo:RO_0002222)

# Object Property: obo:RO_0002100 (has soma location)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002100 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002100 "Relation between a neuron and an anatomical structure that its soma is part of."@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002100 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002100 "<http://purl.obolibrary.org/obo/BFO_0000051> some (
   <http://purl.obolibrary.org/obo/GO_0043025> and   <http://purl.obolibrary.org/obo/BFO_0000050> some ?Y)")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002100 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002100 "has soma location"@en)
SubObjectPropertyOf(obo:RO_0002100 obo:RO_0002131)
ObjectPropertyDomain(obo:RO_0002100 obo:CL_0000540)

# Object Property: obo:RO_0002101 (fasciculates with)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002101 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002101 "relationship between a neuron and a neuron projection bundle (e.g.- tract or nerve bundle) that one or more of its projections travels through.
"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002101 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002101 "fasciculates with")
AnnotationAssertion(obo:IAO_0000426 obo:RO_0002101 "(forall (?x ?y) 
	(iff 
		(fasciculates_with ?x ?y)
		(exists (?nps ?npbs)
			(and 
				(\"neuron ; CL_0000540\" ?x)
				(\"neuron projection bundle ; CARO_0001001\" ?y) 
				(\"neuron projection segment ; CARO_0001502\" ?nps)
				(\"neuron projection bundle segment ; CARO_0001500' \" ?npbs)
				(part_of ?npbs ?y) 			
				(part_of ?nps ?x)
				(part_of ?nps ?npbs)
				(forall (?npbss)
					(if
						(and 
							(\"neuron projection bundle subsegment ; CARO_0001501\" ?npbss)
							(part_of ?npbss ?npbs) 
						)
						(overlaps ?nps ?npbss)
					))))))"^^xsd:string)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002101 obo:RO_0001901)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002101 <http://www.ncbi.nlm.nih.gov/pubmed/22402613>)
AnnotationAssertion(rdfs:label obo:RO_0002101 "fasciculates with"@en)
SubObjectPropertyOf(obo:RO_0002101 obo:RO_0002131)
InverseObjectProperties(obo:RO_0002101 obo:RO_0002132)
ObjectPropertyDomain(obo:RO_0002101 ObjectUnionOf(obo:CL_0000540 ObjectSomeValuesFrom(obo:BFO_0000050 obo:CL_0000540)))
ObjectPropertyRange(obo:RO_0002101 obo:CARO_0001001)

# Object Property: obo:RO_0002102 (axon synapses in)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002102 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002102 "Relation between a neuron and some structure its axon forms (chemical) synapses in."@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002102 "Chris Mungall"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002102 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002102 "David Osumi-Sutherland"@en)
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002102 "<http://purl.obolibrary.org/obo/BFO_0000051> some (
   <http://purl.obolibrary.org/obo/GO_0030424> and <http://purl.obolibrary.org/obo/BFO_0000051> some (
      <http://purl.obolibrary.org/obo/GO_0042734> and <http://purl.obolibrary.org/obo/BFO_0000050> some (
         <http://purl.obolibrary.org/obo/GO_0045202> and <http://purl.obolibrary.org/obo/BFO_0000050> some ?Y)))")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002102 obo:RO_0001901)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002102 <http://www.ncbi.nlm.nih.gov/pubmed/22402613>)
AnnotationAssertion(rdfs:label obo:RO_0002102 "axon synapses in"@en)
SubObjectPropertyOf(obo:RO_0002102 obo:RO_0002113)
InverseObjectProperties(obo:RO_0002102 obo:RO_0002110)
ObjectPropertyDomain(obo:RO_0002102 obo:CL_0000540)

# Object Property: obo:RO_0002103 (synapsed by)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002103 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002103 "Relation between an anatomical structure (including cells) and a neuron that chemically synapses to it. "@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002103 "Chris Mungall"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002103 "David Osumi-Sutherland"@en)
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002103 "<http://purl.obolibrary.org/obo/BFO_0000051> some (<http://purl.obolibrary.org/obo/GO_0045211> that part_of some (<http://purl.obolibrary.org/obo/GO_0045202> that has_part some (<http://purl.obolibrary.org/obo/GO_0042734> that <http://purl.obolibrary.org/obo/BFO_0000050> some Y?)))")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002103 obo:RO_0001901)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002103 <http://www.ncbi.nlm.nih.gov/pubmed/22402613>)
AnnotationAssertion(rdfs:label obo:RO_0002103 "synapsed by"@en)
SubObjectPropertyOf(obo:RO_0002103 obo:RO_0000301)
InverseObjectProperties(obo:RO_0002103 obo:RO_0002120)
ObjectPropertyRange(obo:RO_0002103 ObjectUnionOf(obo:CL_0000540 ObjectSomeValuesFrom(obo:BFO_0000050 obo:CL_0000540)))

# Object Property: obo:RO_0002104 (has plasma membrane part)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002104 "Every B cell[CL_0000236] has plasma membrane part some immunoglobulin complex[GO_0019814]"@en)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002104 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002104 "Holds between a cell c and a protein complex or protein p if and only if that cell has as part a plasma_membrane[GO:0005886], and that plasma membrane has p as part.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002104 "Alexander Diehl")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002104 "Chris Mungall"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002104 "Lindsay Cowell")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002104 <http://www.ncbi.nlm.nih.gov/pubmed/19243617>)
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002104 "<http://purl.obolibrary.org/obo/BFO_0000051> some (<http://purl.obolibrary.org/obo/GO_0005886> and <http://purl.obolibrary.org/obo/BFO_0000051> some ?Y)")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002104 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002104 "has plasma membrane part"@en)
SubObjectPropertyOf(obo:RO_0002104 obo:BFO_0000051)

# Object Property: obo:RO_0002105 (synapsed_via_type_Ib_bouton_to)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002105 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002105 "A relation between a motor neuron and a muscle that it synapses to via a type Ib bouton.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002105 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002105 "Marta Costa")
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002105 "BFO_0000051 some (GO_0061176 that BFO_0000051 some (that BFO_0000051 some (GO_0045202 that BFO_0000051 some ( that BFO_0000050 some ?Y))))")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002105 obo:RO_0001901)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002105 <http://www.ncbi.nlm.nih.gov/pubmed/22402613>)
AnnotationAssertion(rdfs:comment obo:RO_0002105 "Expands to: has_part some ('type Ib terminal button' that has_part some ('pre-synaptic membrane' that part_of some ('synapse' that has_part some ('post-synaptic membrane' that part_of some ?Y))))")
AnnotationAssertion(rdfs:label obo:RO_0002105 "synapsed_via_type_Ib_bouton_to"@en)
SubObjectPropertyOf(obo:RO_0002105 obo:RO_0002120)
InverseObjectProperties(obo:RO_0002105 obo:RO_0002109)

# Object Property: obo:RO_0002106 (synapsed_via_type_Is_bouton_to)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002106 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002106 "A relation between a motor neuron and a muscle that it synapses to via a type Is bouton.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002106 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002106 "Marta Costa")
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002106 "BFO_0000051 some (GO_0061177 that BFO_0000051 some (that BFO_0000051 some (GO_0045202 that BFO_0000051 some ( that BFO_0000050 some ?Y))))")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002106 obo:RO_0001901)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002106 <http://www.ncbi.nlm.nih.gov/pubmed/22402613>)
AnnotationAssertion(rdfs:comment obo:RO_0002106 "Expands to: has_part some ('type Is terminal button' that has_part some ('pre-synaptic membrane' that part_of some ('synapse' that has_part some ('post-synaptic membrane' that part_of some ?Y))))")
AnnotationAssertion(rdfs:label obo:RO_0002106 "synapsed_via_type_Is_bouton_to"@en)
SubObjectPropertyOf(obo:RO_0002106 obo:RO_0002120)
InverseObjectProperties(obo:RO_0002106 obo:RO_0002112)

# Object Property: obo:RO_0002107 (synapsed_via_type_II_bouton_to)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002107 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002107 "A relation between a motor neuron and a muscle that it synapses to via a type II bouton.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002107 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002107 "Marta Costa")
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002107 "BFO_0000051 some (GO_0061175 that BFO_0000051 some (that BFO_0000051 some (GO_0045202 that BFO_0000051 some ( that BFO_0000050 some ?Y))))")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002107 obo:RO_0001901)
AnnotationAssertion(rdfs:comment obo:RO_0002107 "Expands to: has_part some ('type II terminal button' that has_part some ('pre-synaptic membrane' that part_of some ('synapse' that has_part some ('post-synaptic membrane' that part_of some ?Y))))")
AnnotationAssertion(rdfs:label obo:RO_0002107 "synapsed_via_type_II_bouton_to"@en)
SubObjectPropertyOf(obo:RO_0002107 obo:RO_0002120)
InverseObjectProperties(obo:RO_0002107 obo:RO_0002108)

# Object Property: obo:RO_0002108 (synapsed_by_via_type_II_bouton)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002108 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002108 "Relation between a muscle and a motor neuron that synapses to it via a type II bouton.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002108 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002108 "Marta Costa")
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002108 "BFO_0000051 some (GO_0042734 that BFO_0000050 some (GO_0045202 that BFO_0000051 some (GO_0061174 that BFO_0000051 some GO_0045211 that BFO_0000050 some ?Y)))
")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002108 obo:RO_0001901)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002108 <http://www.ncbi.nlm.nih.gov/pubmed/22402613>)
AnnotationAssertion(rdfs:comment obo:RO_0002108 "Expands to: has_part some ('presynaptic membrane' that part_of some ('synapse' that has_part some ('type II terminal button' that has_part some 'postsynaptic membrane' that part_of some ?Y)))))")
AnnotationAssertion(rdfs:label obo:RO_0002108 "synapsed_by_via_type_II_bouton"@en)
SubObjectPropertyOf(obo:RO_0002108 obo:RO_0002103)

# Object Property: obo:RO_0002109 (synapsed_by_via_type_Ib_bouton)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002109 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002109 "Relation between a muscle and a motor neuron that synapses to it via a type Ib bouton.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002109 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002109 "Marta Costa")
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002109 "BFO_0000051 some (GO_0042734 that BFO_0000050 some (GO_0045202 that BFO_0000051 some (GO_0061176 that BFO_0000051 some GO_0045211 that BFO_0000050 some ?Y)))")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002109 obo:RO_0001901)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002109 <http://www.ncbi.nlm.nih.gov/pubmed/22402613>)
AnnotationAssertion(rdfs:comment obo:RO_0002109 "Expands to: has_part some ('presynaptic membrane' that part_of some ('synapse' that has_part some ('type Ib terminal button' that has_part some 'postsynaptic membrane' that part_of some ?Y)))))")
AnnotationAssertion(rdfs:label obo:RO_0002109 "synapsed_by_via_type_Ib_bouton"@en)
SubObjectPropertyOf(obo:RO_0002109 obo:RO_0002103)

# Object Property: obo:RO_0002110 (has postsynaptic terminal in)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002110 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002110 "Relation between a neuron and some structure (e.g.- a brain region) in which it receives (chemical) synaptic input. "@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002110 "Chris Mungall"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002110 "David Osumi-Sutherland"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002110 "synapsed in"@en)
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002110 "http://purl.obolibrary.org/obo/BFO_0000051 some (
   http://purl.org/obo/owl/GO#GO_0045211 and http://purl.obolibrary.org/obo/BFO_0000050 some (
      http://purl.org/obo/owl/GO#GO_0045202 and http://purl.obolibrary.org/obo/BFO_0000050 some ?Y))")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002110 obo:RO_0001901)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002110 <http://www.ncbi.nlm.nih.gov/pubmed/22402613>)
AnnotationAssertion(rdfs:label obo:RO_0002110 "has postsynaptic terminal in"@en)
SubObjectPropertyOf(obo:RO_0002110 obo:RO_0002130)
ObjectPropertyDomain(obo:RO_0002110 ObjectUnionOf(obo:CL_0000540 ObjectSomeValuesFrom(obo:BFO_0000050 obo:CL_0000540)))

# Object Property: obo:RO_0002111 (releases neurotransmitter)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002111 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002111 "has neurotransmitter")
AnnotationAssertion(rdfs:label obo:RO_0002111 "releases neurotransmitter"@en)
SubObjectPropertyOf(obo:RO_0002111 owl:topObjectProperty)

# Object Property: obo:RO_0002112 (synapsed_by_via_type_Is_bouton)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002112 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002112 "Relation between a muscle and a motor neuron that synapses to it via a type Is bouton.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002112 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002112 "Marta Costa")
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002112 "BFO_0000051 some (GO_0042734 that BFO_0000050 some (GO_0045202 that BFO_0000051 some (GO_0061177 that BFO_0000051 some GO_0045211 that BFO_0000050 some ?Y)))")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002112 obo:RO_0001901)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002112 <http://www.ncbi.nlm.nih.gov/pubmed/22402613>)
AnnotationAssertion(rdfs:comment obo:RO_0002112 "Expands to: has_part some ('presynaptic membrane' that part_of some ('synapse' that has_part some ('type Is terminal button' that has_part some 'postsynaptic membrane' that part_of some ?Y)))))")
AnnotationAssertion(rdfs:label obo:RO_0002112 "synapsed_by_via_type_Is_bouton"@en)
SubObjectPropertyOf(obo:RO_0002112 obo:RO_0002103)

# Object Property: obo:RO_0002113 (has presynaptic terminal in)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002113 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002113 "Relation between a neuron and some structure (e.g.- a brain region) in which it receives (chemical) synaptic input."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002113 "synapses in"@en)
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002113 "<http://purl.obolibrary.org/obo/BFO_0000051> some (<http://purl.obolibrary.org/obo/GO_0042734> that <http://purl.obolibrary.org/obo/BFO_0000050> some (<http://purl.obolibrary.org/obo/GO_0045202> that <http://purl.obolibrary.org/obo/BFO_0000050> some Y?)"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002113 obo:RO_0001901)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002113 <http://www.ncbi.nlm.nih.gov/pubmed/22402613>)
AnnotationAssertion(rdfs:label obo:RO_0002113 "has presynaptic terminal in"@en)
SubObjectPropertyOf(obo:RO_0002113 obo:RO_0002130)
ObjectPropertyDomain(obo:RO_0002113 ObjectUnionOf(obo:CL_0000540 ObjectSomeValuesFrom(obo:BFO_0000050 obo:CL_0000540)))

# Object Property: obo:RO_0002114 (synapsed_via_type_III_bouton_to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002114 "A relation between a motor neuron and a muscle that it synapses to via a type III bouton.")
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002114 "BFO_0000051 some (GO_0061177 that BFO_0000051 some (that BFO_0000051 some (GO_0097467 that BFO_0000051 some ( that BFO_0000050 some ?Y))))")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002114 obo:RO_0001901)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002114 <http://www.ncbi.nlm.nih.gov/pubmed/22402613>)
AnnotationAssertion(rdfs:comment obo:RO_0002114 "Expands to: has_part some ('type III terminal button' that has_part some ('pre-synaptic membrane' that part_of some ('synapse' that has_part some ('post-synaptic membrane' that part_of some ?Y))))")
AnnotationAssertion(rdfs:label obo:RO_0002114 "synapsed_via_type_III_bouton_to"@en)
SubObjectPropertyOf(obo:RO_0002114 obo:RO_0002120)
InverseObjectProperties(obo:RO_0002114 obo:RO_0002115)

# Object Property: obo:RO_0002115 (synapsed_by_via_type_III_bouton)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002115 "Relation between a muscle and a motor neuron that synapses to it via a type III bouton.
")
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002115 "BFO_0000051 some (GO_0042734 that BFO_0000050 some (GO_0045202 that BFO_0000051 some (GO_0097467 that BFO_0000051 some GO_0045211 that BFO_0000050 some ?Y)))")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002115 obo:RO_0001901)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002115 <http://www.ncbi.nlm.nih.gov/pubmed/22402613>)
AnnotationAssertion(rdfs:comment obo:RO_0002115 "Expands to: has_part some ('presynaptic membrane' that part_of some ('synapse' that has_part some ('type III terminal button' that has_part some 'postsynaptic membrane' that part_of some ?Y)))))")
AnnotationAssertion(rdfs:label obo:RO_0002115 "synapsed_by_via_type_III_bouton"@en)
SubObjectPropertyOf(obo:RO_0002115 obo:RO_0002103)

# Object Property: obo:RO_0002120 (synapsed to)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002120 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002120 " Relation between a neuron and an anatomical structure (including cells) that it chemically synapses to.
        "@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002120 "Chris Mungall"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002120 "David Osumi-Sutherland"@en)
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002120 "<http://purl.obolibrary.org/obo/BFO_0000051> some (<http://purl.obolibrary.org/obo/GO_0042734> that part_of some (<http://purl.obolibrary.org/obo/GO_0045202> that <http://purl.obolibrary.org/obo/BFO_0000051> some (<http://purl.obolibrary.org/obo/GO_0045211> that <http://purl.obolibrary.org/obo/BFO_0000050> some Y?)))")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002120 obo:RO_0001901)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002120 <http://www.ncbi.nlm.nih.gov/pubmed/22402613>)
AnnotationAssertion(rdfs:comment obo:RO_0002120 "N1 synapsed_to some N2 
Expands to:
N1 SubclassOf ( 
   has_part some (
      ‘pre-synaptic membrane ; GO:0042734’ that part_of some ( 
	‘synapse ; GO:0045202’ that has_part some (
	   ‘post-synaptic membrane ; GO:0045211’ that part_of some N2))))")
AnnotationAssertion(rdfs:label obo:RO_0002120 "synapsed to"@en)
SubObjectPropertyOf(obo:RO_0002120 obo:RO_0000302)
ObjectPropertyDomain(obo:RO_0002120 ObjectUnionOf(obo:CL_0000540 ObjectSomeValuesFrom(obo:BFO_0000050 obo:CL_0000540)))

# Object Property: obo:RO_0002121 (dendrite synapsed in)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002121 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002121 "Relation between a neuron and some structure  (e.g.- a brain region) in which its dendrite receives synaptic input.

	"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002121 "Chris Mungall"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002121 "David Osumi-Sutherland"@en)
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002121 "<http://purl.obolibrary.org/obo/BFO_0000051> some (
	<http://purl.obolibrary.org/obo/GO_0030425> and <http://purl.obolibrary.org/obo/BFO_0000051> some (
	   http://purl.obolibrary.org/obo/GO_0042734 and <http://purl.obolibrary.org/obo/BFO_0000050> some (
	      <http://purl.obolibrary.org/obo/GO_0045202> and <http://purl.obolibrary.org/obo/BFO_0000050> some ?Y)))")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002121 obo:RO_0001901)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002121 <http://www.ncbi.nlm.nih.gov/pubmed/22402613>)
AnnotationAssertion(rdfs:label obo:RO_0002121 "dendrite synapsed in"@en)
SubObjectPropertyOf(obo:RO_0002121 obo:RO_0002110)
ObjectPropertyDomain(obo:RO_0002121 obo:CL_0000540)

# Object Property: obo:RO_0002130 (has synaptic terminal in)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002130 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002130 "A general relation between a neuron and some structure in which it either chemically synapses to some target or in which it receives (chemical) synaptic input.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002130 "David Osumi-Sutherland"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002130 "has synapse in")
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002130 "<http://purl.obolibrary.org/obo/RO_0002131> some (<http://purl.obolibrary.org/obo/GO_0045202> that <http://purl.obolibrary.org/obo/BFO_0000050> some Y?)")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002130 obo:RO_0001901)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002130 <http://www.ncbi.nlm.nih.gov/pubmed/22402613>)
AnnotationAssertion(rdfs:label obo:RO_0002130 "has synaptic terminal in"@en)
SubObjectPropertyOf(obo:RO_0002130 obo:RO_0002131)
ObjectPropertyDomain(obo:RO_0002130 ObjectUnionOf(obo:CL_0000540 ObjectSomeValuesFrom(obo:BFO_0000050 obo:CL_0000540)))

# Object Property: obo:RO_0002131 (overlaps)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002131 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002131 "x overlaps y if and only if there exists some z such that x has part z and z part of y")
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002131 "http://purl.obolibrary.org/obo/BFO_0000051 some (http://purl.obolibrary.org/obo/BFO_0000050 some ?Y)")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002131 obo:RO_0001901)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002131 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002131 "overlaps"@en)
SubObjectPropertyOf(obo:RO_0002131 obo:RO_0002323)

# Object Property: obo:RO_0002132 (has fasciculating neuron projection)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002132 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002132 "The relation between a neuron projection bundle and a neuron projection that is fasciculated with it."@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002132 "David Osumi-Sutherland"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002132 "has fasciculating component"@en)
AnnotationAssertion(obo:IAO_0000426 obo:RO_0002132 "(forall (?x ?y) 
	(iff 
		(has_fasciculating_neuron_projection ?x ?y)
		(exists (?nps ?npbs)		
			(and 
				(\"neuron projection bundle ; CARO_0001001\" ?x)
				(\"neuron projection ; GO0043005\" ?y)
				(\"neuron projection segment ; CARO_0001502\" ?nps)
				(\"neuron projection bundle segment ; CARO_0001500\" ?npbs)
				(part_of ?nps ?y)
				(part_of ?npbs ?x)
				(part_of ?nps ?npbs)
				(forall (?npbss)
					(if
						(and 
							(\"neuron projection bundle subsegment ; CARO_0001501\" ?npbss)
							(part_of ?npbss ?npbs) 
						)
						(overlaps ?nps ?npbss)
					))))))


"^^xsd:string)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002132 obo:RO_0001901)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002132 <http://www.ncbi.nlm.nih.gov/pubmed/22402613>)
AnnotationAssertion(rdfs:label obo:RO_0002132 "has fasciculating neuron projection"@en)
SubObjectPropertyOf(obo:RO_0002132 obo:RO_0002131)
ObjectPropertyDomain(obo:RO_0002132 obo:CARO_0001001)
ObjectPropertyRange(obo:RO_0002132 ObjectUnionOf(obo:CL_0000540 ObjectSomeValuesFrom(obo:BFO_0000050 obo:CL_0000540)))

# Object Property: obo:RO_0002134 (innervates)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002134 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002134 "Relation between a 'neuron projection bundle' and a region in which one or more of its component neuron projections either synapses to targets or receives synaptic input.
T innervates some R
Expands_to: T has_fasciculating_neuron_projection that synapse_in some R."@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002134 "David Osumi-Sutherland"@en)
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002134 "<http://purl.obolibrary.org/obo/RO_0002132> some (<http://purl.obolibrary.org/obo/GO_0043005> that (<http://purl.obolibrary.org/obo/RO_0002131> some (<http://purl.obolibrary.org/obo/GO_0045202> that <http://purl.obolibrary.org/obo/BFO_0000050> some Y?)))")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002134 obo:RO_0001901)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002134 <http://www.ncbi.nlm.nih.gov/pubmed/22402613>)
AnnotationAssertion(rdfs:label obo:RO_0002134 "innervates"@en)
SubObjectPropertyOf(obo:RO_0002134 owl:topObjectProperty)
ObjectPropertyDomain(obo:RO_0002134 obo:CARO_0001001)

# Object Property: obo:RO_0002150 (continuous with)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002150 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002150 "X continuous_with Y if and only if X and Y share a fiat boundary."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002150 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002150 "connected to")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002150 "The label for this relation was previously connected to. I relabeled this to \"continuous with\". The standard notion of connectedness does not imply shared boundaries - e.g. Glasgow connected_to Edinburgh via M8; my patella connected_to my femur (via patellar-femoral joint)")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002150 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002150 "continuous with"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002150 "FMA:85972")
SubObjectPropertyOf(obo:RO_0002150 obo:RO_0002323)
ObjectPropertyDomain(obo:RO_0002150 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0002150 obo:BFO_0000004)

# Object Property: obo:RO_0002151 (partially overlaps)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002151 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002151 "x partially overlaps y iff there exists some z such that z is part of x and z is part of y, and it is also the case that neither x is part of y or y is part of x")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002151 "We would like to include disjointness axioms with part_of and has_part, however this is not possible in OWL2 as these are non-simple properties and hence cannot appear in a disjointness axiom")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002151 "proper overlaps"^^xsd:string)
AnnotationAssertion(obo:IAO_0000426 obo:RO_0002151 "(forall (?x ?y) 
	(iff 
		(proper_overlaps ?x ?y)
		(and 
			(overlaps ?x ?y)
			(not (part_of ?x ?y)) 
			(not (part_of ?y ?x)))))"^^xsd:string)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002151 obo:RO_0001901)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002151 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002151 "partially overlaps"@en)
SubObjectPropertyOf(obo:RO_0002151 obo:RO_0002131)

# Object Property: obo:RO_0002156 (derived by descent from)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002156 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002156 "d derived_by_descent_from a if d is specified by some genetic program that is sequence-inherited-from a genetic program that specifies a."^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002156 "ancestral_stucture_of"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002156 "evolutionarily_descended_from"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_0002156 "derived by descent from"^^xsd:string)
SubObjectPropertyOf(obo:RO_0002156 obo:RO_0002320)
InverseObjectProperties(obo:RO_0002156 obo:RO_0002157)
TransitiveObjectProperty(obo:RO_0002156)

# Object Property: obo:RO_0002157 (has derived by descendant)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002157 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002157 "inverse of derived by descent from")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002157 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002157 "has derived by descendant"^^xsd:string)
SubObjectPropertyOf(obo:RO_0002157 obo:RO_0002320)
TransitiveObjectProperty(obo:RO_0002157)

# Object Property: obo:RO_0002158 (shares ancestor with)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002158 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002158 "two individual entities d1 and d2 stand in a shares_ancestor_with relation if and only if there exists some a such that d1 derived_by_descent_from a and d2 derived_by_descent_from a."^^xsd:string)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002158 "Consider obsoleting and merging with child relation, 'in homology relationship with'")
AnnotationAssertion(rdfs:comment obo:RO_0002158 "VBO calls this homologous_to"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_0002158 "shares ancestor with"^^xsd:string)
SubObjectPropertyOf(obo:RO_0002158 obo:RO_0002320)
SymmetricObjectProperty(obo:RO_0002158)
TransitiveObjectProperty(obo:RO_0002158)

# Object Property: obo:RO_0002159 (serially homologous to)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002159 obo:IAO_0000125)
AnnotationAssertion(rdfs:label obo:RO_0002159 "serially homologous to"^^xsd:string)
SubObjectPropertyOf(obo:RO_0002159 obo:RO_0002320)
SymmetricObjectProperty(obo:RO_0002159)
TransitiveObjectProperty(obo:RO_0002159)

# Object Property: obo:RO_0002160 (only in taxon)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002160 "lactation SubClassOf 'only in taxon' some 'Mammalia'")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002160 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002160 "x only in taxon y if and only if x is in taxon y, and there is no other organism z such that y!=z a and x is in taxon z.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002160 "The original intent was to treat this as a macro that expands to 'in taxon' only ?Y - however, this is not necessary if we instead have supplemental axioms that state that each pair of sibling tax have a disjointness axiom using the 'in taxon' property - e.g.

 'in taxon' some Eukaryota DisjointWith 'in taxon' some Eubacteria")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002160 "Chris Mungall"@en)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002160 <http://www.ncbi.nlm.nih.gov/pubmed/17921072>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002160 <http://www.ncbi.nlm.nih.gov/pubmed/20973947>)
AnnotationAssertion(rdfs:label obo:RO_0002160 "only in taxon"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002160 <https://github.com/obophenotype/uberon/wiki/Taxon-constraints>)
SubObjectPropertyOf(obo:RO_0002160 obo:RO_0002162)

# Object Property: obo:RO_0002162 (in taxon)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002162 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002162 "x is in taxon y if an only if y is an organism, and the relationship between x and y is one of: part of (reflexive), developmentally preceded by, derives from, secreted by, expressed.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002162 "Chris Mungall"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002162 "Jennifer Deegan")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002162 <http://www.ncbi.nlm.nih.gov/pubmed/17921072>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002162 <http://www.ncbi.nlm.nih.gov/pubmed/20973947>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002162 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002162 "Connects a biological entity to its taxon of origin."^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_0002162 "in taxon"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002162 <https://github.com/obophenotype/uberon/wiki/Taxon-constraints>)
SubObjectPropertyOf(obo:RO_0002162 obo:RO_0002320)
ObjectPropertyRange(obo:RO_0002162 obo:BFO_0000004)

# Object Property: obo:RO_0002163 (spatially disjoint from)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002163 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002163 "A is spatially_disjoint_from B if and only if they have no parts in common")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002163 "There are two ways to encode this as a shortcut relation. The other possibility to use an annotation assertion between two classes, and expand this to a disjointness axiom. "@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002163 "Chris Mungall"@en)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002163 <http://www.ncbi.nlm.nih.gov/pubmed/22293552>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002163 "Note that it would be possible to use the relation to label the relationship between a near infinite number of structures - between the rings of saturn and my left earlobe. The intent is that this is used for parsiomoniously for disambiguation purposes - for example, between siblings in a jointly exhaustive pairwise disjointness hierarchy")
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002163 "BFO_0000051 exactly 0 (BFO_0000050 some ?Y)")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002163 obo:RO_0001901)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002163 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002163 "spatially disjoint from"^^xsd:string)
AnnotationAssertion(foaf:page obo:RO_0002163 "https://github.com/obophenotype/uberon/wiki/Part-disjointness-Design-Pattern"^^xsd:anyURI)
SubObjectPropertyOf(obo:RO_0002163 obo:RO_0002323)

# Object Property: obo:RO_0002170 (connected to)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002170 "a 'toe distal phalanx bone' that is connected to a 'toe medial phalanx bone' (an interphalangeal joint *connects* these two bones).")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002170 "a is connected to b if and only if a and b are discrete structure, and there exists some connecting structure c, such that c connects a and b")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002170 <http://www.ncbi.nlm.nih.gov/pubmed/22293552>)
AnnotationAssertion(rdfs:label obo:RO_0002170 "connected to"@en)
AnnotationAssertion(foaf:page obo:RO_0002170 "https://github.com/obophenotype/uberon/wiki/Connectivity-Design-Pattern"^^xsd:anyURI)
AnnotationAssertion(foaf:page obo:RO_0002170 "https://github.com/obophenotype/uberon/wiki/Modeling-articulations-Design-Pattern"^^xsd:anyURI)
SubObjectPropertyOf(obo:RO_0002170 obo:RO_0002323)
ObjectPropertyDomain(obo:RO_0002170 ObjectSomeValuesFrom(obo:BFO_0000050 obo:RO_0002577))
ObjectPropertyRange(obo:RO_0002170 ObjectSomeValuesFrom(obo:BFO_0000050 obo:RO_0002577))

# Object Property: obo:RO_0002176 (connects)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002176 "The M8 connects Glasgow and Edinburgh")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002176 "a 'toe distal phalanx bone' that is connected to a 'toe medial phalanx bone' (an interphalangeal joint *connects* these two bones).")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002176 "c connects a if and only if there exist some b such that a and b are similar parts of the same system, and c connects b, specifically, c connects a with b. When one structure connects two others it unites some aspect of the function or role they play within the system.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002176 <http://www.ncbi.nlm.nih.gov/pubmed/22293552>)
AnnotationAssertion(rdfs:label obo:RO_0002176 "connects"@en)
AnnotationAssertion(foaf:page obo:RO_0002176 "https://github.com/obophenotype/uberon/wiki/Connectivity-Design-Pattern"^^xsd:anyURI)
AnnotationAssertion(foaf:page obo:RO_0002176 "https://github.com/obophenotype/uberon/wiki/Modeling-articulations-Design-Pattern"^^xsd:anyURI)
SubObjectPropertyOf(obo:RO_0002176 obo:RO_0002323)
ObjectPropertyDomain(obo:RO_0002176 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0002176 ObjectSomeValuesFrom(obo:BFO_0000050 obo:RO_0002577))

# Object Property: obo:RO_0002177 (attached to part of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002177 "a is attached to part of b if a is attached to b, or a is attached to some p, where p is part of b.")
AnnotationAssertion(rdfs:label obo:RO_0002177 "attached to part of"@en)
SubObjectPropertyOf(obo:RO_0002177 obo:RO_0002323)
SubObjectPropertyOf(obo:RO_0002177 obo:RO_0002567)
ObjectPropertyDomain(obo:RO_0002177 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002177 obo:BFO_0000040)

# Object Property: obo:RO_0002178 (supplies)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002178 "Relation between an arterial structure and another structure, where the arterial structure acts as a conduit channeling fluid, substance or energy.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002178 "Individual ontologies should provide their own constraints on this abstract relation. For example, in the realm of anatomy this should hold between an artery and an anatomical structure")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002178 <http://www.ncbi.nlm.nih.gov/pubmed/20064205>)
AnnotationAssertion(rdfs:label obo:RO_0002178 "supplies"@en)
SubObjectPropertyOf(obo:RO_0002178 obo:RO_0002170)

# Object Property: obo:RO_0002179 (drains)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002179 "Relation between an collecting structure and another structure, where the collecting structure acts as a conduit channeling fluid, substance or energy away from the other structure.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002179 "Individual ontologies should provide their own constraints on this abstract relation. For example, in the realm of anatomy this should hold between a vein and an anatomical structure")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002179 <http://www.ncbi.nlm.nih.gov/pubmed/20064205>)
AnnotationAssertion(rdfs:label obo:RO_0002179 "drains"@en)
SubObjectPropertyOf(obo:RO_0002179 obo:RO_0002170)

# Object Property: obo:RO_0002180 (has component)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002180 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002180 "w 'has component' p if w 'has part' p and w is such that it can be directly disassembled into into n parts p, p2, p3, ..., pn, where these parts are of similar type.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002180 "The definition of 'has component' is still under discussion. The challenge is in providing a definition that does not imply transitivity.")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002180 "For use in recording has_part with a cardinality constraint, because OWL does not permit cardinality constraints to be used in combination with transitive object properties. In situations where you would want to say something like 'has part exactly 5 digit, you would instead use has_component exactly 5 digit."@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002180 obo:RO_0001901)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002180 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002180 "has component"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002180 <http://ontologydesignpatterns.org/wiki/Submissions:Componency>)
SubObjectPropertyOf(obo:RO_0002180 obo:BFO_0000051)

# Object Property: obo:RO_0002200 (has phenotype)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002200 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002200 "A relationship that holds between a biological entity and a phenotype. Here a phenotype is construed broadly as any kind of quality of an organism part, a collection of these qualities, or a change in quality or qualities (e.g. abnormally increased temperature). The subject of this relationship can be an organism (where the organism has the phenotype, i.e. the qualities inhere in parts of this organism), a genomic entity such as a gene or genotype (if modifications of the gene or the genotype causes the phenotype), or a condition such as a disease (such that if the condition inheres in an organism, then the organism has the phenotype).")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002200 "Chris Mungall"@en)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002200 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002200 "has phenotype"@en)
SubObjectPropertyOf(obo:RO_0002200 owl:topObjectProperty)
InverseObjectProperties(obo:RO_0002200 obo:RO_0002201)
ObjectPropertyDomain(obo:RO_0002200 obo:BFO_0000002)

# Object Property: obo:RO_0002201 (phenotype of)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002201 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002201 "inverse of has phenotype")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002201 "Chris Mungall"@en)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002201 obo:RO_0002259)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002201 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002201 "phenotype of"@en)
SubObjectPropertyOf(obo:RO_0002201 owl:topObjectProperty)
FunctionalObjectProperty(obo:RO_0002201)

# Object Property: obo:RO_0002202 (develops from)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002202 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002202 "x develops from y if and only if either (a) x directly develops from y or (b) there exists some z such that x directly develops from z and z develops from y")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002202 "Chris Mungall"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002202 "David Osumi-Sutherland"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002202 "Melissa Haendel")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002202 "Terry Meehan"@en)
AnnotationAssertion(rdfs:comment obo:RO_0002202 "This is the transitive form of the develops from relation")
AnnotationAssertion(rdfs:label obo:RO_0002202 "develops from"@en)
SubObjectPropertyOf(obo:RO_0002202 obo:RO_0002258)
InverseObjectProperties(obo:RO_0002202 obo:RO_0002203)
TransitiveObjectProperty(obo:RO_0002202)
ObjectPropertyDomain(obo:RO_0002202 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0002202 obo:BFO_0000004)

# Object Property: obo:RO_0002203 (develops into)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002203 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002203 "inverse of develops from")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002203 "Chris Mungall"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002203 "David Osumi-Sutherland"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002203 "Terry Meehan"@en)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002203 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002203 "develops into"@en)
SubObjectPropertyOf(obo:RO_0002203 obo:RO_0002286)
SubObjectPropertyOf(obo:RO_0002203 obo:RO_0002387)
SubObjectPropertyOf(obo:RO_0002203 obo:RO_0002388)
TransitiveObjectProperty(obo:RO_0002203)

# Object Property: obo:RO_0002204 (gene product of)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002204 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002204 "definition \"x has gene product of y if and only if y is a gene (SO:0000704) that participates in some gene expression process (GO:0010467) where the output of that process is either y or something that is ribosomally translated from x\"")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002204 "We would like to be able to express the rule: if t transcribed from g, and t is a noncoding RNA and has an evolved function, then t has gene product g.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002204 "Chris Mungall"@en)
AnnotationAssertion(rdfs:label obo:RO_0002204 "gene product of"@en)
SubObjectPropertyOf(obo:RO_0002204 obo:RO_0002330)
InverseObjectProperties(obo:RO_0002204 obo:RO_0002205)
ObjectPropertyDomain(obo:RO_0002204 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0002204 obo:BFO_0000002)

# Object Property: obo:RO_0002205 (has gene product)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002205 "every HOTAIR lncRNA is the gene product of some HOXC gene")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002205 "every sonic hedgehog protein (PR:000014841) is the gene product of some sonic hedgehog gene")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002205 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002205 "x has gene product y if and only if x is a gene (SO:0000704) that participates in some gene expression process (GO:0010467) where the output of that process is either y or something that is ribosomally translated from y")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002205 "Chris Mungall"@en)
AnnotationAssertion(rdfs:label obo:RO_0002205 "has gene product"@en)
SubObjectPropertyOf(obo:RO_0002205 obo:RO_0002330)
ObjectPropertyDomain(obo:RO_0002205 obo:BFO_0000002)
ObjectPropertyRange(obo:RO_0002205 obo:BFO_0000004)

# Object Property: obo:RO_0002206 (expressed in)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002206 "'neural crest cell'  SubClassOf expresses some 'Wnt1 gene'")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002206 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002206 "x expressed in y if and only if there is a gene expression process (GO:0010467) that occurs in y, and one of the following holds: (i) x is a gene, and x is transcribed into a transcript as part of the gene expression process (ii) x is a transcript, and the transcription of x is part of the gene expression process (iii) x is a mature gene product such as a protein, and x was translated or otherwise processes from a transcript that was transcribed as part of this gene expression process")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002206 "Chris Mungall"@en)
AnnotationAssertion(rdfs:label obo:RO_0002206 "expressed in"@en)
SubObjectPropertyOf(obo:RO_0002206 obo:RO_0002330)
InverseObjectProperties(obo:RO_0002206 obo:RO_0002292)
ObjectPropertyDomain(obo:RO_0002206 obo:BFO_0000002)
ObjectPropertyRange(obo:RO_0002206 obo:BFO_0000004)

# Object Property: obo:RO_0002207 (directly develops from)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002207 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002207 "Candidate definition: x directly_develops from y if and only if there exists some developmental process (GO:0032502) p such that x and y both participates in p, and x is the output of p and y is the input of p, and a substantial portion of the matter of y comes from x, and the start of x is coincident with or after the end of y")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002207 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002207 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002207 "has developmental precursor")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002207 "FBbt")
AnnotationAssertion(obo:RO_0002575 obo:RO_0002207 obo:RO_0002202)
AnnotationAssertion(rdfs:comment obo:RO_0002207 "TODO - add child relations from DOS")
AnnotationAssertion(rdfs:label obo:RO_0002207 "directly develops from"@en)
SubObjectPropertyOf(obo:RO_0002207 obo:RO_0002202)
InverseObjectProperties(obo:RO_0002207 obo:RO_0002210)
ObjectPropertyDomain(obo:RO_0002207 ObjectUnionOf(obo:CARO_0010000 obo:CL_0000000))
ObjectPropertyRange(obo:RO_0002207 ObjectUnionOf(obo:CARO_0010000 obo:CL_0000000))

# Object Property: obo:RO_0002208 (parasitoid of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002208 "A parasite that kills or sterilizes its host")
AnnotationAssertion(rdfs:label obo:RO_0002208 "parasitoid of")
SubObjectPropertyOf(obo:RO_0002208 obo:RO_0002444)
InverseObjectProperties(obo:RO_0002208 obo:RO_0002209)

# Object Property: obo:RO_0002209 (has parasitoid)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002209 "inverse of parasitoid of")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002209 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002209 "has parasitoid")
SubObjectPropertyOf(obo:RO_0002209 obo:RO_0002445)

# Object Property: obo:RO_0002210 (directly develops into)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002210 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002210 "inverse of directly develops from")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002210 "developmental precursor of")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002210 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002210 "directly develops into"@en)
SubObjectPropertyOf(obo:RO_0002210 obo:RO_0002203)

# Object Property: obo:RO_0002211 (regulates)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002211 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002211 "process(P1) regulates process(P2) iff: P1 results in the initiation or termination of P2 OR affects the frequency of its initiation or termination OR affects the magnitude or rate of output of P2.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002211 "We use 'regulates' here to specifically imply control. However, many colloquial usages of the term correctly correspond to the weaker relation of 'causally upstream of or within' (aka influences). Consider relabeling to make things more explicit")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002211 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002211 "David Hill")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002211 "Tanya Berardini")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002211 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002211 "GO")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002211 "Regulation precludes parthood; the regulatory process may not be within the regulated process.")
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002211 "regulates (processual)")
AnnotationAssertion(obo:IAO_0000600 obo:RO_0002211 "false"^^xsd:boolean)
AnnotationAssertion(rdfs:label obo:RO_0002211 "regulates"@en)
SubObjectPropertyOf(obo:RO_0002211 obo:RO_0002411)
InverseObjectProperties(obo:RO_0002211 obo:RO_0002334)
TransitiveObjectProperty(obo:RO_0002211)
ObjectPropertyDomain(obo:RO_0002211 obo:BFO_0000015)
ObjectPropertyRange(obo:RO_0002211 obo:BFO_0000015)

# Object Property: obo:RO_0002212 (negatively regulates)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002212 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002212 "Process(P1) negatively regulates process(P2) iff: P1 terminates P2, or P1 descreases the the frequency of initiation of P2 or the magnitude or rate of output of P2.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002212 "Chris Mungall"@en)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002212 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002212 "negatively regulates (process to process)")
AnnotationAssertion(rdfs:label obo:RO_0002212 "negatively regulates"@en)
SubObjectPropertyOf(obo:RO_0002212 obo:RO_0002211)
SubObjectPropertyOf(obo:RO_0002212 obo:RO_0002305)
InverseObjectProperties(obo:RO_0002212 obo:RO_0002335)

# Object Property: obo:RO_0002213 (positively regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002213 "Process(P1) postively regulates process(P2) iff: P1 initiates P2, or P1 increases the the frequency of initiation of P2 or the magnitude or rate of output of P2.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002213 "Chris Mungall"@en)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002213 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002213 "positively regulates (process to process)")
AnnotationAssertion(rdfs:label obo:RO_0002213 "positively regulates"@en)
SubObjectPropertyOf(obo:RO_0002213 obo:RO_0002211)
SubObjectPropertyOf(obo:RO_0002213 obo:RO_0002304)
InverseObjectProperties(obo:RO_0002213 obo:RO_0002336)
TransitiveObjectProperty(obo:RO_0002213)

# Object Property: obo:RO_0002214 (has prototype)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002214 "'human p53 protein' SubClassOf some ('has prototype' some ('participates in' some 'DNA repair'))")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002214 "heart SubClassOf 'has prototype' some ('participates in' some 'blood circulation')")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002214 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002214 "x has prototype y if and only if x is an instance of C and y is a prototypical instance of C. For example, every instance of heart, both normal and abnormal is related by the has prototype relation to some instance of a \"canonical\" heart, which participates in blood circulation.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002214 "Experimental. In future there may be a formalization in which this relation is treated as a shortcut to some modal logic axiom. We may decide to obsolete this and adopt a more specific evolutionary relationship (e.g. evolved from)")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002214 "This property can be used to make weaker forms of certain relations by chaining an additional property. For example, we may say: retina SubClassOf has_prototype some 'detection of light'. i.e. every retina is related to a prototypical retina instance which is detecting some light. Note that this is very similar to 'capable of', but this relation affords a wider flexibility. E.g. we can make a relation between continuants.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002214 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002214 "has prototype"@en)

# Object Property: obo:RO_0002215 (capable of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002215 "mechanosensory neuron capable of detection of mechanical stimulus involved in sensory perception (GO:0050974)")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002215 "osteoclast SubClassOf 'capable of' some 'bone resorption'")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002215 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002215 "A relation between a material entity (such as a cell) and a process, in which the material entity has the ability to carry out the process. ")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002215 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002215 "has function realized in")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002215 <http://www.ncbi.nlm.nih.gov/pubmed/20123131>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002215 <http://www.ncbi.nlm.nih.gov/pubmed/21208450>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002215 "For compatibility with BFO, this relation has a shortcut definition in which the expression \"capable of some P\" expands to \"bearer_of (some realized_by only P)\".")
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002215 "RO_0000053 some (RO_0000054 only ?Y)")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002215 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002215 "capable of"@en)
SubObjectPropertyOf(obo:RO_0002215 obo:RO_0002216)
ObjectPropertyDomain(obo:RO_0002215 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0002215 obo:BFO_0000015)

# Object Property: obo:RO_0002216 (capable of part of)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002216 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002216 "c stands in this relationship to p if and only if there exists some p' such that c is capable_of p', and p' is part_of p.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002216 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002216 "has function in")
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002216 "RO_0000053 some (RO_0000054 only (BFO_0000050 some ?Y))")
AnnotationAssertion(rdfs:label obo:RO_0002216 "capable of part of"@en)
SubObjectPropertyOf(obo:RO_0002216 obo:RO_0002328)
SubObjectPropertyOf(obo:RO_0002216 obo:RO_0002500)

# Object Property: obo:RO_0002217 (actively participates in)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002217 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002217 "x actively participates in y if and only if x participates in y and x realizes some active role")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002217 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002217 "agent in")
AnnotationAssertion(rdfs:label obo:RO_0002217 "actively participates in"@en)
SubObjectPropertyOf(obo:RO_0002217 obo:RO_0000056)
InverseObjectProperties(obo:RO_0002217 obo:RO_0002218)

# Object Property: obo:RO_0002218 (has active participant)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002218 "'heart development' has active participant some Shh protein")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002218 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002218 "x has participant y if and only if x realizes some active role that inheres in y")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002218 "This may be obsoleted and replaced by the original 'has agent' relation")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002218 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002218 "has agent")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002218 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002218 "has active participant"@en)
SubObjectPropertyOf(obo:RO_0002218 obo:RO_0000057)

# Object Property: obo:RO_0002219 (surrounded by)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002219 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002219 "x surrounded_by y if and only if (1) x is adjacent to y and for every region r that is adjacent to x, r overlaps y (2) the shared boundary between x and y occupies the majority of the outermost boundary of x")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002219 "Chris Mungall")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002219 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002219 "surrounded by"@en)
SubObjectPropertyOf(obo:RO_0002219 obo:RO_0002220)
InverseObjectProperties(obo:RO_0002219 obo:RO_0002221)

# Object Property: obo:RO_0002220 (adjacent to)

AnnotationAssertion(Annotation(rdfs:seeAlso <https://github.com/jhpoelen/eol-globi-data/issues/225#issuecomment-218584934>) obo:IAO_0000112 obo:RO_0002220 "A caterpillar walking on the surface of a leaf is adjacent_to the leaf, if one of the caterpillar appendages is touching the leaf. In contrast, a butterfly flying close to a flower is not considered adjacent, unless there are any touching parts.")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002220 "The epidermis layer of a vertebrate is adjacent to the dermis.")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002220 "The plasma membrane of a cell is adjacent to the cytoplasm, and also to the cell lumen which the cytoplasm occupies.")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002220 "The skin of the forelimb is adjacent to the skin of the torso if these are considered anatomical subdivisions with a defined border. Otherwise a relation such as continuous_with would be used.")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002220 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002220 "x adjacent to y if and only if x and y share a boundary.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002220 "This relation acts as a join point with BSPO")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002220 "Chris Mungall")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002220 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002220 "adjacent to"@en)
SubObjectPropertyOf(obo:RO_0002220 obo:RO_0002163)
ObjectPropertyDomain(obo:RO_0002220 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0002220 obo:BFO_0000004)

# Object Property: obo:RO_0002221 (surrounds)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002221 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002221 "inverse of surrounded by")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002221 "Chris Mungall")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002221 obo:RO_0001901)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002221 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002221 "surrounds"@en)
SubObjectPropertyOf(obo:RO_0002221 obo:RO_0002220)

# Object Property: obo:RO_0002222 (temporally related to)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002222 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002222 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002222 <https://en.wikipedia.org/wiki/Allen%27s_interval_algebra>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002222 "Do not use this relation directly. It is ended as a grouping for relations between occurrents involving the relative timing of their starts and ends.")
AnnotationAssertion(dc:source obo:RO_0002222 "https://docs.google.com/document/d/1kBv1ep_9g3sTR-SD3jqzFqhuwo9TPNF-l-9fUDbO6rM/edit?pli=1"^^xsd:anyURI)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002222 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002222 "A relation that holds between two occurrents. This is a grouping relation that collects together all the Allen relations.")
AnnotationAssertion(rdfs:label obo:RO_0002222 "temporally related to"@en)
ObjectPropertyDomain(obo:RO_0002222 obo:BFO_0000003)
ObjectPropertyRange(obo:RO_0002222 obo:BFO_0000003)

# Object Property: obo:RO_0002223 (starts)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002223 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002223 "inverse of starts with")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002223 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002223 "Allen")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002223 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002223 "starts"@en)
SubObjectPropertyOf(obo:RO_0002223 obo:BFO_0000050)
SubObjectPropertyOf(obo:RO_0002223 obo:RO_0002222)
InverseObjectProperties(obo:RO_0002223 obo:RO_0002224)

# Object Property: obo:RO_0002224 (starts with)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002224 "Every insulin receptor signaling pathway starts with the binding of a ligand to the insulin receptor")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002224 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002224 "x starts with y if and only if x has part y and the time point at which x starts is equivalent to the time point at which y starts. Formally: α(y) = α(x) ∧ ω(y) < ω(x), where α is a function that maps a process to a start point, and ω is a function that maps a process to an end point.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002224 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002224 "started by")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002224 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002224 "starts with"@en)
SubObjectPropertyOf(obo:RO_0002224 obo:BFO_0000051)
SubObjectPropertyOf(obo:RO_0002224 obo:RO_0002222)
TransitiveObjectProperty(obo:RO_0002224)

# Object Property: obo:RO_0002225 (develops from part of)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002225 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002225 "x develops from part of y if and only if there exists some z such that x develops from z and z is part of y")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002225 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002225 "develops from part of"@en)
SubObjectPropertyOf(obo:RO_0002225 obo:RO_0002202)

# Object Property: obo:RO_0002226 (develops in)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002226 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002226 "x develops_in y if x is located in y whilst x is developing")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002226 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002226 "EHDAA2")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002226 "Jonathan Bard, EHDAA2")
AnnotationAssertion(rdfs:label obo:RO_0002226 "develops in"@en)
SubObjectPropertyOf(obo:RO_0002226 obo:RO_0002258)
ObjectPropertyDomain(obo:RO_0002226 obo:CARO_0000003)

# Object Property: obo:RO_0002227 (obligate parasite of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002227 "A sub-relation of parasite-of in which the parasite that cannot complete its life cycle without a host.")
AnnotationAssertion(rdfs:label obo:RO_0002227 "obligate parasite of")
SubObjectPropertyOf(obo:RO_0002227 obo:RO_0002444)

# Object Property: obo:RO_0002228 (facultative parasite of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002228 "A sub-relations of parasite-of in which the parasite that can complete its life cycle independent of a host.")
AnnotationAssertion(rdfs:label obo:RO_0002228 "facultative parasite of")
SubObjectPropertyOf(obo:RO_0002228 obo:RO_0002444)

# Object Property: obo:RO_0002229 (ends)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002229 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002229 "inverse of ends with")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002229 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002229 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002229 "ends"@en)
SubObjectPropertyOf(obo:RO_0002229 obo:BFO_0000050)
SubObjectPropertyOf(obo:RO_0002229 obo:RO_0002222)
InverseObjectProperties(obo:RO_0002229 obo:RO_0002230)

# Object Property: obo:RO_0002230 (ends with)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002230 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002230 "x ends with y if and only if x has part y and the time point at which x ends is equivalent to the time point at which y ends. Formally: α(y) > α(x) ∧ ω(y) = ω(x), where α is a function that maps a process to a start point, and ω is a function that maps a process to an end point.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002230 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002230 "finished by")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002230 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002230 "ends with"@en)
SubObjectPropertyOf(obo:RO_0002230 obo:BFO_0000051)
SubObjectPropertyOf(obo:RO_0002230 obo:RO_0002222)
TransitiveObjectProperty(obo:RO_0002230)

# Object Property: obo:RO_0002231 (has start location)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002231 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002231 "x 'has starts location' y if and only if there exists some process z such that x 'starts with' z and z 'occurs in' y")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002231 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002231 "starts with process that occurs in")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002231 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002231 "has start location"@en)
SubObjectPropertyOf(obo:RO_0002231 obo:RO_0002479)
ObjectPropertyDomain(obo:RO_0002231 obo:BFO_0000015)
ObjectPropertyRange(obo:RO_0002231 obo:BFO_0000004)

# Object Property: obo:RO_0002232 (has end location)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002232 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002232 "x 'has end location' y if and only if there exists some process z such that x 'ends with' z and z 'occurs in' y")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002232 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002232 "ends with process that occurs in")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002232 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002232 "has end location"@en)
SubObjectPropertyOf(obo:RO_0002232 obo:RO_0002479)
ObjectPropertyDomain(obo:RO_0002232 obo:BFO_0000015)
ObjectPropertyRange(obo:RO_0002232 obo:BFO_0000004)

# Object Property: obo:RO_0002233 (has input)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002233 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002233 "p has input c iff: p is a process, c is a material entity, c is a participant in p, c is present at the start of p, and the state of c is modified during p.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002233 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002233 "consumes")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002233 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002233 "has input"@en)
SubObjectPropertyOf(obo:RO_0002233 obo:RO_0000057)
InverseObjectProperties(obo:RO_0002233 obo:RO_0002352)
ObjectPropertyDomain(obo:RO_0002233 obo:BFO_0000015)
ObjectPropertyRange(obo:RO_0002233 obo:BFO_0000040)

# Object Property: obo:RO_0002234 (has output)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002234 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002234 "p has output c iff c is a participant in p, c is present at the end of p, and c is not present at the beginning of p.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002234 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002234 "produces")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002234 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002234 "has output"@en)
SubObjectPropertyOf(obo:RO_0002234 obo:RO_0000057)
InverseObjectProperties(obo:RO_0002234 obo:RO_0002353)

# Object Property: obo:RO_0002235 (stem parasite of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002235 "A parasite-of relationship in which the host is a plant and the parasite that attaches to the host stem (PO:0009047)")
AnnotationAssertion(rdfs:label obo:RO_0002235 "stem parasite of")
SubObjectPropertyOf(obo:RO_0002235 obo:RO_0002444)

# Object Property: obo:RO_0002236 (root parasite of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002236 "A parasite-of relationship in which the host is a plant and the parasite that attaches to the host root (PO:0009005)")
AnnotationAssertion(rdfs:label obo:RO_0002236 "root parasite of")
SubObjectPropertyOf(obo:RO_0002236 obo:RO_0002444)

# Object Property: obo:RO_0002237 (hemiparasite of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002237 "A sub-relation of parasite-of in which the parasite is a plant, and the parasite is parasitic under natural conditions and is also photosynthetic to some degree. Hemiparasites may just obtain water and mineral nutrients from the host plant. Many obtain at least part of their organic nutrients from the host as well.")
AnnotationAssertion(rdfs:label obo:RO_0002237 "hemiparasite of")
SubObjectPropertyOf(obo:RO_0002237 obo:RO_0002444)

# Object Property: obo:RO_0002240 (has exposure receptor)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002240 "A broad relationship between an exposure event or process and any entity (e.g., an organism, organism population, or an organism part) that interacts with an exposure stimulus during the exposure event.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002240 "ExO:0000001")
AnnotationAssertion(rdfs:label obo:RO_0002240 "has exposure receptor")
SubObjectPropertyOf(obo:RO_0002240 obo:RO_0002244)

# Object Property: obo:RO_0002241 (has exposure stressor)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002241 "A broad relationship between an exposure event or process and any agent, stimulus, activity, or event that causes stress or tension on an organism and interacts with an exposure receptor during an exposure event.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002241 "ExO:0000000")
AnnotationAssertion(rdfs:label obo:RO_0002241 "has exposure stressor")
SubObjectPropertyOf(obo:RO_0002241 obo:RO_0002309)

# Object Property: obo:RO_0002242 (has exposure route)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002242 "A broad relationship between an exposure event or process and a process by which the exposure stressor comes into contact with the exposure receptor")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002242 "ExO:0000055")
AnnotationAssertion(rdfs:label obo:RO_0002242 "has exposure route")
SubObjectPropertyOf(obo:RO_0002242 obo:RO_0002244)

# Object Property: obo:RO_0002243 (has exposure transport path)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002243 "A broad relationship between an exposure event or process and the course takes from the source to the target.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002243 "http://purl.obolibrary.org/obo/ExO_0000004"^^xsd:anyURI)
AnnotationAssertion(rdfs:label obo:RO_0002243 "has exposure transport path")
SubObjectPropertyOf(obo:RO_0002243 obo:RO_0002244)

# Object Property: obo:RO_0002244 (related via exposure to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002244 "Any relationship between an exposure event or process and any other entity.")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002244 "Do not use this relation directly. It is intended as a grouping for a diverse set of relations, all involving exposure events or processes.")
AnnotationAssertion(rdfs:label obo:RO_0002244 "related via exposure to")
SubObjectPropertyOf(obo:RO_0002244 obo:RO_0002410)
ObjectPropertyDomain(obo:RO_0002244 obo:RO_0002310)

# Object Property: obo:RO_0002245 (over-expressed in)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002245 "g is over-expressed in t iff g is expressed in t, and the expression level of g is increased relative to some background.")
AnnotationAssertion(rdfs:label obo:RO_0002245 "over-expressed in")
SubObjectPropertyOf(obo:RO_0002245 obo:RO_0002206)

# Object Property: obo:RO_0002246 (under-expressed in)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002246 "g is under-expressed in t iff g is expressed in t, and the expression level of g is decreased relative to some background.")
AnnotationAssertion(rdfs:label obo:RO_0002246 "under-expressed in")
SubObjectPropertyOf(obo:RO_0002246 obo:RO_0002206)

# Object Property: obo:RO_0002248 (has active ingredient)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002248 "Any portion of roundup 'has active ingredient' some glyphosate")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002248 "A relationship that holds between a substance and a chemical entity, if the chemical entity is part of the substance, and the chemical entity forms the biologically active component of the substance.")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_0002248 "has active substance")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_0002248 "has active pharmaceutical ingredient")
AnnotationAssertion(rdfs:label obo:RO_0002248 "has active ingredient")
SubObjectPropertyOf(obo:RO_0002248 obo:BFO_0000051)
InverseObjectProperties(obo:RO_0002248 obo:RO_0002249)

# Object Property: obo:RO_0002249 (active ingredient in')

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002249 "inverse of has active ingredient")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002249 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002249 "active ingredient in'")
SubObjectPropertyOf(obo:RO_0002249 obo:BFO_0000050)

# Object Property: obo:RO_0002252 (connecting branch of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002252 "b connecting-branch-of s iff b is connected to s, and there exists some tree-like structure t such that the mereological sum of b plus s is either the same as t or a branching-part-of t.")
AnnotationAssertion(rdfs:label obo:RO_0002252 "connecting branch of")
SubObjectPropertyOf(obo:RO_0002252 obo:RO_0002375)
InverseObjectProperties(obo:RO_0002252 obo:RO_0002253)

# Object Property: obo:RO_0002253 (has connecting branch)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002253 "inverse of connecting branch of")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002253 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002253 "has connecting branch")
SubObjectPropertyOf(obo:RO_0002253 obo:RO_0002375)

# Object Property: obo:RO_0002254 (has developmental contribution from)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002254 "Mammalian thymus has developmental contribution from some pharyngeal pouch 3; Mammalian thymus has developmental contribution from some pharyngeal pouch 4 [Kardong]")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002254 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002254 "x has developmental contribution from y iff x has some part z such that z develops from y"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002254 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002254 "has developmental contribution from"@en)
SubObjectPropertyOf(obo:RO_0002254 obo:RO_0002258)
InverseObjectProperties(obo:RO_0002254 obo:RO_0002255)
ObjectPropertyDomain(obo:RO_0002254 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0002254 obo:CARO_0000003)

# Object Property: obo:RO_0002255 (developmentally contributes to)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002255 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002255 "inverse of has developmental contribution from")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002255 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002255 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002255 "developmentally contributes to"@en)
SubObjectPropertyOf(obo:RO_0002255 obo:RO_0002286)
SubObjectPropertyOf(obo:RO_0002255 obo:RO_0002385)

# Object Property: obo:RO_0002256 (developmentally induced by)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002256 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002256 "t1 induced_by t2 if there is a process of developmental induction (GO:0031128) with t1 and t2 as interacting participants. t2 causes t1 to change its fate from a precursor anatomical structure type T to T', where T' develops_from T")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002256 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002256 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002256 "Melissa Haendel")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002256 "induced by")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002256 <http://www.ncbi.nlm.nih.gov/pubmed/20064205>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002256 " Developmental Biology, Gilbert, 8th edition, figure 6.5(F)")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002256 "GO:0001759")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002256 "We place this under 'developmentally preceded by'. This placement should be examined in the context of reciprocal inductions[cjm]")
AnnotationAssertion(rdfs:label obo:RO_0002256 "developmentally induced by"@en)
SubObjectPropertyOf(obo:RO_0002256 obo:RO_0002258)
InverseObjectProperties(obo:RO_0002256 obo:RO_0002257)
ObjectPropertyDomain(obo:RO_0002256 obo:CARO_0000003)
ObjectPropertyRange(obo:RO_0002256 obo:CARO_0000003)

# Object Property: obo:RO_0002257 (developmentally induces)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002257 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002257 "Inverse of developmentally induced by"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002257 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002257 "developmentally induces"@en)
SubObjectPropertyOf(obo:RO_0002257 obo:RO_0002286)
SubObjectPropertyOf(obo:RO_0002257 obo:RO_0002386)

# Object Property: obo:RO_0002258 (developmentally preceded by)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002258 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002258 "Candidate definition: x developmentally related to y if and only if there exists some developmental process (GO:0032502) p such that x and y both participates in p, and x is the output of p and y is the input of p")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002258 "false"^^xsd:boolean)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002258 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002258 "In general you should not use this relation to make assertions - use one of the more specific relations below this one")
AnnotationAssertion(rdfs:comment obo:RO_0002258 "This relation groups together various other developmental relations. It is fairly generic, encompassing induction, developmental contribution and direct and transitive develops from")
AnnotationAssertion(rdfs:label obo:RO_0002258 "developmentally preceded by"@en)
SubObjectPropertyOf(obo:RO_0002258 obo:RO_0002324)
InverseObjectProperties(obo:RO_0002258 obo:RO_0002286)
ObjectPropertyDomain(obo:RO_0002258 obo:BFO_0000002)
ObjectPropertyRange(obo:RO_0002258 obo:BFO_0000002)

# Object Property: obo:RO_0002260 (has biological role)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002260 "c has-biological-role r iff c has-role r and r is a biological role (CHEBI:24432)")
AnnotationAssertion(rdfs:label obo:RO_0002260 "has biological role")
SubObjectPropertyOf(obo:RO_0002260 obo:RO_0000087)

# Object Property: obo:RO_0002261 (has application role)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002261 "c has-application-role r iff c has-role r and r is an application role (CHEBI:33232)")
AnnotationAssertion(rdfs:label obo:RO_0002261 "has application role")
SubObjectPropertyOf(obo:RO_0002261 obo:RO_0000087)

# Object Property: obo:RO_0002262 (has chemical role)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002262 "c has-chemical-role r iff c has-role r and r is a chemical role (CHEBI:51086)")
AnnotationAssertion(rdfs:label obo:RO_0002262 "has chemical role")
SubObjectPropertyOf(obo:RO_0002262 obo:RO_0000087)

# Object Property: obo:RO_0002263 (acts upstream of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002263 "c involved in regulation of p if c enables  'p' and p' causally upstream of p")
AnnotationAssertion(rdfs:label obo:RO_0002263 "acts upstream of")
SubObjectPropertyOf(obo:RO_0002263 obo:RO_0002264)

# Object Property: obo:RO_0002264 (acts upstream of or within)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002264 "c acts upstream of or within p if c is enables 'p' and p' causally upstream of or within p")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_0002264 "affects")
AnnotationAssertion(rdfs:label obo:RO_0002264 "acts upstream of or within")
SubObjectPropertyOf(obo:RO_0002264 obo:RO_0002500)

# Object Property: obo:RO_0002285 (developmentally replaces)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002285 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002285 "x developmentally replaces y if and only if there is some developmental process that causes x to move or to cease to exist, and for the site that was occupied by x to become occupied by y, where y either comes into existence in this site or moves to this site from somewhere else")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002285 "This relation is intended for cases such as when we have a bone element replacing its cartilage element precursor. Currently most AOs represent this using 'develops from'. We need to decide whether 'develops from' will be generic and encompass replacement, or whether we need a new name for a generic relation that encompasses replacement and development-via-cell-lineage")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002285 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002285 "replaces")
AnnotationAssertion(rdfs:label obo:RO_0002285 "developmentally replaces"@en)
SubObjectPropertyOf(obo:RO_0002285 obo:RO_0002258)

# Object Property: obo:RO_0002286 (developmentally succeeded by)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002286 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002286 "Inverse of developmentally preceded by")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002286 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002286 "developmentally succeeded by"@en)
SubObjectPropertyOf(obo:RO_0002286 obo:RO_0002384)

# Object Property: obo:RO_0002287 (part of developmental precursor of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002287 "'hypopharyngeal eminence' SubClassOf 'part of precursor of' some tongue")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002287 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002287 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002287 "part of developmental precursor of"@en)
SubObjectPropertyOf(obo:RO_0002287 obo:RO_0002286)

# Object Property: obo:RO_0002291 (ubiquitously expressed in)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002291 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002291 "x is ubiquitously expressed in y if and only if x is expressed in y, and the majority of cells in y express x")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002291 "Revisit this term after coordinating with SO/SOM. The domain of this relation should be a sequence, as an instance of a DNA molecule is only expressed in the cell of which it is a part.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002291 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002291 "ubiquitously expressed in"@en)
SubObjectPropertyOf(obo:RO_0002291 obo:RO_0002206)
InverseObjectProperties(obo:RO_0002291 obo:RO_0002293)

# Object Property: obo:RO_0002292 (expresses)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002292 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002292 "Inverse of 'expressed in'")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002292 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002292 "expresses"@en)
SubObjectPropertyOf(obo:RO_0002292 obo:RO_0002330)

# Object Property: obo:RO_0002293 (ubiquitously expresses)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002293 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002293 "inverse of ubiquiotously expressed in")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002293 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002293 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002293 "ubiquitously expresses"@en)
SubObjectPropertyOf(obo:RO_0002293 obo:RO_0002292)

# Object Property: obo:RO_0002295 (results in developmental progression of)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002295 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002295 "p results in the developmental progression of s iff p is a developmental process and s is an anatomical structure and p causes s to undergo a change in state at some point along its natural developmental cycle (this cycle starts with its formation, through the mature structure, and ends with its loss).")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002295 "This property and its subproperties are being used primarily for the definition of GO developmental processes. The property hierarchy mirrors the core GO hierarchy. In future we may be able to make do with a more minimal set of properties, but due to the way GO is currently structured we require highly specific relations to avoid incorrect entailments. To avoid this, the corresponding genus terms in GO should be declared mutually disjoint.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002295 "Chris Mungall")
AnnotationAssertion(oboInOwl:shorthand obo:RO_0002295 "results_in_developmental_progression_of"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_0002295 "results in developmental progression of"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002295 <http://wiki.geneontology.org/index.php/Ontology_extensions>)
SubObjectPropertyOf(obo:RO_0002295 obo:RO_0002324)
ObjectPropertyDomain(obo:RO_0002295 obo:GO_0008150)
ObjectPropertyRange(obo:RO_0002295 obo:CARO_0000003)

# Object Property: obo:RO_0002296 (results in development of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002296 "every flower development (GO:0009908) results in development of some flower (PO:0009046)"@en)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002296 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002296 "p 'results in development of' c if and only if p is a developmental process and p results in the state of c changing from its initial state as a primordium or anlage through its mature state and to its final state.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002296 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002296 "http://www.geneontology.org/GO.doc.development.shtml"^^xsd:anyURI)
AnnotationAssertion(oboInOwl:shorthand obo:RO_0002296 "results_in_development_of"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_0002296 "results in development of"@en)
SubObjectPropertyOf(obo:RO_0002296 obo:RO_0000057)
SubObjectPropertyOf(obo:RO_0002296 obo:RO_0002295)

# Object Property: obo:RO_0002297 (results in formation of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002297 "an annotation of gene X to anatomical structure formation with results_in_formation_of UBERON:0000007 (pituitary gland) means that at the beginning of the process a pituitary gland does not exist and at the end of the process a pituitary gland exists.")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002297 "every \"endocardial cushion formation\" (GO:0003272) results_in_formation_of some \"endocardial cushion\" (UBERON:0002062)"@en)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002297 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002297 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002297 "GOC:mtg_berkeley_2013")
AnnotationAssertion(oboInOwl:shorthand obo:RO_0002297 "results_in_formation_of"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_0002297 "results in formation of"@en)
SubObjectPropertyOf(obo:RO_0002297 obo:RO_0002234)
SubObjectPropertyOf(obo:RO_0002297 obo:RO_0002295)
InverseObjectProperties(obo:RO_0002297 obo:RO_0002354)

# Object Property: obo:RO_0002298 (results in morphogenesis of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002298 "an annotation of gene X to cell morphogenesis with results_in_morphogenesis_of CL:0000540 (neuron) means that at the end of the process an input neuron has attained its shape.")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002298 "tongue morphogenesis (GO:0043587) results in morphogenesis of tongue (UBERON:0001723)"@en)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002298 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002298 "The relationship that links an entity with the process that results in the formation and shaping of that entity over time from an immature to a mature state.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002298 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002298 "GOC:mtg_berkeley_2013")
AnnotationAssertion(oboInOwl:shorthand obo:RO_0002298 "results_in_morphogenesis_of"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_0002298 "results in morphogenesis of"@en)
SubObjectPropertyOf(obo:RO_0002298 obo:RO_0000057)
SubObjectPropertyOf(obo:RO_0002298 obo:RO_0002295)

# Object Property: obo:RO_0002299 (results in maturation of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002299 " an annotation of gene X to cell maturation with results_in_maturation_of CL:0000057 (fibroblast) means that the fibroblast is mature at the end of the process")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002299 "bone maturation (GO:0070977) results_in_maturation_of bone (UBERON:0001474)"@en)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002299 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002299 "The relationship that links an entity with a process that results in the progression of the entity over time that is independent of changes in it's shape and results in an end point state of that entity.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002299 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002299 "GOC:mtg_berkeley_2013")
AnnotationAssertion(oboInOwl:shorthand obo:RO_0002299 "results_in_maturation_of"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_0002299 "results in maturation of"@en)
SubObjectPropertyOf(obo:RO_0002299 obo:RO_0000057)
SubObjectPropertyOf(obo:RO_0002299 obo:RO_0002295)

# Object Property: obo:RO_0002300 (results in disappearance of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002300 "foramen ovale closure SubClassOf results in disappearance of foramen ovale")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002300 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002300 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002300 "May be merged into parent relation")
AnnotationAssertion(oboInOwl:shorthand obo:RO_0002300 "results_in_disappearance_of"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_0002300 "results in disappearance of"@en)
SubObjectPropertyOf(obo:RO_0002300 obo:RO_0002552)

# Object Property: obo:RO_0002301 (results in developmental regression of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002301 "every mullerian duct regression (GO:0001880) results in regression of some mullerian duct (UBERON:0003890)")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002301 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002301 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002301 "May be merged into parent relation")
AnnotationAssertion(rdfs:label obo:RO_0002301 "results in developmental regression of"@en)
SubObjectPropertyOf(obo:RO_0002301 obo:RO_0002552)

# Object Property: obo:RO_0002302 (is treated by substance)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002302 "Inverse of 'is substance that treats'")
AnnotationAssertion(dc:creator obo:RO_0002302 "cjm"^^xsd:string)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002302 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002302 "is treated by substance")
SubObjectPropertyOf(obo:RO_0002302 obo:RO_0002410)
InverseObjectProperties(obo:RO_0002302 obo:RO_0002606)

# Object Property: obo:RO_0002303 (has habitat)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002303 "Hydrozoa (NCBITaxon_6074) SubClassOf 'has habitat' some 'Hydrozoa habitat'
where
'Hydrozoa habitat' SubClassOf overlaps some ('marine environment' (ENVO_00000569) and 'freshwater environment' (ENVO_01000306) and 'wetland' (ENVO_00000043)) and 'has part' some (freshwater (ENVO_00002011) or 'sea water' (ENVO_00002149)) -- http://eol.org/pages/1795/overview")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002303 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002303 "x 'has habitat' y if and only if: x is an organism, y is a habitat, and y can sustain and allow the growth of a population of xs.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002303 "Pier Buttigieg")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002303 "adapted for living in")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002303 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002303 "A population of xs will possess adaptations (either evolved naturally or via artifical selection) which permit it to exist and grow in y.")
AnnotationAssertion(rdfs:label obo:RO_0002303 "has habitat"@en)
SubObjectPropertyOf(obo:RO_0002303 obo:RO_0002321)
ObjectPropertyDomain(obo:RO_0002303 obo:CARO_0000006)
ObjectPropertyRange(obo:RO_0002303 obo:ENVO_01000254)

# Object Property: obo:RO_0002304 (causally upstream of, positive effect)

AnnotationAssertion(dc:creator obo:RO_0002304 "cjm"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:RO_0002304 "holds between x and y if and only if x is causally upstream of y and the progression of x increases the frequency, rate or extent of y")
AnnotationAssertion(rdfs:label obo:RO_0002304 "causally upstream of, positive effect")
SubObjectPropertyOf(obo:RO_0002304 obo:RO_0002411)

# Object Property: obo:RO_0002305 (causally upstream of, negative effect)

AnnotationAssertion(dc:creator obo:RO_0002305 "cjm"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:RO_0002305 "holds between x and y if and only if x is causally upstream of y and the progression of x decreases the frequency, rate or extent of y")
AnnotationAssertion(rdfs:label obo:RO_0002305 "causally upstream of, negative effect")
SubObjectPropertyOf(obo:RO_0002305 obo:RO_0002411)

# Object Property: obo:RO_0002309 (has exposure stimulus)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002309 "A relationship between an exposure event or process and any agent, stimulus, activity, or event that causally effects an organism and interacts with an exposure receptor during an exposure event.")
AnnotationAssertion(dc:contributor obo:RO_0002309 "Austin Meier")
AnnotationAssertion(dc:contributor obo:RO_0002309 "Chris Mungall")
AnnotationAssertion(dc:contributor obo:RO_0002309 "Marie Angelique Laporte")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002309 "cjm"^^xsd:string)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002309 "2017-06-05T17:35:04Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0002309 "has exposure stimulus")
SubObjectPropertyOf(obo:RO_0002309 obo:RO_0002244)

# Object Property: obo:RO_0002312 (evolutionary variant of)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002312 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002312 "evolutionary variant of"@en)
SubObjectPropertyOf(obo:RO_0002312 obo:RO_0002320)

# Object Property: obo:RO_0002313 (transports or maintains localization of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002313 "Holds between p and c when p is a localization process (localization covers maintenance of localization as well as its establishment)  and the outcome of this process is to regulate the localization of c.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002313 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002313 "regulates localization of")
AnnotationAssertion(rdfs:label obo:RO_0002313 "transports or maintains localization of"@en)
SubObjectPropertyOf(obo:RO_0002313 obo:RO_0000057)
SubObjectPropertyOf(obo:RO_0002313 obo:RO_0002337)

# Object Property: obo:RO_0002314 (inheres in part of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002314 "q inheres in part of w if and only if there exists some p such that q inheres in p and p part of w.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002314 "Because part_of is transitive, inheres in is a sub-relation of inheres in part of")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002314 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002314 <http://www.ncbi.nlm.nih.gov/pubmed/20064205>)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002314 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002314 "inheres in part of"@en)
SubObjectPropertyOf(obo:RO_0002314 obo:RO_0002502)

# Object Property: obo:RO_0002315 (results in acquisition of features of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002315 "an annotation of gene X to cell differentiation with results_in_maturation_of CL:0000057 (fibroblast) means that at the end of the process the input cell that did not have features of a fibroblast, now has the features of a fibroblast.")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002315 "The relationship that links a specified entity with the process that results in an unspecified entity acquiring the features and characteristics of the specified entity")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002315 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002315 "GOC:mtg_berkeley_2013")
AnnotationAssertion(oboInOwl:shorthand obo:RO_0002315 "results_in_acquisition_of_features_of"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_0002315 "results in acquisition of features of"@en)
SubObjectPropertyOf(obo:RO_0002315 obo:RO_0000057)
SubObjectPropertyOf(obo:RO_0002315 obo:RO_0002295)
ObjectPropertyRange(obo:RO_0002315 obo:CL_0000000)

# Object Property: obo:RO_0002320 (evolutionarily related to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002320 "A relationship that holds via some environmental process")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002320 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002320 "Do not use this relation directly. It is ended as a grouping for a diverse set of relations, all involving the process of evolution.")
AnnotationAssertion(rdfs:label obo:RO_0002320 "evolutionarily related to"@en)

# Object Property: obo:RO_0002321 (ecologically related to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002321 "A relationship that is mediated in some way by the environment or environmental feature (ENVO:00002297)")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002321 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002321 "Do not use this relation directly. It is intended as a grouping for a diverse set of relations, all involving ecological interactions")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002321 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002321 "ecologically related to"@en)

# Object Property: obo:RO_0002322 (confers advantage in)

AnnotationAssertion(obo:IAO_0000116 obo:RO_0002322 "An experimental relation currently used to connect a feature possessed by an organism (e.g. anatomical structure, biological process, phenotype or quality) to a habitat or environment in which that feature is well suited, adapted or provides a reproductive advantage for the organism. For example, fins to an aquatic environment. Usually this will mean that the structure is adapted for this environment, but we avoid saying this directly - primitive forms of the structure may not have evolved specifically for that environment (for example, early wings were not necessarily adapted for an aerial environment). Note also that this is a statement about the general class of structures - not every instance of a limb need confer an advantage for a terrestrial environment, e.g. if the limb is vestigial.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002322 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002322 "adapted for")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002322 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002322 "confers advantage in"@en)
SubObjectPropertyOf(obo:RO_0002322 obo:RO_0002321)

# Object Property: obo:RO_0002323 (mereotopologically related to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002323 "A mereological relationship or a topological relationship")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002323 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002323 "Do not use this relation directly. It is ended as a grouping for a diverse set of relations, all involving parthood or connectivity relationships")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002323 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002323 "mereotopologically related to"@en)

# Object Property: obo:RO_0002324 (developmentally related to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002324 "A relationship that holds between entities participating in some developmental process (GO:0032502)")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002324 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002324 "Do not use this relation directly. It is ended as a grouping for a diverse set of relations, all involving organismal development")
AnnotationAssertion(rdfs:label obo:RO_0002324 "developmentally related to"@en)

# Object Property: obo:RO_0002325 (colocalizes with)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002325 "Clp1p relocalizes from the nucleolus to the spindle and site of cell division; i.e. it is associated transiently with the spindle pole body and the contractile ring (evidence from GFP fusion). Clp1p colocalizes_with spindle pole body (GO:0005816) and contractile ring (GO:0005826)")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002325 "a colocalizes_with b if and only if  a is transiently or peripherally associated with b[GO].")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002325 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002325 "http://www.geneontology.org/GO.annotation.conventions.shtml#colocalizes_with")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002325 "In the context of the Gene Ontology, colocalizes_with may be used for annotating to cellular component terms[GO]")
AnnotationAssertion(dc:creator obo:RO_0002325 "Gene Ontology Consortium")
AnnotationAssertion(rdfs:label obo:RO_0002325 "colocalizes with"@en)
SubObjectPropertyOf(obo:RO_0002325 obo:RO_0002323)
ObjectPropertyDomain(obo:RO_0002325 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002325 obo:BFO_0000040)

# Object Property: obo:RO_0002326 (contributes to)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002326 "ATP citrate lyase (ACL) in Arabidopsis: it is a heterooctamer, composed of two types of subunits, ACLA and ACLB in a A(4)B(4) stoichiometry. Neither of the subunits expressed alone give ACL activity, but co-expression results in ACL activity. Both subunits contribute_to the ATP citrate lyase activity.")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002326 "Subunits of nuclear RNA polymerases: none of the individual subunits have RNA polymerase activity, yet all of these subunits contribute_to DNA-dependent RNA polymerase activity.")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002326 "eIF2: has three subunits (alpha, beta, gamma); one binds GTP; one binds RNA; the whole complex binds the ribosome (all three subunits are required for ribosome binding). So one subunit is annotated to GTP binding and one to RNA binding without qualifiers, and all three stand in the contributes_to relationship to \"ribosome binding\". And all three are part_of an eIF2 complex")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002326 "We would like to say

if and only if
 exists c', p'
  c part_of c' and c' capable_of p
   and
  c capable_of p' and p' part_of p
then
 c contributes_to p

However, this is not possible in OWL. We instead make this relation a sub-relation of the two chains, which gives us the inference in the one direction.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002326 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002326 "http://www.geneontology.org/GO.annotation.conventions.shtml#contributes_to")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002326 "In the context of the Gene Ontology, contributes_to may be used only with classes from the molecular function ontology. ")
AnnotationAssertion(rdfs:label obo:RO_0002326 "contributes to"@en)
SubObjectPropertyOf(obo:RO_0002326 obo:RO_0002216)
SubObjectPropertyOf(obo:RO_0002326 obo:RO_0002329)

# Object Property: obo:RO_0002327 (enables)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002327 "a particular instances of akt-2 enables some instance of protein kinase activity")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002327 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002327 "catalyzes")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002327 "executes")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002327 "has")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002327 "is catalyzing")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002327 "is executing")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002327 "This relation differs from the parent relation 'capable of' in that the parent is weaker and only expresses a capability that may not be actually realized, whereas this relation is always realized.")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002327 "This relation is currently used experimentally by the Gene Ontology Consortium. It may not be stable and may be obsoleted at some future time.")
AnnotationAssertion(rdfs:label obo:RO_0002327 "enables"@en)
SubObjectPropertyOf(obo:RO_0002327 obo:RO_0002215)
InverseObjectProperties(obo:RO_0002327 obo:RO_0002333)

# Object Property: obo:RO_0002328 (functionally related to)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002328 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002328 "This is a grouping relation that collects relations used for the purpose of connecting structure and function")
AnnotationAssertion(rdfs:label obo:RO_0002328 "functionally related to"@en)

# Object Property: obo:RO_0002329 (part of structure that is capable of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002329 "this relation holds between c and p when c is part of some c', and c' is capable of p.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002329 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002329 "false"^^xsd:boolean)
AnnotationAssertion(rdfs:label obo:RO_0002329 "part of structure that is capable of"@en)
SubObjectPropertyOf(obo:RO_0002329 obo:RO_0002328)

# Object Property: obo:RO_0002330 (genomically related to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002330 "holds between two entities when some genome-level process such as gene expression is involved. This includes transcriptional, spliceosomal events. These relations can be used between either macromolecule entities (such as regions of nucleic acid) or between their abstract informational counterparts.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002330 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002330 "Do not use this relation directly. It is intended as a grouping for a diverse set of relations, all involving the genome of an organism")
AnnotationAssertion(rdfs:label obo:RO_0002330 "genomically related to"@en)
ObjectPropertyDomain(obo:RO_0002330 obo:BFO_0000002)
ObjectPropertyRange(obo:RO_0002330 obo:BFO_0000002)

# Object Property: obo:RO_0002331 (involved in)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002331 "c involved_in p if and only if c enables some process p', and p' is part of p")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002331 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002331 "actively involved in")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002331 "enables part of")
AnnotationAssertion(rdfs:label obo:RO_0002331 "involved in"@en)
SubObjectPropertyOf(obo:RO_0002331 obo:RO_0002431)

# Object Property: obo:RO_0002332 (regulates levels of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002332 "every cellular sphingolipid homeostasis process regulates_level_of some sphingolipid")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002332 "p regulates levels of c if p regulates some amount (PATO:0000070) of c")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002332 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002332 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002332 "regulates levels of (process to entity)")
AnnotationAssertion(rdfs:label obo:RO_0002332 "regulates levels of"@en)
SubObjectPropertyOf(obo:RO_0002332 obo:RO_0002328)

# Object Property: obo:RO_0002333 (enabled by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002333 "inverse of enables")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002333 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002333 "enabled by"@en)
SubObjectPropertyOf(obo:RO_0002333 obo:RO_0002328)
SubObjectPropertyOf(obo:RO_0002333 ObjectInverseOf(obo:RO_0002215))

# Object Property: obo:RO_0002334 (regulated by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002334 "inverse of regulates")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002334 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002334 "regulated by (processual)")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002334 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002334 "regulated by"@en)
SubObjectPropertyOf(obo:RO_0002334 obo:RO_0002427)
TransitiveObjectProperty(obo:RO_0002334)
ObjectPropertyDomain(obo:RO_0002334 obo:BFO_0000015)
ObjectPropertyRange(obo:RO_0002334 obo:BFO_0000015)

# Object Property: obo:RO_0002335 (negatively regulated by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002335 "inverse of negatively regulates")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002335 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002335 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002335 "negatively regulated by"@en)
SubObjectPropertyOf(obo:RO_0002335 obo:RO_0002334)

# Object Property: obo:RO_0002336 (positively regulated by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002336 "inverse of positively regulates")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002336 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002336 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002336 "positively regulated by"@en)
SubObjectPropertyOf(obo:RO_0002336 obo:RO_0002334)

# Object Property: obo:RO_0002337 (related via localization to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002337 "A relationship that holds via some process of localization")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002337 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002337 "related via localization to"@en)
ObjectPropertyDomain(obo:RO_0002337 obo:BFO_0000015)
ObjectPropertyRange(obo:RO_0002337 obo:BFO_0000002)

# Object Property: obo:RO_0002338 (has target start location)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002338 "This relationship holds between p and l when p is a transport or localization process in which the outcome is to move some cargo c from some initial location l to some destination.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002338 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002338 "has target start location"@en)
SubObjectPropertyOf(obo:RO_0002338 obo:RO_0002344)

# Object Property: obo:RO_0002339 (has target end location)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002339 "This relationship holds between p and l when p is a transport or localization process in which the outcome is to move some cargo c from a an initial location to some destination l.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002339 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002339 "has target end location"@en)
SubObjectPropertyOf(obo:RO_0002339 obo:RO_0002344)

# Object Property: obo:RO_0002340 (imports)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002340 "Holds between p and c when p is a transportation or localization process and the outcome of this process is to move c to a destination that is part of some s, where the start location of c is part of the region that surrounds s.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002340 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002340 "imports"@en)
SubObjectPropertyOf(obo:RO_0002340 obo:RO_0002020)

# Object Property: obo:RO_0002341 (results in transport along)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002341 "Holds between p and l when p is a transportation or localization process and the outcome of this process is to move c from one location to another, and the route taken by c follows a path that is aligned_with l ")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002341 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002341 "results in transport along"@en)
SubObjectPropertyOf(obo:RO_0002341 obo:RO_0002337)

# Object Property: obo:RO_0002342 (results in transport across)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002342 "Holds between p and m when p is a transportation or localization process and the outcome of this process is to move c from one location to another, and the route taken by c follows a path that crosses m.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002342 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002342 "results in transport across"@en)
SubObjectPropertyOf(obo:RO_0002342 obo:RO_0002021)
SubObjectPropertyOf(obo:RO_0002342 obo:RO_0002344)

# Object Property: obo:RO_0002343 (results in growth of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002343 "'pollen tube growth' results_in growth_of some 'pollen tube'")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002343 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002343 "results in growth of"@en)
SubObjectPropertyOf(obo:RO_0002343 obo:RO_0000057)
SubObjectPropertyOf(obo:RO_0002343 obo:RO_0002295)

# Object Property: obo:RO_0002344 (results in transport to from or in)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002344 "'mitochondrial transport' results_in_transport_to_from_or_in some  mitochondrion (GO:0005739)")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002344 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002344 "results in transport to from or in"@en)
SubObjectPropertyOf(obo:RO_0002344 obo:RO_0002337)

# Object Property: obo:RO_0002345 (exports)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002345 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002345 "exports"@en)
SubObjectPropertyOf(obo:RO_0002345 obo:RO_0002020)

# Object Property: obo:RO_0002348 (results in commitment to)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002348 "an annotation of gene X to cell commitment with results_in_commitment_to CL:0000540 (neuron) means that at the end of the process an unspecified cell has been specified and determined to develop into a neuron.")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002348 "p 'results in commitment to' c if and only if p is a developmental process and c is a cell and p results in the state of c changing such that is can only develop into a single cell type.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002348 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002348 "http://www.geneontology.org/GO.doc.development.shtml#fate"^^xsd:anyURI)
AnnotationAssertion(rdfs:label obo:RO_0002348 "results in commitment to"@en)
SubObjectPropertyOf(obo:RO_0002348 obo:RO_0002295)
ObjectPropertyRange(obo:RO_0002348 obo:CL_0000000)

# Object Property: obo:RO_0002349 (results in determination of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002349 "p 'results in determination of' c if and only if p is a developmental process and c is a cell and p results in the state of c changing to be determined. Once a cell becomes determined, it becomes committed to differentiate down a particular pathway regardless of its environment.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002349 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002349 "http://www.geneontology.org/GO.doc.development.shtml#fate"^^xsd:anyURI)
AnnotationAssertion(rdfs:label obo:RO_0002349 "results in determination of"@en)
SubObjectPropertyOf(obo:RO_0002349 obo:RO_0002295)
ObjectPropertyRange(obo:RO_0002349 obo:CL_0000000)

# Object Property: obo:RO_0002350 (member of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002350 "An organism that is a member of a population of organisms")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002350 "is member of is a mereological relation between a item and a collection.")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002350 "is member of")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002350 "member part of")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002350 "SIO")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002350 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002350 "member of"@en)
SubObjectPropertyOf(obo:RO_0002350 obo:BFO_0000050)
InverseObjectProperties(obo:RO_0002350 obo:RO_0002351)

# Object Property: obo:RO_0002351 (has member)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002351 "has member is a mereological relation between a collection and an item.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002351 "SIO")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002351 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002351 "has member"@en)
SubObjectPropertyOf(obo:RO_0002351 obo:BFO_0000051)
IrreflexiveObjectProperty(obo:RO_0002351)

# Object Property: obo:RO_0002352 (input of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002352 "inverse of has input")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002352 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002352 obo:RO_0002259)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002352 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002352 "input of"@en)
SubObjectPropertyOf(obo:RO_0002352 obo:RO_0000056)
SubObjectPropertyOf(obo:RO_0002352 obo:RO_0002328)

# Object Property: obo:RO_0002353 (output of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002353 "inverse of has output")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002353 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002353 obo:RO_0002259)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002353 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002353 "output of"@en)
SubObjectPropertyOf(obo:RO_0002353 obo:RO_0000056)
SubObjectPropertyOf(obo:RO_0002353 obo:RO_0002328)

# Object Property: obo:RO_0002354 (formed as result of)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002354 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002354 "formed as result of"@en)
SubObjectPropertyOf(obo:RO_0002354 obo:RO_0002353)

# Object Property: obo:RO_0002355 (results in structural organization of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002355 "A relationship between a process and an anatomical entity such that the process contributes to the act of creating the structural organization of the anatomical entity.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002355 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002355 "results in structural organization of"@en)
SubObjectPropertyOf(obo:RO_0002355 obo:RO_0000057)
SubObjectPropertyOf(obo:RO_0002355 obo:RO_0002295)

# Object Property: obo:RO_0002356 (results in specification of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002356 "The relationship linking a cell and its participation in a process that results in the fate of the cell being specified. Once specification has taken place, a cell will be committed to differentiate down a specific pathway if left in its normal environment. ")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002356 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002356 "http://www.geneontology.org/GO.doc.development.shtml#fate"^^xsd:anyURI)
AnnotationAssertion(rdfs:label obo:RO_0002356 "results in specification of"@en)
SubObjectPropertyOf(obo:RO_0002356 obo:RO_0002295)
ObjectPropertyRange(obo:RO_0002356 obo:CL_0000000)

# Object Property: obo:RO_0002357 (results in developmental induction of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002357 "p results in developmental induction of c if and only if p is a collection of cell-cell signaling processes that signal to a neighbouring tissue that is the precursor of the mature c, where the signaling results in the commitment to cell types necessary for the formation of c.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002357 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002357 "results in developmental induction of"@en)
SubObjectPropertyOf(obo:RO_0002357 obo:RO_0002295)

# Object Property: obo:RO_0002360 (has dendrite location)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002360 "Chris Mungall")
AnnotationAssertion(dc:source obo:RO_0002360 "http://neurolex.org/wiki/Property:DendriteLocation"^^xsd:anyURI)
AnnotationAssertion(rdfs:label obo:RO_0002360 "has dendrite location"@en)
SubObjectPropertyOf(obo:RO_0002360 obo:RO_0002131)

# Object Property: obo:RO_0002371 (attached to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002371 "a is attached to b if and only if a and b are discrete objects or object parts, and there are physical connections between a and b such that a force pulling a will move b, or a force pulling b will move a")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002371 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002371 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002371 "attached to"@en)
SubObjectPropertyOf(obo:RO_0002371 obo:RO_0002170)
SubObjectPropertyOf(obo:RO_0002371 obo:RO_0002177)
SymmetricObjectProperty(obo:RO_0002371)

# Object Property: obo:RO_0002372 (has muscle origin)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002372 "m has_muscle_origin s iff m is attached_to s, and it is the case that when m contracts, s does not move. The site of the origin tends to be more proximal and have greater mass than what the other end attaches to."@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002372 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002372 "Wikipedia:Insertion_(anatomy)"@en)
AnnotationAssertion(rdfs:label obo:RO_0002372 "has muscle origin"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002372 <http://dbpedia.org/property/origin>)
SubObjectPropertyOf(obo:RO_0002372 obo:RO_0002371)
SubObjectPropertyOf(obo:RO_0002372 obo:RO_0002567)

# Object Property: obo:RO_0002373 (has muscle insertion)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002373 "m has_muscle_insertion s iff m is attaches_to s, and it is the case that when m contracts, s moves. Insertions are usually connections of muscle via tendon to bone."@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002373 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002373 "Wikipedia:Insertion_(anatomy)"@en)
AnnotationAssertion(rdfs:label obo:RO_0002373 "has muscle insertion"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002373 <http://dbpedia.org/property/insertion>)
SubObjectPropertyOf(obo:RO_0002373 obo:RO_0002371)
SubObjectPropertyOf(obo:RO_0002373 obo:RO_0002567)

# Object Property: obo:RO_0002374 (has fused element)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002374 "false"^^xsd:boolean)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002374 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002374 "x has_fused_element y iff: there exists some z : x has_part z, z homologous_to y, and y is a distinct element, the boundary between x and z is largely fiat"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002374 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002374 "Chris Mungall"@en)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002374 <http://www.ncbi.nlm.nih.gov/pubmed/22293552>)
AnnotationAssertion(rdfs:comment obo:RO_0002374 "A has_fused_element B does not imply that A has_part some B: rather than A has_part some B', where B' that has some evolutionary relationship to B."@en)
AnnotationAssertion(rdfs:label obo:RO_0002374 "has fused element"@en)
SubObjectPropertyOf(obo:RO_0002374 obo:RO_0002320)

# Object Property: obo:RO_0002375 (in branching relationship with)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002375 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002375 "A relationship that holds between two material entities in a system of connected structures, where the branching relationship holds based on properties of the connecting network.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002375 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002375 "Do not use this relation directly. It is ended as a grouping for a diverse set of relations, all involving branching relationships")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002375 "This relation can be used for geographic features (e.g. rivers) as well as anatomical structures (plant branches and roots, leaf veins, animal veins, arteries, nerves)")
AnnotationAssertion(rdfs:label obo:RO_0002375 "in branching relationship with"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002375 <http://purl.obolibrary.org/obo/ro/docs/branching_part_of.png>)
AnnotationAssertion(foaf:page obo:RO_0002375 "https://github.com/obophenotype/uberon/issues/170"^^xsd:anyURI)
SubObjectPropertyOf(obo:RO_0002375 obo:BFO_0000050)
SubObjectPropertyOf(obo:RO_0002375 obo:RO_0002323)
ObjectPropertyDomain(obo:RO_0002375 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002375 obo:BFO_0000040)

# Object Property: obo:RO_0002376 (tributary of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002376 "Deschutes River tributary_of Columbia River")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002376 "inferior epigastric vein tributary_of external iliac vein")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002376 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002376 "x tributary_of y if and only if x a channel for the flow of a substance into y, where y is larger than x. If x and y are hydrographic features, then y is the main stem of a river, or a lake or bay, but not the sea or ocean. If x and y are anatomical, then y is a vein.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002376 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002376 "drains into")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002376 "drains to")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002376 "tributary channel of")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002376 "http://en.wikipedia.org/wiki/Tributary")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002376 "http://www.medindia.net/glossary/venous_tributary.htm")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002376 "This relation can be used for geographic features (e.g. rivers) as well as anatomical structures (veins, arteries)"^^xsd:anyURI)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002376 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002376 "tributary of"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002376 <http://dbpedia.org/ontology/drainsTo>)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002376 "http://en.wikipedia.org/wiki/Tributary"^^xsd:anyURI)
SubObjectPropertyOf(obo:RO_0002376 obo:RO_0002375)

# Object Property: obo:RO_0002377 (distributary of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002377 "Deschutes River distributary_of Little Lava Lake")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002377 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002377 "x distributary_of y if and only if x is capable of channeling the flow of a substance to y, where y channels less of the substance than x")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002377 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002377 "branch of")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002377 "distributary channel of")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002377 "http://en.wikipedia.org/wiki/Distributary")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002377 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002377 "This is both a mereotopological relationship and a relationship defined in connection to processes. It concerns both the connecting structure, and how this structure is disposed to causally affect flow processes")
AnnotationAssertion(rdfs:label obo:RO_0002377 "distributary of"@en)
SubObjectPropertyOf(obo:RO_0002377 obo:RO_0002375)

# Object Property: obo:RO_0002378 (anabranch of)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002378 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002378 "x anabranch_of y if x is a distributary of y (i.e. it channels a from a larger flow from y) and x ultimately channels the flow back into y.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002378 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002378 "anastomoses with")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002378 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002378 "anabranch of"@en)
SubObjectPropertyOf(obo:RO_0002378 obo:RO_0002377)
SubObjectPropertyOf(obo:RO_0002378 ObjectInverseOf(obo:RO_0002376))
DisjointObjectProperties(obo:RO_0002378 obo:RO_0002382)
DisjointObjectProperties(obo:RO_0002378 obo:RO_0002383)

# Object Property: obo:RO_0002379 (spatially coextensive with)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002379 "A lump of clay and a statue")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002379 "x spatially_coextensive_with y if and inly if x and y have the same location")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002379 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002379 "This relation is added for formal completeness. It is unlikely to be used in many practical scenarios")
AnnotationAssertion(rdfs:label obo:RO_0002379 "spatially coextensive with"@en)
SubObjectPropertyOf(obo:RO_0002379 obo:RO_0002131)

# Object Property: obo:RO_0002380 (branching part of)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002380 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002380 "x is a branching part of y if and only if x is part of y and x is connected directly or indirectly to the main stem of y")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002380 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002380 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002380 "branching part of"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002380 "FMA:85994")
SubObjectPropertyOf(obo:RO_0002380 obo:BFO_0000050)
SubObjectPropertyOf(obo:RO_0002380 obo:RO_0002375)
InverseObjectProperties(obo:RO_0002380 obo:RO_0002569)
ObjectPropertyRange(obo:RO_0002380 ObjectSomeValuesFrom(obo:RO_0000053 obo:PATO_0000402))

# Object Property: obo:RO_0002381 (main stem of)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002381 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002381 "x main_stem_of y if y is a branching structure and x is a channel that traces a linear path through y, such that x has higher capacity than any other such path.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002381 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002381 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002381 "main stem of"@en)
SubObjectPropertyOf(obo:RO_0002381 obo:RO_0002375)

# Object Property: obo:RO_0002382 (proper distributary of)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002382 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002382 "x proper_distributary_of y iff x distributary_of y and x does not flow back into y")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002382 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002382 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002382 "proper distributary of"@en)
SubObjectPropertyOf(obo:RO_0002382 obo:RO_0002377)

# Object Property: obo:RO_0002383 (proper tributary of)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002383 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002383 "x proper_tributary_of y iff x tributary_of y and x does not originate from y")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002383 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002383 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002383 "proper tributary of"@en)
SubObjectPropertyOf(obo:RO_0002383 obo:RO_0002376)

# Object Property: obo:RO_0002384 (has developmental potential involving)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002384 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002384 "x has developmental potential involving y iff x is capable of a developmental process with output y. y may be the successor of x, or may be a different structure in the vicinity (as for example in the case of developmental induction)."@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002384 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002384 "has developmental potential involving"@en)
SubObjectPropertyOf(obo:RO_0002384 obo:RO_0002324)

# Object Property: obo:RO_0002385 (has potential to developmentally contribute to)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002385 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002385 "x has potential to developmentrally contribute to y iff x developmentally contributes to y or x is capable of developmentally contributing to y"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002385 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002385 "has potential to developmentally contribute to"@en)
SubObjectPropertyOf(obo:RO_0002385 obo:RO_0002384)

# Object Property: obo:RO_0002386 (has potential to developmentally induce)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002386 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002386 "x has potential to developmentally induce y iff x developmentally induces y or x is capable of developmentally inducing y"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002386 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002386 "has potential to developmentally induce"@en)
SubObjectPropertyOf(obo:RO_0002386 obo:RO_0002384)

# Object Property: obo:RO_0002387 (has potential to develop into)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002387 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002387 "x has the potential to develop into y iff x develops into y or if x is capable of developing into y"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002387 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002387 "has potential to develop into"@en)
SubObjectPropertyOf(obo:RO_0002387 obo:RO_0002384)

# Object Property: obo:RO_0002388 (has potential to directly develop into)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002388 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002388 "x has potential to directly develop into y iff x directly develops into y or x is capable of directly developing into y"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002388 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002388 "has potential to directly develop into"@en)
SubObjectPropertyOf(obo:RO_0002388 obo:RO_0002387)

# Object Property: obo:RO_0002400 (has direct input)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002400 "'protein catabolic process' SubClassOf has_direct_input some protein")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002400 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002400 "p has direct input c iff c is a participant in p, c is present at the start of p, and the state of c is modified during p.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002400 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002400 "directly consumes")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002400 "This is likely to be obsoleted. A candidate replacement would be a new relation 'has bound input' or 'has substrate'")
AnnotationAssertion(rdfs:label obo:RO_0002400 "has direct input"@en)
SubObjectPropertyOf(obo:RO_0002400 obo:RO_0002233)

# Object Property: obo:RO_0002401 (obsolete has indirect input)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002401 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002401 "Chris Mungall")
AnnotationAssertion(rdfs:comment obo:RO_0002401 "Likely to be obsoleted. See:
https://docs.google.com/document/d/1QMhs9J-P_q3o_rDh-IX4ZEnz0PnXrzLRVkI3vvz8NEQ/edit")
AnnotationAssertion(rdfs:label obo:RO_0002401 "obsolete has indirect input"^^xsd:string)
AnnotationAssertion(owl:deprecated obo:RO_0002401 "true"^^xsd:boolean)

# Object Property: obo:RO_0002402 (obsolete has direct output)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002402 "translation SubClassOf has_direct_output some protein")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002402 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002402 "p has direct input c iff c is a participanti n p, c is present at the end of p, and c is not present at the beginning of c. ")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002402 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002402 "directly produces")
AnnotationAssertion(rdfs:label obo:RO_0002402 "obsolete has direct output"^^xsd:string)
AnnotationAssertion(owl:deprecated obo:RO_0002402 "true"^^xsd:boolean)

# Object Property: obo:RO_0002403 (obsolete has indirect output)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002403 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002403 "Chris Mungall")
AnnotationAssertion(rdfs:comment obo:RO_0002403 "Likely to be obsoleted. See:
https://docs.google.com/document/d/1QMhs9J-P_q3o_rDh-IX4ZEnz0PnXrzLRVkI3vvz8NEQ/edit")
AnnotationAssertion(rdfs:label obo:RO_0002403 "obsolete has indirect output"^^xsd:string)
AnnotationAssertion(owl:deprecated obo:RO_0002403 "true"^^xsd:boolean)
SubObjectPropertyOf(obo:RO_0002403 obo:RO_0002234)

# Object Property: obo:RO_0002404 (causally downstream of)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002404 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002404 "inverse of upstream of")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002404 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002404 "causally downstream of"@en)
SubObjectPropertyOf(obo:RO_0002404 obo:BFO_0000062)
SubObjectPropertyOf(obo:RO_0002404 obo:RO_0002427)
InverseObjectProperties(obo:RO_0002404 obo:RO_0002411)

# Object Property: obo:RO_0002405 (immediately causally downstream of)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002405 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002405 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002405 "immediately causally downstream of"@en)
SubObjectPropertyOf(obo:RO_0002405 obo:RO_0002087)
SubObjectPropertyOf(obo:RO_0002405 obo:RO_0002404)
InverseObjectProperties(obo:RO_0002405 obo:RO_0002412)

# Object Property: obo:RO_0002406 (directly activates)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002406 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002406 "p directly activates q if and only if p is immediately upstream of q and p is the realization of a function to increase the rate or activity of q")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002406 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002406 "directly positively regulates")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002406 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002406 "directly activates (process to process)")
AnnotationAssertion(rdfs:label obo:RO_0002406 "directly activates"@en)
SubObjectPropertyOf(obo:RO_0002406 obo:RO_0002629)

# Object Property: obo:RO_0002407 (indirectly activates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002407 "p directly activates q if and only if p is immediately upstream of q and p is the realization of a function to increase the rate or activity of q")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002407 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002407 "indirectly positively regulates")
AnnotationAssertion(obo:RO_0002579 obo:RO_0002407 obo:RO_0002213)
AnnotationAssertion(rdfs:label obo:RO_0002407 "indirectly activates"@en)
SubObjectPropertyOf(obo:RO_0002407 obo:RO_0002213)
TransitiveObjectProperty(obo:RO_0002407)

# Object Property: obo:RO_0002408 (directly inhibits)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002408 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002408 "directly negatively regulates")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002408 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002408 "directly inhibits (process to process)")
AnnotationAssertion(rdfs:label obo:RO_0002408 "directly inhibits"@en)
SubObjectPropertyOf(obo:RO_0002408 obo:RO_0002630)

# Object Property: obo:RO_0002409 (indirectly inhibits)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002409 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002409 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002409 "indirectly negatively regulates")
AnnotationAssertion(obo:RO_0002579 obo:RO_0002409 obo:RO_0002212)
AnnotationAssertion(rdfs:label obo:RO_0002409 "indirectly inhibits"@en)
SubObjectPropertyOf(obo:RO_0002409 obo:RO_0002212)
TransitiveObjectProperty(obo:RO_0002409)

# Object Property: obo:RO_0002410 (causally related to)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002410 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002410 "This relation groups causal relations between material entities and causal relations between processes")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002410 "This branch of the ontology deals with causal relations between entities. It is divided into two branches: causal relations between occurrents/processes, and causal relations between material entities. We take an 'activity flow-centric approach', with the former as primary, and define causal relations between material entities in terms of causal relations between occurrents.

To define causal relations in an activity-flow type network, we make use of 3 primitives:

 * Temporal: how do the intervals of the two occurrents relate? 
 * Is the causal relation regulatory?
 * Is the influence positive or negative

The first of these can be formalized in terms of the Allen Interval Algebra. Informally, the 3 bins we care about are 'direct', 'indirect' or overlapping. Note that all causal relations should be classified under a RO temporal relation (see the branch under 'temporally related to'). Note that all causal relations are temporal, but not all temporal relations are causal. Two occurrents can be related in time without being causally connected. We take causal influence to be primitive, elucidated as being such that has the upstream changed, some qualities of the donwstream would necessarily be modified.

For the second, we consider a relationship to be regulatory if the system in which the activities occur is capable of altering the relationship to achieve some objective. This could include changing the rate of production of a molecule.

For the third, we consider the effect of the upstream process on the output(s) of the downstream process. If the level of output is increased, or the rate of production of the output is increased, then the direction is increased. Direction can be positive, negative or neutral or capable of either direction. Two positives in succession yield a positive, two negatives in succession yield a positive, otherwise the default assumption is that the net effect is canceled and the influence is neutral.

Each of these 3 primitives can be composed to yield a cross-product of different relation types.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002410 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002410 "Do not use this relation directly. It is intended as a grouping for a diverse set of relations, all involving cause and effect.")
AnnotationAssertion(rdfs:label obo:RO_0002410 "causally related to"@en)
SubObjectPropertyOf(obo:RO_0002410 obo:RO_0002609)

# Object Property: obo:RO_0002411 (causally upstream of)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002411 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002411 "p is causally upstream of q if and only if p precedes q and p and q are linked in a causal chain")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002411 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002411 "causally upstream of"@en)
SubObjectPropertyOf(obo:RO_0002411 obo:BFO_0000063)
SubObjectPropertyOf(obo:RO_0002411 obo:RO_0002418)
TransitiveObjectProperty(obo:RO_0002411)

# Object Property: obo:RO_0002412 (immediately causally upstream of)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002412 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002412 "p is immediately causally upstream of q iff both (a) p immediately precedes q and (b) p is causally upstream of q. In addition, the output of p  must be an input of q.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002412 "Chris Mungall")
AnnotationAssertion(obo:RO_0002575 obo:RO_0002412 obo:RO_0002411)
AnnotationAssertion(rdfs:label obo:RO_0002412 "immediately causally upstream of"@en)
SubObjectPropertyOf(obo:RO_0002412 obo:RO_0002090)
SubObjectPropertyOf(obo:RO_0002412 obo:RO_0002411)

# Object Property: obo:RO_0002413 (directly provides input for)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002413 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002413 "p1 directly provides input for p2 iff there exists some c such that p1 has_output c and p2 has_input c")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002413 "This is currently called 'directly provides input for' to be consistent with our terminology where we use 'direct' whenever two occurrents succeed one another directly. We may relabel this simply 'provides input for', as directness is implicit")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002413 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002413 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002413 "directly provides input for (process to process)")
AnnotationAssertion(rdfs:label obo:RO_0002413 "directly provides input for"@en)
SubObjectPropertyOf(obo:RO_0002413 obo:RO_0002412)
SubObjectPropertyOf(obo:RO_0002413 obo:RO_0002414)

# Object Property: obo:RO_0002414 (transitively provides input for)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002414 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002414 "transitive form of directly_provides_input_for")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002414 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002414 "This is a grouping relation that should probably not be used in annotation. Consider instead the child relation 'directly provides input for' (which may later be relabeled simply to 'provides input for')")
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002414 "transitively provides input for (process to process)")
AnnotationAssertion(rdfs:label obo:RO_0002414 "transitively provides input for"@en)
SubObjectPropertyOf(obo:RO_0002414 obo:RO_0002411)
TransitiveObjectProperty(obo:RO_0002414)
ObjectPropertyDomain(obo:RO_0002414 obo:BFO_0000015)
ObjectPropertyRange(obo:RO_0002414 obo:BFO_0000015)

# Object Property: obo:RO_0002418 (causally upstream of or within)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002418 "p 'causally upstream or within' q iff (1) the end of p is before the end of q and (2) the execution of p exerts some causal influence over the outputs of q; i.e. if p was abolished or the outputs of p were to be modified, this would necessarily affect q.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002418 "We would like to make this disjoint with 'preceded by', but this is prohibited in OWL2")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002418 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002418 "influences (processual)")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_0002418 "affects")
AnnotationAssertion(rdfs:label obo:RO_0002418 "causally upstream of or within")
SubObjectPropertyOf(obo:RO_0002418 obo:RO_0002501)
InverseObjectProperties(obo:RO_0002418 obo:RO_0002427)
TransitiveObjectProperty(obo:RO_0002418)

# Object Property: obo:RO_0002424 (differs in)

AnnotationAssertion(obo:IAO_0000116 obo:RO_0002424 "false"^^xsd:boolean)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002424 "Chris Mungall")
AnnotationAssertion(rdfs:comment obo:RO_0002424 "This is an exploratory relation")
AnnotationAssertion(rdfs:label obo:RO_0002424 "differs in"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002424 "https://code.google.com/p/phenotype-ontologies/w/edit/PhenotypeModelCompetencyQuestions"^^xsd:anyURI)

# Object Property: obo:RO_0002425 (differs in attribute of)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002425 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002425 "differs in attribute of"@en)
SubObjectPropertyOf(obo:RO_0002425 obo:RO_0002424)
ObjectPropertyRange(obo:RO_0002425 ObjectUnionOf(obo:BFO_0000004 obo:BFO_0000015))

# Object Property: obo:RO_0002426 (differs in attribute)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002426 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002426 "differs in attribute"@en)
SubObjectPropertyOf(obo:RO_0002426 obo:RO_0002424)
ObjectPropertyRange(obo:RO_0002426 obo:BFO_0000020)

# Object Property: obo:RO_0002427 (causally downstream of or within)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002427 "inverse of causally upstream of or within")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002427 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002427 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002427 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002427 "causally downstream of or within")
SubObjectPropertyOf(obo:RO_0002427 obo:RO_0002501)
TransitiveObjectProperty(obo:RO_0002427)

# Object Property: obo:RO_0002428 (involved in regulation of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002428 "c involved in regulation of p if c is involved in some 'p' and p' regulates some p")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002428 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002428 "involved in regulation of")
SubObjectPropertyOf(obo:RO_0002428 obo:RO_0002263)
SubObjectPropertyOf(obo:RO_0002428 obo:RO_0002431)

# Object Property: obo:RO_0002429 (involved in positive regulation of)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002429 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002429 "involved in positive regulation of")
SubObjectPropertyOf(obo:RO_0002429 obo:RO_0002428)

# Object Property: obo:RO_0002430 (involved in negative regulation of)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002430 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002430 "involved in negative regulation of")
SubObjectPropertyOf(obo:RO_0002430 obo:RO_0002428)

# Object Property: obo:RO_0002431 (involved in or involved in regulation of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002431 "c involved in or regulates p if and only if either (i) c is involved in p or (ii) c is involved in regulation of p")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002431 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002431 "involved in or reguates")
AnnotationAssertion(rdfs:label obo:RO_0002431 "involved in or involved in regulation of")
SubObjectPropertyOf(obo:RO_0002431 obo:RO_0002264)
SubObjectPropertyOf(obo:RO_0002431 obo:RO_0002328)
SubObjectPropertyOf(obo:RO_0002431 obo:RO_0002500)

# Object Property: obo:RO_0002432 (is active in)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002432 "A protein that enables activity in a cytosol.")
AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:cjm") Annotation(oboInOwl:hasDbXref "GOC:dos") obo:IAO_0000115 obo:RO_0002432 "c executes activity in d if and only if c enables p and p occurs_in d.  Assuming no action at a distance by gene products, if a gene product enables (is capable of) a process that occurs in some structure, it must have at least some part in that structure.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002432 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002432 "executes activity in")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_0002432 "enables activity in")
AnnotationAssertion(rdfs:comment obo:RO_0002432 "")
AnnotationAssertion(rdfs:label obo:RO_0002432 "is active in")
SubObjectPropertyOf(obo:RO_0002432 obo:RO_0002131)
SubObjectPropertyOf(obo:RO_0002432 obo:RO_0002328)

# Object Property: obo:RO_0002433 (contributes to morphology of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002433 "p contributes to morphology of w if and only if a change in the morphology of p entails a change in the morphology of w. Examples: every skull contributes to morphology of the head which it is a part of. Counter-example: nuclei do not generally contribute to the morphology of the cell they are part of, as they are buffered by cytoplasm.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002433 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002433 "contributes to morphology of")
SubObjectPropertyOf(obo:RO_0002433 obo:RO_0002131)

# Object Property: obo:RO_0002434 (interacts with)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002434 "A relationship that holds between two entities in which the processes executed by the two entities are causally connected.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002434 "Considering relabeling as 'pairwise interacts with'"^^xsd:anyURI)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002434 "This relation and all sub-relations can be applied to either (1) pairs of entities that are interacting at any moment of time (2) populations or species of entity whose members have the disposition to interact (3) classes whose members have the disposition to interact.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002434 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002434 "Note that this relationship type, and sub-relationship types may be redundant with process terms from other ontologies. For example, the symbiotic relationship hierarchy parallels GO. The relations are provided as a convenient shortcut. Consider using the more expressive processual form to capture your data. In the future, these relations will be linked to their cognate processes through rules.")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_0002434 "in pairwise interaction with")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002434 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002434 "interacts with")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002434 "http://purl.obolibrary.org/obo/MI_0914"^^xsd:anyURI)
AnnotationAssertion(foaf:page obo:RO_0002434 "https://github.com/oborel/obo-relations/wiki/InteractionRelations"^^xsd:anyURI)
SymmetricObjectProperty(obo:RO_0002434)
ObjectPropertyDomain(obo:RO_0002434 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002434 obo:BFO_0000040)

# Object Property: obo:RO_0002435 (genetically interacts with)

AnnotationAssertion(obo:IAO_0000116 obo:RO_0002435 "An interaction that holds between two genetic entities (genes, alleles) through some genetic interaction (e.g. epistasis)")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002435 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002435 "genetically interacts with")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002435 obo:ECO_0000316)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002435 "http://purl.obolibrary.org/obo/MI_0208"^^xsd:anyURI)
SubObjectPropertyOf(obo:RO_0002435 obo:RO_0002434)
SymmetricObjectProperty(obo:RO_0002435)

# Object Property: obo:RO_0002436 (molecularly interacts with)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002436 "An interaction relationship in which the two partners are molecular entities that directly physically interact with each other for example via a stable binding interaction or a brief interaction during which one modifies the other.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002436 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002436 "binds")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002436 "molecularly binds with")
AnnotationAssertion(rdfs:label obo:RO_0002436 "molecularly interacts with")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002436 obo:ECO_0000353)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002436 "http://purl.obolibrary.org/obo/MI_0915"^^xsd:anyURI)
SubObjectPropertyOf(obo:RO_0002436 obo:RO_0002434)
SymmetricObjectProperty(obo:RO_0002436)

# Object Property: obo:RO_0002437 (biotically interacts with)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002437 "An interaction relationship in which at least one of the partners is an organism and the other is either an organism or an abiotic entity with which the organism interacts.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002437 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002437 "interacts with on organism level")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002437 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002437 "biotically interacts with")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002437 <http://dx.doi.org/10.1016/j.ecoinf.2014.08.005>)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002437 "http://eol.org/schema/terms/interactsWith")
SubObjectPropertyOf(obo:RO_0002437 obo:RO_0002321)
SubObjectPropertyOf(obo:RO_0002437 obo:RO_0002434)
SymmetricObjectProperty(obo:RO_0002437)
ObjectPropertyDomain(obo:RO_0002437 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002437 obo:BFO_0000040)

# Object Property: obo:RO_0002438 (trophically interacts with)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002438 "An interaction relationship in which the partners are related via a feeding relationship.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002438 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002438 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002438 "trophically interacts with")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002438 <http://dx.doi.org/10.1016/j.ecoinf.2014.08.005>)
SubObjectPropertyOf(obo:RO_0002438 obo:RO_0002574)

# Object Property: obo:RO_0002439 (preys on)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002439 "A wasp killing a Monarch larva in order to feed to offspring [http://www.inaturalist.org/observations/2942824]")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002439 "Baleen whale preys on krill")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002439 "An interaction relationship involving a predation process, where the subject kills the target in order to eat it or to feed to siblings, offspring or group members")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002439 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002439 "Jorrit Poelen")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002439 "Katja Shulz")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002439 "is subject of predation interaction with")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002439 "preys upon")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002439 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002439 "preys on")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002439 "http://eol.org/schema/terms/preysUpon")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002439 "http://www.inaturalist.org/observations/2942824")
SubObjectPropertyOf(obo:RO_0002439 obo:RO_0002438)
InverseObjectProperties(obo:RO_0002439 obo:RO_0002458)

# Object Property: obo:RO_0002440 (symbiotically interacts with)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002440 "A biotic interaction in which the two organisms live together in more or less intimate association.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002440 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002440 "http://www.ncbi.nlm.nih.gov/pubmed/19278549"^^xsd:anyURI)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002440 "We follow GO and PAMGO in using 'symbiosis' as the broad term encompassing mutualism through parasitism")
AnnotationAssertion(obo:RO_0002561 obo:RO_0002440 obo:GO_0044403)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002440 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002440 "symbiotically interacts with")
SubObjectPropertyOf(obo:RO_0002440 obo:RO_0002574)
SymmetricObjectProperty(obo:RO_0002440)

# Object Property: obo:RO_0002441 (commensually interacts with)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002441 "An interaction relationship between two organisms living together in more or less intimate association in a relationship in which one benefits and the other is unaffected (GO).")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002441 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002441 "http://www.ncbi.nlm.nih.gov/pubmed/19278549"^^xsd:anyURI)
AnnotationAssertion(obo:RO_0002561 obo:RO_0002441 obo:GO_0085031)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002441 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002441 "commensually interacts with")
SubObjectPropertyOf(obo:RO_0002441 obo:RO_0002440)

# Object Property: obo:RO_0002442 (mutualistically interacts with)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002442 "An interaction relationship between two organisms living together in more or less intimate association in a relationship in which both organisms benefit from each other (GO).")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002442 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002442 "http://www.ncbi.nlm.nih.gov/pubmed/19278549"^^xsd:anyURI)
AnnotationAssertion(obo:RO_0002561 obo:RO_0002442 obo:GO_0085030)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002442 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002442 "mutualistically interacts with")
SubObjectPropertyOf(obo:RO_0002442 obo:RO_0002440)

# Object Property: obo:RO_0002443 (interacts with via parasite-host interaction)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002443 "An interaction relationship between two organisms living together in more or less intimate association in a relationship in which association is disadvantageous or destructive to one of the organisms (GO).")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002443 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002443 "http://www.ncbi.nlm.nih.gov/pubmed/19278549"^^xsd:anyURI)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002443 "This relation groups a pair of inverse relations, parasite of and parasitized by")
AnnotationAssertion(obo:RO_0002561 obo:RO_0002443 obo:GO_0072519)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002443 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002443 "interacts with via parasite-host interaction")
SubObjectPropertyOf(obo:RO_0002443 obo:RO_0002440)

# Object Property: obo:RO_0002444 (parasite of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002444 "Pediculus humanus capitis parasite of human")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002444 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002444 "parasitizes")
AnnotationAssertion(obo:RO_0002560 obo:RO_0002444 obo:GO_0072519)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_0002444 "direct parasite of")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002444 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002444 "parasite of")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002444 "http://eol.org/schema/terms/parasitizes")
SubObjectPropertyOf(obo:RO_0002444 obo:RO_0002443)
SubObjectPropertyOf(obo:RO_0002444 obo:RO_0002454)
InverseObjectProperties(obo:RO_0002444 obo:RO_0002445)

# Object Property: obo:RO_0002445 (parasitized by)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002445 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002445 "has parasite")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002445 "parasitised by")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_0002445 "directly parasitized by")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002445 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002445 "parasitized by")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002445 "http://eol.org/schema/terms/hasParasite")
SubObjectPropertyOf(obo:RO_0002445 obo:RO_0002443)
SubObjectPropertyOf(obo:RO_0002445 obo:RO_0002453)

# Object Property: obo:RO_0002446 (participates in a abiotic-biotic interaction with)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002446 "Porifiera attaches to substrate")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002446 "A biotic interaction relationship in which one partner is an organism and the other partner is inorganic. For example, the relationship between a sponge and the substrate to which is it anchored.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002446 "Chris Mungall")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_0002446 "semibiotically interacts with")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002446 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002446 "participates in a abiotic-biotic interaction with")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002446 <http://dx.doi.org/10.1016/j.ecoinf.2014.08.005>)
SubObjectPropertyOf(obo:RO_0002446 obo:RO_0002437)

# Object Property: obo:RO_0002447 (phosphorylates)

AnnotationAssertion(obo:IAO_0000116 obo:RO_0002447 "Axiomatization to GO to be added later")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002447 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002447 "An interaction relation between x and y in which x catalyzes a reaction in which a phosphate group is added to y.")
AnnotationAssertion(rdfs:label obo:RO_0002447 "phosphorylates")
SubObjectPropertyOf(obo:RO_0002447 obo:RO_0002436)

# Object Property: obo:RO_0002448 (activity directly regulates activity of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002448 "Holds between molecular entities A and B where A can physically interact with B and in doing so regulates a process that B is capable of.  For example, A and B may be gene products and binding of B by A regulates the kinase activity of B.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002448 "Chris Mungall")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_0002448 "molecularly controls")
AnnotationAssertion(rdfs:label obo:RO_0002448 "activity directly regulates activity of")
SubObjectPropertyOf(obo:RO_0002448 obo:RO_0002436)
SubObjectPropertyOf(obo:RO_0002448 obo:RO_0002566)

# Object Property: obo:RO_0002449 (activity directly negatively regulates activity of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002449 "Holds between molecular entities A and B where A can physically interact with B and in doing so negatively regulates a process that B is capable of.  For example, A and B may be gene products and binding of B by A negatively regulates the kinase activity of B.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002449 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002449 "inhibits")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_0002449 "molecularly decreases activity of")
AnnotationAssertion(rdfs:label obo:RO_0002449 "activity directly negatively regulates activity of")
SubObjectPropertyOf(obo:RO_0002449 obo:RO_0002448)

# Object Property: obo:RO_0002450 (activity directly positively regulates activity of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002450 "Holds between molecular entities A and B where A can physically interact with B and in doing so positively regulates a process that B is capable of.  For example, A and B may be gene products and binding of B by A positively regulates the kinase activity of B.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002450 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002450 "activates")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_0002450 "molecularly increases activity of")
AnnotationAssertion(rdfs:label obo:RO_0002450 "activity directly positively regulates activity of")
SubObjectPropertyOf(obo:RO_0002450 obo:RO_0002448)

# Object Property: obo:RO_0002451 (transmitted by)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002451 "all dengue disease transmitted by some mosquito")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002451 "A relationship that holds between a disease and organism")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002451 "Add domain and range constraints")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002451 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002451 "transmitted by")
SubObjectPropertyOf(obo:RO_0002451 obo:RO_0002321)

# Object Property: obo:RO_0002452 (has symptom)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002452 "A relation that holds between a disease or an organism and a phenotype")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002452 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002452 "has symptom")
SubObjectPropertyOf(obo:RO_0002452 obo:RO_0002200)

# Object Property: obo:RO_0002453 (host of)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002453 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002453 "The term host is usually used for the larger (macro) of the two members of a symbiosis (GO)")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002453 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002453 "host of")
SubObjectPropertyOf(obo:RO_0002453 obo:RO_0002440)

# Object Property: obo:RO_0002454 (has host)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002454 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002454 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002454 "has host")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002454 "http://eol.org/schema/terms/hasHost")
SubObjectPropertyOf(obo:RO_0002454 obo:RO_0002440)

# Object Property: obo:RO_0002455 (pollinates)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002455 "Bees pollinate Flowers")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002455 "This relation is intended to be used for biotic pollination - e.g. a bee pollinating a flowering plant. Some kinds of pollination may be semibiotic - e.g. wind can have the role of pollinator. We would use a separate relation for this.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002455 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002455 "is subject of pollination interaction with")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002455 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002455 "pollinates")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002455 "http://eol.org/schema/terms/pollinates")
SubObjectPropertyOf(obo:RO_0002455 obo:RO_0002442)
InverseObjectProperties(obo:RO_0002455 obo:RO_0002456)

# Object Property: obo:RO_0002456 (pollinated by)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002456 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002456 "has polinator")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002456 "is target of pollination interaction with")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002456 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002456 "pollinated by")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002456 "http://eol.org/schema/terms/hasPollinator")
SubObjectPropertyOf(obo:RO_0002456 obo:RO_0002442)

# Object Property: obo:RO_0002457 (acquires nutrients from)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002457 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002457 "Intended to be used when the target of the relation is not itself consumed, and does not have integral parts consumed, but provided nutrients in some other fashion.")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002457 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002457 "acquires nutrients from")
SubObjectPropertyOf(obo:RO_0002457 obo:RO_0002438)
InverseObjectProperties(obo:RO_0002457 obo:RO_0002469)

# Object Property: obo:RO_0002458 (preyed upon by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002458 "inverse of preys on")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002458 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002458 "has predator")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002458 "is target of predation interaction with")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002458 obo:RO_0002259)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002458 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002458 "preyed upon by")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002458 "http://eol.org/schema/terms/HasPredator")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002458 "http://polytraits.lifewatchgreece.eu/terms/PRED")
SubObjectPropertyOf(obo:RO_0002458 obo:RO_0002438)

# Object Property: obo:RO_0002459 (is vector for)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002459 "Anopheles is a vector for Plasmodium")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002459 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002459 "a is a vector for b if a carries and transmits an infectious pathogen b into another living organism")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002459 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002459 "is vector for")
SubObjectPropertyOf(obo:RO_0002459 obo:RO_0002574)
InverseObjectProperties(obo:RO_0002459 obo:RO_0002460)

# Object Property: obo:RO_0002460 (has vector)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002460 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002460 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002460 "has vector")
SubObjectPropertyOf(obo:RO_0002460 obo:RO_0002459)

# Object Property: obo:RO_0002461 (partner in)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002461 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002461 "Experimental: relation used for defining interaction relations. An interaction relation holds when there is an interaction event with two partners. In a directional interaction, one partner is deemed the subject, the other the target")
AnnotationAssertion(rdfs:label obo:RO_0002461 "partner in")
SubObjectPropertyOf(obo:RO_0002461 obo:RO_0000056)

# Object Property: obo:RO_0002462 (subject participant in)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002462 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002462 "Experimental: relation used for defining interaction relations; the meaning of s 'subject participant in' p is determined by the type of p, where p must be a directional interaction process. For example, in a predator-prey interaction process the subject is the predator. We can imagine a reciprocal prey-predatory process with subject and object reversed.")
AnnotationAssertion(rdfs:label obo:RO_0002462 "subject participant in")
SubObjectPropertyOf(obo:RO_0002462 obo:RO_0002461)

# Object Property: obo:RO_0002463 (target participant in)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002463 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002463 "Experimental: relation used for defining interaction relations; the meaning of s 'target participant in' p is determined by the type of p, where p must be a directional interaction process. For example, in a predator-prey interaction process the target is the prey. We can imagine a reciprocal prey-predatory process with subject and object reversed.")
AnnotationAssertion(rdfs:label obo:RO_0002463 "target participant in")
SubObjectPropertyOf(obo:RO_0002463 obo:RO_0002461)

# Object Property: obo:RO_0002464 (helper property)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002464 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002464 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002464 "This property or its subproperties is not to be used directly. These properties exist as helper properties that are used to support OWL reasoning.")
AnnotationAssertion(rdfs:label obo:RO_0002464 "helper property")

# Object Property: obo:RO_0002465 (is symbiosis)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002465 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002465 "is symbiosis")
SubObjectPropertyOf(obo:RO_0002465 obo:RO_0002563)

# Object Property: obo:RO_0002466 (is commensalism)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002466 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002466 "is commensalism")
SubObjectPropertyOf(obo:RO_0002466 obo:RO_0002465)

# Object Property: obo:RO_0002467 (is mutualism)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002467 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002467 "is mutualism")
SubObjectPropertyOf(obo:RO_0002467 obo:RO_0002465)

# Object Property: obo:RO_0002468 (is parasitism)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002468 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002468 "is parasitism")
SubObjectPropertyOf(obo:RO_0002468 obo:RO_0002465)

# Object Property: obo:RO_0002469 (provides nutrients for)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002469 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002469 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002469 "provides nutrients for")
SubObjectPropertyOf(obo:RO_0002469 obo:RO_0002438)

# Object Property: obo:RO_0002470 (eats)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002470 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002470 "is subject of eating interaction with")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002470 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002470 "eats")
SubObjectPropertyOf(obo:RO_0002470 obo:RO_0002438)

# Object Property: obo:RO_0002471 (is eaten by)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002471 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002471 "eaten by")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002471 "is target of eating interaction with")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002471 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002471 "is eaten by")
SubObjectPropertyOf(obo:RO_0002471 obo:RO_0002438)

# Object Property: obo:RO_0002472 (is evidence for)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002472 "A relationship between a piece of evidence a and some entity b, where b is  an information content entity, material entity or process, and 
the a supports either the existence of b, or the truth value of b.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002472 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002472 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002472 "is evidence for")
SubObjectPropertyOf(obo:RO_0002472 obo:RO_0002616)
InverseObjectProperties(obo:RO_0002472 obo:RO_0002558)

# Object Property: obo:RO_0002473 (composed primarily of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002473 "'otolith organ' SubClassOf 'composed primarily of' some 'calcium carbonate'")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002473 "x composed_primarily_of y if and only if more than half of the mass of x is made from y or units of the same type as y.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002473 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002473 <http://www.ncbi.nlm.nih.gov/pubmed/22293552>)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002473 obo:RO_0001901)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002473 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002473 "composed primarily of")
SubObjectPropertyOf(obo:RO_0002473 obo:BFO_0000051)

# Object Property: obo:RO_0002476 (child nucleus of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002476 "ABal nucleus child nucleus of ABa nucleus (in C elegans)")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002476 "c is a child nucleus of d if and only if c and d are both nuclei and parts of cells c' and d', where c' is derived from d' by mitosis and the genetic material in c is a copy of the generic material in d")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002476 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002476 "This relation is primarily used in the worm anatomy ontology for representing lineage at the level of nuclei. However, it is applicable to any organismal cell lineage.")
AnnotationAssertion(rdfs:label obo:RO_0002476 "child nucleus of")
SubObjectPropertyOf(obo:RO_0002476 obo:RO_0002258)
ObjectPropertyDomain(obo:RO_0002476 obo:GO_0005634)
ObjectPropertyRange(obo:RO_0002476 obo:GO_0005634)

# Object Property: obo:RO_0002477 (child nucleus of in hermaphrodite)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002477 "A child nucleus relationship in which the cells are part of a hermaphroditic organism")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002477 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002477 "child nucleus of in hermaphrodite")
SubObjectPropertyOf(obo:RO_0002477 obo:RO_0002476)

# Object Property: obo:RO_0002478 (child nucleus of in male)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002478 "A child nucleus relationship in which the cells are part of a male organism")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002478 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002478 "child nucleus of in male")
SubObjectPropertyOf(obo:RO_0002478 obo:RO_0002476)

# Object Property: obo:RO_0002479 (has part that occurs in)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002479 "p has part that occurs in c if and only if there exists some p1, such that p has_part p1, and p1 occurs in c.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002479 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002479 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002479 "has part that occurs in")
ObjectPropertyDomain(obo:RO_0002479 obo:BFO_0000003)
ObjectPropertyRange(obo:RO_0002479 obo:BFO_0000004)

# Object Property: obo:RO_0002480 (ubiquitinates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002480 "An interaction relation between x and y in which x catalyzes a reaction in which one or more ubiquitin groups are added to y")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002480 "Axiomatization to GO to be added later")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002480 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002480 "ubiquitinates")
SubObjectPropertyOf(obo:RO_0002480 obo:RO_0002436)

# Object Property: obo:RO_0002481 (is kinase activity)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002481 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002481 "is kinase activity")
SubObjectPropertyOf(obo:RO_0002481 obo:RO_0002564)

# Object Property: obo:RO_0002482 (is ubiquitination)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002482 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002482 "is ubiquitination")
SubObjectPropertyOf(obo:RO_0002482 obo:RO_0002564)

# Object Property: obo:RO_0002485 (receives input from)

AnnotationAssertion(obo:IAO_0000116 obo:RO_0002485 "See notes for inverse relation")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002485 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002485 "receives input from")
SubObjectPropertyOf(obo:RO_0002485 obo:RO_0002170)
InverseObjectProperties(obo:RO_0002485 obo:RO_0002486)

# Object Property: obo:RO_0002486 (sends output to)

AnnotationAssertion(obo:IAO_0000116 obo:RO_0002486 "This is an exploratory relation. The label is taken from the FMA. It needs aligned with the neuron-specific relations such as has postsynaptic terminal in.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002486 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002486 "sends output to")
SubObjectPropertyOf(obo:RO_0002486 obo:RO_0002170)

# Object Property: obo:RO_0002487 (relation between structure and stage)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002487 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002487 "Do not use this relation directly. It is ended as a grouping for a diverse set of relations, typically connecting an anatomical entity to a biological process or developmental stage.")
AnnotationAssertion(rdfs:label obo:RO_0002487 "relation between structure and stage")
ObjectPropertyDomain(obo:RO_0002487 obo:BFO_0000002)
ObjectPropertyRange(obo:RO_0002487 obo:BFO_0000003)

# Object Property: obo:RO_0002488 (existence starts during)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002488 "x existence starts during y if and only if the time point at which x starts is after or equivalent to the time point at which y starts and before or equivalent to the time point at which y ends. Formally: x existence starts during y iff α(x) >= α(y) & α(x) <= ω(y).")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002488 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002488 "existence starts during")
SubObjectPropertyOf(obo:RO_0002488 obo:RO_0002490)
SubObjectPropertyOf(obo:RO_0002488 obo:RO_0002496)

# Object Property: obo:RO_0002489 (existence starts with)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002489 "x starts ends with y if and only if the time point at which x starts is equivalent to the time point at which y starts. Formally: x existence starts with y iff α(x) = α(y).")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002489 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002489 "existence starts with")
SubObjectPropertyOf(obo:RO_0002489 obo:RO_0002488)

# Object Property: obo:RO_0002490 (existence overlaps)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002490 "x existence overlaps y if and only if either (a) the start of x is part of y or (b) the end of x is part of y. Formally: x existence starts and ends during y iff (α(x) >= α(y) & α(x) <= ω(y)) OR (ω(x) <= ω(y) & ω(x) >= α(y))")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002490 "Chris Mungall")
AnnotationAssertion(rdfs:comment obo:RO_0002490 "The relations here were created based on work originally by Fabian Neuhaus and David Osumi-Sutherland. The work has not yet been vetted and errors in definitions may have occurred during transcription.")
AnnotationAssertion(rdfs:label obo:RO_0002490 "existence overlaps")
SubObjectPropertyOf(obo:RO_0002490 obo:RO_0002487)

# Object Property: obo:RO_0002491 (existence starts and ends during)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002491 "x existence starts and ends during y if and only if the start of x is part of y and the end of x is part of y. Formally: x existence starts and ends during y iff α(x) >= α(y) & α(x) <= ω(y) & ω(x) <= ω(y) & ω(x) >= α(y)")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002491 "Chris Mungall")
AnnotationAssertion(rdfs:comment obo:RO_0002491 "The relations here were created based on work originally by Fabian Neuhaus and David Osumi-Sutherland. The work has not yet been vetted and errors in definitions may have occurred during transcription.")
AnnotationAssertion(rdfs:label obo:RO_0002491 "existence starts and ends during")
SubObjectPropertyOf(obo:RO_0002491 obo:RO_0002488)
SubObjectPropertyOf(obo:RO_0002491 obo:RO_0002492)

# Object Property: obo:RO_0002492 (existence ends during)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002492 "x existence ends during y if and only if the time point at which x ends is before or equivalent to the time point at which y ends and after or equivalent to the point at which y starts. Formally: x existence ends during y iff ω(x) <= ω(y) and ω(x) >= α(y).")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002492 "Chris Mungall")
AnnotationAssertion(rdfs:comment obo:RO_0002492 "The relations here were created based on work originally by Fabian Neuhaus and David Osumi-Sutherland. The work has not yet been vetted and errors in definitions may have occurred during transcription.")
AnnotationAssertion(rdfs:label obo:RO_0002492 "existence ends during")
SubObjectPropertyOf(obo:RO_0002492 obo:RO_0002490)
SubObjectPropertyOf(obo:RO_0002492 obo:RO_0002497)

# Object Property: obo:RO_0002493 (existence ends with)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002493 "x existence ends with y if and only if the time point at which x ends is equivalent to the time point at which y ends. Formally: x existence ends with y iff ω(x) = ω(y).")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002493 "Chris Mungall")
AnnotationAssertion(rdfs:comment obo:RO_0002493 "The relations here were created based on work originally by Fabian Neuhaus and David Osumi-Sutherland. The work has not yet been vetted and errors in definitions may have occurred during transcription.")
AnnotationAssertion(rdfs:label obo:RO_0002493 "existence ends with")
SubObjectPropertyOf(obo:RO_0002493 obo:RO_0002492)

# Object Property: obo:RO_0002494 (transformation of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002494 "x transformation of y if x is the immediate transformation of y, or is linked to y through a chain of transformation relationships")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002494 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002494 "transformation of")
SubObjectPropertyOf(obo:RO_0002494 obo:RO_0002202)
TransitiveObjectProperty(obo:RO_0002494)

# Object Property: obo:RO_0002495 (immediate transformation of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002495 "x immediate transformation of y iff x immediately succeeds y temporally at a time boundary t, and all of the matter present in x at t is present in y at t, and all the matter in y at t is present in x at t")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002495 "Chris Mungall")
AnnotationAssertion(obo:RO_0002575 obo:RO_0002495 obo:RO_0002494)
AnnotationAssertion(rdfs:label obo:RO_0002495 "immediate transformation of")
SubObjectPropertyOf(obo:RO_0002495 obo:RO_0002207)
SubObjectPropertyOf(obo:RO_0002495 obo:RO_0002494)

# Object Property: obo:RO_0002496 (existence starts during or after)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002496 "x existence starts during or after y if and only if the time point at which x starts is after or equivalent to the time point at which y starts. Formally: x existence starts during or after y iff α (x) >= α (y).")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002496 "Chris Mungall")
AnnotationAssertion(rdfs:comment obo:RO_0002496 "The relations here were created based on work originally by Fabian Neuhaus and David Osumi-Sutherland. The work has not yet been vetted and errors in definitions may have occurred during transcription.")
AnnotationAssertion(rdfs:label obo:RO_0002496 "existence starts during or after")
SubObjectPropertyOf(obo:RO_0002496 obo:RO_0002487)

# Object Property: obo:RO_0002497 (existence ends during or before)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002497 "x existence ends during or before y if and only if the time point at which x ends is before or equivalent to the time point at which y ends.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002497 "Chris Mungall")
AnnotationAssertion(rdfs:comment obo:RO_0002497 "The relations here were created based on work originally by Fabian Neuhaus and David Osumi-Sutherland. The work has not yet been vetted and errors in definitions may have occurred during transcription.")
AnnotationAssertion(rdfs:label obo:RO_0002497 "existence ends during or before")
SubObjectPropertyOf(obo:RO_0002497 obo:RO_0002487)

# Object Property: obo:RO_0002500 (causal agent in)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002500 "A relationship between a material entity and a process where the material entity has some causal role that influences the process")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002500 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:label obo:RO_0002500 "causal agent in")
SubObjectPropertyOf(obo:RO_0002500 obo:RO_0002595)
InverseObjectProperties(obo:RO_0002500 obo:RO_0002608)

# Object Property: obo:RO_0002501 (causal relation between processes)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002501 "p is causally related to q if and only if p or any part of p and q or any part of q are linked by a chain of events where each event pair is one of direct activation or direct inhibition. p may be upstream, downstream, part of or a container of q.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002501 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002501 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002501 "Do not use this relation directly. It is intended as a grouping for a diverse set of relations, all involving cause and effect.")
AnnotationAssertion(rdfs:label obo:RO_0002501 "causal relation between processes")
SubObjectPropertyOf(obo:RO_0002501 obo:RO_0002410)
ObjectPropertyDomain(obo:RO_0002501 obo:BFO_0000003)
ObjectPropertyRange(obo:RO_0002501 obo:BFO_0000003)

# Object Property: obo:RO_0002502 (depends on)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002502 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002502 "depends on")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002502 obo:BFO_0000169)

# Object Property: obo:RO_0002503 (towards)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002503 "q towards e2 if and only if q is a relational quality such that q inheres-in some e, and e != e2 and q is dependent on e2")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002503 "This relation is provided in order to support the use of relational qualities such as 'concentration of'; for example, the concentration of C in V is a quality that inheres in V, but pertains to C.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002503 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002503 <http://www.ncbi.nlm.nih.gov/pubmed/20064205>)
AnnotationAssertion(rdfs:label obo:RO_0002503 "towards")
SubObjectPropertyOf(obo:RO_0002503 obo:RO_0002502)

# Object Property: obo:RO_0002505 (has intermediate)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002505 "'lysine biosynthetic process via diaminopimelate' SubClassOf has_intermediate some diaminopimelate")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002505 "p has intermediate c if and only if p has parts p1, p2 and p1 has output c, and p2 has input c")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002505 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002505 "has intermediate product")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002505 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002505 "has intermediate")
SubObjectPropertyOf(obo:RO_0002505 obo:RO_0000057)

# Object Property: obo:RO_0002506 (causal relation between material entities)

AnnotationAssertion(obo:IAO_0000116 obo:RO_0002506 "The intent is that the process branch of the causal property hierarchy is primary (causal relations hold between occurrents/processes), and that the material branch is defined in terms of the process branch")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002506 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002506 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002506 "Do not use this relation directly. It is intended as a grouping for a diverse set of relations, all involving cause and effect.")
AnnotationAssertion(rdfs:label obo:RO_0002506 "causal relation between material entities")
SubObjectPropertyOf(obo:RO_0002506 obo:RO_0002410)
ObjectPropertyDomain(obo:RO_0002506 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002506 obo:BFO_0000040)

# Object Property: obo:RO_0002507 (determined by)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002507 "A coral reef environment is determined by a particular coral reef")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002507 "s determined by f if and only if s is a type of system, and f is a material entity that is part of s, such that f exerts a strong causal influence on the functioning of s, and the removal of f would cause the collapse of s.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002507 "The label for this relation is probably too general for its restricted use, where the domain is a system. It may be relabeled in future")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002507 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002507 <http://www.ncbi.nlm.nih.gov/pubmed/24330602>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002507 "determined by (system to material entity)")
AnnotationAssertion(dc:creator obo:RO_0002507 "Chris Mungall")
AnnotationAssertion(dc:creator obo:RO_0002507 "Pier Buttigieg")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002507 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002507 "determined by")
SubObjectPropertyOf(obo:RO_0002507 obo:BFO_0000050)
SubObjectPropertyOf(obo:RO_0002507 obo:RO_0002509)
SubObjectPropertyOf(obo:RO_0002507 obo:RO_0002559)
InverseObjectProperties(obo:RO_0002507 obo:RO_0002508)
ObjectPropertyDomain(obo:RO_0002507 obo:RO_0002577)
ObjectPropertyRange(obo:RO_0002507 obo:BFO_0000040)

# Object Property: obo:RO_0002508 (determines)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002508 "inverse of determined by")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002508 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002508 "determines (material entity to system)")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002508 obo:RO_0002259)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002508 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002508 "determines")
SubObjectPropertyOf(obo:RO_0002508 obo:RO_0002566)

# Object Property: obo:RO_0002509 (determined by part of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002509 "s 'determined by part of' w if and only if there exists some f such that (1) s 'determined by' f and (2) f part_of w, or f=w.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002509 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002509 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002509 "determined by part of")
SubObjectPropertyOf(obo:RO_0002509 obo:RO_0002131)
SubObjectPropertyOf(obo:RO_0002509 obo:RO_0002506)
ObjectPropertyDomain(obo:RO_0002509 obo:RO_0002577)
ObjectPropertyRange(obo:RO_0002509 obo:BFO_0000040)

# Object Property: obo:RO_0002510 (transcribed from)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002510 "x is transcribed from y if and only if x is synthesized from template y")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002510 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002510 "http://www.ncbi.nlm.nih.gov/pubmed/20226267"^^xsd:anyURI)
AnnotationAssertion(rdfs:label obo:RO_0002510 "transcribed from")
SubObjectPropertyOf(obo:RO_0002510 obo:RO_0002330)
InverseObjectProperties(obo:RO_0002510 obo:RO_0002511)

# Object Property: obo:RO_0002511 (transcribed to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002511 "inverse of transcribed from")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002511 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002511 "http://www.ncbi.nlm.nih.gov/pubmed/20226267"^^xsd:anyURI)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002511 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002511 "transcribed to")
SubObjectPropertyOf(obo:RO_0002511 obo:RO_0002330)

# Object Property: obo:RO_0002512 (ribosomal translation of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002512 "x is the ribosomal translation of y if and only if a ribosome reads x through a series of triplet codon-amino acid adaptor activities (GO:0030533) and produces y")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002512 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002512 "http://www.ncbi.nlm.nih.gov/pubmed/20226267"^^xsd:anyURI)
AnnotationAssertion(rdfs:label obo:RO_0002512 "ribosomal translation of")
SubObjectPropertyOf(obo:RO_0002512 obo:RO_0002330)

# Object Property: obo:RO_0002513 (ribosomally translates to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002513 "inverse of ribosomal translation of")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002513 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002513 "http://www.ncbi.nlm.nih.gov/pubmed/20226267"^^xsd:anyURI)
AnnotationAssertion(rdfs:label obo:RO_0002513 "ribosomally translates to")
SubObjectPropertyOf(obo:RO_0002513 obo:RO_0002330)

# Object Property: obo:RO_0002514 (sequentially related to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002514 "A relation that holds between two entities that have the property of being sequences or having sequences. ")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002514 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002514 "http://www.ncbi.nlm.nih.gov/pubmed/20226267"^^xsd:anyURI)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002514 "Do not use this relation directly. It is ended as a grouping for a diverse set of relations, all involving cause and effect.")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002514 "The domain and range of this relation include entities such as: information-bearing macromolecules such as DNA, or regions of these molecules; abstract information entities encoded as a linear sequence including text, abstract DNA sequences; Sequence features, entities that have a sequence or sequences. Note that these entities are not necessarily contiguous - for example, the mereological sum of exons on a genome of a particular gene.")
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002514 <http://biorxiv.org/content/early/2014/06/27/006650.abstract>)
AnnotationAssertion(rdfs:label obo:RO_0002514 "sequentially related to")
ObjectPropertyDomain(obo:RO_0002514 obo:RO_0002532)
ObjectPropertyRange(obo:RO_0002514 obo:RO_0002532)

# Object Property: obo:RO_0002515 (sequentially adjacent to)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002515 "Every UTR is adjacent to a CDS of the same transcript")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002515 "Two consecutive DNA residues are sequentially adjacent")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002515 "Two exons on a processed transcript that were previously connected by an intron are adjacent")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002515 "x is sequentially adjacent to y iff x and y do not overlap and if there are no base units intervening between x and y")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002515 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002515 "http://www.ncbi.nlm.nih.gov/pubmed/20226267"^^xsd:anyURI)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002515 <http://biorxiv.org/content/early/2014/06/27/006650.abstract>)
AnnotationAssertion(rdfs:label obo:RO_0002515 "sequentially adjacent to")
SubObjectPropertyOf(obo:RO_0002515 obo:RO_0002527)

# Object Property: obo:RO_0002516 (has start sequence)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002516 "Every CDS has as a start sequence the start codon for that transcript")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002516 "x has start sequence y if the start of x is identical to the start of y, and x has y as a subsequence")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002516 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002516 "started by")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002516 "http://www.ncbi.nlm.nih.gov/pubmed/20226267"^^xsd:anyURI)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002516 <http://biorxiv.org/content/early/2014/06/27/006650.abstract>)
AnnotationAssertion(rdfs:label obo:RO_0002516 "has start sequence")
SubObjectPropertyOf(obo:RO_0002516 obo:RO_0002524)
InverseObjectProperties(obo:RO_0002516 obo:RO_0002517)
TransitiveObjectProperty(obo:RO_0002516)

# Object Property: obo:RO_0002517 (is start sequence of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002517 "inverse of has start sequence")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002517 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002517 "starts")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002517 "http://www.ncbi.nlm.nih.gov/pubmed/20226267"^^xsd:anyURI)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002517 <http://biorxiv.org/content/early/2014/06/27/006650.abstract>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002517 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002517 "is start sequence of")
SubObjectPropertyOf(obo:RO_0002517 obo:RO_0002525)
TransitiveObjectProperty(obo:RO_0002517)

# Object Property: obo:RO_0002518 (has end sequence)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002518 "Every CDS has as an end sequence the stop codon for that transcript (note this follows from the SO definition of CDS, in which stop codons are included)")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002518 "x has end sequence y if the end of x is identical to the end of y, and x has y as a subsequence")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002518 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002518 "ended by")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002518 "http://www.ncbi.nlm.nih.gov/pubmed/20226267"^^xsd:anyURI)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002518 <http://biorxiv.org/content/early/2014/06/27/006650.abstract>)
AnnotationAssertion(rdfs:label obo:RO_0002518 "has end sequence")
SubObjectPropertyOf(obo:RO_0002518 obo:RO_0002524)
InverseObjectProperties(obo:RO_0002518 obo:RO_0002519)
TransitiveObjectProperty(obo:RO_0002518)

# Object Property: obo:RO_0002519 (is end sequence of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002519 "inverse of has end sequence")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002519 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002519 "ends")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002519 "http://www.ncbi.nlm.nih.gov/pubmed/20226267"^^xsd:anyURI)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002519 <http://biorxiv.org/content/early/2014/06/27/006650.abstract>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002519 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002519 "is end sequence of")
SubObjectPropertyOf(obo:RO_0002519 obo:RO_0002525)
TransitiveObjectProperty(obo:RO_0002519)

# Object Property: obo:RO_0002520 (is consecutive sequence of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002520 "x is a consecutive sequence of y iff x has subsequence y, and all the parts of x are made of zero or more repetitions of y or sequences as the same type as y.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002520 "In the SO paper, this was defined as an instance-type relation")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002520 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002520 "http://www.ncbi.nlm.nih.gov/pubmed/20226267"^^xsd:anyURI)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002520 <http://biorxiv.org/content/early/2014/06/27/006650.abstract>)
AnnotationAssertion(rdfs:label obo:RO_0002520 "is consecutive sequence of")
SubObjectPropertyOf(obo:RO_0002520 obo:RO_0002524)

# Object Property: obo:RO_0002521 (is sequentially aligned with)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002521 "Human Shh and Mouse Shh are sequentially aligned, by cirtue of the fact that they derive from the same ancestral sequence.")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002521 "x is sequentially aligned with if a significant portion bases of x and y correspond in terms of their base type and their relative ordering")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002521 "Chris Mungall")
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002521 <http://biorxiv.org/content/early/2014/06/27/006650.abstract>)
AnnotationAssertion(rdfs:label obo:RO_0002521 "is sequentially aligned with")
SubObjectPropertyOf(obo:RO_0002521 obo:RO_0002514)
SymmetricObjectProperty(obo:RO_0002521)

# Object Property: obo:RO_0002522 (bounds sequence of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002522 "The genomic exons of a transcript bound the sequence of the genomic introns of the same transcript (but the introns are not subsequences of the exons)")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002522 "x bounds the sequence of y iff the upstream-most part of x is upstream of or coincident with the upstream-most part of y, and the downstream-most part of x is downstream of or coincident with the downstream-most part of y")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002522 "Chris Mungall")
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002522 <http://biorxiv.org/content/early/2014/06/27/006650.abstract>)
AnnotationAssertion(rdfs:label obo:RO_0002522 "bounds sequence of")
SubObjectPropertyOf(obo:RO_0002522 obo:RO_0002514)
InverseObjectProperties(obo:RO_0002522 obo:RO_0002523)
TransitiveObjectProperty(obo:RO_0002522)

# Object Property: obo:RO_0002523 (is bound by sequence of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002523 "inverse of bounds sequence of")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002523 "Chris Mungall")
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002523 <http://biorxiv.org/content/early/2014/06/27/006650.abstract>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002523 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002523 "is bound by sequence of")
SubObjectPropertyOf(obo:RO_0002523 obo:RO_0002514)
TransitiveObjectProperty(obo:RO_0002523)

# Object Property: obo:RO_0002524 (has subsequence)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002524 "x has subsequence y iff all of the sequence parts of x are sequence parts of y")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002524 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002524 "contains")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002524 "http://www.ncbi.nlm.nih.gov/pubmed/20226267"^^xsd:anyURI)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002524 <http://biorxiv.org/content/early/2014/06/27/006650.abstract>)
AnnotationAssertion(rdfs:label obo:RO_0002524 "has subsequence")
SubObjectPropertyOf(obo:RO_0002524 obo:BFO_0000051)
SubObjectPropertyOf(obo:RO_0002524 obo:RO_0002522)
SubObjectPropertyOf(obo:RO_0002524 obo:RO_0002526)
InverseObjectProperties(obo:RO_0002524 obo:RO_0002525)
TransitiveObjectProperty(obo:RO_0002524)

# Object Property: obo:RO_0002525 (is subsequence of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002525 "inverse of has subsequence")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002525 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002525 "contained by")
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002525 <http://biorxiv.org/content/early/2014/06/27/006650.abstract>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002525 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002525 "is subsequence of")
SubObjectPropertyOf(obo:RO_0002525 obo:BFO_0000050)
SubObjectPropertyOf(obo:RO_0002525 obo:RO_0002523)
SubObjectPropertyOf(obo:RO_0002525 obo:RO_0002526)
TransitiveObjectProperty(obo:RO_0002525)

# Object Property: obo:RO_0002526 (overlaps sequence of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002526 "x overlaps the sequence of x if and only if x has a subsequence z and z is a subsequence of y.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002526 "Chris Mungall")
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002526 <http://biorxiv.org/content/early/2014/06/27/006650.abstract>)
AnnotationAssertion(rdfs:label obo:RO_0002526 "overlaps sequence of")
SubObjectPropertyOf(obo:RO_0002526 obo:RO_0002131)
SubObjectPropertyOf(obo:RO_0002526 obo:RO_0002514)
SymmetricObjectProperty(obo:RO_0002526)

# Object Property: obo:RO_0002527 (does not overlap sequence of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002527 "x does not overlaps the sequence of x if and only if there is no z such that x has a subsequence z and z is a subsequence of y.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002527 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002527 "disconnected from")
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002527 <http://biorxiv.org/content/early/2014/06/27/006650.abstract>)
AnnotationAssertion(rdfs:label obo:RO_0002527 "does not overlap sequence of")
SubObjectPropertyOf(obo:RO_0002527 obo:RO_0002514)
SymmetricObjectProperty(obo:RO_0002527)

# Object Property: obo:RO_0002528 (is upstream of sequence of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002528 "inverse of downstream of sequence of")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002528 "Chris Mungall")
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002528 <http://biorxiv.org/content/early/2014/06/27/006650.abstract>)
AnnotationAssertion(rdfs:label obo:RO_0002528 "is upstream of sequence of")
SubObjectPropertyOf(obo:RO_0002528 obo:RO_0002527)
TransitiveObjectProperty(obo:RO_0002528)

# Object Property: obo:RO_0002529 (is downstream of sequence of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002529 "x is downstream of the sequence of y iff either (1) x and y have sequence units, and all units of x are downstream of all units of y, or (2) x and y are sequence units, and x is either immediately downstream of y, or transitively downstream of y.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002529 "Chris Mungall")
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002529 <http://biorxiv.org/content/early/2014/06/27/006650.abstract>)
AnnotationAssertion(rdfs:label obo:RO_0002529 "is downstream of sequence of")
SubObjectPropertyOf(obo:RO_0002529 obo:RO_0002527)
InverseObjectProperties(obo:RO_0002529 obo:RO_0002529)
TransitiveObjectProperty(obo:RO_0002529)

# Object Property: obo:RO_0002530 (is immediately downstream of sequence of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002530 "A 3'UTR is immediately downstream of the sequence of the CDS from the same monocistronic transcript")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002530 "x is immediately downstream of the sequence of y iff either (1) x and y have sequence units, and all units of x are downstream of all units of y, and x is sequentially adjacent to y, or (2) x and y are sequence units, in which case the immediately downstream relation is primitive and defined by context: for DNA bases, y would be adjacent and 5' to y")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002530 "Chris Mungall")
AnnotationAssertion(obo:RO_0002575 obo:RO_0002530 obo:RO_0002529)
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002530 <http://biorxiv.org/content/early/2014/06/27/006650.abstract>)
AnnotationAssertion(rdfs:label obo:RO_0002530 "is immediately downstream of sequence of")
SubObjectPropertyOf(obo:RO_0002530 obo:RO_0002515)
SubObjectPropertyOf(obo:RO_0002530 obo:RO_0002529)

# Object Property: obo:RO_0002531 (is immediately upstream of sequence of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002531 "A 5'UTR is immediately upstream of the sequence of the CDS from the same monocistronic transcript")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002531 "inverse of immediately downstream of")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002531 "Chris Mungall")
AnnotationAssertion(cito:citesAsAuthority obo:RO_0002531 <http://biorxiv.org/content/early/2014/06/27/006650.abstract>)
AnnotationAssertion(rdfs:label obo:RO_0002531 "is immediately upstream of sequence of")
SubObjectPropertyOf(obo:RO_0002531 obo:RO_0002515)
SubObjectPropertyOf(obo:RO_0002531 obo:RO_0002528)

# Object Property: obo:RO_0002551 (has skeleton)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002551 "Forelimb SubClassOf has_skeleton some 'Forelimb skeleton'")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002551 "A relation between a segment or subdivision of an organism and the maximal subdivision of material entities that provides structural support for that segment or subdivision.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002551 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002551 "has supporting framework")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002551 "The skeleton of a structure may be a true skeleton (for example, the bony skeleton of a hand) or any kind of support framework (the hydrostatic skeleton of a sea star, the exoskeleton of an insect, the cytoskeleton of a cell).")
AnnotationAssertion(rdfs:label obo:RO_0002551 "has skeleton")
SubObjectPropertyOf(obo:RO_0002551 obo:BFO_0000051)
InverseObjectProperties(obo:RO_0002551 obo:RO_0002576)

# Object Property: obo:RO_0002552 (results in ending of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002552 "p results in the end of s if p results in a change of state in s whereby s either ceases to exist, or s becomes functionally impaired or s has its fate committed such that it is put on a path to be degraded.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002552 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002552 "results in ending of")
SubObjectPropertyOf(obo:RO_0002552 obo:RO_0000057)
SubObjectPropertyOf(obo:RO_0002552 obo:RO_0002295)

# Object Property: obo:RO_0002553 (hyperparasite of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002553 "x is a hyperparasite of y iff x is a parasite of a parasite of the target organism y")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002553 "Note that parasite-of is a diret relationship, so hyperparasite-of is not considered a sub-relation, even though hyperparasitism can be considered a form of parasitism")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002553 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002553 "http://eol.org/schema/terms/hyperparasitoidOf")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002553 "https://en.wikipedia.org/wiki/Hyperparasite")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_0002553 "epiparasite of")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_0002553 "hyperparasitoid of")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002553 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002553 "hyperparasite of")
SubObjectPropertyOf(obo:RO_0002553 obo:RO_0002454)
InverseObjectProperties(obo:RO_0002553 obo:RO_0002554)

# Object Property: obo:RO_0002554 (hyperparasitized by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002554 "inverse of hyperparasite of")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002554 "Chris Mungall")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_0002554 "has epiparasite")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_0002554 "has hyperparasite")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_0002554 "hyperparasitoidized by")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002554 obo:RO_0002259)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002554 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002554 "hyperparasitized by")
SubObjectPropertyOf(obo:RO_0002554 obo:RO_0002453)

# Object Property: obo:RO_0002555 (allelopath of)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002555 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002555 "http://en.wikipedia.org/wiki/Allelopathy")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002555 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002555 "allelopath of")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002555 "http://eol.org/schema/terms/allelopathyYes")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002555 "x is an allelopath of y iff  xis an organism produces one or more biochemicals that influence the growth, survival, and reproduction of y")
SubObjectPropertyOf(obo:RO_0002555 obo:RO_0002574)

# Object Property: obo:RO_0002556 (pathogen of)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002556 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002556 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002556 "pathogen of")
SubObjectPropertyOf(obo:RO_0002556 obo:RO_0002454)
InverseObjectProperties(obo:RO_0002556 obo:RO_0002557)

# Object Property: obo:RO_0002557 (has pathogen)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002557 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002557 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002557 "has pathogen")
SubObjectPropertyOf(obo:RO_0002557 obo:RO_0002453)

# Object Property: obo:RO_0002558 (has evidence)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002558 "inverse of is evidence for")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002558 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002558 <http://www.ncbi.nlm.nih.gov/pubmed/25052702>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002558 obo:RO_0002259)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002558 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002558 "x has evidence y iff , x is  an information content entity, material entity or process, and y supports either the existence of x, or the truth value of x.")
AnnotationAssertion(rdfs:label obo:RO_0002558 "has evidence")
SubObjectPropertyOf(obo:RO_0002558 obo:RO_0002616)

# Object Property: obo:RO_0002559 (causally influenced by)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002559 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002559 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002559 "causally influenced by (material entity to material entity)")
AnnotationAssertion(rdfs:label obo:RO_0002559 "causally influenced by")
SubObjectPropertyOf(obo:RO_0002559 obo:RO_0002506)
InverseObjectProperties(obo:RO_0002559 obo:RO_0002566)

# Object Property: obo:RO_0002563 (interaction relation helper property)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002563 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002563 "interaction relation helper property")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002563 <http://ontologydesignpatterns.org/wiki/Submissions:N-Ary_Relation_Pattern_%28OWL_2%29>)
AnnotationAssertion(foaf:page obo:RO_0002563 "https://github.com/oborel/obo-relations/wiki/InteractionRelations"^^xsd:anyURI)
SubObjectPropertyOf(obo:RO_0002563 obo:RO_0002464)

# Object Property: obo:RO_0002564 (molecular interaction relation helper property)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002564 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002564 "molecular interaction relation helper property")
SubObjectPropertyOf(obo:RO_0002564 obo:RO_0002563)

# Object Property: obo:RO_0002565 (results in movement of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002565 "Holds between p and c when p is locomotion process and the outcome of this process is the change of location of c")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002565 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002565 "")
AnnotationAssertion(rdfs:label obo:RO_0002565 "results in movement of")
SubObjectPropertyOf(obo:RO_0002565 obo:RO_0000057)

# Object Property: obo:RO_0002566 (causally influences)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002566 "Holds between materal entities a and b if the activity of a is causally upstream of the activity of b, or causally upstream of a an activity that modifies b")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002566 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002566 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002566 "causally influences (material entity to material entity)")
AnnotationAssertion(rdfs:label obo:RO_0002566 "causally influences")
SubObjectPropertyOf(obo:RO_0002566 obo:RO_0002506)

# Object Property: obo:RO_0002567 (biomechanically related to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002567 "A relation that holds between elements of a musculoskeletal system or its analogs.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002567 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002567 "Do not use this relation directly. It is ended as a grouping for a diverse set of relations, all involving the biomechanical processes.")
AnnotationAssertion(rdfs:label obo:RO_0002567 "biomechanically related to")
SubObjectPropertyOf(obo:RO_0002567 obo:RO_0002328)

# Object Property: obo:RO_0002568 (has muscle antagonist)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002568 "m1 has_muscle_antagonist m2 iff m1 has_muscle_insertion s, m2 has_muscle_insection s, m1 acts in opposition to m2, and m2 is responsible for returning the structure to its initial position.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002568 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002568 "Wikipedia:Antagonist_(muscle)")
AnnotationAssertion(rdfs:label obo:RO_0002568 "has muscle antagonist")
SubObjectPropertyOf(obo:RO_0002568 obo:RO_0002567)

# Object Property: obo:RO_0002569 (has branching part)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002569 "inverse of branching part of")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002569 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002569 obo:RO_0002259)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002569 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002569 "has branching part")
SubObjectPropertyOf(obo:RO_0002569 obo:RO_0002375)

# Object Property: obo:RO_0002570 (conduit for)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002570 "x is a conduit for y iff y overlaps through the lumen_of of x, and y has parts on either side of the lumen of x.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002570 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002570 "UBERON:cjm")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002570 "This relation holds between a thing with a 'conduit' (e.g. a bone foramen) and a 'conduee' (for example, a nerve) such that at the time the relationship holds, the conduee has two ends sticking out either end of the conduit. It should therefore note be used for objects that move through the conduit but whose spatial extent does not span the passage. For example, it would not be used for a mountain that contains a long tunnel through which trains pass. Nor would we use it for a digestive tract and objects such as food that pass through.")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002570 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002570 "conduit for")
SubObjectPropertyOf(obo:RO_0002570 obo:RO_0002131)
ObjectPropertyDomain(obo:RO_0002570 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002570 obo:BFO_0000040)

# Object Property: obo:RO_0002571 (lumen of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002571 "x lumen_of y iff x is the space or substance that is part of y and does not cross any of the inner membranes or boundaries of y that is maximal with respect to the volume of the convex hull.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002571 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002571 "GOC:cjm")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002571 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002571 "lumen of")
SubObjectPropertyOf(obo:RO_0002571 obo:BFO_0000050)
ObjectPropertyRange(obo:RO_0002571 obo:BFO_0000040)

# Object Property: obo:RO_0002572 (luminal space of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002572 "s is luminal space of x iff s is lumen_of x and s is an immaterial entity")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002572 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002572 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002572 "luminal space of")
SubObjectPropertyOf(obo:RO_0002572 obo:RO_0002571)
ObjectPropertyDomain(obo:RO_0002572 obo:BFO_0000141)

# Object Property: obo:RO_0002573 (has modifier)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002573 "A relation that holds between an attribute or a qualifier and another attribute.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002573 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002573 <http://www.ncbi.nlm.nih.gov/pubmed/20064205>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002573 "This relation is intended to be used in combination with PATO, to be able to refine PATO quality classes using modifiers such as 'abnormal' and 'normal'. It has yet to be formally aligned into an ontological framework; it's not clear what the ontological status of the \"modifiers\" are.")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002573 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002573 "has modifier")
ObjectPropertyDomain(obo:RO_0002573 obo:PATO_0000001)

# Object Property: obo:RO_0002574 (participates in a biotic-biotic interaction with)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002574 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002574 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002574 "participates in a biotic-biotic interaction with")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002574 <http://dx.doi.org/10.1016/j.ecoinf.2014.08.005>)
SubObjectPropertyOf(obo:RO_0002574 obo:RO_0002437)

# Object Property: obo:RO_0002576 (skeleton of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002576 "inverse of has skeleton")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002576 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002576 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002576 "skeleton of")
SubObjectPropertyOf(obo:RO_0002576 obo:BFO_0000050)
ObjectPropertyDomain(obo:RO_0002576 obo:CARO_0000003)
ObjectPropertyRange(obo:RO_0002576 obo:CARO_0000003)

# Object Property: obo:RO_0002578 (directly regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002578 "Process(P1) directly regulates process(P2) iff: P1 regulates P2 via direct physical interaction between an agent executing P1 (or some part of P1) and an agent executing P2 (or some part of P2).  For example, if protein A has protein binding activity(P1) that targets protein B and this binding  regulates the kinase activity (P2) of protein B then P1 directly regulates P2.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002578 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002578 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002578 "directly regulates (processual)")
AnnotationAssertion(obo:RO_0002575 obo:RO_0002578 obo:RO_0002211)
AnnotationAssertion(rdfs:label obo:RO_0002578 "directly regulates")
SubObjectPropertyOf(obo:RO_0002578 obo:RO_0002211)
SubObjectPropertyOf(obo:RO_0002578 obo:RO_0002412)

# Object Property: obo:RO_0002583 (existence starts at point)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002583 "x existence starts at point y if and only if the time point at which x starts is equivalent to the time point at which y ends.")
AnnotationAssertion(rdfs:label obo:RO_0002583 "existence starts at point")
SubObjectPropertyOf(obo:RO_0002583 obo:RO_0002487)

# Object Property: obo:RO_0002584 (has part structure that is capable of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002584 "gland SubClassOf 'has part structure that is capable of' some 'secretion by cell'")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002584 "s 'has part structure that is capable of' p if and only if there exists some part x such that s 'has part' x and x 'capable of' p")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002584 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002584 "has part structure that is capable of")
SubObjectPropertyOf(obo:RO_0002584 obo:RO_0002328)
SubObjectPropertyOf(obo:RO_0002584 obo:RO_0002595)

# Object Property: obo:RO_0002585 (results in closure of)

AnnotationAssertion(obo:IAO_0000116 obo:RO_0002585 "p 'results in closure of' c if and only if p is a developmental process and p results in a state of c changing from open to closed.")
AnnotationAssertion(rdfs:label obo:RO_0002585 "results in closure of")
SubObjectPropertyOf(obo:RO_0002585 obo:RO_0000057)
SubObjectPropertyOf(obo:RO_0002585 obo:RO_0002295)

# Object Property: obo:RO_0002586 (results in breakdown of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002586 "p results in breakdown of c if and only if the execution of p leads to c no longer being present at the end of p")
AnnotationAssertion(rdfs:label obo:RO_0002586 "results in breakdown of")
SubObjectPropertyOf(obo:RO_0002586 obo:RO_0002233)

# Object Property: obo:RO_0002587 (results in synthesis of)

AnnotationAssertion(rdfs:label obo:RO_0002587 "results in synthesis of")
SubObjectPropertyOf(obo:RO_0002587 obo:RO_0002297)

# Object Property: obo:RO_0002588 (results in assembly of)

AnnotationAssertion(rdfs:label obo:RO_0002588 "results in assembly of")
SubObjectPropertyOf(obo:RO_0002588 obo:RO_0002297)
SubObjectPropertyOf(obo:RO_0002588 obo:RO_0002592)

# Object Property: obo:RO_0002589 (results in catabolism of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002589 "p results in catabolism of c if and only if p is a catabolic process, and the execution of p results in c being broken into smaller parts with energy being released.")
AnnotationAssertion(rdfs:label obo:RO_0002589 "results in catabolism of")
SubObjectPropertyOf(obo:RO_0002589 obo:RO_0002586)

# Object Property: obo:RO_0002590 (results in disassembly of)

AnnotationAssertion(rdfs:label obo:RO_0002590 "results in disassembly of")
SubObjectPropertyOf(obo:RO_0002590 obo:RO_0002586)
SubObjectPropertyOf(obo:RO_0002590 obo:RO_0002592)

# Object Property: obo:RO_0002591 (results in remodeling of)

AnnotationAssertion(rdfs:label obo:RO_0002591 "results in remodeling of")
SubObjectPropertyOf(obo:RO_0002591 obo:RO_0002233)
SubObjectPropertyOf(obo:RO_0002591 obo:RO_0002592)

# Object Property: obo:RO_0002592 (results in organization of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002592 "p results in organization of c iff p results in the assembly, arrangement of constituent parts, or disassembly of c")
AnnotationAssertion(rdfs:label obo:RO_0002592 "results in organization of")
SubObjectPropertyOf(obo:RO_0002592 obo:RO_0000057)

# Object Property: obo:RO_0002593 (existence ends at point)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002593 "x existence starts at point y if and only if the time point at which x starts is equivalent to the time point at which y ends.")
AnnotationAssertion(rdfs:label obo:RO_0002593 "existence ends at point")
SubObjectPropertyOf(obo:RO_0002593 obo:RO_0002487)

# Object Property: obo:RO_0002595 (causal relation between material entity and a process)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002595 "A relationship that holds between a material entity and a process in which causality is involved, with either the material entity or some part of the material entity exerting some influence over the process, or the process influencing some aspect of the material entity.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002595 "Do not use this relation directly. It is intended as a grouping for a diverse set of relations, all involving cause and effect.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002595 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002595 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:label obo:RO_0002595 "causal relation between material entity and a process")
SubObjectPropertyOf(obo:RO_0002595 obo:RO_0002410)
ObjectPropertyDomain(obo:RO_0002595 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002595 obo:BFO_0000015)

# Object Property: obo:RO_0002596 (capable of regulating)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002596 "pyrethroid -> growth")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002596 "Holds between c and p if and only if c is capable of some activity a, and a regulates p.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002596 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:label obo:RO_0002596 "capable of regulating")
SubObjectPropertyOf(obo:RO_0002596 obo:RO_0002500)

# Object Property: obo:RO_0002597 (capable of negatively regulating)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002597 "Holds between c and p if and only if c is capable of some activity a, and a negatively regulates p.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002597 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:label obo:RO_0002597 "capable of negatively regulating")
SubObjectPropertyOf(obo:RO_0002597 obo:RO_0002596)

# Object Property: obo:RO_0002598 (capable of positively regulating)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002598 "renin -> arteriolar smooth muscle contraction")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002598 "Holds between c and p if and only if c is capable of some activity a, and a positively regulates p.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002598 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:label obo:RO_0002598 "capable of positively regulating")
SubObjectPropertyOf(obo:RO_0002598 obo:RO_0002596)

# Object Property: obo:RO_0002599 (capable of inhibiting or preventing pathological process)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002599 "pazopanib -> pathological angiogenesis")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002599 "Holds between a material entity c and a pathological process p if and only if c is capable of some activity a, where a inhibits p.")
AnnotationAssertion(Annotation(rdfs:comment "Usage of the term 'treats' applies when we believe there to be a an inhibitory relationship") obo:IAO_0000118 obo:RO_0002599 "treats")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002599 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002599 "The entity c may be a molecular entity with a drug role, or it could be some other entity used in a therapeutic context, such as a hyperbaric chamber.")
AnnotationAssertion(rdfs:label obo:RO_0002599 "capable of inhibiting or preventing pathological process")
SubObjectPropertyOf(obo:RO_0002599 obo:RO_0002597)

# Object Property: obo:RO_0002600 (capable of upregulating or causing pathological process)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002600 "benzene -> cancer [CHEBI]")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002600 "Holds between a material entity c and a pathological process p if and only if c is capable of some activity a, where a negatively regulates p.")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002600 "causes disease")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002600 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:label obo:RO_0002600 "capable of upregulating or causing pathological process")
SubObjectPropertyOf(obo:RO_0002600 obo:RO_0002598)

# Object Property: obo:RO_0002606 (is substance that treats)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002606 "c is a substance that treats d if c is a material entity (such as a small molecule or compound) and d is a pathological process, phenotype or disease, and c is capable of some activity that negative regulates or decreases the magnitude of d.")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002606 "treats")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002606 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:label obo:RO_0002606 "is substance that treats")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002606 <https://code.google.com/p/obo-relations/issues/detail?id=46>)
SubObjectPropertyOf(obo:RO_0002606 obo:RO_0002599)

# Object Property: obo:RO_0002607 (is marker for)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002607 "c is marker for d iff the presence or occurrence of d is correlated with the presence of occurrence of c, and the observation of c is used to infer the presence or occurrence of d. Note that this does not imply that c and d are in a direct causal relationship, as it may be the case that there is a third entity e that stands in a direct causal relationship with c and d.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002607 "May be ceded to OBI")
AnnotationAssertion(rdfs:label obo:RO_0002607 "is marker for")
SubObjectPropertyOf(obo:RO_0002607 obo:RO_0002610)

# Object Property: obo:RO_0002608 (has causal agent)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002608 "Inverse of 'causal agent in'")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002608 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:label obo:RO_0002608 "has causal agent")
SubObjectPropertyOf(obo:RO_0002608 obo:RO_0002410)

# Object Property: obo:RO_0002609 (related via dependence to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002609 "A relationship that holds between two entities, where the relationship holds based on the presence or absence of statistical dependence relationship. The entities may be statistical variables, or they may be other kinds of entities such as diseases, chemical entities or processes.")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002609 "Do not use this relation directly. It is intended as a grouping for a diverse set of relations, all involving cause and effect.")
AnnotationAssertion(rdfs:label obo:RO_0002609 "related via dependence to")

# Object Property: obo:RO_0002610 (correlated with)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002610 "A relationship that holds between two entities, where the entities exhibit a statistical dependence relationship. The entities may be statistical variables, or they may be other kinds of entities such as diseases, chemical entities or processes.")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002610 "Groups both positive and negative correlation")
AnnotationAssertion(rdfs:label obo:RO_0002610 "correlated with")
SubObjectPropertyOf(obo:RO_0002610 obo:RO_0002609)

# Object Property: obo:RO_0002614 (is evidence with support from)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002614 "An instance of a sequence similarity evidence (ECO:0000044) that uses a homologous sequence UniProtKB:P12345 as support.")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002614 "A relationship between a piece of evidence and an entity that plays a role in supporting that evidence.")
AnnotationAssertion(rdfs:comment obo:RO_0002614 "In the Gene Ontology association model, this corresponds to the With/From field")
AnnotationAssertion(rdfs:label obo:RO_0002614 "is evidence with support from")
SubObjectPropertyOf(obo:RO_0002614 obo:RO_0002616)

# Object Property: obo:RO_0002615 (has model)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002615 "Inverse of is-model-of")
AnnotationAssertion(rdfs:label obo:RO_0002615 "has model")
InverseObjectProperties(obo:RO_0002615 obo:RO_0003301)

# Object Property: obo:RO_0002616 (related via evidence or inference to)

AnnotationAssertion(rdfs:label obo:RO_0002616 "related via evidence or inference to")

# Object Property: obo:RO_0002618 (visits)

AnnotationAssertion(rdfs:label obo:RO_0002618 "visits")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002618 "https://github.com/oborel/obo-relations/issues/74"^^xsd:anyURI)
SubObjectPropertyOf(obo:RO_0002618 obo:RO_0002574)
InverseObjectProperties(obo:RO_0002618 obo:RO_0002619)

# Object Property: obo:RO_0002619 (visited by)

AnnotationAssertion(rdfs:label obo:RO_0002619 "visited by")
SubObjectPropertyOf(obo:RO_0002619 obo:RO_0002574)

# Object Property: obo:RO_0002622 (visits flowers of)

AnnotationAssertion(rdfs:label obo:RO_0002622 "visits flowers of")
SubObjectPropertyOf(obo:RO_0002622 obo:RO_0002618)
InverseObjectProperties(obo:RO_0002622 obo:RO_0002623)

# Object Property: obo:RO_0002623 (has flowers visited by)

AnnotationAssertion(rdfs:label obo:RO_0002623 "has flowers visited by")
SubObjectPropertyOf(obo:RO_0002623 obo:RO_0002619)

# Object Property: obo:RO_0002624 (lays eggs in)

AnnotationAssertion(rdfs:label obo:RO_0002624 "lays eggs in")
SubObjectPropertyOf(obo:RO_0002624 obo:RO_0002444)
SubObjectPropertyOf(obo:RO_0002624 obo:RO_0002618)
InverseObjectProperties(obo:RO_0002624 obo:RO_0002625)

# Object Property: obo:RO_0002625 (has eggs laid in by)

AnnotationAssertion(rdfs:label obo:RO_0002625 "has eggs laid in by")
SubObjectPropertyOf(obo:RO_0002625 obo:RO_0002445)
SubObjectPropertyOf(obo:RO_0002625 obo:RO_0002619)

# Object Property: obo:RO_0002626 (kills)

AnnotationAssertion(obo:IAO_0000119 obo:RO_0002626 "https://github.com/jhpoelen/eol-globi-data/issues/143")
AnnotationAssertion(rdfs:label obo:RO_0002626 "kills")
SubObjectPropertyOf(obo:RO_0002626 obo:RO_0002574)
InverseObjectProperties(obo:RO_0002626 obo:RO_0002627)

# Object Property: obo:RO_0002627 (is killed by)

AnnotationAssertion(rdfs:label obo:RO_0002627 "is killed by")
SubObjectPropertyOf(obo:RO_0002627 obo:RO_0002574)

# Object Property: obo:RO_0002629 (directly positively regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002629 "Process(P1) directly postively regulates process(P2) iff: P1 positively regulates P2 via direct physical interaction between an agent executing P1 (or some part of P1) and an agent executing P2 (or some part of P2).  For example, if protein A has protein binding activity(P1) that targets protein B and this binding positively regulates the kinase activity (P2) of protein B then P1 directly positively regulates P2.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002629 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002629 "directly positively regulates (process to process)")
AnnotationAssertion(rdfs:label obo:RO_0002629 "directly positively regulates")
SubObjectPropertyOf(obo:RO_0002629 obo:RO_0002213)
SubObjectPropertyOf(obo:RO_0002629 obo:RO_0002578)

# Object Property: obo:RO_0002630 (directly negatively regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002630 "Process(P1) directly negatively regulates process(P2) iff: P1 negatively regulates P2 via direct physical interaction between an agent executing P1 (or some part of P1) and an agent executing P2 (or some part of P2).  For example, if protein A has protein binding activity(P1) that targets protein B and this binding  negatively regulates the kinase activity (P2) of protein B then P1 directly negatively regulates P2.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002630 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002630 "directly negatively regulates (process to process)")
AnnotationAssertion(rdfs:label obo:RO_0002630 "directly negatively regulates")
SubObjectPropertyOf(obo:RO_0002630 obo:RO_0002212)
SubObjectPropertyOf(obo:RO_0002630 obo:RO_0002578)

# Object Property: obo:RO_0002632 (ectoparasite of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002632 "A sub-relation of parasite-of in which the parasite lives on or in the integumental system of the host")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002632 <https://en.wikipedia.org/wiki/Parasitism#Types>)
AnnotationAssertion(rdfs:label obo:RO_0002632 "ectoparasite of")
SubObjectPropertyOf(obo:RO_0002632 obo:RO_0002444)
InverseObjectProperties(obo:RO_0002632 obo:RO_0002633)

# Object Property: obo:RO_0002633 (has ectoparasite)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002633 "inverse of ectoparasite of")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002633 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002633 "has ectoparasite")
SubObjectPropertyOf(obo:RO_0002633 obo:RO_0002445)

# Object Property: obo:RO_0002634 (endoparasite of)

AnnotationAssertion(obo:IAO_0000119 obo:RO_0002634 <https://en.wikipedia.org/wiki/Parasitism#Types>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002634 "A sub-relation of parasite-of in which the parasite lives inside the host, beneath the integumental system")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_0002634 "lives inside of")
AnnotationAssertion(rdfs:label obo:RO_0002634 "endoparasite of")
SubObjectPropertyOf(obo:RO_0002634 obo:RO_0002444)
InverseObjectProperties(obo:RO_0002634 obo:RO_0002635)

# Object Property: obo:RO_0002635 (has endoparasite)

AnnotationAssertion(rdfs:label obo:RO_0002635 "has endoparasite")
SubObjectPropertyOf(obo:RO_0002635 obo:RO_0002445)

# Object Property: obo:RO_0002636 (mesoparasite of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002636 "A sub-relation of parasite-of in which the parasite is partially an endoparasite and partially an ectoparasite")
AnnotationAssertion(rdfs:label obo:RO_0002636 "mesoparasite of")
SubObjectPropertyOf(obo:RO_0002636 obo:RO_0002444)
InverseObjectProperties(obo:RO_0002636 obo:RO_0002637)

# Object Property: obo:RO_0002637 (has mesoparasite)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002637 "inverse of mesoparasite of")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002637 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002637 "has mesoparasite")
SubObjectPropertyOf(obo:RO_0002637 obo:RO_0002445)

# Object Property: obo:RO_0002638 (intercellular endoparasite of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002638 "A sub-relation of endoparasite-of in which the parasite inhabits the spaces between host cells.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002638 <https://en.wikipedia.org/wiki/Parasitism#Types>)
AnnotationAssertion(rdfs:label obo:RO_0002638 "intercellular endoparasite of")
SubObjectPropertyOf(obo:RO_0002638 obo:RO_0002634)
InverseObjectProperties(obo:RO_0002638 obo:RO_0002639)

# Object Property: obo:RO_0002639 (has intercellular endoparasite)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002639 "inverse of intercellular endoparasite of")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002639 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002639 "has intercellular endoparasite")
SubObjectPropertyOf(obo:RO_0002639 obo:RO_0002635)

# Object Property: obo:RO_0002640 (intracellular endoparasite of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002640 "A sub-relation of endoparasite-of in which the parasite inhabits host cells.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002640 <https://en.wikipedia.org/wiki/Parasitism#Types>)
AnnotationAssertion(rdfs:label obo:RO_0002640 "intracellular endoparasite of")
SubObjectPropertyOf(obo:RO_0002640 obo:RO_0002634)
InverseObjectProperties(obo:RO_0002640 obo:RO_0002641)

# Object Property: obo:RO_0002641 (has intracellular endoparasite)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002641 "inverse of intracellular endoparasite of")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002641 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002641 "has intracellular endoparasite")
SubObjectPropertyOf(obo:RO_0002641 obo:RO_0002635)

# Object Property: obo:RO_0003000 (produces)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0003000 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0003000 "a produces b if some process that occurs_in a has_output b, where a and b are material entities. Examples: hybridoma cell line produces monoclonal antibody reagent; chondroblast produces avascular GAG-rich matrix."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0003000 "Melissa Haendel")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0003000 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0003000 "Note that this definition doesn't quite distinguish the output of a transformation process from a production process, which is related to the identity/granularity issue."^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_0003000 "produces"@en)
InverseObjectProperties(obo:RO_0003000 obo:RO_0003001)
ObjectPropertyDomain(obo:RO_0003000 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0003000 obo:BFO_0000040)

# Object Property: obo:RO_0003001 (produced by)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0003001 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0003001 "a produced_by b iff some process that occurs_in b has_output a.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0003001 "Melissa Haendel")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0003001 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0003001 "produced by"@en)
ObjectPropertyDomain(obo:RO_0003001 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0003001 obo:BFO_0000040)

# Object Property: obo:RO_0003002 (represses expression of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0003002 "Holds between protein a (a transcription factor) and DNA element b if and only if a diminishes the process of transcription of b.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0003002 "Logical axioms to be added after the relevant branch of GO is MIREOTed in")
AnnotationAssertion(rdfs:label obo:RO_0003002 "represses expression of")
SubObjectPropertyOf(obo:RO_0003002 obo:RO_0002449)

# Object Property: obo:RO_0003003 (increases expression of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0003003 "Holds between protein a (a transcription factor) and DNA element b if and only if a activates the process of transcription of b.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0003003 "Logical axioms to be added after the relevant branch of GO is MIREOTed in")
AnnotationAssertion(rdfs:label obo:RO_0003003 "increases expression of")
SubObjectPropertyOf(obo:RO_0003003 obo:RO_0002450)

# Object Property: obo:RO_0003301 (is model of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0003301 "Relation between a research artifact and an entity it is used to study, in virtue of its replicating or approximating features of the studied entity.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0003301 "To Do: decide on scope of this relation - inclusive of computational models in domain, or only physical models?  Restricted to linking biological systems and phenomena?  Inclusive of only diseases in range, or broader?")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0003301 "Matthew Brush")
AnnotationAssertion(rdfs:comment obo:RO_0003301 "The driving use case for this relation was to link a biological model system such as a cell line or model organism to a disease it is used to investigate, in virtue of the model system exhibiting features similar to that of the disease of interest.")
AnnotationAssertion(rdfs:label obo:RO_0003301 "is model of"@en)

# Object Property: obo:RO_0003302 (causes or contributes to condition)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0003302 "The genetic variant 'NM_007294.3(BRCA1):c.110C>A (p.Thr37Lys)' casues or contributes to the disease  'familial breast-ovarian cancer'.

An environment of exposure to arsenic causes or contributes to the phenotype of patchy skin hyperpigmentation, and the disease 'skin cancer'.")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0003302 "A relationship between an entity (e.g. a genotype, genetic variation, chemical, or environmental exposure) and a condition (a phenotype or disease), where the entity has some causal or contributing role that influences the condition.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0003302 "Note that relationships of phenotypes to organisms/strains that bear them, or diseases they are manifest in, should continue to use RO:0002200 ! 'has phenotype' and RO:0002201 ! 'phenotype of'.")
AnnotationAssertion(rdfs:comment obo:RO_0003302 "Genetic variations can span any level of granularity from a full genome or genotype to an individual gene  or sequence alteration.  These variations can be represented at the physical level (DNA/RNA macromolecules or their parts, as in the ChEBI ontology and Molecular Sequence Ontology) or at the abstract level (generically dependent continuant sequence features that are carried by these macromolecules, as in the Sequence Ontology and Genotype Ontology).  The causal relations in this hierarchy can be used in linking either physical or abstract genetic variations to phenotypes or diseases they cause or contribute to.

Environmental exposures include those imposed by natural environments, experimentally applied conditions, or clinical interventions.")
AnnotationAssertion(rdfs:label obo:RO_0003302 "causes or contributes to condition"@en)
SubObjectPropertyOf(obo:RO_0003302 obo:RO_0002410)

# Object Property: obo:RO_0003303 (causes condition)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0003303 "A relationship between an entity (e.g. a genotype, genetic variation, chemical, or environmental exposure) and a condition (a phenotype or disease), where the entity has some causal role for the condition.")
AnnotationAssertion(rdfs:label obo:RO_0003303 "causes condition"@en)
SubObjectPropertyOf(obo:RO_0003303 obo:RO_0003302)

# Object Property: obo:RO_0003304 (contributes to condition)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0003304 "A relationship between an entity (e.g. a genotype, genetic variation, chemical, or environmental exposure) and a condition (a phenotype or disease), where the entity has some contributing role that influences the condition.")
AnnotationAssertion(rdfs:label obo:RO_0003304 "contributes to condition"@en)
SubObjectPropertyOf(obo:RO_0003304 obo:RO_0003302)

# Object Property: obo:RO_0003305 (contributes to severity of condition)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0003305 "A relationship between an entity (e.g. a genotype, genetic variation, chemical, or environmental exposure) and a condition (a phenotype or disease), where the entity influences the severity with which a condition manifests in an individual.")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0003305 "contributes to expressivity of condition")
AnnotationAssertion(rdfs:label obo:RO_0003305 "contributes to severity of condition"@en)
SubObjectPropertyOf(obo:RO_0003305 obo:RO_0003304)

# Object Property: obo:RO_0003306 (contributes to frequency of condition)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0003306 "A relationship between an entity (e.g. a genotype, genetic variation, chemical, or environmental exposure) and a condition (a phenotype or disease), where the entity influences the frequency of the condition in a population.")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0003306 "contributes to penetrance of condition")
AnnotationAssertion(rdfs:label obo:RO_0003306 "contributes to frequency of condition"@en)
SubObjectPropertyOf(obo:RO_0003306 obo:RO_0003304)

# Object Property: obo:RO_0003307 (ameliorates condition)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0003307 "A relationship between an entity (e.g. a genotype, genetic variation, chemical, or environmental exposure) and a condition (a phenotype or disease), where the presence of the entity reduces or eliminates some or all aspects of the condition.")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0003307 "is preventative for condition")
AnnotationAssertion(rdfs:comment obo:RO_0003307 "Genetic variations can span any level of granularity from a full genome or genotype to an individual gene  or sequence alteration.  These variations can be represented at the physical level (DNA/RNA macromolecules or their parts, as in the ChEBI ontology and Molecular Sequence Ontology) or at the abstract level (generically dependent continuant sequence features that are carried by these macromolecules, as in the Sequence Ontology and Genotype Ontology).  The causal relations in this hierarchy can be used in linking either physical or abstract genetic variations to phenotypes or diseases they cause or contribute to. 

Environmental exposures include those imposed by natural environments, experimentally applied conditions, or clinical interventions.")
AnnotationAssertion(rdfs:label obo:RO_0003307 "ameliorates condition"@en)
SubObjectPropertyOf(obo:RO_0003307 obo:RO_0003305)

# Object Property: obo:RO_0003308 (correlated with condition)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0003308 "A relationship between an entity and a condition (phenotype or disease) with which it exhibits a statistical dependence relationship.")
AnnotationAssertion(rdfs:label obo:RO_0003308 "correlated with condition"@en)
SubObjectPropertyOf(obo:RO_0003308 obo:RO_0002610)

# Object Property: obo:RO_0003309 (exacerbates condition)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0003309 "A relationship between an entity (e.g. a chemical, environmental exposure, or some form of genetic variation) and a condition (a phenotype or disease), where the presence of the entity worsens some or all aspects of the condition.")
AnnotationAssertion(rdfs:label obo:RO_0003309 "exacerbates condition"@en)
SubObjectPropertyOf(obo:RO_0003309 obo:RO_0003305)

# Object Property: obo:RO_0003310 (condition ameliorated by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0003310 "A relationship between a condition (a phenotype or disease) and an entity (e.g. a chemical, environmental exposure, or some form of genetic variation) where some or all aspects of the condition are reduced or eliminated by the presence of the entity.")
AnnotationAssertion(rdfs:label obo:RO_0003310 "condition ameliorated by"@en)
SubObjectPropertyOf(obo:RO_0003310 obo:RO_0002410)

# Object Property: obo:RO_0003311 (condition exacerbated by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0003311 "A relationship between a condition (a phenotype or disease) and an entity (e.g. a chemical, environmental exposure, or some form of genetic variation) where some or all aspects of the condition are worsened by the presence of the entity.")
AnnotationAssertion(rdfs:label obo:RO_0003311 "condition exacerbated by"@en)
SubObjectPropertyOf(obo:RO_0003311 obo:RO_0002410)

# Object Property: obo:RO_0008501 (epiphyte of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0008501 "An interaction relationship wherein a plant or algae is living on the outside surface of another plant.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0008501 "https://en.wikipedia.org/wiki/Epiphyte")
AnnotationAssertion(rdfs:label obo:RO_0008501 "epiphyte of")
SubObjectPropertyOf(obo:RO_0008501 obo:RO_0002440)
InverseObjectProperties(obo:RO_0008501 obo:RO_0008502)

# Object Property: obo:RO_0008502 (has epiphyte)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0008502 "inverse of epiphyte of")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0008502 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0008502 "has epiphyte")
SubObjectPropertyOf(obo:RO_0008502 obo:RO_0002440)

# Object Property: obo:RO_0008503 (kleptoparasite of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0008503 "A sub-relation of parasite of in which a parasite steals resources from another organism, usually food or nest material")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0008503 "https://en.wikipedia.org/wiki/Kleptoparasitism")
AnnotationAssertion(rdfs:label obo:RO_0008503 "kleptoparasite of")
SubObjectPropertyOf(obo:RO_0008503 obo:RO_0002444)
InverseObjectProperties(obo:RO_0008503 obo:RO_0008504)

# Object Property: obo:RO_0008504 (kleptoparasitized by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0008504 "inverse of kleptoparasite of")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0008504 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0008504 "kleptoparasitized by")
SubObjectPropertyOf(obo:RO_0008504 obo:RO_0002445)

# Object Property: obo:RO_0008505 (creates habitat for)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0008505 "An interaction relationship wherein one organism creates a structure or environment that is lived in by another organism.")
AnnotationAssertion(rdfs:label obo:RO_0008505 "creates habitat for")
SubObjectPropertyOf(obo:RO_0008505 obo:RO_0002321)

# Object Property: obo:RO_0008506 (co-occurs)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0008506 "An interaction relationship describing organisms that often occur together at the same time and space or in the same environment.")
AnnotationAssertion(rdfs:label obo:RO_0008506 "co-occurs")
SubObjectPropertyOf(obo:RO_0008506 obo:RO_0002321)
SymmetricObjectProperty(obo:RO_0008506)

# Object Property: obo:RO_0008507 (lays eggs on)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0008507 "An interaction relationship in which organism a lays eggs on the outside surface of organism b. Organism b is neither helped nor harmed in the process of egg laying or incubation.")
AnnotationAssertion(rdfs:label obo:RO_0008507 "lays eggs on")
SubObjectPropertyOf(obo:RO_0008507 obo:RO_0002618)
InverseObjectProperties(obo:RO_0008507 obo:RO_0008508)

# Object Property: obo:RO_0008508 (has eggs laid on by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0008508 "An interaction relationship in which organism a lays eggs on the outside surface of organism b. Organism b is neither helped nor harmed in the process of egg laying or incubation.")
AnnotationAssertion(rdfs:label obo:RO_0008508 "has eggs laid on by")
SubObjectPropertyOf(obo:RO_0008508 obo:RO_0002619)

# Object Property: obo:RO_0009001 (has substance added)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0009001 "muffin 'has substance added' some 'baking soda'"@en)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0009001 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0009001 "\"has substance added\" is a relation existing between a (physical) entity and a substance in which the entity has had the substance added to it at some point in time."@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0009001 "The relation X 'has substance added' some Y doesn't imply that X still has Y in any detectable fashion subsequent to the addition. Water in dehydrated food or ice cubes are examples, as is food that undergoes chemical transformation. This definition should encompass recipe ingredients."@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0009001 "Damion Dooley")
AnnotationAssertion(rdfs:label obo:RO_0009001 "has substance added"@en)
IrreflexiveObjectProperty(obo:RO_0009001)

# Object Property: obo:RO_0009002 (has substance removed)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0009002 "'egg white' 'has substance removed' some 'egg yolk'"@en)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0009002 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0009002 "\"has substance removed\" is a relation existing between two physical entities in which the first entity has had the second entity (a substance) removed from it at some point in time."@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0009002 "Damion Dooley"@en)
AnnotationAssertion(rdfs:label obo:RO_0009002 "has substance removed"@en)
IrreflexiveObjectProperty(obo:RO_0009002)

# Object Property: obo:RO_0009003 (immersed in)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0009003 "sardines 'immersed in' some 'oil and mustard'"@en)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0009003 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0009003 "\"immersed in\" is a relation between a (physical) entity and a fluid substance in which the entity is wholely or substantially surrounded by the substance."@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0009003 "Damion Dooley")
AnnotationAssertion(rdfs:label obo:RO_0009003 "immersed in"@en)
IrreflexiveObjectProperty(obo:RO_0009003)

# Object Property: obo:RO_0009005 (has primary substance added)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0009005 "bread 'has primary substance added' some 'flour'"@en)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0009005 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0009005 "'has primary substance added' indicates that an entity has had the given substance added to it in a proportion greater than any other added substance."@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0009005 "Damion Dooley")
AnnotationAssertion(rdfs:label obo:RO_0009005 "has primary substance added"@en)
SubObjectPropertyOf(obo:RO_0009005 obo:RO_0009001)
IrreflexiveObjectProperty(obo:RO_0009005)

# Object Property: obo:RO_0009501 (realized in response to)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0009501 "A drought sensitivity trait that inheres in a whole plant is realized in a systemic response process in response to exposure to drought conditions.")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0009501 "Environmental polymorphism in butterflies: These butterflies have a 'responsivity to day length trait' that is realized in response to the duration of the day, and is realized in developmental processes that lead to increased or decreased pigmentation in the adult morph.")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0009501 "r 'realized in response to' s iff, r is a realizable (e.g. a plant trait such as responsivity to drought), s is an environmental stimulus (a process), and s directly causes the realization of r.")
AnnotationAssertion(dc:contributor obo:RO_0009501 "Austin Meier")
AnnotationAssertion(dc:contributor obo:RO_0009501 "Chris Mungall")
AnnotationAssertion(dc:contributor obo:RO_0009501 "David Osumi-Sutherland")
AnnotationAssertion(dc:contributor obo:RO_0009501 "Marie Angelique Laporte")
AnnotationAssertion(rdfs:label obo:RO_0009501 "realized in response to"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0009501 "https://docs.google.com/document/d/1KWhZxVBhIPkV6_daHta0h6UyHbjY2eIrnON1WIRGgdY/edit"^^xsd:anyURI)
SubObjectPropertyOf(obo:RO_0009501 obo:RO_0002410)
ObjectPropertyDomain(obo:RO_0009501 obo:BFO_0000017)
ObjectPropertyRange(obo:RO_0009501 obo:BFO_0000015)

# Object Property: obo:RO_HOM0000000 (in similarity relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref obo:HOM_0000000) Annotation(oboInOwl:hasDbXref "BGEE:curator"^^xsd:string) obo:IAO_0000115 obo:RO_HOM0000000 "Relation between biological objects that resemble or are related to each other sufficiently to warrant a comparison."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000000 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000000 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000000 "ECO:0000041"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000000 "SO:similar_to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000000 "sameness"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000000 "similar to"^^xsd:string)
AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1007/BF02814479>) oboInOwl:hasRelatedSynonym obo:RO_HOM0000000 "correspondence"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000000 "resemblance"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000000 "in similarity relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000000 obo:HOM_0000000)
SymmetricObjectProperty(obo:RO_HOM0000000)

# Object Property: obo:RO_HOM0000001 (in homology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1002/bies.950180611>) Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1002/jmor.1051730307>) Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1007/BF02814480>) Annotation(oboInOwl:hasDbXref obo:HOM_0000001) obo:IAO_0000115 obo:RO_HOM0000001 "Similarity that results from common evolutionary origin."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000001 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000001 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000001 "homologous to"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:RO_HOM0000001 "This broad definition encompasses all the working definitions proposed so far in the literature."^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000001 "in homology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000001 obo:HOM_0000001)
SubObjectPropertyOf(obo:RO_HOM0000001 obo:RO_0002158)
SubObjectPropertyOf(obo:RO_HOM0000001 obo:RO_HOM0000000)
SymmetricObjectProperty(obo:RO_HOM0000001)
DisjointObjectProperties(obo:RO_HOM0000001 obo:RO_HOM0000002)

# Object Property: obo:RO_HOM0000002 (in homoplasy relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1016/j.jhevol.2006.11.010>) Annotation(oboInOwl:hasDbXref obo:HOM_0000002) obo:IAO_0000115 obo:RO_HOM0000002 "Similarity that results from independent evolution."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000002 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000002 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000002 "homoplasous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000002 "analogy"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000002 "in homoplasy relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000002 obo:HOM_0000002)
SubObjectPropertyOf(obo:RO_HOM0000002 obo:RO_HOM0000000)
SymmetricObjectProperty(obo:RO_HOM0000002)

# Object Property: obo:RO_HOM0000003 (in homocracy relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1007/BF02814484>) Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1007/s00427-003-0301-4>) Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1186/1742-9994-2-15>) Annotation(oboInOwl:hasDbXref obo:HOM_0000003) obo:IAO_0000115 obo:RO_HOM0000003 "Similarity that is characterized by the organization of anatomical structures through the expression of homologous or identical patterning genes."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000003 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000003 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000003 "ECO:0000075"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000003 "homocracous to"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:RO_HOM0000003 "Homology and homocracy are not mutually exclusive. The homology relationships of patterning genes may be unresolved and thus may include orthologues and paralogues."^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000003 "in homocracy relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000003 obo:HOM_0000003)
SubObjectPropertyOf(obo:RO_HOM0000003 obo:RO_0002320)
SubObjectPropertyOf(obo:RO_HOM0000003 obo:RO_HOM0000000)
SymmetricObjectProperty(obo:RO_HOM0000003)

# Object Property: obo:RO_HOM0000004 (in convergence relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1016/j.jhevol.2006.11.010>) Annotation(oboInOwl:hasDbXref obo:HOM_0000004) obo:IAO_0000115 obo:RO_HOM0000004 "Homoplasy that involves different underlying mechanisms or structures."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000004 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000004 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000004 "analogy"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:RO_HOM0000004 "Convergence usually implies a notion of adaptation."^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000004 "in convergence relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000004 obo:HOM_0000004)
SubObjectPropertyOf(obo:RO_HOM0000004 obo:RO_HOM0000002)
SymmetricObjectProperty(obo:RO_HOM0000004)

# Object Property: obo:RO_HOM0000005 (in parallelism relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1016/j.jhevol.2006.11.010>) Annotation(oboInOwl:hasDbXref obo:HOM_0000005) obo:IAO_0000115 obo:RO_HOM0000005 "Homoplasy that involves homologous underlying mechanisms or structures."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000005 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000005 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000005 "parallel evolution"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:RO_HOM0000005 "Can be applied for features present in closely related organisms but not present continuously in all the members of the lineage."^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000005 "in parallelism relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000005 obo:HOM_0000005)
SubObjectPropertyOf(obo:RO_HOM0000005 obo:RO_HOM0000002)
SymmetricObjectProperty(obo:RO_HOM0000005)

# Object Property: obo:RO_HOM0000006 (in structural homology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1016/j.jhevol.2006.11.014>) Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1146/annurev.es.20.110189.000411>) Annotation(oboInOwl:hasDbXref obo:HOM_0000006) Annotation(oboInOwl:hasDbXref "ISBN:0123195837"^^xsd:string) obo:IAO_0000115 obo:RO_HOM0000006 "Homology that is defined by similarity with regard to selected structural parameters."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000006 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000006 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000006 "ECO:0000071"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000006 "MI:2163"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000006 "structural homologous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000006 "idealistic homology"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000006 "in structural homology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000006 obo:HOM_0000006)
SubObjectPropertyOf(obo:RO_HOM0000006 obo:RO_HOM0000001)
SymmetricObjectProperty(obo:RO_HOM0000006)

# Object Property: obo:RO_HOM0000007 (in historical homology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1016/S0169-5347(97)01125-7>) Annotation(oboInOwl:hasDbXref obo:HOM_0000007) Annotation(oboInOwl:hasDbXref "ISBN:0123195837"^^xsd:string) obo:IAO_0000115 obo:RO_HOM0000007 "Homology that is defined by common descent."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000007 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000007 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasBroadSynonym obo:RO_HOM0000007 "homology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000007 "ECO:0000080"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000007 "RO_proposed_relation:homologous_to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000007 "SO:0000330"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000007 "SO:0000853"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000007 "SO:0000857"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000007 "SO:homologous_to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000007 "TAO:homologous_to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000007 "cladistic homology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000007 "historical homologous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000007 "phylogenetic homology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000007 "taxic homology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000007 "true homology"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000007 "in historical homology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000007 obo:HOM_0000007)
SubObjectPropertyOf(obo:RO_HOM0000007 obo:RO_HOM0000001)
SymmetricObjectProperty(obo:RO_HOM0000007)

# Object Property: obo:RO_HOM0000008 (in biological homology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1016/S0169-5347(97)01125-7>) Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1146/annurev.es.20.110189.000411>) Annotation(oboInOwl:hasDbXref obo:HOM_0000008) obo:IAO_0000115 obo:RO_HOM0000008 "Homology that is defined by sharing of a set of developmental constraints, caused by locally acting self-regulatory mechanisms of differentiation, between individualized parts of the phenotype."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000008 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000008 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000008 "ECO:0000067"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000008 "biological homologous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000008 "transformational homology"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:RO_HOM0000008 "Applicable only to morphology. A certain degree of ambiguity is accepted between biological homology and parallelism."^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000008 "in biological homology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000008 obo:HOM_0000008)
SubObjectPropertyOf(obo:RO_HOM0000008 obo:RO_HOM0000001)
SymmetricObjectProperty(obo:RO_HOM0000008)

# Object Property: obo:RO_HOM0000009 (in reversal relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1016/j.jhevol.2006.11.010>) Annotation(oboInOwl:hasDbXref obo:HOM_0000009) obo:IAO_0000115 obo:RO_HOM0000009 "Homoplasy that involves phenotypes similar to those seen in ancestors within the lineage."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000009 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000009 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000009 "atavism"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000009 "rudiment"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000009 "reversion"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000009 "in reversal relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000009 obo:HOM_0000009)
SubObjectPropertyOf(obo:RO_HOM0000009 obo:RO_HOM0000002)
SymmetricObjectProperty(obo:RO_HOM0000009)

# Object Property: obo:RO_HOM0000010 (in syntenic homology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref obo:HOM_0000010) Annotation(oboInOwl:hasDbXref "MeSH:Synteny"^^xsd:string) obo:IAO_0000115 obo:RO_HOM0000010 "Structural homology that is detected by similarity in content and organization between chromosomes."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000010 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000010 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000010 "MeSH:Synteny"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000010 "SO:0000860"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000010 "SO:0005858"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000010 "syntenic homologous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000010 "synteny"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000010 "in syntenic homology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000010 obo:HOM_0000010)
SubObjectPropertyOf(obo:RO_HOM0000010 obo:RO_HOM0000006)
SymmetricObjectProperty(obo:RO_HOM0000010)

# Object Property: obo:RO_HOM0000011 (in paralogy relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1016/S0168-9525(00)02005-9>) Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1146/annurev.genet.39.073003.114725>) Annotation(oboInOwl:hasDbXref obo:HOM_0000011) Annotation(oboInOwl:hasDbXref <http://www.ncbi.nlm.nih.gov/pubmed/5449325>) obo:IAO_0000115 obo:RO_HOM0000011 "Historical homology that involves genes that diverged after a duplication event."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000011 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000011 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000011 "SO:0000854"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000011 "SO:0000859"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000011 "SO:paralogous_to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000011 "paralogous to"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000011 "in paralogy relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000011 obo:HOM_0000011)
SubObjectPropertyOf(obo:RO_HOM0000011 obo:RO_HOM0000007)
SymmetricObjectProperty(obo:RO_HOM0000011)
DisjointObjectProperties(obo:RO_HOM0000011 obo:RO_HOM0000017)

# Object Property: obo:RO_HOM0000012 (in syntenic paralogy relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1186/1471-213X-7-100>) Annotation(oboInOwl:hasDbXref obo:HOM_0000012) Annotation(oboInOwl:hasDbXref "DOI:10.1002/1097-010X(20001215)288:4<345::AID-JEZ7>3.0.CO;2-Y"^^xsd:string) obo:IAO_0000115 obo:RO_HOM0000012 "Paralogy that involves sets of syntenic blocks."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000012 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000012 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000012 "syntenic paralogous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000012 "duplicon"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000012 "paralogon"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000012 "in syntenic paralogy relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000012 obo:HOM_0000012)
SubObjectPropertyOf(obo:RO_HOM0000012 obo:RO_HOM0000010)
SubObjectPropertyOf(obo:RO_HOM0000012 obo:RO_HOM0000011)
SymmetricObjectProperty(obo:RO_HOM0000012)

# Object Property: obo:RO_HOM0000013 (in syntenic orthology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1101/gr.6380007>) Annotation(oboInOwl:hasDbXref obo:HOM_0000013) obo:IAO_0000115 obo:RO_HOM0000013 "Syntenic homology that involves chromosomes of different species."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000013 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000013 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000013 "syntenic orthologous to"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000013 "in syntenic orthology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000013 obo:HOM_0000013)
SubObjectPropertyOf(obo:RO_HOM0000013 obo:RO_HOM0000010)
SymmetricObjectProperty(obo:RO_HOM0000013)

# Object Property: obo:RO_HOM0000014 (in partial homology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref obo:HOM_0000014) Annotation(oboInOwl:hasDbXref "ISBN:0123195837"^^xsd:string) Annotation(oboInOwl:hasDbXref "ISBN:978-0471984931"^^xsd:string) obo:IAO_0000115 obo:RO_HOM0000014 "Structural homology that involves complex structures from which only a fraction of the elements that can be isolated are separately homologous."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000014 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000014 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000014 "fractional homology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000014 "partial homologous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000014 "segmental homology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000014 "mixed homology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000014 "modular homology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000014 "partial correspondence"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000014 "percent homology"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000014 "in partial homology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000014 obo:HOM_0000014)
SubObjectPropertyOf(obo:RO_HOM0000014 obo:RO_HOM0000006)
SymmetricObjectProperty(obo:RO_HOM0000014)

# Object Property: obo:RO_HOM0000015 (in protein structural homology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1016/0022-2836(76)90195-9>) Annotation(oboInOwl:hasDbXref obo:HOM_0000015) obo:IAO_0000115 obo:RO_HOM0000015 "Structural homology that is detected at the level of the 3D protein structure, but maybe not at the level of the amino acid sequence."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000015 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000015 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000015 "MeSH:Structural_Homology,_Protein"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000015 "protein structural homologous to"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000015 "in protein structural homology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000015 obo:HOM_0000015)
SubObjectPropertyOf(obo:RO_HOM0000015 obo:RO_HOM0000006)
SymmetricObjectProperty(obo:RO_HOM0000015)

# Object Property: obo:RO_HOM0000016 (in non functional homology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref obo:HOM_0000016) Annotation(oboInOwl:hasDbXref "SO:non_functional_homolog_of"^^xsd:string) obo:IAO_0000115 obo:RO_HOM0000016 "Structural homology that involves a pseudogenic feature and its functional ancestor."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000016 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000016 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasBroadSynonym obo:RO_HOM0000016 "pseudogene"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000016 "SO:non_functional_homolog_of"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000016 "non functional homologous to"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000016 "in non functional homology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000016 obo:HOM_0000016)
SubObjectPropertyOf(obo:RO_HOM0000016 obo:RO_HOM0000006)
SymmetricObjectProperty(obo:RO_HOM0000016)
DisjointObjectProperties(obo:RO_HOM0000016 obo:RO_HOM0000062)

# Object Property: obo:RO_HOM0000017 (in orthology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1007/BF02814484>) Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1016/S0168-9525(00)02005-9>) Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1146/annurev.genet.39.073003.114725>) Annotation(oboInOwl:hasDbXref obo:HOM_0000017) Annotation(oboInOwl:hasDbXref <http://www.ncbi.nlm.nih.gov/pubmed/5449325>) obo:IAO_0000115 obo:RO_HOM0000017 "Historical homology that involves genes that diverged after a speciation event."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000017 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000017 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000017 "ECO:00000060"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000017 "SO:0000855"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000017 "SO:0000858"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000017 "SO:orthologous_to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000017 "orthologous to"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:RO_HOM0000017 "The term is sometimes also used for anatomical structures."^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000017 "in orthology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000017 obo:HOM_0000017)
SubObjectPropertyOf(obo:RO_HOM0000017 obo:RO_HOM0000007)
SymmetricObjectProperty(obo:RO_HOM0000017)

# Object Property: obo:RO_HOM0000018 (in xenology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1016/S0168-9525(00)02005-9>) Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1146/annurev.genet.39.073003.114725>) Annotation(oboInOwl:hasDbXref obo:HOM_0000018) obo:IAO_0000115 obo:RO_HOM0000018 "Historical homology that is characterized by an interspecies (horizontal) transfer since the common ancestor."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000018 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000018 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000018 "xenologous to"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:RO_HOM0000018 "The term is sometimes also used for anatomical structures (e.g. in case of a symbiosis)."^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000018 "in xenology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000018 obo:HOM_0000018)
SubObjectPropertyOf(obo:RO_HOM0000018 obo:RO_HOM0000007)
SymmetricObjectProperty(obo:RO_HOM0000018)

# Object Property: obo:RO_HOM0000019 (in 1 to 1 homology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref obo:HOM_0000019) Annotation(oboInOwl:hasDbXref "BGEE:curator"^^xsd:string) obo:IAO_0000115 obo:RO_HOM0000019 "Historical homology that involves two members sharing no other homologs in the lineages considered."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000019 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000019 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000019 "1 to 1 homologous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000019 "1:1 homology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000019 "one-to-one homology"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000019 "in 1 to 1 homology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000019 obo:HOM_0000019)
SubObjectPropertyOf(obo:RO_HOM0000019 obo:RO_HOM0000007)
SymmetricObjectProperty(obo:RO_HOM0000019)

# Object Property: obo:RO_HOM0000020 (in 1 to 1 orthology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1007/BF02814484>) Annotation(oboInOwl:hasDbXref obo:HOM_0000020) Annotation(oboInOwl:hasDbXref <http://www.ensembl.org/info/docs/compara/homology_method.html>) obo:IAO_0000115 obo:RO_HOM0000020 "Orthology that involves two genes that did not experience any duplication after the speciation event that created them."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000020 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000020 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000020 "1 to 1 orthologous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000020 "1:1 orthology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000020 "one-to-one orthology"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000020 "in 1 to 1 orthology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000020 obo:HOM_0000020)
SubObjectPropertyOf(obo:RO_HOM0000020 obo:RO_HOM0000017)
SubObjectPropertyOf(obo:RO_HOM0000020 obo:RO_HOM0000019)
SymmetricObjectProperty(obo:RO_HOM0000020)

# Object Property: obo:RO_HOM0000022 (in ohnology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1038/75560>) Annotation(oboInOwl:hasDbXref obo:HOM_0000022) obo:IAO_0000115 obo:RO_HOM0000022 "Paralogy that results from a whole genome duplication event."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000022 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000022 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000022 "ohnologous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000022 "homoeology"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000022 "in ohnology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000022 obo:HOM_0000022)
SubObjectPropertyOf(obo:RO_HOM0000022 obo:RO_HOM0000011)
SymmetricObjectProperty(obo:RO_HOM0000022)

# Object Property: obo:RO_HOM0000023 (in in-paralogy relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1146/annurev.genet.39.073003.114725>) Annotation(oboInOwl:hasDbXref obo:HOM_0000023) obo:IAO_0000115 obo:RO_HOM0000023 "Paralogy that results from a lineage-specific duplication subsequent to a given speciation event."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000023 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000023 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000023 "in-paralogous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000023 "inparalogy"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000023 "symparalogy"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000023 "in in-paralogy relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000023 obo:HOM_0000023)
SubObjectPropertyOf(obo:RO_HOM0000023 obo:RO_HOM0000011)
SymmetricObjectProperty(obo:RO_HOM0000023)
DisjointObjectProperties(obo:RO_HOM0000023 obo:RO_HOM0000024)

# Object Property: obo:RO_HOM0000024 (in out-paralogy relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1146/annurev.genet.39.073003.114725>) Annotation(oboInOwl:hasDbXref obo:HOM_0000024) obo:IAO_0000115 obo:RO_HOM0000024 "Paralogy that results from a duplication preceding a given speciation event."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000024 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000024 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000024 "alloparalogy"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000024 "out-paralogous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000024 "outparalogy"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000024 "in out-paralogy relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000024 obo:HOM_0000024)
SubObjectPropertyOf(obo:RO_HOM0000024 obo:RO_HOM0000011)
SymmetricObjectProperty(obo:RO_HOM0000024)

# Object Property: obo:RO_HOM0000025 (in pro-orthology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1006/scdb.1999.0338>) Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1038/nrg2099>) Annotation(oboInOwl:hasDbXref obo:HOM_0000025) obo:IAO_0000115 obo:RO_HOM0000025 "1:many orthology that involves a gene in species A and one of its ortholog in species B, when duplications more recent than the species split have occurred in species B but not in species A."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000025 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000025 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000025 "pro-orthologous to"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000025 "in pro-orthology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000025 obo:HOM_0000025)
SubObjectPropertyOf(obo:RO_HOM0000025 obo:RO_HOM0000034)
SymmetricObjectProperty(obo:RO_HOM0000025)

# Object Property: obo:RO_HOM0000026 (in semi-orthology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1006/scdb.1999.0338>) Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1038/nrg2099>) Annotation(oboInOwl:hasDbXref obo:HOM_0000026) obo:IAO_0000115 obo:RO_HOM0000026 "1:many orthology that involves a gene in species A and its ortholog in species B, when duplications more recent than the species split have occurred in species A but not in species B."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000026 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000026 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000026 "semi-orthologous to"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:RO_HOM0000026 "The converse of pro-orthologous."^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000026 "in semi-orthology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000026 obo:HOM_0000026)
SubObjectPropertyOf(obo:RO_HOM0000026 obo:RO_HOM0000034)
SymmetricObjectProperty(obo:RO_HOM0000026)

# Object Property: obo:RO_HOM0000027 (in serial homology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1146/annurev.es.20.110189.000411>) Annotation(oboInOwl:hasDbXref obo:HOM_0000027) obo:IAO_0000115 obo:RO_HOM0000027 "Iterative homology that involves structures arranged along the main body axis."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000027 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000027 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000027 "serial homologous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000027 "homonomy"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000027 "in serial homology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000027 obo:HOM_0000027)
SubObjectPropertyOf(obo:RO_HOM0000027 obo:RO_HOM0000066)
SymmetricObjectProperty(obo:RO_HOM0000027)

# Object Property: obo:RO_HOM0000028 (in heterochronous homology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref obo:HOM_0000028) Annotation(oboInOwl:hasDbXref "ISBN:978-0674639416"^^xsd:string) obo:IAO_0000115 obo:RO_HOM0000028 "Biological homology that is characterized by changes, over evolutionary time, in the rate or timing of developmental events of homologous structures."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000028 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000028 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000028 "heterochronous homologous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000028 "heterochrony"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000028 "in heterochronous homology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000028 obo:HOM_0000028)
SubObjectPropertyOf(obo:RO_HOM0000028 obo:RO_HOM0000008)
SymmetricObjectProperty(obo:RO_HOM0000028)

# Object Property: obo:RO_HOM0000029 (in paedomorphorsis relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://en.wikipedia.org/wiki/Pedomorphosis>) Annotation(oboInOwl:hasDbXref obo:HOM_0000029) Annotation(oboInOwl:hasDbXref "ISBN:978-0674639416"^^xsd:string) obo:IAO_0000115 obo:RO_HOM0000029 "Heterochronous homology that is produced by a retention in adults of a species of traits previously seen only in juveniles."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000029 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000029 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000029 "juvenification"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000029 "pedomorphosis"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000029 "in paedomorphorsis relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000029 obo:HOM_0000029)
SubObjectPropertyOf(obo:RO_HOM0000029 obo:RO_HOM0000028)
SymmetricObjectProperty(obo:RO_HOM0000029)
DisjointObjectProperties(obo:RO_HOM0000029 obo:RO_HOM0000030)

# Object Property: obo:RO_HOM0000030 (in peramorphosis relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://en.wikipedia.org/wiki/Peramorphosis>) Annotation(oboInOwl:hasDbXref obo:HOM_0000030) obo:IAO_0000115 obo:RO_HOM0000030 "Heterochronous homology that is produced by a maturation of individuals of a species past adulthood, which take on hitherto unseen traits."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000030 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000030 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(rdfs:label obo:RO_HOM0000030 "in peramorphosis relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000030 obo:HOM_0000030)
SubObjectPropertyOf(obo:RO_HOM0000030 obo:RO_HOM0000028)
SymmetricObjectProperty(obo:RO_HOM0000030)

# Object Property: obo:RO_HOM0000031 (in progenesis relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://en.wikipedia.org/wiki/Progenesis>) Annotation(oboInOwl:hasDbXref obo:HOM_0000031) Annotation(oboInOwl:hasDbXref "ISBN:978-0674639416"^^xsd:string) obo:IAO_0000115 obo:RO_HOM0000031 "Paedomorphosis that is produced by precocious sexual maturation of an organism still in a morphologically juvenile stage."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000031 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000031 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(rdfs:label obo:RO_HOM0000031 "in progenesis relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000031 obo:HOM_0000031)
SubObjectPropertyOf(obo:RO_HOM0000031 obo:RO_HOM0000029)
SymmetricObjectProperty(obo:RO_HOM0000031)

# Object Property: obo:RO_HOM0000032 (in neoteny relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://en.wikipedia.org/wiki/Neoteny>) Annotation(oboInOwl:hasDbXref obo:HOM_0000032) Annotation(oboInOwl:hasDbXref "ISBN:978-0674639416"^^xsd:string) obo:IAO_0000115 obo:RO_HOM0000032 "Paedomorphosis that is produced by a retardation of somatic development."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000032 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000032 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000032 "juvenilization"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000032 "neotenous to"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000032 "in neoteny relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000032 obo:HOM_0000032)
SubObjectPropertyOf(obo:RO_HOM0000032 obo:RO_HOM0000029)
SymmetricObjectProperty(obo:RO_HOM0000032)

# Object Property: obo:RO_HOM0000033 (in mimicry relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref obo:HOM_0000033) Annotation(oboInOwl:hasDbXref <http:://en.wikipedia.org/wiki/Mimicry>) obo:IAO_0000115 obo:RO_HOM0000033 "Convergence that results from co-evolution usually involving an evolutionary arms race."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000033 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000033 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000033 "mimicrous to"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000033 "in mimicry relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000033 obo:HOM_0000033)
SubObjectPropertyOf(obo:RO_HOM0000033 obo:RO_HOM0000004)
SymmetricObjectProperty(obo:RO_HOM0000033)

# Object Property: obo:RO_HOM0000034 (in 1 to many orthology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1038/415741a>) Annotation(oboInOwl:hasDbXref obo:HOM_0000034) Annotation(oboInOwl:hasDbXref <http://www.ensembl.org/info/docs/compara/homology_method.html>) obo:IAO_0000115 obo:RO_HOM0000034 "Orthology that involves two genes when duplications more recent than the species split have occurred in one species but not the other."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000034 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000034 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000034 "1 to many orthologous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000034 "1:many orthology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000034 "one-to-many orthology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000034 "co-orthology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000034 "many to 1 orthology"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000034 "in 1 to many orthology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000034 obo:HOM_0000034)
SubObjectPropertyOf(obo:RO_HOM0000034 obo:RO_HOM0000017)
SubObjectPropertyOf(obo:RO_HOM0000034 obo:RO_HOM0000037)
SymmetricObjectProperty(obo:RO_HOM0000034)

# Object Property: obo:RO_HOM0000036 (in many to many homology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1093/molbev/msp002>) Annotation(oboInOwl:hasDbXref obo:HOM_0000036) obo:IAO_0000115 obo:RO_HOM0000036 "Historical homology that involves two members of a larger set of homologs."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000036 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000036 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000036 "many to many homologous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000036 "many-to-many homology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000036 "many:many homology "^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000036 "in many to many homology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000036 obo:HOM_0000036)
SubObjectPropertyOf(obo:RO_HOM0000036 obo:RO_HOM0000007)
SymmetricObjectProperty(obo:RO_HOM0000036)

# Object Property: obo:RO_HOM0000037 (in 1 to many homology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref obo:HOM_0000037) Annotation(oboInOwl:hasDbXref "BGEE:curator"^^xsd:string) obo:IAO_0000115 obo:RO_HOM0000037 "Historical homology that involves a structure that has no other homologs in the species in which it is defined, and several homologous structures in another species."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000037 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000037 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000037 "1 to many homologous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000037 "one-to-many homology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000037 "1:many homology"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000037 "in 1 to many homology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000037 obo:HOM_0000037)
SubObjectPropertyOf(obo:RO_HOM0000037 obo:RO_HOM0000007)
SymmetricObjectProperty(obo:RO_HOM0000037)

# Object Property: obo:RO_HOM0000042 (in apomorphy relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref obo:HOM_0000042) Annotation(oboInOwl:hasDbXref "ISBN:978-0252068140"^^xsd:string) obo:IAO_0000115 obo:RO_HOM0000042 "Historical homology that is based on recent shared ancestry, characterizing a monophyletic group."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000042 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000042 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000042 "apomorphous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000042 "synapomorphy"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000042 "in apomorphy relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000042 obo:HOM_0000042)
SubObjectPropertyOf(obo:RO_HOM0000042 obo:RO_HOM0000007)
SymmetricObjectProperty(obo:RO_HOM0000042)
DisjointObjectProperties(obo:RO_HOM0000042 obo:RO_HOM0000043)

# Object Property: obo:RO_HOM0000043 (in plesiomorphy relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref obo:HOM_0000043) Annotation(oboInOwl:hasDbXref "ISBN:978-0252068140"^^xsd:string) obo:IAO_0000115 obo:RO_HOM0000043 "Historical homology that is based on distant shared ancestry."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000043 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000043 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000043 "plesiomorphous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000043 "symplesiomorphy"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:RO_HOM0000043 "This term is usually contrasted to apomorphy."^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000043 "in plesiomorphy relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000043 obo:HOM_0000043)
SubObjectPropertyOf(obo:RO_HOM0000043 obo:RO_HOM0000007)
SymmetricObjectProperty(obo:RO_HOM0000043)

# Object Property: obo:RO_HOM0000044 (in deep homology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1007/BF02814485>) Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1038/nature07891>) Annotation(oboInOwl:hasDbXref obo:HOM_0000044) obo:IAO_0000115 obo:RO_HOM0000044 "Homocracy that involves morphologically and phylogenetically disparate structures that are the result of parallel evolution."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000044 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000044 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000044 "deep genetic homology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000044 "deep homologous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000044 "generative homology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000044 "homoiology"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:RO_HOM0000044 "Used for structures in distantly related taxa."^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000044 "in deep homology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000044 obo:HOM_0000044)
SubObjectPropertyOf(obo:RO_HOM0000044 obo:RO_HOM0000003)
SubObjectPropertyOf(obo:RO_HOM0000044 obo:RO_HOM0000005)
SymmetricObjectProperty(obo:RO_HOM0000044)

# Object Property: obo:RO_HOM0000045 (in hemiplasy relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1073/pnas.0807433105>) Annotation(oboInOwl:hasDbXref obo:HOM_0000045) obo:IAO_0000115 obo:RO_HOM0000045 "Historical homology that is characterized by topological discordance between a gene tree and a species tree attributable to the phylogenetic sorting of genetic polymorphisms across successive nodes in a species tree."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000045 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000045 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000045 "hemiplasous to"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000045 "in hemiplasy relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000045 obo:HOM_0000045)
SubObjectPropertyOf(obo:RO_HOM0000045 obo:RO_HOM0000007)
SymmetricObjectProperty(obo:RO_HOM0000045)

# Object Property: obo:RO_HOM0000046 (in gametology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref obo:HOM_0000046) Annotation(oboInOwl:hasDbXref <http://www.ncbi.nlm.nih.gov/pubmed/11110898>) obo:IAO_0000115 obo:RO_HOM0000046 "Historical homology that involves not recombining and subsequently differentiated sex chromosomes."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000046 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000046 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000046 "gametologous to"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000046 "in gametology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000046 obo:HOM_0000046)
SubObjectPropertyOf(obo:RO_HOM0000046 obo:RO_HOM0000047)
SymmetricObjectProperty(obo:RO_HOM0000046)

# Object Property: obo:RO_HOM0000047 (in chromosomal homology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref obo:HOM_0000047) Annotation(oboInOwl:hasDbXref "ISBN:0195307615"^^xsd:string) obo:IAO_0000115 obo:RO_HOM0000047 "Historical homology that involves the chromosomes able to pair (synapse) during meiosis."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000047 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000047 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000047 "MeSH:Chromosome_Pairing"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000047 "chromosomal homologous to"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000047 "in chromosomal homology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000047 obo:HOM_0000047)
SubObjectPropertyOf(obo:RO_HOM0000047 obo:RO_HOM0000007)
SymmetricObjectProperty(obo:RO_HOM0000047)

# Object Property: obo:RO_HOM0000048 (in many to many orthology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1038/415741a>) Annotation(oboInOwl:hasDbXref obo:HOM_0000048) Annotation(oboInOwl:hasDbXref <http://www.ensembl.org/info/docs/compara/homology_method.html>) obo:IAO_0000115 obo:RO_HOM0000048 "Orthology that involves two genes that experienced duplications more recent than the species split that created them."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000048 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000048 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000048 "many to many orthologous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000048 "many-to-many orthology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000048 "many:many orthology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000048 "trans-orthology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000048 "co-orthology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000048 "trans-homology"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000048 "in many to many orthology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000048 obo:HOM_0000048)
SubObjectPropertyOf(obo:RO_HOM0000048 obo:RO_HOM0000017)
SubObjectPropertyOf(obo:RO_HOM0000048 obo:RO_HOM0000036)
SymmetricObjectProperty(obo:RO_HOM0000048)

# Object Property: obo:RO_HOM0000049 (in within-species paralogy relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref obo:HOM_0000049) Annotation(oboInOwl:hasDbXref <http://www.ensembl.org/info/docs/compara/homology_method.html>) obo:IAO_0000115 obo:RO_HOM0000049 "Paralogy that involves genes from the same species."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000049 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000049 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000049 "within-species paralogous to"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000049 "in within-species paralogy relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000049 obo:HOM_0000049)
SubObjectPropertyOf(obo:RO_HOM0000049 obo:RO_HOM0000011)
SymmetricObjectProperty(obo:RO_HOM0000049)
DisjointObjectProperties(obo:RO_HOM0000049 obo:RO_HOM0000050)

# Object Property: obo:RO_HOM0000050 (in between-species paralogy relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref obo:HOM_0000050) Annotation(oboInOwl:hasDbXref <http://www.ensembl.org/info/docs/compara/homology_method.html>) obo:IAO_0000115 obo:RO_HOM0000050 "Paralogy that involves genes from different species."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000050 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000050 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000050 "between-species paralogous to"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:RO_HOM0000050 "The genes have diverged before a speciation event."^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000050 "in between-species paralogy relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000050 obo:HOM_0000050)
SubObjectPropertyOf(obo:RO_HOM0000050 obo:RO_HOM0000011)
SymmetricObjectProperty(obo:RO_HOM0000050)

# Object Property: obo:RO_HOM0000051 (in postdisplacement relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://en.wikipedia.org/wiki/Pedomorphosis>) Annotation(oboInOwl:hasDbXref obo:HOM_0000051) obo:IAO_0000115 obo:RO_HOM0000051 "Paedomorphosis that is produced by delayed growth of immature structures into the adult form."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000051 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000051 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000051 "post-displacement"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000051 "in postdisplacement relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000051 obo:HOM_0000051)
SubObjectPropertyOf(obo:RO_HOM0000051 obo:RO_HOM0000029)
SymmetricObjectProperty(obo:RO_HOM0000051)

# Object Property: obo:RO_HOM0000052 (in hypermorphosis relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://en.wikipedia.org/wiki/Peramorphosis>) Annotation(oboInOwl:hasDbXref obo:HOM_0000052) Annotation(oboInOwl:hasDbXref "ISBN:978-0674639416"^^xsd:string) obo:IAO_0000115 obo:RO_HOM0000052 "Peramorphosis that is produced by a delay in the offset of development."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000052 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000052 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(rdfs:label obo:RO_HOM0000052 "in hypermorphosis relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000052 obo:HOM_0000052)
SubObjectPropertyOf(obo:RO_HOM0000052 obo:RO_HOM0000030)
SymmetricObjectProperty(obo:RO_HOM0000052)

# Object Property: obo:RO_HOM0000053 (in synology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1007/BF00173425>) Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1016/S0168-9525(00)02005-9>) Annotation(oboInOwl:hasDbXref obo:HOM_0000053) obo:IAO_0000115 obo:RO_HOM0000053 "Xenology that results, not from the transfer of a gene between two species, but from a hybridization of two species."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000053 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000053 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000053 "synologous to"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000053 "in synology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000053 obo:HOM_0000053)
SubObjectPropertyOf(obo:RO_HOM0000053 obo:RO_HOM0000018)
SymmetricObjectProperty(obo:RO_HOM0000053)

# Object Property: obo:RO_HOM0000054 (in isoorthology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1016/S0168-9525(00)02005-9>) Annotation(oboInOwl:hasDbXref obo:HOM_0000054) obo:IAO_0000115 obo:RO_HOM0000054 "Orthology that involves functional equivalent genes with retention of the ancestral function."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000054 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000054 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_HOM0000054 "ECO:0000080"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000054 "isoorthologous to"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000054 "in isoorthology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000054 obo:HOM_0000054)
SubObjectPropertyOf(obo:RO_HOM0000054 obo:RO_HOM0000017)
SubObjectPropertyOf(obo:RO_HOM0000054 obo:RO_HOM0000062)
SymmetricObjectProperty(obo:RO_HOM0000054)

# Object Property: obo:RO_HOM0000055 (in tandem paralogy relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1016/S0168-9525(00)02005-9>) Annotation(oboInOwl:hasDbXref obo:HOM_0000055) Annotation(oboInOwl:hasDbXref "ISBN:978-0878932665"^^xsd:string) obo:IAO_0000115 obo:RO_HOM0000055 "Paralogy that is characterized by duplication of adjacent sequences on a chromosome segment."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000055 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000055 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000055 "tandem paralogous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000055 "iterative paralogy"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000055 "serial paralogy"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000055 "in tandem paralogy relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000055 obo:HOM_0000055)
SubObjectPropertyOf(obo:RO_HOM0000055 obo:RO_HOM0000011)
SymmetricObjectProperty(obo:RO_HOM0000055)

# Object Property: obo:RO_HOM0000057 (in latent homology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1007/BF02814485>) Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1016/j.jhevol.2006.11.010>) Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1186/1742-9994-2-15>) Annotation(oboInOwl:hasDbXref obo:HOM_0000057) Annotation(oboInOwl:hasDbXref "ISBN:0199141118"^^xsd:string) obo:IAO_0000115 obo:RO_HOM0000057 "Parallelism that involves morphologically very similar structures, occurring only within some members of a taxon and absent in the common ancestor (which possessed the developmental basis to develop this character)."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000057 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000057 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000057 "apomorphic tendency"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000057 "cryptic homology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000057 "latent homologous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000057 "underlying synapomorphy"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000057 "homoiology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000057 "homoplastic tendency"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000057 "re-awakening"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:RO_HOM0000057 "Used for structures in closely related taxa."^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000057 "in latent homology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000057 obo:HOM_0000057)
SubObjectPropertyOf(obo:RO_HOM0000057 obo:RO_HOM0000005)
SubObjectPropertyOf(obo:RO_HOM0000057 obo:RO_HOM0000058)
SymmetricObjectProperty(obo:RO_HOM0000057)

# Object Property: obo:RO_HOM0000058 (in syngeny relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1186/1742-9994-2-15>) Annotation(oboInOwl:hasDbXref obo:HOM_0000058) Annotation(oboInOwl:hasDbXref "DOI:10.1002/1521-1878(200009)22:9<846::AID-BIES10>3.0.CO;2-R"^^xsd:string) obo:IAO_0000115 obo:RO_HOM0000058 "Homocracy that involves recognizably corresponding characters that occurs in two or more taxa, or as a repeated unit within an individual."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000058 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000058 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000058 "generative homology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000058 "syngenous to"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:RO_HOM0000058 "Cannot be used when orthologous patterning gene are organizing obviously non-homologous structures in different organisms due for example to pleiotropic functions of these genes."^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000058 "in syngeny relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000058 obo:HOM_0000058)
SubObjectPropertyOf(obo:RO_HOM0000058 obo:RO_HOM0000003)
SymmetricObjectProperty(obo:RO_HOM0000058)

# Object Property: obo:RO_HOM0000060 (in apparent orthology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1146/annurev.genet.39.073003.114725>) Annotation(oboInOwl:hasDbXref obo:HOM_0000060) Annotation(oboInOwl:hasDbXref <http://www.ensembl.org/info/docs/compara/homology_method.html>) obo:IAO_0000115 obo:RO_HOM0000060 "Between-species paralogy that involves single copy paralogs resulting from reciprocal gene loss."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000060 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000060 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000060 "1:1 paralogy"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000060 "apparent 1:1 orthology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000060 "apparent orthologous to"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000060 "pseudoorthology"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:RO_HOM0000060 "The genes are actually paralogs but appear to be orthologous due to differential, lineage-specific gene loss."^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000060 "in apparent orthology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000060 obo:HOM_0000060)
SubObjectPropertyOf(obo:RO_HOM0000060 obo:RO_HOM0000019)
SubObjectPropertyOf(obo:RO_HOM0000060 obo:RO_HOM0000050)
SymmetricObjectProperty(obo:RO_HOM0000060)

# Object Property: obo:RO_HOM0000061 (in pseudoparalogy relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1146/annurev.genet.39.073003.114725>) Annotation(oboInOwl:hasDbXref obo:HOM_0000061) obo:IAO_0000115 obo:RO_HOM0000061 "Xenology that involves genes that ended up in a given genome as a result of a combination of vertical inheritance and horizontal gene transfer."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000061 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000061 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000061 "pseudoparalogous to"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:RO_HOM0000061 "These genes may come out as paralogs in a single-genome analysis."^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000061 "in pseudoparalogy relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000061 obo:HOM_0000061)
SubObjectPropertyOf(obo:RO_HOM0000061 obo:RO_HOM0000018)
SymmetricObjectProperty(obo:RO_HOM0000061)

# Object Property: obo:RO_HOM0000062 (in equivalogy relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1093/nar/gkl1043>) Annotation(oboInOwl:hasDbXref obo:HOM_0000062) obo:IAO_0000115 obo:RO_HOM0000062 "Historical homology that involves functional equivalent genes with retention of the ancestral function."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000062 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000062 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000062 "equivalogous to"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:RO_HOM0000062 "This may include examples of orthology, paralogy and xenology."^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000062 "in equivalogy relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000062 obo:HOM_0000062)
SubObjectPropertyOf(obo:RO_HOM0000062 obo:RO_HOM0000007)
SubObjectPropertyOf(obo:RO_HOM0000062 obo:RO_HOM0000065)
SymmetricObjectProperty(obo:RO_HOM0000062)

# Object Property: obo:RO_HOM0000063 (in interology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1101/gr.1774904>) Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1126/science.287.5450.116>) Annotation(oboInOwl:hasDbXref obo:HOM_0000063) obo:IAO_0000115 obo:RO_HOM0000063 "Historical homology that involves orthologous pairs of interacting molecules in different organisms."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000063 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000063 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000063 "interologous to"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000063 "in interology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000063 obo:HOM_0000063)
SubObjectPropertyOf(obo:RO_HOM0000063 obo:RO_HOM0000007)
SymmetricObjectProperty(obo:RO_HOM0000063)

# Object Property: obo:RO_HOM0000065 (in functional equivalence relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1007/BF02814484>) Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1038/415741a>) Annotation(oboInOwl:hasDbXref obo:HOM_0000065) obo:IAO_0000115 obo:RO_HOM0000065 "Similarity that is characterized by interchangeability in function."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000065 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000065 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000065 "functional similarity"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000065 "in functional equivalence relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000065 obo:HOM_0000065)
SubObjectPropertyOf(obo:RO_HOM0000065 obo:RO_HOM0000000)
SymmetricObjectProperty(obo:RO_HOM0000065)

# Object Property: obo:RO_HOM0000066 (in iterative homology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1146/annurev.es.20.110189.000411>) Annotation(oboInOwl:hasDbXref obo:HOM_0000066) obo:IAO_0000115 obo:RO_HOM0000066 "Biological homology that involves parts of the same organism."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000066 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000066 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000066 "iterative homologous to"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000066 "in iterative homology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000066 obo:HOM_0000066)
SubObjectPropertyOf(obo:RO_HOM0000066 obo:RO_HOM0000008)
SymmetricObjectProperty(obo:RO_HOM0000066)

# Object Property: obo:RO_HOM0000068 (in paraxenology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref obo:HOM_0000068) Annotation(oboInOwl:hasDbXref <http://www.ncbi.nlm.nih.gov/pubmed/3065587>) obo:IAO_0000115 obo:RO_HOM0000068 "Xenology that is characterized by multiple horizontal transfer events, resulting in the presence of two or more copies of the foreign gene in the host genome."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000068 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000068 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000068 "duplicate xenology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000068 "multiple xenology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000068 "paraxenologous to"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000068 "in paraxenology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000068 obo:HOM_0000068)
SubObjectPropertyOf(obo:RO_HOM0000068 obo:RO_HOM0000018)
SymmetricObjectProperty(obo:RO_HOM0000068)

# Object Property: obo:RO_HOM0000069 (in plerology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref obo:HOM_0000069) Annotation(oboInOwl:hasDbXref <http://www.ncbi.nlm.nih.gov/pubmed/3065587>) obo:IAO_0000115 obo:RO_HOM0000069 "Paralogy that is characterized by extra similarity between paralogous sequences resulting from concerted evolution."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000069 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000069 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000069 "plerologous to"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:RO_HOM0000069 "This phenomenon is usually due to gene conversion process."^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000069 "in plerology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000069 obo:HOM_0000069)
SubObjectPropertyOf(obo:RO_HOM0000069 obo:RO_HOM0000011)
SymmetricObjectProperty(obo:RO_HOM0000069)

# Object Property: obo:RO_HOM0000071 (in homotopy relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1007/BF02814484>) Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1007/BF02814485>) Annotation(oboInOwl:hasDbXref obo:HOM_0000071) Annotation(oboInOwl:hasDbXref "ISBN:0123195837"^^xsd:string) obo:IAO_0000115 obo:RO_HOM0000071 "Structural homology that involves structures with the same or similar relative positions."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000071 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000071 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000071 "homotopous to"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:RO_HOM0000071 "Theissen (2005) mentions that some authors may consider homotopy to be distinct from homology, but this is not the standard use."^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000071 "in homotopy relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000071 obo:HOM_0000071)
SubObjectPropertyOf(obo:RO_HOM0000071 obo:RO_HOM0000006)
SymmetricObjectProperty(obo:RO_HOM0000071)
DisjointObjectProperties(obo:RO_HOM0000071 obo:RO_HOM0000072)

# Object Property: obo:RO_HOM0000072 (in homeosis relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1007/BF02814485>) Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1016/j.cell.2008.06.030>) Annotation(oboInOwl:hasDbXref obo:HOM_0000072) obo:IAO_0000115 obo:RO_HOM0000072 "Biological homology that involves an ectopic structure and the normally positioned structure."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000072 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000072 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000072 "heterotopy"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000072 "in homeosis relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000072 obo:HOM_0000072)
SubObjectPropertyOf(obo:RO_HOM0000072 obo:RO_HOM0000008)
SymmetricObjectProperty(obo:RO_HOM0000072)

# Object Property: obo:RO_HOM0000073 (in homoeology relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1073/pnas.0505156102>) Annotation(oboInOwl:hasDbXref obo:HOM_0000073) obo:IAO_0000115 obo:RO_HOM0000073 "Synology that results from allopolyploidy."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000073 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000073 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000073 "homoeologous to"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:RO_HOM0000073 "On a long term, it is hard to distinguish allopolyploidy from whole genome duplication."^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000073 "in homoeology relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000073 obo:HOM_0000073)
SubObjectPropertyOf(obo:RO_HOM0000073 obo:RO_HOM0000022)
SubObjectPropertyOf(obo:RO_HOM0000073 obo:RO_HOM0000053)
SymmetricObjectProperty(obo:RO_HOM0000073)

# Object Property: obo:RO_HOM0000074 (in paramorphism relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1007/s10441-007-9023-8>) Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1046/j.1525-142x.2000.00054.x>) Annotation(oboInOwl:hasDbXref obo:HOM_0000074) obo:IAO_0000115 obo:RO_HOM0000074 "Iterative homology that involves two structures, one of which originated as a duplicate of the other and co-opted the expression of patterning genes of the ancestral structure."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000074 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000074 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_HOM0000074 "axis paramorphism"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000074 "in paramorphism relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000074 obo:HOM_0000074)
SubObjectPropertyOf(obo:RO_HOM0000074 obo:RO_HOM0000003)
SubObjectPropertyOf(obo:RO_HOM0000074 obo:RO_HOM0000066)
SymmetricObjectProperty(obo:RO_HOM0000074)

# Object Property: obo:RO_HOM0000075 (in regulogy relationship with)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref <http://dx.doi.org/10.1101/gr.1774904>) Annotation(oboInOwl:hasDbXref obo:HOM_0000075) obo:IAO_0000115 obo:RO_HOM0000075 "Historical homology that involves orthologous pairs of transcription factors and downstream regulated genes in different organisms."^^xsd:string)
AnnotationAssertion(dc:creator obo:RO_HOM0000075 <http://bgee.unil.ch>)
AnnotationAssertion(dc:source obo:RO_HOM0000075 <http://www.ncbi.nlm.nih.gov/pubmed/20116127>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_HOM0000075 "regulogous to"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_HOM0000075 "in regulogy relationship with"^^xsd:string)
AnnotationAssertion(rdfs:seeAlso obo:RO_HOM0000075 obo:HOM_0000075)
SubObjectPropertyOf(obo:RO_HOM0000075 obo:RO_HOM0000007)
SymmetricObjectProperty(obo:RO_HOM0000075)



############################
#   Classes
############################

# Class: obo:BFO_0000002 (continuant)

AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000002 "An entity that exists in full at any time in which it exists at all, persists through time while maintaining its identity and has no temporal parts."@en)
AnnotationAssertion(rdfs:label obo:BFO_0000002 "continuant"@en)
DisjointClasses(obo:BFO_0000002 obo:BFO_0000003)
DisjointClasses(obo:BFO_0000002 ObjectSomeValuesFrom(obo:BFO_0000050 obo:BFO_0000003))

# Class: obo:BFO_0000003 (occurrent)

AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000003 "An entity that has temporal parts and that happens, unfolds or develops through time."@en)
AnnotationAssertion(rdfs:label obo:BFO_0000003 "occurrent"@en)
DisjointClasses(obo:BFO_0000003 ObjectSomeValuesFrom(obo:BFO_0000050 obo:BFO_0000002))

# Class: obo:BFO_0000004 (independent continuant)

AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000004 "A continuant that is a bearer of quality and realizable entity entities, in which other entities inhere and which itself cannot inhere in anything."@en)
AnnotationAssertion(rdfs:label obo:BFO_0000004 "independent continuant"@en)
SubClassOf(obo:BFO_0000004 obo:BFO_0000002)
DisjointClasses(obo:BFO_0000004 obo:BFO_0000020)
DisjointClasses(obo:BFO_0000004 obo:BFO_0000031)

# Class: obo:BFO_0000005 (obsolete dependent continuant)

AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000005 "A continuant  that is either dependent on one or other independent continuant  bearers or inheres in or is borne by other entities."@en)
AnnotationAssertion(rdfs:label obo:BFO_0000005 "obsolete dependent continuant"@en)
AnnotationAssertion(owl:deprecated obo:BFO_0000005 "true"^^xsd:boolean)
SubClassOf(obo:BFO_0000005 oboInOwl:ObsoleteClass)

# Class: obo:BFO_0000015 (process)

AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000015 "An occurrent that has temporal proper parts and for some time t, p s-depends_on some material entity at t."@en)
AnnotationAssertion(rdfs:label obo:BFO_0000015 "process"@en)
SubClassOf(obo:BFO_0000015 obo:BFO_0000003)

# Class: obo:BFO_0000016 (disposition)

AnnotationAssertion(rdfs:label obo:BFO_0000016 "disposition"@en)
SubClassOf(obo:BFO_0000016 obo:BFO_0000017)
DisjointClasses(obo:BFO_0000016 obo:BFO_0000023)

# Class: obo:BFO_0000017 (realizable entity)

AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000017 "A specifically dependent continuant  that inheres in continuant  entities and are not exhibited in full at every time in which it inheres in an entity or group of entities. The exhibition or actualization of a realizable entity is a particular manifestation, functioning or process that occurs under certain circumstances."@en)
AnnotationAssertion(rdfs:label obo:BFO_0000017 "realizable entity"@en)
SubClassOf(obo:BFO_0000017 obo:BFO_0000020)
DisjointClasses(obo:BFO_0000017 obo:BFO_0000019)

# Class: obo:BFO_0000019 (quality)

AnnotationAssertion(rdfs:label obo:BFO_0000019 "quality"@en)
SubClassOf(obo:BFO_0000019 obo:BFO_0000020)

# Class: obo:BFO_0000020 (specifically dependent continuant)

AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000020 "A continuant that inheres in or is borne by other entities. Every instance of A requires some specific instance of B which must always be the same."@en)
AnnotationAssertion(rdfs:label obo:BFO_0000020 "specifically dependent continuant"@en)
SubClassOf(obo:BFO_0000020 obo:BFO_0000002)
DisjointClasses(obo:BFO_0000020 obo:BFO_0000031)

# Class: obo:BFO_0000023 (role)

AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000023 "A realizable entity  the manifestation of which brings about some result or end that is not essential to a continuant  in virtue of the kind of thing that it is but that can be served or participated in by that kind of continuant  in some kinds of natural, social or institutional contexts."@en)
AnnotationAssertion(rdfs:label obo:BFO_0000023 "role"@en)
SubClassOf(obo:BFO_0000023 obo:BFO_0000017)

# Class: obo:BFO_0000031 (generically dependent continuant)

AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000031 "A continuant that is dependent on one or other independent continuant bearers. For every instance of A requires some instance of (an independent continuant type) B but which instance of B serves can change from time to time."@en)
AnnotationAssertion(rdfs:label obo:BFO_0000031 "generically dependent continuant"@en)
SubClassOf(obo:BFO_0000031 obo:BFO_0000002)

# Class: obo:BFO_0000034 (function)

AnnotationAssertion(rdfs:label obo:BFO_0000034 "function"@en)
SubClassOf(obo:BFO_0000034 obo:BFO_0000016)

# Class: obo:BFO_0000040 (material entity)

AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000040 "An independent continuant that is spatially extended whose identity is independent of that of other entities and can be maintained through time."@en)
AnnotationAssertion(rdfs:label obo:BFO_0000040 "material entity"@en)
SubClassOf(obo:BFO_0000040 obo:BFO_0000004)
DisjointClasses(obo:BFO_0000040 obo:BFO_0000141)
DisjointClasses(obo:BFO_0000040 ObjectSomeValuesFrom(obo:BFO_0000050 obo:BFO_0000141))

# Class: obo:BFO_0000141 (immaterial entity)

AnnotationAssertion(rdfs:label obo:BFO_0000141 "immaterial entity"@en)
SubClassOf(obo:BFO_0000141 obo:BFO_0000004)
DisjointClasses(obo:BFO_0000141 ObjectSomeValuesFrom(obo:BFO_0000051 obo:BFO_0000040))

# Class: obo:CARO_0000003 (anatomical structure)

AnnotationAssertion(obo:IAO_0000412 obo:CARO_0000003 obo:caro.owl)
AnnotationAssertion(rdfs:label obo:CARO_0000003 "anatomical structure"@en)
SubClassOf(obo:CARO_0000003 obo:CARO_0000006)

# Class: obo:CARO_0000006 (material anatomical entity)

AnnotationAssertion(obo:IAO_0000412 obo:CARO_0000006 obo:caro.owl)
AnnotationAssertion(rdfs:label obo:CARO_0000006 "material anatomical entity"@en)
SubClassOf(obo:CARO_0000006 obo:BFO_0000040)

# Class: obo:CARO_0000007 (immaterial anatomical entity)

AnnotationAssertion(rdfs:label obo:CARO_0000007 "immaterial anatomical entity")
SubClassOf(obo:CARO_0000007 obo:BFO_0000141)

# Class: obo:CARO_0000011 (connected anatomical system)

AnnotationAssertion(rdfs:label obo:CARO_0000011 "connected anatomical system")
SubClassOf(obo:CARO_0000011 obo:CARO_0000006)
SubClassOf(obo:CARO_0000011 obo:RO_0002577)

# Class: obo:CARO_0000014 (cell part)

AnnotationAssertion(obo:IAO_0000412 obo:CARO_0000014 obo:caro.owl)
AnnotationAssertion(obo:IAO_0000589 obo:CARO_0000014 "cell part (CARO)")
AnnotationAssertion(rdfs:label obo:CARO_0000014 "cell part"@en)
SubClassOf(obo:CARO_0000014 obo:CARO_0000003)

# Class: obo:CARO_0001000 (multi-cell-part structure)

AnnotationAssertion(obo:IAO_0000412 obo:CARO_0001000 obo:caro.owl)
AnnotationAssertion(rdfs:label obo:CARO_0001000 "multi-cell-part structure"@en)
SubClassOf(obo:CARO_0001000 obo:CARO_0000003)

# Class: obo:CARO_0001001 (neuron projection bundle)

AnnotationAssertion(obo:IAO_0000412 obo:CARO_0001001 obo:caro.owl)
AnnotationAssertion(rdfs:label obo:CARO_0001001 "neuron projection bundle"@en)
SubClassOf(obo:CARO_0001001 obo:CARO_0001000)

# Class: obo:CARO_0010000 (multicellular anatomical structure)

AnnotationAssertion(obo:IAO_0000412 obo:CARO_0010000 obo:caro.owl)
AnnotationAssertion(rdfs:label obo:CARO_0010000 "multicellular anatomical structure"^^xsd:string)
SubClassOf(obo:CARO_0010000 obo:CARO_0000003)
SubClassOf(obo:CARO_0010000 ObjectAllValuesFrom(obo:RO_0002207 obo:CARO_0010000))

# Class: obo:CL_0000000 (cell)

AnnotationAssertion(obo:IAO_0000412 obo:CL_0000000 obo:cl.owl)
AnnotationAssertion(rdfs:label obo:CL_0000000 "cell"@en)
SubClassOf(obo:CL_0000000 obo:CARO_0000003)
SubClassOf(obo:CL_0000000 ObjectAllValuesFrom(obo:RO_0002207 obo:CL_0000000))

# Class: obo:CL_0000540 (neuron)

AnnotationAssertion(obo:IAO_0000412 obo:CL_0000540 obo:cl.owl)
AnnotationAssertion(rdfs:label obo:CL_0000540 "neuron"@en)
SubClassOf(obo:CL_0000540 obo:CL_0000000)

# Class: obo:ENVO_00000428 (biome)

AnnotationAssertion(rdfs:label obo:ENVO_00000428 "biome"^^xsd:string)
SubClassOf(obo:ENVO_00000428 obo:ENVO_01000254)

# Class: obo:ENVO_01000254 (environmental system)

AnnotationAssertion(rdfs:label obo:ENVO_01000254 "environmental system"^^xsd:string)
SubClassOf(obo:ENVO_01000254 obo:RO_0002577)

# Class: obo:GO_0003674 (molecular_function)

AnnotationAssertion(obo:IAO_0000589 obo:GO_0003674 "molecular process")
AnnotationAssertion(rdfs:label obo:GO_0003674 "molecular_function"^^xsd:string)
SubClassOf(obo:GO_0003674 obo:BFO_0000015)

# Class: obo:GO_0003824 (catalytic activity)

AnnotationAssertion(rdfs:label obo:GO_0003824 "catalytic activity"^^xsd:string)
SubClassOf(obo:GO_0003824 obo:GO_0003674)

# Class: obo:GO_0004842 (ubiquitin-protein ligase activity)

AnnotationAssertion(rdfs:label obo:GO_0004842 "ubiquitin-protein ligase activity"^^xsd:string)
SubClassOf(obo:GO_0004842 obo:GO_0019787)
SubClassOf(obo:GO_0004842 ObjectHasSelf(obo:RO_0002482))

# Class: obo:GO_0004872 (receptor activity)

AnnotationAssertion(rdfs:label obo:GO_0004872 "receptor activity")

# Class: obo:GO_0005634 (nucleus)

AnnotationAssertion(obo:IAO_0000412 obo:GO_0005634 obo:go.owl)
AnnotationAssertion(rdfs:label obo:GO_0005634 "nucleus"@en)
SubClassOf(obo:GO_0005634 obo:GO_0044464)

# Class: obo:GO_0007610 (behavior)

AnnotationAssertion(rdfs:label obo:GO_0007610 "behavior"^^xsd:string)
SubClassOf(obo:GO_0007610 obo:GO_0050896)

# Class: obo:GO_0007631 (feeding behavior)

AnnotationAssertion(rdfs:label obo:GO_0007631 "feeding behavior"^^xsd:string)
SubClassOf(obo:GO_0007631 obo:GO_0007610)

# Class: obo:GO_0008150 (biological_process)

AnnotationAssertion(rdfs:label obo:GO_0008150 "biological_process"^^xsd:string)
SubClassOf(obo:GO_0008150 obo:BFO_0000015)

# Class: obo:GO_0016020 (membrane)

AnnotationAssertion(obo:IAO_0000412 obo:GO_0016020 obo:go.owl)
AnnotationAssertion(rdfs:label obo:GO_0016020 "membrane"@en)
SubClassOf(obo:GO_0016020 obo:GO_0044464)

# Class: obo:GO_0016301 (kinase activity)

AnnotationAssertion(rdfs:label obo:GO_0016301 "kinase activity"^^xsd:string)
SubClassOf(obo:GO_0016301 obo:GO_0016772)
SubClassOf(obo:GO_0016301 ObjectHasSelf(obo:RO_0002481))

# Class: obo:GO_0016740 (transferase activity)

AnnotationAssertion(rdfs:label obo:GO_0016740 "transferase activity"^^xsd:string)
SubClassOf(obo:GO_0016740 obo:GO_0003824)

# Class: obo:GO_0016772 (transferase activity, transferring phosphorus-containing groups)

AnnotationAssertion(rdfs:label obo:GO_0016772 "transferase activity, transferring phosphorus-containing groups"^^xsd:string)
SubClassOf(obo:GO_0016772 obo:GO_0016740)

# Class: obo:GO_0016874 (ligase activity)

AnnotationAssertion(rdfs:label obo:GO_0016874 "ligase activity"^^xsd:string)
SubClassOf(obo:GO_0016874 obo:GO_0003824)

# Class: obo:GO_0016879 (ligase activity, forming carbon-nitrogen bonds)

AnnotationAssertion(rdfs:label obo:GO_0016879 "ligase activity, forming carbon-nitrogen bonds"^^xsd:string)
SubClassOf(obo:GO_0016879 obo:GO_0016874)

# Class: obo:GO_0016881 (acid-amino acid ligase activity)

AnnotationAssertion(rdfs:label obo:GO_0016881 "acid-amino acid ligase activity"^^xsd:string)
SubClassOf(obo:GO_0016881 obo:GO_0016879)

# Class: obo:GO_0019787 (small conjugating protein ligase activity)

AnnotationAssertion(rdfs:label obo:GO_0019787 "small conjugating protein ligase activity"^^xsd:string)
SubClassOf(obo:GO_0019787 obo:GO_0016881)

# Class: obo:GO_0030424 (axon)

AnnotationAssertion(obo:IAO_0000412 obo:GO_0030424 obo:go.owl)
AnnotationAssertion(rdfs:label obo:GO_0030424 "axon"@en)
SubClassOf(obo:GO_0030424 obo:GO_0043005)

# Class: obo:GO_0030425 (dendrite)

AnnotationAssertion(obo:IAO_0000412 obo:GO_0030425 obo:go.owl)
AnnotationAssertion(rdfs:label obo:GO_0030425 "dendrite"@en)
SubClassOf(obo:GO_0030425 obo:GO_0043005)

# Class: obo:GO_0042734 (presynaptic membrane)

AnnotationAssertion(obo:IAO_0000412 obo:GO_0042734 obo:go.owl)
AnnotationAssertion(rdfs:label obo:GO_0042734 "presynaptic membrane"@en)
SubClassOf(obo:GO_0042734 obo:GO_0016020)
SubClassOf(obo:GO_0042734 obo:GO_0044456)

# Class: obo:GO_0042995 (cell projection)

AnnotationAssertion(obo:IAO_0000412 obo:GO_0042995 obo:go.owl)
AnnotationAssertion(rdfs:label obo:GO_0042995 "cell projection"@en)
SubClassOf(obo:GO_0042995 obo:GO_0044464)

# Class: obo:GO_0043005 (neuron projection)

AnnotationAssertion(obo:IAO_0000412 obo:GO_0043005 obo:go.owl)
AnnotationAssertion(rdfs:label obo:GO_0043005 "neuron projection"@en)
SubClassOf(obo:GO_0043005 obo:GO_0042995)

# Class: obo:GO_0044403 (symbiosis, encompassing mutualism through parasitism)

AnnotationAssertion(rdfs:label obo:GO_0044403 "symbiosis, encompassing mutualism through parasitism"^^xsd:string)
SubClassOf(obo:GO_0044403 obo:GO_0044419)
SubClassOf(obo:GO_0044403 ObjectHasSelf(obo:RO_0002465))

# Class: obo:GO_0044419 (interspecies interaction between organisms)

AnnotationAssertion(rdfs:label obo:GO_0044419 "interspecies interaction between organisms"^^xsd:string)
SubClassOf(obo:GO_0044419 obo:GO_0051704)

# Class: obo:GO_0044456 (synapse part)

AnnotationAssertion(obo:IAO_0000412 obo:GO_0044456 obo:go.owl)
AnnotationAssertion(rdfs:label obo:GO_0044456 "synapse part"@en)
SubClassOf(obo:GO_0044456 obo:CARO_0000014)

# Class: obo:GO_0044464 (cell part)

AnnotationAssertion(obo:IAO_0000412 obo:GO_0044464 obo:go.owl)
AnnotationAssertion(rdfs:label obo:GO_0044464 "cell part"@en)
SubClassOf(obo:GO_0044464 obo:CARO_0000014)

# Class: obo:GO_0045202 (synapse)

AnnotationAssertion(obo:IAO_0000412 obo:GO_0045202 obo:go.owl)
AnnotationAssertion(rdfs:label obo:GO_0045202 "synapse"@en)
SubClassOf(obo:GO_0045202 obo:CARO_0000014)

# Class: obo:GO_0045211 (postsynaptic membrane)

AnnotationAssertion(obo:IAO_0000412 obo:GO_0045211 obo:go.owl)
AnnotationAssertion(rdfs:label obo:GO_0045211 "postsynaptic membrane"@en)
SubClassOf(obo:GO_0045211 obo:GO_0016020)
SubClassOf(obo:GO_0045211 obo:GO_0044456)

# Class: obo:GO_0050896 (response to stimulus)

AnnotationAssertion(rdfs:label obo:GO_0050896 "response to stimulus"^^xsd:string)
SubClassOf(obo:GO_0050896 obo:GO_0008150)

# Class: obo:GO_0051702 (interaction with symbiont)

AnnotationAssertion(rdfs:label obo:GO_0051702 "interaction with symbiont"^^xsd:string)
SubClassOf(obo:GO_0051702 obo:GO_0044419)

# Class: obo:GO_0051704 (multi-organism process)

AnnotationAssertion(rdfs:label obo:GO_0051704 "multi-organism process"^^xsd:string)
SubClassOf(obo:GO_0051704 obo:GO_0008150)

# Class: obo:GO_0051705 (multi-organism behavior)

AnnotationAssertion(rdfs:label obo:GO_0051705 "multi-organism behavior"^^xsd:string)
SubClassOf(obo:GO_0051705 obo:GO_0007610)
SubClassOf(obo:GO_0051705 obo:GO_0051704)

# Class: obo:GO_0051816 (acquisition of nutrients from other organism during symbiotic interaction)

AnnotationAssertion(rdfs:label obo:GO_0051816 "acquisition of nutrients from other organism during symbiotic interaction"^^xsd:string)
SubClassOf(obo:GO_0051816 obo:GO_0007631)

# Class: obo:GO_0051850 (acquisition of nutrients from symbiont)

AnnotationAssertion(rdfs:label obo:GO_0051850 "acquisition of nutrients from symbiont"^^xsd:string)
SubClassOf(obo:GO_0051850 obo:GO_0051702)
SubClassOf(obo:GO_0051850 obo:GO_0051705)
SubClassOf(obo:GO_0051850 obo:GO_0051816)

# Class: obo:GO_0072519 (parasitism)

AnnotationAssertion(rdfs:label obo:GO_0072519 "parasitism"^^xsd:string)
SubClassOf(obo:GO_0072519 obo:GO_0044403)
SubClassOf(obo:GO_0072519 ObjectHasSelf(obo:RO_0002468))

# Class: obo:GO_0085030 (mutualism)

AnnotationAssertion(rdfs:label obo:GO_0085030 "mutualism"^^xsd:string)
SubClassOf(obo:GO_0085030 obo:GO_0044403)
SubClassOf(obo:GO_0085030 ObjectHasSelf(obo:RO_0002467))

# Class: obo:GO_0085031 (commensalism)

AnnotationAssertion(rdfs:label obo:GO_0085031 "commensalism"^^xsd:string)
SubClassOf(obo:GO_0085031 obo:GO_0044403)
SubClassOf(obo:GO_0085031 ObjectHasSelf(obo:RO_0002466))

# Class: obo:PATO_0000001 (quality)

AnnotationAssertion(obo:IAO_0000589 obo:PATO_0000001 "quality (PATO)")
AnnotationAssertion(rdfs:label obo:PATO_0000001 "quality"^^xsd:string)
SubClassOf(obo:PATO_0000001 obo:BFO_0000020)

# Class: obo:PATO_0000051 (morphology)

AnnotationAssertion(rdfs:label obo:PATO_0000051 "morphology"^^xsd:string)
SubClassOf(obo:PATO_0000051 obo:BFO_0000019)
SubClassOf(obo:PATO_0000051 obo:PATO_0001241)

# Class: obo:PATO_0000052 (shape)

AnnotationAssertion(rdfs:label obo:PATO_0000052 "shape"^^xsd:string)
SubClassOf(obo:PATO_0000052 obo:PATO_0000051)

# Class: obo:PATO_0000141 (structure)

AnnotationAssertion(rdfs:label obo:PATO_0000141 "structure"^^xsd:string)
SubClassOf(obo:PATO_0000141 obo:PATO_0000051)

# Class: obo:PATO_0000402 (branched)

AnnotationAssertion(rdfs:label obo:PATO_0000402 "branched"^^xsd:string)
SubClassOf(obo:PATO_0000402 obo:PATO_0002009)

# Class: obo:PATO_0001199 (linear)

AnnotationAssertion(rdfs:label obo:PATO_0001199 "linear"^^xsd:string)
SubClassOf(obo:PATO_0001199 obo:PATO_0000052)

# Class: obo:PATO_0001241 (physical object quality)

AnnotationAssertion(rdfs:label obo:PATO_0001241 "physical object quality"^^xsd:string)
SubClassOf(obo:PATO_0001241 obo:PATO_0000001)

# Class: obo:PATO_0002009 (branchiness)

AnnotationAssertion(rdfs:label obo:PATO_0002009 "branchiness"^^xsd:string)
SubClassOf(obo:PATO_0002009 obo:PATO_0000052)

# Class: obo:PATO_0002124 (laminar)

AnnotationAssertion(rdfs:label obo:PATO_0002124 "laminar"^^xsd:string)
SubClassOf(obo:PATO_0002124 obo:PATO_0000141)

# Class: obo:RO_0002310 (exposure event or process)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002310 "An exposure event in which a human is exposed to particulate matter in the air. Here the exposure stimulus/stress is the particulate matter, the receptor is the airways and lungs of the human,")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002310 "An exposure event in which a plant is provided with fertilizer. The exposure receptor is the root system of the plant, the stimulus is the fertilizing chemical, the route is via the soil, possibly mediated by symbotic microbes."^^xsd:anyURI)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002310 "A process occurring within or in the vicinity of an organism that exerts some causal influence on the organism via the interaction between an exposure stimulus and an exposure receptor. The exposure stimulus may be a process, material entity or condition (for example, lack of nutrients). The exposure receptor can be an organism, organism population or a part of an organism.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002310 "This class is intended as a grouping for various domain and species-specific exposure classes. The ExO class http://purl.obolibrary.org/obo/ExO_0000002 'exposure event' assumes that all exposures involve stressors, which limits the applicability of this class to 'positive' exposures, e.g. exposing a plant to beneficial growing conditions.")
AnnotationAssertion(dc:creator obo:RO_0002310 "Chris Mungall")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002310 "cjm"^^xsd:string)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002310 "2017-06-05T17:55:39Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0002310 "exposure event or process")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002310 "https://github.com/oborel/obo-relations/pull/173"^^xsd:anyURI)
SubClassOf(obo:RO_0002310 obo:BFO_0000015)

# Class: obo:RO_0002532 (sequentially ordered entity)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002532 "Any entity that is ordered in discrete units along a linear axis.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002532 "Chris Mungall")
AnnotationAssertion(rdfs:label obo:RO_0002532 "sequentially ordered entity")
SubClassOf(obo:RO_0002532 ObjectSomeValuesFrom(obo:RO_0002524 obo:RO_0002533))

# Class: obo:RO_0002533 (sequence atomic unit)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002533 "Any individual unit of a collection of like units arranged in a linear order")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002533 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002533 "An individual unit can be a molecular entity such as a base pair, or an abstract entity, such as the abstraction of a base pair.")
AnnotationAssertion(rdfs:label obo:RO_0002533 "sequence atomic unit")
SubClassOf(obo:RO_0002533 obo:RO_0002532)

# Class: obo:RO_0002534 (sequence bearer)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002534 "Any entity that can be divided into parts such that each part is an atomical unit of a sequence")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002534 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002534 "Sequence bearers can be molecular entities, such as a portion of a DNA molecule, or they can be abstract entities, such as an entity representing all human sonic hedgehog regions of the genome with a particular DNA sequence.")
AnnotationAssertion(rdfs:label obo:RO_0002534 "sequence bearer")
SubClassOf(obo:RO_0002534 obo:RO_0002532)

# Class: obo:RO_0002577 (system)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002577 "A material entity consisting of multiple components that are causally integrated.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002577 "May be replaced by a BFO class, as discussed in http://www.jbiomedsem.com/content/4/1/43")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002577 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002577 "http://www.jbiomedsem.com/content/4/1/43")
AnnotationAssertion(rdfs:label obo:RO_0002577 "system")
SubClassOf(obo:RO_0002577 obo:BFO_0000040)

# Class: oboInOwl:ObsoleteClass (Obsolete Class)

AnnotationAssertion(rdfs:label oboInOwl:ObsoleteClass "Obsolete Class"^^xsd:string)


############################
#   Named Individuals
############################

# Individual: obo:IAO_0000122 (ready for release)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000122 obo:IAO_0000125)
AnnotationAssertion(rdfs:label obo:IAO_0000122 "ready for release"@en)

# Individual: obo:IAO_0000125 (pending final vetting)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000125 obo:IAO_0000125)
AnnotationAssertion(rdfs:label obo:IAO_0000125 "pending final vetting"@en)

# Individual: obo:IAO_0000428 (requires discussion)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000428 obo:IAO_0000125)
AnnotationAssertion(rdfs:label obo:IAO_0000428 "requires discussion"@en)

# Individual: obo:RO_0001901 (axiom holds for all times)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0001901 "

## Elucidation

This is used when the statement/axiom is assumed to hold true 'eternally'

## How to interpret (informal)

First the \"atemporal\" FOL is derived from the OWL using the standard
interpretation. This axiom is temporalized by embedding the axiom
within a for-all-times quantified sentence. The t argument is added to
all instantiation predicates and predicates that use this relation.

## Example

    Class: nucleus
    SubClassOf: part_of some cell

    forall t :
      forall n :
        instance_of(n,Nucleus,t)
         implies
        exists c :
          instance_of(c,Cell,t)
          part_of(n,c,t)

## Notes

This interpretation is *not* the same as an at-all-times relation

")
AnnotationAssertion(rdfs:label obo:RO_0001901 "axiom holds for all times"@en)

# Individual: obo:RO_0001902 (relation has no temporal argument)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0001902 "

## Elucidation

This is used when the first-order logic form of the relation is
binary, and takes no temporal argument.

## Example:

    Class: limb
    SubClassOf: develops_from some lateral-plate-mesoderm

     forall t, t2:
      forall x :
        instance_of(x,Limb,t)
         implies
        exists y :
          instance_of(y,LPM,t2)
          develops_from(x,y)


")
AnnotationAssertion(rdfs:label obo:RO_0001902 "relation has no temporal argument"@en)


SubClassOf(ObjectSomeValuesFrom(obo:RO_0002566 obo:BFO_0000040) ObjectUnionOf(ObjectSomeValuesFrom(obo:RO_0000056 ObjectSomeValuesFrom(obo:RO_0002418 obo:BFO_0000015)) ObjectSomeValuesFrom(obo:RO_0002215 ObjectSomeValuesFrom(obo:RO_0000056 ObjectSomeValuesFrom(obo:RO_0002418 obo:BFO_0000015)))))
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000050 obo:BFO_0000050) obo:RO_0002131)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000050 obo:BFO_0000062) obo:BFO_0000062)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000050 obo:BFO_0000063) obo:BFO_0000063)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000050 obo:BFO_0000066) obo:BFO_0000066)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000050 obo:RO_0002162) obo:RO_0002162)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000050 obo:RO_0002210) obo:RO_0002287)
SubObjectPropertyOf(Annotation(obo:RO_0002581 "true"^^xsd:boolean) ObjectPropertyChain(obo:BFO_0000050 obo:RO_0002215) obo:RO_0002329)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000050 obo:RO_0002496) obo:RO_0002496)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000050 obo:RO_0002497) obo:RO_0002497)
SubObjectPropertyOf(Annotation(obo:RO_0002582 "true"^^xsd:boolean) ObjectPropertyChain(obo:BFO_0000051 obo:BFO_0000050) obo:RO_0002131)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000051 obo:BFO_0000055 obo:RO_0000052) obo:RO_0000057)
SubObjectPropertyOf(Annotation(obo:RO_0002581 "true"^^xsd:boolean) ObjectPropertyChain(obo:BFO_0000051 obo:BFO_0000066) obo:RO_0002479)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000051 obo:RO_0000057) obo:RO_0000057)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000051 obo:RO_0002131) obo:RO_0002131)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000051 obo:RO_0002162) obo:RO_0002162)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000051 obo:RO_0002202) obo:RO_0002254)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000051 obo:RO_0002215) obo:RO_0002584)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000054 obo:RO_0002404) obo:RO_0009501)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000066 obo:BFO_0000050) obo:BFO_0000066)
SubObjectPropertyOf(Annotation(obo:RO_0002582 "true"^^xsd:boolean) ObjectPropertyChain(obo:RO_0000052 obo:BFO_0000050) obo:RO_0002314)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0001025 obo:BFO_0000050) obo:RO_0001018)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0001025 ObjectInverseOf(obo:RO_0001025)) obo:RO_0002379)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002091 obo:BFO_0000060) obo:RO_0002089)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002091 obo:BFO_0000062) obo:BFO_0000062)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002092 obo:BFO_0000062) obo:BFO_0000062)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002092 obo:BFO_0000063) obo:BFO_0000063)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002093 obo:BFO_0000062) obo:RO_0002086)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002100 obo:BFO_0000050) obo:RO_0002100)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002102 obo:BFO_0000050) obo:RO_0002102)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002110 obo:BFO_0000050) obo:RO_0002110)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002113 obo:BFO_0000050) obo:RO_0002113)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002121 obo:BFO_0000050) obo:RO_0002121)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002130 obo:BFO_0000050) obo:RO_0002130)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002134 obo:BFO_0000050) obo:RO_0002134)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002156 obo:RO_0002157) obo:RO_0002158)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002202 obo:RO_0002162) obo:RO_0002162)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002203 obo:BFO_0000050) obo:RO_0002255)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002206 obo:BFO_0000050) obo:RO_0002206)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002206 obo:RO_0002162) obo:RO_0002162)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002207 obo:BFO_0000050) obo:RO_0002225)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002207 obo:RO_0001025) obo:RO_0002226)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002211 obo:RO_0002313) obo:RO_0002011)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002212 obo:RO_0002212) obo:RO_0002213)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002214 obo:RO_0002162) obo:RO_0002162)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002214 obo:RO_0002217) obo:RO_0002215)
SubObjectPropertyOf(Annotation(obo:RO_0002582 "true"^^xsd:boolean) ObjectPropertyChain(obo:RO_0002215 obo:BFO_0000050) obo:RO_0002216)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002215 obo:RO_0002162) obo:RO_0002162)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002215 obo:RO_0002211) obo:RO_0002596)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002215 obo:RO_0002212) obo:RO_0002597)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002215 obo:RO_0002213) obo:RO_0002598)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002215 obo:RO_0002481 obo:RO_0002400) obo:RO_0002447)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002215 obo:RO_0002482 obo:RO_0002400) obo:RO_0002480)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002217 obo:RO_0002162) obo:RO_0002162)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002224 obo:BFO_0000066) obo:RO_0002231)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002224 obo:RO_0002230) obo:RO_0002087)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002224 obo:RO_0002233) obo:RO_0002233)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002224 obo:RO_0002400) obo:RO_0002400)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002225 obo:RO_0002162) obo:RO_0002162)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002230 obo:BFO_0000066) obo:RO_0002232)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002230 obo:RO_0002211) obo:RO_0002211)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002230 obo:RO_0002212) obo:RO_0002212)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002230 obo:RO_0002213) obo:RO_0002213)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002230 obo:RO_0002224) obo:RO_0002090)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002230 obo:RO_0002234) obo:RO_0002234)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002254 obo:RO_0002162) obo:RO_0002162)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002258 obo:RO_0002496) obo:RO_0002496)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002286 obo:RO_0002497) obo:RO_0002497)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002295 obo:RO_0002162) obo:RO_0002162)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002313 obo:BFO_0000051) obo:RO_0002313)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002314 obo:BFO_0000050) obo:RO_0002314)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:BFO_0000050) obo:RO_0002331)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:BFO_0000051) obo:RO_0002327)
SubObjectPropertyOf(Annotation(obo:RO_0002581 "true"^^xsd:boolean) ObjectPropertyChain(obo:RO_0002327 obo:BFO_0000066) obo:RO_0002432)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002017) obo:RO_0002327)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002211) obo:RO_0002428)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002211 obo:RO_0002333) obo:RO_0002448)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002212) obo:RO_0002430)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002213) obo:RO_0002429)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002411) obo:RO_0002263)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002411 obo:RO_0002233) obo:RO_0002566)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002411 obo:RO_0002333) obo:RO_0002566)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002418) obo:RO_0002264)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002629 obo:RO_0002333) obo:RO_0002450)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002630 obo:RO_0002333) obo:RO_0002449)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002331 obo:BFO_0000050) obo:RO_0002331)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002331 obo:RO_0002211) obo:RO_0002428)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002331 obo:RO_0002212) obo:RO_0002430)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002331 obo:RO_0002213) obo:RO_0002429)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002338 obo:BFO_0000050) obo:RO_0002338)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002339 obo:BFO_0000050) obo:RO_0002339)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002340 obo:BFO_0000051) obo:RO_0002340)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002345 obo:BFO_0000051) obo:RO_0002345)
SubObjectPropertyOf(Annotation(obo:RO_0002582 "true"^^xsd:boolean) ObjectPropertyChain(obo:RO_0002371 obo:BFO_0000050) obo:RO_0002177)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002377 obo:RO_0002381) obo:RO_0002380)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002402 obo:RO_0002400) obo:RO_0002413)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002406 obo:RO_0002406) obo:RO_0002407)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002406 obo:RO_0002407) obo:RO_0002407)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002407 obo:RO_0002406) obo:RO_0002407)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002408 obo:RO_0002408) obo:RO_0002409)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002408 obo:RO_0002409) obo:RO_0002409)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002409 obo:RO_0002408) obo:RO_0002409)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002409 obo:RO_0002409) obo:RO_0002407)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002411 obo:RO_0002402) obo:RO_0002403)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002444 obo:RO_0002444) obo:RO_0002553)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002445 obo:RO_0002445) obo:RO_0002554)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002461 obo:RO_0002465 ObjectInverseOf(obo:RO_0002461)) obo:RO_0002440)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002461 obo:RO_0002466 ObjectInverseOf(obo:RO_0002461)) obo:RO_0002441)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002461 obo:RO_0002467 ObjectInverseOf(obo:RO_0002461)) obo:RO_0002442)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002461 obo:RO_0002468 ObjectInverseOf(obo:RO_0002461)) obo:RO_0002443)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002462 obo:RO_0002468 ObjectInverseOf(obo:RO_0002463)) obo:RO_0002444)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002488 obo:BFO_0000050) obo:RO_0002488)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002492 obo:BFO_0000050) obo:RO_0002492)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002496 obo:BFO_0000050) obo:RO_0002496)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002496 obo:BFO_0000062) obo:RO_0002496)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002496 obo:RO_0002082) obo:RO_0002496)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002497 obo:BFO_0000050) obo:RO_0002497)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002497 obo:BFO_0000063) obo:RO_0002497)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002497 obo:RO_0002082) obo:RO_0002497)
SubObjectPropertyOf(Annotation(obo:RO_0002582 "true"^^xsd:boolean) ObjectPropertyChain(obo:RO_0002507 obo:BFO_0000050) obo:RO_0002509)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002511 obo:RO_0002513) obo:RO_0002205)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002512 obo:RO_0002510) obo:RO_0002204)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002524 obo:RO_0002525) obo:RO_0002526)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002578 obo:RO_0002578) obo:RO_0002211)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002583 obo:BFO_0000050) obo:RO_0002488)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002583 obo:BFO_0000062 ObjectInverseOf(obo:RO_0002583)) obo:RO_0002496)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002593 obo:BFO_0000050) obo:RO_0002492)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002593 obo:BFO_0000063 ObjectInverseOf(obo:RO_0002593)) obo:RO_0002497)
SubObjectPropertyOf(ObjectPropertyChain(ObjectInverseOf(obo:BFO_0000066) obo:RO_0002234) obo:RO_0003000)
SubObjectPropertyOf(ObjectPropertyChain(ObjectInverseOf(obo:RO_0002176) obo:RO_0002176) obo:RO_0002170)
DLSafeRule(Annotation(swrla:isRuleEnabled "true"^^xsd:boolean) Annotation(rdfs:comment "MF(X)-directly_regulates->MF(Y)-enabled_by->GP(Z) => MF(Y)-has_input->GP(Y) e.g. if 'protein kinase activity'(X) directly_regulates 'protein binding activity (Y)and this is enabled by GP(Z) then X has_input Z"^^xsd:string) Annotation(rdfs:label "infer input from direct reg"^^xsd:string) Body(ObjectPropertyAtom(obo:RO_0002327 Variable(:z) Variable(:y)) ObjectPropertyAtom(obo:RO_0002578 Variable(:x) Variable(:y)) ClassAtom(obo:GO_0003674 Variable(:x)) ClassAtom(obo:GO_0003674 Variable(:y)))Head(ObjectPropertyAtom(obo:RO_0002233 Variable(:x) Variable(:z))))
DLSafeRule(Annotation(rdfs:comment "GP(X)-enables->MF(Y)-has_part->MF(Z) => GP(X) enables MF(Z),
e.g.  if GP X enables ATPase coupled transporter activity' and 'ATPase coupled transporter activity' has_part 'ATPase activity' then GP(X) enables 'ATPase activity'") Annotation(rdfs:label "enabling an MF enables its parts") Body(ClassAtom(obo:GO_0003674 Variable(<urn:swrl#y>)) ObjectPropertyAtom(obo:RO_0002327 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)) ObjectPropertyAtom(obo:BFO_0000051 Variable(<urn:swrl#y>) Variable(<urn:swrl#z>)))Head(ObjectPropertyAtom(obo:RO_0002327 Variable(<urn:swrl#x>) Variable(<urn:swrl#z>))))
DLSafeRule(Annotation(swrla:isRuleEnabled "true"^^xsd:boolean) Annotation(rdfs:comment "GP(X)-enables->MF(Y)-part_of->BP(Z) => GP(X) involved_in BP(Z) e.g. if X enables 'protein kinase activity' and Y 'part of' 'signal tranduction' then X involved in 'signal transduction'"^^xsd:string) Annotation(rdfs:label "involved in BP"^^xsd:string) Body(ClassAtom(obo:GO_0008150 Variable(<urn:swrl#z>)) ObjectPropertyAtom(obo:BFO_0000050 Variable(<urn:swrl#y>) Variable(<urn:swrl#z>)) ObjectPropertyAtom(obo:RO_0002327 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)))Head(ObjectPropertyAtom(obo:RO_0002331 Variable(<urn:swrl#x>) Variable(<urn:swrl#z>))))
DLSafeRule(Annotation(rdfs:label "From ligand activity to has_ligand") Body(ObjectPropertyAtom(obo:RO_0002327 Variable(<urn:swrl#y>) Variable(<urn:swrl#z>)) ObjectPropertyAtom(obo:RO_0002578 Variable(<urn:swrl#z>) Variable(<urn:swrl#x>)) ClassAtom(obo:GO_0048018 Variable(<urn:swrl#z>)))Head(ObjectPropertyAtom(obo:RO_0002019 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>))))
DLSafeRule(Annotation(rdfs:comment "This rule is dubious: added as a quick fix for expected inference in GO-CAM.  The problem is most acute for transmembrane proteins, such as receptors or cell adhesion molecules, which have some subfunctions inside the cell (e.g. kinase activity) and some subfunctions outside (e.g. ligand binding).  Correct annotation of where these functions occurs leads to incorrect inference about the location of the whole protein.  This should probably be weakened to \"... -> overlaps\"") Body(ObjectPropertyAtom(obo:BFO_0000066 Variable(<urn:swrl#y>) Variable(<urn:swrl#z>)) ObjectPropertyAtom(obo:RO_0002327 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)))Head(ObjectPropertyAtom(obo:BFO_0000050 Variable(<urn:swrl#x>) Variable(<urn:swrl#z>))))
DLSafeRule(Annotation(rdfs:comment "If a molecular function (X) has a regulatory subfunction, then any gene product which is an input to that subfunction has an activity that directly_regulates X.  Note:  this is intended for cases where the regaultory subfunction is protein binding, so it could be tightened with an additional clause to specify this.") Annotation(rdfs:label "inferring direct reg edge from input to regulatory subfunction") Body(ObjectPropertyAtom(obo:RO_0002352 Variable(<urn:swrl#B>) Variable(<urn:swrl#C>)) ObjectPropertyAtom(obo:RO_0002333 Variable(<urn:swrl#A>) Variable(<urn:swrl#B>)) ObjectPropertyAtom(obo:RO_0002013 Variable(<urn:swrl#D>) Variable(<urn:swrl#C>)))Head(ObjectPropertyAtom(obo:RO_0002578 Variable(<urn:swrl#A>) Variable(<urn:swrl#D>))))
DLSafeRule(Annotation(rdfs:label "inferring direct neg reg edge from input to regulatory subfunction") Body(ObjectPropertyAtom(obo:RO_0002352 Variable(<urn:swrl#B>) Variable(<urn:swrl#C>)) ObjectPropertyAtom(obo:RO_0002333 Variable(<urn:swrl#A>) Variable(<urn:swrl#B>)) ObjectPropertyAtom(obo:RO_0002014 Variable(<urn:swrl#D>) Variable(<urn:swrl#C>)))Head(ObjectPropertyAtom(obo:RO_0002630 Variable(<urn:swrl#A>) Variable(<urn:swrl#D>))))
DLSafeRule(Annotation(rdfs:label "inferring direct positive reg edge from input to regulatory subfunction") Body(ObjectPropertyAtom(obo:RO_0002352 Variable(<urn:swrl#B>) Variable(<urn:swrl#C>)) ObjectPropertyAtom(obo:RO_0002333 Variable(<urn:swrl#A>) Variable(<urn:swrl#B>)) ObjectPropertyAtom(obo:RO_0002015 Variable(<urn:swrl#D>) Variable(<urn:swrl#C>)))Head(ObjectPropertyAtom(obo:RO_0002629 Variable(<urn:swrl#A>) Variable(<urn:swrl#D>))))
DLSafeRule(Annotation(rdfs:label "From has_ligand to ligand activity") Body(ObjectPropertyAtom(obo:RO_0002327 Variable(<urn:swrl#y>) Variable(<urn:swrl#z>)) ObjectPropertyAtom(obo:RO_0002019 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)))Head(ClassAtom(obo:GO_0048018 Variable(<urn:swrl#z>)) ObjectPropertyAtom(obo:RO_0002578 Variable(<urn:swrl#z>) Variable(<urn:swrl#x>))))
DLSafeRule(Annotation(rdfs:label "effector input is compound function input") Body(ObjectPropertyAtom(obo:RO_0002233 Variable(<urn:swrl#eff>) Variable(<urn:swrl#in>)) ObjectPropertyAtom(obo:RO_0002025 Variable(<urn:swrl#mf>) Variable(<urn:swrl#eff>)))Head(ObjectPropertyAtom(obo:RO_0002233 Variable(<urn:swrl#mf>) Variable(<urn:swrl#in>))))
DLSafeRule(Annotation(rdfs:label "Input of effector is input of its parent MF") Body(ObjectPropertyAtom(obo:RO_0002233 Variable(<urn:swrl#mf>) Variable(<urn:swrl#in>)) ObjectPropertyAtom(obo:RO_0002025 Variable(<urn:swrl#mf>) Variable(<urn:swrl#eff>)))Head(ObjectPropertyAtom(obo:RO_0002233 Variable(<urn:swrl#eff>) Variable(<urn:swrl#in>))))
DLSafeRule(Annotation(rdfs:comment "if effector directly regulates X,  its parent MF directly regulates X") Body(ObjectPropertyAtom(obo:RO_0002025 Variable(<urn:swrl#mf>) Variable(<urn:swrl#eff>)) ObjectPropertyAtom(obo:RO_0002578 Variable(<urn:swrl#mf>) Variable(<urn:swrl#mf2>)))Head(ObjectPropertyAtom(obo:RO_0002578 Variable(<urn:swrl#eff>) Variable(<urn:swrl#mf2>))))
DLSafeRule(Annotation(rdfs:comment "if effector directly positively regulates X,  its parent MF directly positively regulates X") Body(ObjectPropertyAtom(obo:RO_0002629 Variable(<urn:swrl#mf>) Variable(<urn:swrl#mf2>)) ObjectPropertyAtom(obo:RO_0002025 Variable(<urn:swrl#mf>) Variable(<urn:swrl#eff>)))Head(ObjectPropertyAtom(obo:RO_0002629 Variable(<urn:swrl#eff>) Variable(<urn:swrl#mf2>))))
DLSafeRule(Annotation(rdfs:label "if effector directly negatively regulates X,  its parent MF directly negatively regulates X") Body(ObjectPropertyAtom(obo:RO_0002025 Variable(<urn:swrl#mf>) Variable(<urn:swrl#eff>)) ObjectPropertyAtom(obo:RO_0002630 Variable(<urn:swrl#mf>) Variable(<urn:swrl#mf2>)))Head(ObjectPropertyAtom(obo:RO_0002630 Variable(<urn:swrl#eff>) Variable(<urn:swrl#mf2>))))
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0002213 Variable(<urn:swrl#y>) Variable(<urn:swrl#z>)) ObjectPropertyAtom(obo:RO_0002212 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)))Head(ObjectPropertyAtom(obo:RO_0002212 Variable(<urn:swrl#x>) Variable(<urn:swrl#z>))))
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0002213 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)) ObjectPropertyAtom(obo:RO_0002212 Variable(<urn:swrl#y>) Variable(<urn:swrl#z>)))Head(ObjectPropertyAtom(obo:RO_0002212 Variable(<urn:swrl#x>) Variable(<urn:swrl#z>))))
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000078 obo:IAO_0000125)
AnnotationAssertion(rdfs:label obo:IAO_0000078 "curation status specification"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000225 obo:IAO_0000125)
AnnotationAssertion(rdfs:label obo:IAO_0000225 "obsolescence reason specification"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0100001 obo:IAO_0000125)
AnnotationAssertion(rdfs:label obo:IAO_0100001 "term replaced by"@en)
)