
################################################################
# Test /Query/DiscoveryQuery/create endpoint

# Set the $DATA variable for the 'curl -d' args to specify the query expression,
# and other required params...

setCurlData query=anarchy \
        queryName=DiscoveryQueryTest001 \
        begin=20130301 \
        end=20130401 \
        pagesize=10 \
        auths=PUBLIC \
        columnVisibility=PRIVATE \
        query.syntax=LUCENE

TEST_ID="DiscoveryQueryCreate"
TEST_DESCRIPTION="Creates a DiscoveryQuery to get a summary of matching events (event count by date)"
TEST_URL_OPTS="--header 'Content-Type: application/x-www-form-urlencoded' ${DW_CURL_DATA} -X POST ${URI_ROOT}/Query/DiscoveryQuery/create"
EXPECTED_RESPONSE_TYPE="application/xml"
EXPECTED_RESPONSE_CODE=200
EXPECTED_RESPONSE_BODY_ASSERTION=false

# We run the above test here (rather than in run.sh), so that we can guarantee proper execution order,
# as we need to parse out the dynamic query-id to configure follow-on tests below

runTest

################################################################
# Test /Query/${DW_QUERY_ID}/next endpoint

setQueryIdFromResponseXml "${ACTUAL_RESPONSE_BODY}"

[ -z "${DW_QUERY_ID}" ] && warn "Failed to parse a query id from \$ACTUAL_RESPONSE_BODY"

TEST_ID="DiscoveryQueryNext"
TEST_DESCRIPTION="Gets the first page of results for the DiscoveryQueryCreate test"
TEST_URL_OPTS="-X GET ${URI_ROOT}/Query/${DW_QUERY_ID}/next"
EXPECTED_RESPONSE_TYPE="application/xml"
EXPECTED_RESPONSE_CODE=200
EXPECTED_RESPONSE_BODY_ASSERTION=false

runTest

################################################################
# Test /Query/${DW_QUERY_ID}/close endpoint

TEST_ID="DiscoveryQueryClose"
TEST_DESCRIPTION="Closes the DiscoveryQuery as necessary"
TEST_URL_OPTS="-X PUT ${URI_ROOT}/Query/${DW_QUERY_ID}/close"
EXPECTED_RESPONSE_TYPE="application/xml"
EXPECTED_RESPONSE_CODE=200
EXPECTED_RESPONSE_BODY_ASSERTION=false

# This last test is executed by run.sh, as usual
