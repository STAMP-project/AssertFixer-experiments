<FindBugsFilter>

    <!-- This is used to fail CI if any medium or high bugs appear.
         For high, this fails on any.  For medium, we accept 
         certain categories where we haven't cleared medium yet -->
         
    <!-- Suppress medium bugs which we _don't_ want to fail as get them removed -->
     <Match>
        <Confidence value="2" /> <!-- 3 is low priority, 2 is medium priority, 1 is high priority -->
        <Or>
           <Bug pattern="IS2_INCONSISTENT_SYNC" />
           <Bug pattern="ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD" />
           <Bug pattern="NN_NAKED_NOTIFY" />
           <Bug pattern="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE" />
           <Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" />
           <Bug pattern="SC_START_IN_CTOR" />
           <Bug pattern="SF_SWITCH_FALLTHROUGH" />
           <Bug pattern="ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD" />
           <Bug pattern="SWL_SLEEP_WITH_LOCK_HELD" />
           <Bug pattern="UW_UNCOND_WAIT" />
           <Bug pattern="VO_VOLATILE_INCREMENT" />
<!-- 
           <Bug pattern="WA_NOT_IN_LOOP" />
 -->
        </Or>
     </Match>


    <!-- what follows should be kept in sync with .spotbugs.xml -->

     <Match>
       <!-- Design issue -->
       <Bug pattern="PZLA_PREFER_ZERO_LENGTH_ARRAYS" />
     </Match>

     <Match>
       <!-- Minor clarity issue -->
       <Bug pattern="RI_REDUNDANT_INTERFACES" />
     </Match>

     <Match>
       <!-- This is marked as high priority, but is
            really just a minor efficiency issue.
            Suppressed for now to focus attention on
            other high-priority items.  -->
       <Bug pattern="DM_BOXED_PRIMITIVE_FOR_PARSING" />
     </Match>

     <Match>
       <!-- Design issue -->
       <Bug pattern="SIC_INNER_SHOULD_BE_STATIC_ANON" />
     </Match>

     <Match>
       <!-- Design issue -->
       <Bug pattern="SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS" />
     </Match>

     <Match>
       <!-- Most of these are non-I18N, internal changes of case.
            We should find the I18N ones, but it seems excessive
            to track down and annotate all the others first thing -->
       <Bug pattern="DM_CONVERT_CASE" />
     </Match>

     <Match>
       <!-- Most of these are non-I18N, JMRI-specific file operations.
            We should find the I18N ones, but it seems excessive
            to track down and annotate all the others first thing.
            Suppressed for now to focus attention on
            other high-priority items.  -->
       <Bug pattern="DM_DEFAULT_ENCODING" />
     </Match>

     <Match>
       <!-- Efficiency issue, but hard to ensure refactor doesn't introduce
            bugs, so leaving for later -->
       <Bug pattern="WMI_WRONG_MAP_ITERATOR" />
     </Match>

     <Match>
       <!-- JMRI code is often written to trust weird from other classes,
            so the question of "malicious" is complicated. The rules in
            this category should be restored in small batches  -->
       <Bug category="MALICIOUS_CODE" />
     </Match>

    <!-- items we're unlikely to restore -->

     <Match>
       <!-- JMRI does not use serialization, permanently ignore -->
       <Bug code="Se,SnVI" />
     </Match>

</FindBugsFilter>
