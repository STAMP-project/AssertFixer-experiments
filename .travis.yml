language: java
sudo: false


# Skip the default Maven command launched by Travis.
# By default, it is "mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V"
install: true


# Global ENV variables (shared by all the items in the build matrix).
env:
  global:
    - ROBOCONF_IT_TIMEOUT=60000
    - MAVEN_OPTS=" -Xms256m -Xmx512m "


# Our build matrix implies several JDK.
#
# Oracle JDK 8 => basic build with specific settings to validate the Javadoc.
# Open JDK 8 => basic build.
# Open JDK 7 => one build for Coveralls and snapshots deployment.
# Open JDK 7 => another build to run integration tests (but not unit tests).
#
# Reminders
# =========
# -q: quiet
# --settings: pass a settings XML file in parameter (required for deployment).
# -DskipTests: compile unit tests but do not run them.
# -P: execute a specific profile.
# -rf: resume the build from a particular module.
# -D: set a Maven property.
#
# Notice that...
#
#    mvn versions:update-child-modules -DgenerateBackupPoms=false -DallowSnapshots=true -P it-all
#
# ... is used to prevent build failures when running integration tests when we release.
# See https://github.com/roboconf/roboconf-platform/issues/766 for more details.
#
matrix:
  include:
    - jdk: oraclejdk8
      env: BUILD_CMD="mvn clean install -q -Droboconf.javadoc.check"
    - jdk: openjdk8
      env: BUILD_CMD="mvn clean install -q"
    - jdk: openjdk7
      env: BUILD_CMD='( [[ "$TRAVIS_PULL_REQUEST" == "false" ]] && wget http://roboconf.net/resources/build/settings.xml && mvn clean deploy cobertura:cobertura coveralls:report -q --settings settings.xml ) || mvn clean install -q'
    - jdk: openjdk7
      env: BUILD_CMD="mvn clean install -q -DskipTests && mvn versions:update-child-modules -DgenerateBackupPoms=false -DallowSnapshots=true -P it-all && mvn install -q -P it-dm-agent -rf :roboconf-integration-tests-commons"
    - jdk: openjdk7
      env: BUILD_CMD="mvn clean install -q -DskipTests && mvn versions:update-child-modules -DgenerateBackupPoms=false -DallowSnapshots=true -P it-all && mvn install -q -P it-agents-in-memory -rf :roboconf-integration-tests-commons"


# Make sure there is a RabbitMq server.
services:
  - rabbitmq


# For debug only
#  - puppet --version


# Build with Maven.
script: eval $BUILD_CMD
