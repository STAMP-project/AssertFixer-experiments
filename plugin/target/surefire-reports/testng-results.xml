<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="263" passed="261">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="275608" started-at="2018-06-05T21:59:59Z" finished-at="2018-06-05T22:04:35Z">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="275608" started-at="2018-06-05T21:59:59Z" finished-at="2018-06-05T22:04:35Z">
      <class name="com.h3xstream.findsecbugs.scala.SSRFDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.scala.SSRFDetectorTest@6c9f5c0d]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:01:09Z" finished-at="2018-06-06T00:01:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectSSRFInController()[pri:0, instance:com.h3xstream.findsecbugs.scala.SSRFDetectorTest@6c9f5c0d]" name="detectSSRFInController" duration-ms="2444" started-at="2018-06-06T00:01:09Z" finished-at="2018-06-06T00:01:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectSSRFInController -->
        <test-method status="PASS" signature="detectURLConnectionSSRF()[pri:0, instance:com.h3xstream.findsecbugs.scala.SSRFDetectorTest@6c9f5c0d]" name="detectURLConnectionSSRF" duration-ms="373" started-at="2018-06-06T00:01:11Z" finished-at="2018-06-06T00:01:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectURLConnectionSSRF -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.scala.SSRFDetectorTest@6c9f5c0d]" name="after" is-config="true" duration-ms="384" started-at="2018-06-06T00:01:12Z" finished-at="2018-06-06T00:01:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.scala.SSRFDetectorTest -->
      <class name="com.h3xstream.findsecbugs.ReDosDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.ReDosDetectorTest@59717824]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:04:29Z" finished-at="2018-06-06T00:04:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="analyseSafePattern()[pri:0, instance:com.h3xstream.findsecbugs.ReDosDetectorTest@59717824]" name="analyseSafePattern" duration-ms="4" started-at="2018-06-06T00:04:29Z" finished-at="2018-06-06T00:04:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- analyseSafePattern -->
        <test-method status="PASS" signature="analyseSuspectPattern()[pri:0, instance:com.h3xstream.findsecbugs.ReDosDetectorTest@59717824]" name="analyseSuspectPattern" duration-ms="1" started-at="2018-06-06T00:04:29Z" finished-at="2018-06-06T00:04:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- analyseSuspectPattern -->
        <test-method status="PASS" signature="detectRedosInCode()[pri:0, instance:com.h3xstream.findsecbugs.ReDosDetectorTest@59717824]" name="detectRedosInCode" duration-ms="332" started-at="2018-06-06T00:04:29Z" finished-at="2018-06-06T00:04:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectRedosInCode -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.ReDosDetectorTest@59717824]" name="after" is-config="true" duration-ms="5528" started-at="2018-06-06T00:04:29Z" finished-at="2018-06-06T00:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.ReDosDetectorTest -->
      <class name="com.h3xstream.findsecbugs.ldap.LdapEntryPoisoningDetectorTest">
        <test-method status="PASS" signature="detectAnonymousLdapBind()[pri:0, instance:com.h3xstream.findsecbugs.ldap.LdapEntryPoisoningDetectorTest@6a396c1e]" name="detectAnonymousLdapBind" duration-ms="294" started-at="2018-06-06T00:03:37Z" finished-at="2018-06-06T00:03:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectAnonymousLdapBind -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.ldap.LdapEntryPoisoningDetectorTest@6a396c1e]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:37Z" finished-at="2018-06-06T00:03:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.ldap.LdapEntryPoisoningDetectorTest@6a396c1e]" name="after" is-config="true" duration-ms="874" started-at="2018-06-06T00:03:37Z" finished-at="2018-06-06T00:03:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.ldap.LdapEntryPoisoningDetectorTest -->
      <class name="com.h3xstream.findsecbugs.cookie.CookieFlagsDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.cookie.CookieFlagsDetectorTest@5e25a92e]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:58Z" finished-at="2018-06-06T00:02:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="avoidHttpOnlyBasicFalsePositive()[pri:0, instance:com.h3xstream.findsecbugs.cookie.CookieFlagsDetectorTest@5e25a92e]" name="avoidHttpOnlyBasicFalsePositive" duration-ms="314" started-at="2018-06-06T00:02:58Z" finished-at="2018-06-06T00:02:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avoidHttpOnlyBasicFalsePositive -->
        <test-method status="PASS" signature="avoidSecureFlagBasicFalsePositive()[pri:0, instance:com.h3xstream.findsecbugs.cookie.CookieFlagsDetectorTest@5e25a92e]" name="avoidSecureFlagBasicFalsePositive" duration-ms="308" started-at="2018-06-06T00:02:59Z" finished-at="2018-06-06T00:02:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avoidSecureFlagBasicFalsePositive -->
        <test-method status="PASS" signature="detectHttpOnlyCookieBasic()[pri:0, instance:com.h3xstream.findsecbugs.cookie.CookieFlagsDetectorTest@5e25a92e]" name="detectHttpOnlyCookieBasic" duration-ms="308" started-at="2018-06-06T00:02:59Z" finished-at="2018-06-06T00:02:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectHttpOnlyCookieBasic -->
        <test-method status="PASS" signature="detectSecureFlagCookieBasic()[pri:0, instance:com.h3xstream.findsecbugs.cookie.CookieFlagsDetectorTest@5e25a92e]" name="detectSecureFlagCookieBasic" duration-ms="306" started-at="2018-06-06T00:02:59Z" finished-at="2018-06-06T00:03:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectSecureFlagCookieBasic -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.cookie.CookieFlagsDetectorTest@5e25a92e]" name="after" is-config="true" duration-ms="641" started-at="2018-06-06T00:03:00Z" finished-at="2018-06-06T00:03:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.cookie.CookieFlagsDetectorTest -->
      <class name="com.h3xstream.findsecbugs.endpoint.Struts1EndpointDetectorTest">
        <test-method status="PASS" signature="detectStruts1Endpoint()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.Struts1EndpointDetectorTest@290dbf45]" name="detectStruts1Endpoint" duration-ms="302" started-at="2018-06-06T00:02:25Z" finished-at="2018-06-06T00:02:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectStruts1Endpoint -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.Struts1EndpointDetectorTest@290dbf45]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:25Z" finished-at="2018-06-06T00:02:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.Struts1EndpointDetectorTest@290dbf45]" name="after" is-config="true" duration-ms="492" started-at="2018-06-06T00:02:25Z" finished-at="2018-06-06T00:02:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.endpoint.Struts1EndpointDetectorTest -->
      <class name="com.h3xstream.findsecbugs.file.PathTraversalDetectorTest">
        <test-method status="PASS" signature="detectPathTraversal()[pri:0, instance:com.h3xstream.findsecbugs.file.PathTraversalDetectorTest@70beb599]" name="detectPathTraversal" duration-ms="369" started-at="2018-06-06T00:02:34Z" finished-at="2018-06-06T00:02:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectPathTraversal -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.file.PathTraversalDetectorTest@70beb599]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:34Z" finished-at="2018-06-06T00:02:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.file.PathTraversalDetectorTest@70beb599]" name="after" is-config="true" duration-ms="1560" started-at="2018-06-06T00:02:35Z" finished-at="2018-06-06T00:02:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.file.PathTraversalDetectorTest -->
      <class name="com.h3xstream.findsecbugs.endpoint.TapestryEndpointDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.TapestryEndpointDetectorTest@49c43f4e]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:02:24Z" finished-at="2018-06-06T00:02:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectTapestryPagePojo()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.TapestryEndpointDetectorTest@49c43f4e]" name="detectTapestryPagePojo" duration-ms="269" started-at="2018-06-06T00:02:24Z" finished-at="2018-06-06T00:02:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectTapestryPagePojo -->
        <test-method status="PASS" signature="detectTapestryPageWithFrameworkReference()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.TapestryEndpointDetectorTest@49c43f4e]" name="detectTapestryPageWithFrameworkReference" duration-ms="274" started-at="2018-06-06T00:02:24Z" finished-at="2018-06-06T00:02:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectTapestryPageWithFrameworkReference -->
        <test-method status="PASS" signature="noFalsePositiveOnOtherClass()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.TapestryEndpointDetectorTest@49c43f4e]" name="noFalsePositiveOnOtherClass" duration-ms="296" started-at="2018-06-06T00:02:24Z" finished-at="2018-06-06T00:02:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noFalsePositiveOnOtherClass -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.TapestryEndpointDetectorTest@49c43f4e]" name="after" is-config="true" duration-ms="410" started-at="2018-06-06T00:02:25Z" finished-at="2018-06-06T00:02:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.endpoint.TapestryEndpointDetectorTest -->
      <class name="com.h3xstream.findsecbugs.taintanalysis.TaintAnalysisTaintedByAnnotationTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.taintanalysis.TaintAnalysisTaintedByAnnotationTest@6cc7b4de]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:13Z" finished-at="2018-06-06T00:02:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testSafeTestCases()[pri:0, instance:com.h3xstream.findsecbugs.taintanalysis.TaintAnalysisTaintedByAnnotationTest@6cc7b4de]" name="testSafeTestCases" duration-ms="395" started-at="2018-06-06T00:02:13Z" finished-at="2018-06-06T00:02:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSafeTestCases -->
        <test-method status="PASS" signature="testUnsafeTestCases()[pri:0, instance:com.h3xstream.findsecbugs.taintanalysis.TaintAnalysisTaintedByAnnotationTest@6cc7b4de]" name="testUnsafeTestCases" duration-ms="404" started-at="2018-06-06T00:02:13Z" finished-at="2018-06-06T00:02:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnsafeTestCases -->
        <test-method status="PASS" signature="testVariousTaintedAnnotations()[pri:0, instance:com.h3xstream.findsecbugs.taintanalysis.TaintAnalysisTaintedByAnnotationTest@6cc7b4de]" name="testVariousTaintedAnnotations" duration-ms="335" started-at="2018-06-06T00:02:14Z" finished-at="2018-06-06T00:02:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVariousTaintedAnnotations -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.taintanalysis.TaintAnalysisTaintedByAnnotationTest@6cc7b4de]" name="after" is-config="true" duration-ms="2340" started-at="2018-06-06T00:02:14Z" finished-at="2018-06-06T00:02:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.taintanalysis.TaintAnalysisTaintedByAnnotationTest -->
      <class name="com.h3xstream.findsecbugs.jsp.JspSpringEvalDetectorTest">
        <test-method status="PASS" signature="jspSpringEval1_unsafe()[pri:0, instance:com.h3xstream.findsecbugs.jsp.JspSpringEvalDetectorTest@71248c21]" name="jspSpringEval1_unsafe" duration-ms="726" started-at="2018-06-06T00:03:52Z" finished-at="2018-06-06T00:03:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jspSpringEval1_unsafe -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.jsp.JspSpringEvalDetectorTest@71248c21]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:52Z" finished-at="2018-06-06T00:03:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="jspSpringEval2_unsafe()[pri:0, instance:com.h3xstream.findsecbugs.jsp.JspSpringEvalDetectorTest@71248c21]" name="jspSpringEval2_unsafe" duration-ms="773" started-at="2018-06-06T00:03:53Z" finished-at="2018-06-06T00:03:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jspSpringEval2_unsafe -->
        <test-method status="PASS" signature="jspSpringEval3_unsafe()[pri:0, instance:com.h3xstream.findsecbugs.jsp.JspSpringEvalDetectorTest@71248c21]" name="jspSpringEval3_unsafe" duration-ms="608" started-at="2018-06-06T00:03:54Z" finished-at="2018-06-06T00:03:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jspSpringEval3_unsafe -->
        <test-method status="PASS" signature="jspSpringEval4_safe()[pri:0, instance:com.h3xstream.findsecbugs.jsp.JspSpringEvalDetectorTest@71248c21]" name="jspSpringEval4_safe" duration-ms="2180" started-at="2018-06-06T00:03:54Z" finished-at="2018-06-06T00:03:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jspSpringEval4_safe -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.jsp.JspSpringEvalDetectorTest@71248c21]" name="after" is-config="true" duration-ms="1558" started-at="2018-06-06T00:03:57Z" finished-at="2018-06-06T00:03:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.jsp.JspSpringEvalDetectorTest -->
      <class name="com.h3xstream.findsecbugs.csrf.SpringCsrfProtectionDisabledDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.csrf.SpringCsrfProtectionDisabledDetectorTest@1c72da34]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:04:04Z" finished-at="2018-06-06T00:04:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectSpringCsrfProtectionDisabled()[pri:0, instance:com.h3xstream.findsecbugs.csrf.SpringCsrfProtectionDisabledDetectorTest@1c72da34]" name="detectSpringCsrfProtectionDisabled" duration-ms="253" started-at="2018-06-06T00:04:04Z" finished-at="2018-06-06T00:04:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectSpringCsrfProtectionDisabled -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.csrf.SpringCsrfProtectionDisabledDetectorTest@1c72da34]" name="after" is-config="true" duration-ms="2147" started-at="2018-06-06T00:04:05Z" finished-at="2018-06-06T00:04:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.csrf.SpringCsrfProtectionDisabledDetectorTest -->
      <class name="com.h3xstream.findsecbugs.endpoint.Struts2EndpointDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.Struts2EndpointDetectorTest@69a10787]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:29Z" finished-at="2018-06-06T00:02:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectStruts2Endpoint()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.Struts2EndpointDetectorTest@69a10787]" name="detectStruts2Endpoint" duration-ms="296" started-at="2018-06-06T00:02:29Z" finished-at="2018-06-06T00:02:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectStruts2Endpoint -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.Struts2EndpointDetectorTest@69a10787]" name="after" is-config="true" duration-ms="680" started-at="2018-06-06T00:02:29Z" finished-at="2018-06-06T00:02:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.endpoint.Struts2EndpointDetectorTest -->
      <class name="com.h3xstream.findsecbugs.crypto.NullCipherDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.crypto.NullCipherDetectorTest@33b37288]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:01:53Z" finished-at="2018-06-06T00:01:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectNullCipher()[pri:0, instance:com.h3xstream.findsecbugs.crypto.NullCipherDetectorTest@33b37288]" name="detectNullCipher" duration-ms="328" started-at="2018-06-06T00:01:53Z" finished-at="2018-06-06T00:01:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectNullCipher -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.crypto.NullCipherDetectorTest@33b37288]" name="after" is-config="true" duration-ms="1651" started-at="2018-06-06T00:01:53Z" finished-at="2018-06-06T00:01:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.crypto.NullCipherDetectorTest -->
      <class name="com.h3xstream.findsecbugs.jsp.JstlOutDetectorWeblogicTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.jsp.JstlOutDetectorWeblogicTest@6b67034]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:43Z" finished-at="2018-06-06T00:03:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="jspEscape_weblogic()[pri:0, instance:com.h3xstream.findsecbugs.jsp.JstlOutDetectorWeblogicTest@6b67034]" name="jspEscape_weblogic" duration-ms="620" started-at="2018-06-06T00:03:43Z" finished-at="2018-06-06T00:03:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jspEscape_weblogic -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.jsp.JstlOutDetectorWeblogicTest@6b67034]" name="after" is-config="true" duration-ms="1755" started-at="2018-06-06T00:03:43Z" finished-at="2018-06-06T00:03:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.jsp.JstlOutDetectorWeblogicTest -->
      <class name="com.h3xstream.findsecbugs.taintanalysis.JaxRsAnnotatedControllerTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.taintanalysis.JaxRsAnnotatedControllerTest@32cf48b7]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:16Z" finished-at="2018-06-06T00:02:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testSafeTestCases()[pri:0, instance:com.h3xstream.findsecbugs.taintanalysis.JaxRsAnnotatedControllerTest@32cf48b7]" name="testSafeTestCases" duration-ms="310" started-at="2018-06-06T00:02:16Z" finished-at="2018-06-06T00:02:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSafeTestCases -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.taintanalysis.JaxRsAnnotatedControllerTest@32cf48b7]" name="after" is-config="true" duration-ms="1392" started-at="2018-06-06T00:02:17Z" finished-at="2018-06-06T00:02:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.taintanalysis.JaxRsAnnotatedControllerTest -->
      <class name="com.h3xstream.findsecbugs.bugs.OutOfBoundMutableTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.bugs.OutOfBoundMutableTest@1176dcec]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:03:15Z" finished-at="2018-06-06T00:03:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectSecureFlagCookieBasic()[pri:0, instance:com.h3xstream.findsecbugs.bugs.OutOfBoundMutableTest@1176dcec]" name="detectSecureFlagCookieBasic" duration-ms="313" started-at="2018-06-06T00:03:15Z" finished-at="2018-06-06T00:03:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectSecureFlagCookieBasic -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.bugs.OutOfBoundMutableTest@1176dcec]" name="after" is-config="true" duration-ms="776" started-at="2018-06-06T00:03:16Z" finished-at="2018-06-06T00:03:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.bugs.OutOfBoundMutableTest -->
      <class name="com.h3xstream.findsecbugs.xss.JspXssDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:07Z" finished-at="2018-06-06T00:00:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:07Z" finished-at="2018-06-06T00:00:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="detectXssDirectUse()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="detectXssDirectUse" duration-ms="725" started-at="2018-06-06T00:00:07Z" finished-at="2018-06-06T00:00:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXssDirectUse -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:08Z" finished-at="2018-06-06T00:00:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:08Z" finished-at="2018-06-06T00:00:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="detectXssFalsePositiveDirectCast()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="detectXssFalsePositiveDirectCast" duration-ms="845" started-at="2018-06-06T00:00:08Z" finished-at="2018-06-06T00:00:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXssFalsePositiveDirectCast -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:09Z" finished-at="2018-06-06T00:00:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="beforeTest" is-config="true" duration-ms="1" started-at="2018-06-06T00:00:09Z" finished-at="2018-06-06T00:00:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="detectXssFalsePositiveOverwriteLocal()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="detectXssFalsePositiveOverwriteLocal" duration-ms="835" started-at="2018-06-06T00:00:09Z" finished-at="2018-06-06T00:00:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXssFalsePositiveOverwriteLocal -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:09Z" finished-at="2018-06-06T00:00:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:09Z" finished-at="2018-06-06T00:00:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="detectXssFalsePositiveSafeInput()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="detectXssFalsePositiveSafeInput" duration-ms="767" started-at="2018-06-06T00:00:09Z" finished-at="2018-06-06T00:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXssFalsePositiveSafeInput -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="afterTest" is-config="true" duration-ms="1" started-at="2018-06-06T00:00:10Z" finished-at="2018-06-06T00:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="detectXssGetParameter()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="detectXssGetParameter" duration-ms="449" started-at="2018-06-06T00:00:10Z" finished-at="2018-06-06T00:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXssGetParameter -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:10Z" finished-at="2018-06-06T00:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:11Z" finished-at="2018-06-06T00:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="detectXssMultipleTransfertLocal()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="detectXssMultipleTransfertLocal" duration-ms="476" started-at="2018-06-06T00:00:11Z" finished-at="2018-06-06T00:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXssMultipleTransfertLocal -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:11Z" finished-at="2018-06-06T00:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:11Z" finished-at="2018-06-06T00:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="detectXssRequestAttributeWithCustomConfiguration()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="detectXssRequestAttributeWithCustomConfiguration" duration-ms="469" started-at="2018-06-06T00:00:11Z" finished-at="2018-06-06T00:00:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXssRequestAttributeWithCustomConfiguration -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:11Z" finished-at="2018-06-06T00:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="afterTest" is-config="true" duration-ms="1" started-at="2018-06-06T00:00:12Z" finished-at="2018-06-06T00:00:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:12Z" finished-at="2018-06-06T00:00:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="detectXssTransferLocal()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="detectXssTransferLocal" duration-ms="456" started-at="2018-06-06T00:00:12Z" finished-at="2018-06-06T00:00:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXssTransferLocal -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:12Z" finished-at="2018-06-06T00:00:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:12Z" finished-at="2018-06-06T00:00:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="owaspTags()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="owaspTags" duration-ms="459" started-at="2018-06-06T00:00:12Z" finished-at="2018-06-06T00:00:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- owaspTags -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="after" is-config="true" duration-ms="279" started-at="2018-06-06T00:00:12Z" finished-at="2018-06-06T00:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssDetectorTest@8b87145]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:12Z" finished-at="2018-06-06T00:00:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.h3xstream.findsecbugs.xss.JspXssDetectorTest -->
      <class name="com.h3xstream.findsecbugs.crypto.EsapiEncryptorDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.crypto.EsapiEncryptorDetectorTest@101df177]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:01:46Z" finished-at="2018-06-06T00:01:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectEcryptor()[pri:0, instance:com.h3xstream.findsecbugs.crypto.EsapiEncryptorDetectorTest@101df177]" name="detectEcryptor" duration-ms="303" started-at="2018-06-06T00:01:46Z" finished-at="2018-06-06T00:01:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectEcryptor -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.crypto.EsapiEncryptorDetectorTest@101df177]" name="after" is-config="true" duration-ms="1225" started-at="2018-06-06T00:01:46Z" finished-at="2018-06-06T00:01:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.crypto.EsapiEncryptorDetectorTest -->
      <class name="com.h3xstream.findsecbugs.android.WebViewJavascriptEnabledDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.android.WebViewJavascriptEnabledDetectorTest@37574691]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:26Z" finished-at="2018-06-06T00:03:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectWebViewJavascriptEnabled()[pri:0, instance:com.h3xstream.findsecbugs.android.WebViewJavascriptEnabledDetectorTest@37574691]" name="detectWebViewJavascriptEnabled" duration-ms="305" started-at="2018-06-06T00:03:26Z" finished-at="2018-06-06T00:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectWebViewJavascriptEnabled -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.android.WebViewJavascriptEnabledDetectorTest@37574691]" name="after" is-config="true" duration-ms="1626" started-at="2018-06-06T00:03:27Z" finished-at="2018-06-06T00:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.android.WebViewJavascriptEnabledDetectorTest -->
      <class name="com.h3xstream.findsecbugs.xss.JspXssOwaspDetectorTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssOwaspDetectorTest@382db087]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:15Z" finished-at="2018-06-06T00:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssOwaspDetectorTest@382db087]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:15Z" finished-at="2018-06-06T00:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="FAIL" signature="owaspForHtmlTagRecognizedAsSafe()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssOwaspDetectorTest@382db087]" name="owaspForHtmlTagRecognizedAsSafe" duration-ms="419" started-at="2018-06-06T00:00:15Z" finished-at="2018-06-06T00:00:15Z">
          <exception class="org.mockito.exceptions.verification.NeverWantedButInvoked">
            <message>
              <![CDATA[
securityReporter.doReportBug(
    BugInstance with:
bugType="XSS_JSP_PRINT",
);
Never wanted here:
-> at com.h3xstream.findsecbugs.xss.JspXssOwaspDetectorTest.owaspForHtmlTagRecognizedAsSafe(JspXssOwaspDetectorTest.java:59)
But invoked here:
-> at edu.umd.cs.findbugs.AbstractBugReporter.reportBug(AbstractBugReporter.java:192)
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.mockito.exceptions.verification.NeverWantedButInvoked: 
securityReporter.doReportBug(
    BugInstance with:
bugType="XSS_JSP_PRINT",
);
Never wanted here:
-> at com.h3xstream.findsecbugs.xss.JspXssOwaspDetectorTest.owaspForHtmlTagRecognizedAsSafe(JspXssOwaspDetectorTest.java:59)
But invoked here:
-> at edu.umd.cs.findbugs.AbstractBugReporter.reportBug(AbstractBugReporter.java:192)

	at com.h3xstream.findsecbugs.xss.JspXssOwaspDetectorTest.owaspForHtmlTagRecognizedAsSafe(JspXssOwaspDetectorTest.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]>
            </full-stacktrace>
          </exception> <!-- org.mockito.exceptions.verification.NeverWantedButInvoked -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- owaspForHtmlTagRecognizedAsSafe -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssOwaspDetectorTest@382db087]" name="after" is-config="true" duration-ms="236" started-at="2018-06-06T00:00:15Z" finished-at="2018-06-06T00:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssOwaspDetectorTest@382db087]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:15Z" finished-at="2018-06-06T00:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.h3xstream.findsecbugs.xss.JspXssOwaspDetectorTest -->
      <class name="com.h3xstream.findsecbugs.PredictableRandomDetectorScalaTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.PredictableRandomDetectorScalaTest@3ffcd140]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:12Z" finished-at="2018-06-06T00:03:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectUsePredictableRandom()[pri:0, instance:com.h3xstream.findsecbugs.PredictableRandomDetectorScalaTest@3ffcd140]" name="detectUsePredictableRandom" duration-ms="1486" started-at="2018-06-06T00:03:12Z" finished-at="2018-06-06T00:03:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectUsePredictableRandom -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.PredictableRandomDetectorScalaTest@3ffcd140]" name="after" is-config="true" duration-ms="1778" started-at="2018-06-06T00:03:14Z" finished-at="2018-06-06T00:03:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.PredictableRandomDetectorScalaTest -->
      <class name="com.h3xstream.findsecbugs.taintanalysis.TaintFrameTest">
        <test-method status="PASS" signature="validateSimpleTaintFrame()[pri:0, instance:com.h3xstream.findsecbugs.taintanalysis.TaintFrameTest@45afc369]" name="validateSimpleTaintFrame" duration-ms="1" started-at="2018-06-06T00:02:22Z" finished-at="2018-06-06T00:02:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSimpleTaintFrame -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.h3xstream.findsecbugs.taintanalysis.TaintFrameTest@45afc369]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:22Z" finished-at="2018-06-06T00:02:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="validateSimpleTaintFrameWithLocal()[pri:0, instance:com.h3xstream.findsecbugs.taintanalysis.TaintFrameTest@45afc369]" name="validateSimpleTaintFrameWithLocal" duration-ms="1" started-at="2018-06-06T00:02:22Z" finished-at="2018-06-06T00:02:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSimpleTaintFrameWithLocal -->
        <test-method status="PASS" signature="validateSimpleTaintFrameWithLocalUnSet()[pri:0, instance:com.h3xstream.findsecbugs.taintanalysis.TaintFrameTest@45afc369]" name="validateSimpleTaintFrameWithLocalUnSet" duration-ms="0" started-at="2018-06-06T00:02:22Z" finished-at="2018-06-06T00:02:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSimpleTaintFrameWithLocalUnSet -->
        <test-method status="PASS" signature="validateSimpleTaintFrameWithOptionalAndConstant()[pri:0, instance:com.h3xstream.findsecbugs.taintanalysis.TaintFrameTest@45afc369]" name="validateSimpleTaintFrameWithOptionalAndConstant" duration-ms="0" started-at="2018-06-06T00:02:23Z" finished-at="2018-06-06T00:02:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSimpleTaintFrameWithOptionalAndConstant -->
        <test-method status="PASS" signature="validateSimpleTaintFrameWithUnknownSources()[pri:0, instance:com.h3xstream.findsecbugs.taintanalysis.TaintFrameTest@45afc369]" name="validateSimpleTaintFrameWithUnknownSources" duration-ms="1" started-at="2018-06-06T00:02:23Z" finished-at="2018-06-06T00:02:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSimpleTaintFrameWithUnknownSources -->
      </class> <!-- com.h3xstream.findsecbugs.taintanalysis.TaintFrameTest -->
      <class name="com.h3xstream.findsecbugs.injection.script.SpelInjectionTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.script.SpelInjectionTest@543e710e]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:21Z" finished-at="2018-06-06T00:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectInjection()[pri:0, instance:com.h3xstream.findsecbugs.injection.script.SpelInjectionTest@543e710e]" name="detectInjection" duration-ms="369" started-at="2018-06-06T00:00:21Z" finished-at="2018-06-06T00:00:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectInjection -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.script.SpelInjectionTest@543e710e]" name="after" is-config="true" duration-ms="423" started-at="2018-06-06T00:00:22Z" finished-at="2018-06-06T00:00:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.script.SpelInjectionTest -->
      <class name="com.h3xstream.findsecbugs.template.VelocityDetectorTest">
        <test-method status="PASS" signature="allSignatures()[pri:0, instance:com.h3xstream.findsecbugs.template.VelocityDetectorTest@27c6e487]" name="allSignatures" duration-ms="312" started-at="2018-06-06T00:04:19Z" finished-at="2018-06-06T00:04:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allSignatures -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.template.VelocityDetectorTest@27c6e487]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:04:19Z" finished-at="2018-06-06T00:04:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="avoidBasicFalsePositive()[pri:0, instance:com.h3xstream.findsecbugs.template.VelocityDetectorTest@27c6e487]" name="avoidBasicFalsePositive" duration-ms="318" started-at="2018-06-06T00:04:19Z" finished-at="2018-06-06T00:04:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avoidBasicFalsePositive -->
        <test-method status="PASS" signature="basicUsagesTesting()[pri:0, instance:com.h3xstream.findsecbugs.template.VelocityDetectorTest@27c6e487]" name="basicUsagesTesting" duration-ms="310" started-at="2018-06-06T00:04:20Z" finished-at="2018-06-06T00:04:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicUsagesTesting -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.template.VelocityDetectorTest@27c6e487]" name="after" is-config="true" duration-ms="2166" started-at="2018-06-06T00:04:20Z" finished-at="2018-06-06T00:04:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.template.VelocityDetectorTest -->
      <class name="com.h3xstream.findsecbugs.android.GeolocationDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.android.GeolocationDetectorTest@25359ed8]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:28Z" finished-at="2018-06-06T00:03:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectGeolocationFromWebView()[pri:0, instance:com.h3xstream.findsecbugs.android.GeolocationDetectorTest@25359ed8]" name="detectGeolocationFromWebView" duration-ms="319" started-at="2018-06-06T00:03:28Z" finished-at="2018-06-06T00:03:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectGeolocationFromWebView -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.android.GeolocationDetectorTest@25359ed8]" name="after" is-config="true" duration-ms="1936" started-at="2018-06-06T00:03:29Z" finished-at="2018-06-06T00:03:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.android.GeolocationDetectorTest -->
      <class name="com.h3xstream.findsecbugs.WeakFilenameUtilsMethodDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.WeakFilenameUtilsMethodDetectorTest@6166e06f]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:04:00Z" finished-at="2018-06-06T00:04:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectWeakFilenameUtils()[pri:0, instance:com.h3xstream.findsecbugs.WeakFilenameUtilsMethodDetectorTest@6166e06f]" name="detectWeakFilenameUtils" duration-ms="543" started-at="2018-06-06T00:04:00Z" finished-at="2018-06-06T00:04:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectWeakFilenameUtils -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.WeakFilenameUtilsMethodDetectorTest@6166e06f]" name="after" is-config="true" duration-ms="2120" started-at="2018-06-06T00:04:01Z" finished-at="2018-06-06T00:04:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.WeakFilenameUtilsMethodDetectorTest -->
      <class name="com.h3xstream.findsecbugs.injection.script.ElInjectionTest">
        <test-method status="PASS" signature="detectInjection()[pri:0, instance:com.h3xstream.findsecbugs.injection.script.ElInjectionTest@57f23557]" name="detectInjection" duration-ms="331" started-at="2018-06-06T00:00:22Z" finished-at="2018-06-06T00:00:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectInjection -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.script.ElInjectionTest@57f23557]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:22Z" finished-at="2018-06-06T00:00:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.script.ElInjectionTest@57f23557]" name="after" is-config="true" duration-ms="435" started-at="2018-06-06T00:00:22Z" finished-at="2018-06-06T00:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.script.ElInjectionTest -->
      <class name="com.h3xstream.findsecbugs.injection.sql.JdoInjectionSourceFilterTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.JdoInjectionSourceFilterTest@4f51b3e0]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:45Z" finished-at="2018-06-06T00:00:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectJdoInjectionInFilters()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.JdoInjectionSourceFilterTest@4f51b3e0]" name="detectJdoInjectionInFilters" duration-ms="291" started-at="2018-06-06T00:00:45Z" finished-at="2018-06-06T00:00:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectJdoInjectionInFilters -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.JdoInjectionSourceFilterTest@4f51b3e0]" name="after" is-config="true" duration-ms="572" started-at="2018-06-06T00:00:46Z" finished-at="2018-06-06T00:00:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.sql.JdoInjectionSourceFilterTest -->
      <class name="com.h3xstream.findsecbugs.injection.custom.CustomInjectionDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.custom.CustomInjectionDetectorTest@5427c60c]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:00:20Z" finished-at="2018-06-06T00:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.h3xstream.findsecbugs.injection.custom.CustomInjectionDetectorTest@5427c60c]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:20Z" finished-at="2018-06-06T00:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="detectInjection()[pri:0, instance:com.h3xstream.findsecbugs.injection.custom.CustomInjectionDetectorTest@5427c60c]" name="detectInjection" duration-ms="348" started-at="2018-06-06T00:00:20Z" finished-at="2018-06-06T00:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectInjection -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.custom.CustomInjectionDetectorTest@5427c60c]" name="after" is-config="true" duration-ms="353" started-at="2018-06-06T00:00:21Z" finished-at="2018-06-06T00:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.h3xstream.findsecbugs.injection.custom.CustomInjectionDetectorTest@5427c60c]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:21Z" finished-at="2018-06-06T00:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.h3xstream.findsecbugs.injection.custom.CustomInjectionDetectorTest -->
      <class name="com.h3xstream.findsecbugs.injection.trust.TrustBoundaryViolationDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.trust.TrustBoundaryViolationDetectorTest@133e16fd]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:00:48Z" finished-at="2018-06-06T00:00:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectTBV()[pri:0, instance:com.h3xstream.findsecbugs.injection.trust.TrustBoundaryViolationDetectorTest@133e16fd]" name="detectTBV" duration-ms="293" started-at="2018-06-06T00:00:48Z" finished-at="2018-06-06T00:00:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectTBV -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.trust.TrustBoundaryViolationDetectorTest@133e16fd]" name="after" is-config="true" duration-ms="608" started-at="2018-06-06T00:00:49Z" finished-at="2018-06-06T00:00:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.trust.TrustBoundaryViolationDetectorTest -->
      <class name="com.h3xstream.findsecbugs.crypto.BadHexadecimalConversionDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.crypto.BadHexadecimalConversionDetectorTest@46238e3f]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:01:57Z" finished-at="2018-06-06T00:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectBadHexa()[pri:0, instance:com.h3xstream.findsecbugs.crypto.BadHexadecimalConversionDetectorTest@46238e3f]" name="detectBadHexa" duration-ms="337" started-at="2018-06-06T00:01:57Z" finished-at="2018-06-06T00:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectBadHexa -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.crypto.BadHexadecimalConversionDetectorTest@46238e3f]" name="after" is-config="true" duration-ms="564" started-at="2018-06-06T00:01:58Z" finished-at="2018-06-06T00:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.crypto.BadHexadecimalConversionDetectorTest -->
      <class name="com.h3xstream.findsecbugs.injection.sql.SqlMethodUnknownSourceTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.SqlMethodUnknownSourceTest@44f75083]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:00:26Z" finished-at="2018-06-06T00:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectInjection()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.SqlMethodUnknownSourceTest@44f75083]" name="detectInjection" duration-ms="310" started-at="2018-06-06T00:00:26Z" finished-at="2018-06-06T00:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectInjection -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.SqlMethodUnknownSourceTest@44f75083]" name="after" is-config="true" duration-ms="558" started-at="2018-06-06T00:00:26Z" finished-at="2018-06-06T00:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.sql.SqlMethodUnknownSourceTest -->
      <class name="com.h3xstream.findsecbugs.xml.XxeDetectorXPathExpressionTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.xml.XxeDetectorXPathExpressionTest@33cb5951]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:41Z" finished-at="2018-06-06T00:02:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="avoidFPXxeVulnerabilityXPath()[pri:0, instance:com.h3xstream.findsecbugs.xml.XxeDetectorXPathExpressionTest@33cb5951]" name="avoidFPXxeVulnerabilityXPath" duration-ms="316" started-at="2018-06-06T00:02:41Z" finished-at="2018-06-06T00:02:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avoidFPXxeVulnerabilityXPath -->
        <test-method status="PASS" signature="detectXxeVulnerabilityXPath()[pri:0, instance:com.h3xstream.findsecbugs.xml.XxeDetectorXPathExpressionTest@33cb5951]" name="detectXxeVulnerabilityXPath" duration-ms="330" started-at="2018-06-06T00:02:41Z" finished-at="2018-06-06T00:02:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXxeVulnerabilityXPath -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.xml.XxeDetectorXPathExpressionTest@33cb5951]" name="after" is-config="true" duration-ms="708" started-at="2018-06-06T00:02:41Z" finished-at="2018-06-06T00:02:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.xml.XxeDetectorXPathExpressionTest -->
      <class name="com.h3xstream.findsecbugs.injection.fileDisclosure.FileDisclosureDetectorTest">
        <test-method status="PASS" signature="detectFileDisclosure()[pri:0, instance:com.h3xstream.findsecbugs.injection.fileDisclosure.FileDisclosureDetectorTest@2473b9ce]" name="detectFileDisclosure" duration-ms="399" started-at="2018-06-06T00:00:57Z" finished-at="2018-06-06T00:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectFileDisclosure -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.fileDisclosure.FileDisclosureDetectorTest@2473b9ce]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:57Z" finished-at="2018-06-06T00:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectFileDisclosureWithRequestDispatcher()[pri:0, instance:com.h3xstream.findsecbugs.injection.fileDisclosure.FileDisclosureDetectorTest@2473b9ce]" name="detectFileDisclosureWithRequestDispatcher" duration-ms="350" started-at="2018-06-06T00:00:58Z" finished-at="2018-06-06T00:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectFileDisclosureWithRequestDispatcher -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.fileDisclosure.FileDisclosureDetectorTest@2473b9ce]" name="after" is-config="true" duration-ms="969" started-at="2018-06-06T00:00:58Z" finished-at="2018-06-06T00:00:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.fileDisclosure.FileDisclosureDetectorTest -->
      <class name="com.h3xstream.findsecbugs.taintanalysis.TaintConfigValidationTest">
        <test-method status="PASS" signature="validateGeneralTaintConfigAndSafeEncoders()[pri:0, instance:com.h3xstream.findsecbugs.taintanalysis.TaintConfigValidationTest@5cdd8682]" name="validateGeneralTaintConfigAndSafeEncoders" duration-ms="185" started-at="2018-06-06T00:02:18Z" finished-at="2018-06-06T00:02:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateGeneralTaintConfigAndSafeEncoders -->
      </class> <!-- com.h3xstream.findsecbugs.taintanalysis.TaintConfigValidationTest -->
      <class name="com.h3xstream.findsecbugs.ldap.SpringLdapInjectionTest">
        <test-method status="PASS" signature="detectAnonymousLdapBind()[pri:0, instance:com.h3xstream.findsecbugs.ldap.SpringLdapInjectionTest@6c3f5566]" name="detectAnonymousLdapBind" duration-ms="383" started-at="2018-06-06T00:03:38Z" finished-at="2018-06-06T00:03:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectAnonymousLdapBind -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.ldap.SpringLdapInjectionTest@6c3f5566]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:38Z" finished-at="2018-06-06T00:03:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.ldap.SpringLdapInjectionTest@6c3f5566]" name="after" is-config="true" duration-ms="1900" started-at="2018-06-06T00:03:38Z" finished-at="2018-06-06T00:03:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.ldap.SpringLdapInjectionTest -->
      <class name="com.h3xstream.findsecbugs.bugs.CoberturaCoverageTest">
        <test-method status="PASS" signature="coverStaticClasses()[pri:0, instance:com.h3xstream.findsecbugs.bugs.CoberturaCoverageTest@23bb8443]" name="coverStaticClasses" duration-ms="1" started-at="2018-06-06T00:03:15Z" finished-at="2018-06-06T00:03:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coverStaticClasses -->
      </class> <!-- com.h3xstream.findsecbugs.bugs.CoberturaCoverageTest -->
      <class name="com.h3xstream.findsecbugs.PredictableRandomDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.PredictableRandomDetectorTest@11e21d0e]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:05Z" finished-at="2018-06-06T00:03:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectUsePredictableRandom()[pri:0, instance:com.h3xstream.findsecbugs.PredictableRandomDetectorTest@11e21d0e]" name="detectUsePredictableRandom" duration-ms="328" started-at="2018-06-06T00:03:05Z" finished-at="2018-06-06T00:03:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectUsePredictableRandom -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.PredictableRandomDetectorTest@11e21d0e]" name="after" is-config="true" duration-ms="1731" started-at="2018-06-06T00:03:05Z" finished-at="2018-06-06T00:03:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.PredictableRandomDetectorTest -->
      <class name="com.h3xstream.findsecbugs.serial.DeserializationGadgetDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.serial.DeserializationGadgetDetectorTest@1372ed45]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:23Z" finished-at="2018-06-06T00:03:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectCommonsCollectionGadget()[pri:0, instance:com.h3xstream.findsecbugs.serial.DeserializationGadgetDetectorTest@1372ed45]" name="detectCommonsCollectionGadget" duration-ms="473" started-at="2018-06-06T00:03:23Z" finished-at="2018-06-06T00:03:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectCommonsCollectionGadget -->
        <test-method status="PASS" signature="detectGroovyGadget()[pri:0, instance:com.h3xstream.findsecbugs.serial.DeserializationGadgetDetectorTest@1372ed45]" name="detectGroovyGadget" duration-ms="360" started-at="2018-06-06T00:03:23Z" finished-at="2018-06-06T00:03:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectGroovyGadget -->
        <test-method status="PASS" signature="detectSpringGadget()[pri:0, instance:com.h3xstream.findsecbugs.serial.DeserializationGadgetDetectorTest@1372ed45]" name="detectSpringGadget" duration-ms="378" started-at="2018-06-06T00:03:23Z" finished-at="2018-06-06T00:03:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectSpringGadget -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.serial.DeserializationGadgetDetectorTest@1372ed45]" name="after" is-config="true" duration-ms="1759" started-at="2018-06-06T00:03:24Z" finished-at="2018-06-06T00:03:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.serial.DeserializationGadgetDetectorTest -->
      <class name="com.h3xstream.findsecbugs.scala.ScalaCommandInjectionDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.scala.ScalaCommandInjectionDetectorTest@de3a06f]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:01:12Z" finished-at="2018-06-06T00:01:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectCommandInjection()[pri:0, instance:com.h3xstream.findsecbugs.scala.ScalaCommandInjectionDetectorTest@de3a06f]" name="detectCommandInjection" duration-ms="1574" started-at="2018-06-06T00:01:12Z" finished-at="2018-06-06T00:01:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectCommandInjection -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.scala.ScalaCommandInjectionDetectorTest@de3a06f]" name="after" is-config="true" duration-ms="944" started-at="2018-06-06T00:01:14Z" finished-at="2018-06-06T00:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.scala.ScalaCommandInjectionDetectorTest -->
      <class name="com.h3xstream.findsecbugs.bugs.UnknownSourcesStringBuilderTest">
        <test-method status="PASS" signature="detectUnknownSourceField()[pri:0, instance:com.h3xstream.findsecbugs.bugs.UnknownSourcesStringBuilderTest@120d6fe6]" name="detectUnknownSourceField" duration-ms="449" started-at="2018-06-06T00:03:17Z" finished-at="2018-06-06T00:03:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectUnknownSourceField -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.bugs.UnknownSourcesStringBuilderTest@120d6fe6]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:17Z" finished-at="2018-06-06T00:03:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectUnknownSourceReadLine()[pri:0, instance:com.h3xstream.findsecbugs.bugs.UnknownSourcesStringBuilderTest@120d6fe6]" name="detectUnknownSourceReadLine" duration-ms="389" started-at="2018-06-06T00:03:17Z" finished-at="2018-06-06T00:03:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectUnknownSourceReadLine -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.bugs.UnknownSourcesStringBuilderTest@120d6fe6]" name="after" is-config="true" duration-ms="806" started-at="2018-06-06T00:03:17Z" finished-at="2018-06-06T00:03:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.bugs.UnknownSourcesStringBuilderTest -->
      <class name="com.h3xstream.findsecbugs.injection.script.OgnlInjectionDetectorTest">
        <test-method status="PASS" signature="detectOgnlReflectionProvider()[pri:0, instance:com.h3xstream.findsecbugs.injection.script.OgnlInjectionDetectorTest@3d0f8e03]" name="detectOgnlReflectionProvider" duration-ms="334" started-at="2018-06-06T00:00:23Z" finished-at="2018-06-06T00:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectOgnlReflectionProvider -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.script.OgnlInjectionDetectorTest@3d0f8e03]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:23Z" finished-at="2018-06-06T00:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectOgnlUtil()[pri:0, instance:com.h3xstream.findsecbugs.injection.script.OgnlInjectionDetectorTest@3d0f8e03]" name="detectOgnlUtil" duration-ms="333" started-at="2018-06-06T00:00:23Z" finished-at="2018-06-06T00:00:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectOgnlUtil -->
        <test-method status="PASS" signature="detectTaintedAndInjection()[pri:0, instance:com.h3xstream.findsecbugs.injection.script.OgnlInjectionDetectorTest@3d0f8e03]" name="detectTaintedAndInjection" duration-ms="287" started-at="2018-06-06T00:00:24Z" finished-at="2018-06-06T00:00:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectTaintedAndInjection -->
        <test-method status="PASS" signature="detectTextParser()[pri:0, instance:com.h3xstream.findsecbugs.injection.script.OgnlInjectionDetectorTest@3d0f8e03]" name="detectTextParser" duration-ms="406" started-at="2018-06-06T00:00:24Z" finished-at="2018-06-06T00:00:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectTextParser -->
        <test-method status="PASS" signature="detectValueStack()[pri:0, instance:com.h3xstream.findsecbugs.injection.script.OgnlInjectionDetectorTest@3d0f8e03]" name="detectValueStack" duration-ms="302" started-at="2018-06-06T00:00:24Z" finished-at="2018-06-06T00:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectValueStack -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.script.OgnlInjectionDetectorTest@3d0f8e03]" name="after" is-config="true" duration-ms="336" started-at="2018-06-06T00:00:25Z" finished-at="2018-06-06T00:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.script.OgnlInjectionDetectorTest -->
      <class name="com.h3xstream.findsecbugs.injection.ldap.JndiLdapInjectionSourceAdditionalSignaturesTest">
        <test-method status="PASS" signature="detectLdapInjectionEdgeCase()[pri:0, instance:com.h3xstream.findsecbugs.injection.ldap.JndiLdapInjectionSourceAdditionalSignaturesTest@7f416310]" name="detectLdapInjectionEdgeCase" duration-ms="307" started-at="2018-06-06T00:00:51Z" finished-at="2018-06-06T00:00:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectLdapInjectionEdgeCase -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.ldap.JndiLdapInjectionSourceAdditionalSignaturesTest@7f416310]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:51Z" finished-at="2018-06-06T00:00:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectLdapInjectionInQuery()[pri:0, instance:com.h3xstream.findsecbugs.injection.ldap.JndiLdapInjectionSourceAdditionalSignaturesTest@7f416310]" name="detectLdapInjectionInQuery" duration-ms="521" started-at="2018-06-06T00:00:51Z" finished-at="2018-06-06T00:00:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectLdapInjectionInQuery -->
        <test-method status="PASS" signature="detectLdapInjectionInQuerySunApi()[pri:0, instance:com.h3xstream.findsecbugs.injection.ldap.JndiLdapInjectionSourceAdditionalSignaturesTest@7f416310]" name="detectLdapInjectionInQuerySunApi" duration-ms="496" started-at="2018-06-06T00:00:52Z" finished-at="2018-06-06T00:00:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectLdapInjectionInQuerySunApi -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.ldap.JndiLdapInjectionSourceAdditionalSignaturesTest@7f416310]" name="after" is-config="true" duration-ms="1020" started-at="2018-06-06T00:00:52Z" finished-at="2018-06-06T00:00:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.ldap.JndiLdapInjectionSourceAdditionalSignaturesTest -->
      <class name="com.h3xstream.findsecbugs.injection.sql.HibernateInjectionSourceTest">
        <test-method status="PASS" signature="detectHibernateInjection()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.HibernateInjectionSourceTest@27fe3806]" name="detectHibernateInjection" duration-ms="321" started-at="2018-06-06T00:00:36Z" finished-at="2018-06-06T00:00:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectHibernateInjection -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.HibernateInjectionSourceTest@27fe3806]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:36Z" finished-at="2018-06-06T00:00:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.HibernateInjectionSourceTest@27fe3806]" name="after" is-config="true" duration-ms="734" started-at="2018-06-06T00:00:37Z" finished-at="2018-06-06T00:00:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.sql.HibernateInjectionSourceTest -->
      <class name="com.h3xstream.findsecbugs.xss.XssPortletDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssPortletDetectorTest@73d4cc9e]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:15Z" finished-at="2018-06-06T00:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectIbmPortlet()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssPortletDetectorTest@73d4cc9e]" name="detectIbmPortlet" duration-ms="461" started-at="2018-06-06T00:00:15Z" finished-at="2018-06-06T00:00:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectIbmPortlet -->
        <test-method status="PASS" signature="detectPortlet()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssPortletDetectorTest@73d4cc9e]" name="detectPortlet" duration-ms="450" started-at="2018-06-06T00:00:16Z" finished-at="2018-06-06T00:00:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectPortlet -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssPortletDetectorTest@73d4cc9e]" name="after" is-config="true" duration-ms="249" started-at="2018-06-06T00:00:16Z" finished-at="2018-06-06T00:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.xss.XssPortletDetectorTest -->
      <class name="com.h3xstream.findsecbugs.FindSecBugsGlobalConfigTest">
        <test-method status="PASS" signature="version()[pri:0, instance:com.h3xstream.findsecbugs.FindSecBugsGlobalConfigTest@314c508a]" name="version" duration-ms="0" started-at="2018-06-06T00:03:41Z" finished-at="2018-06-06T00:03:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- version -->
      </class> <!-- com.h3xstream.findsecbugs.FindSecBugsGlobalConfigTest -->
      <class name="com.h3xstream.findsecbugs.injection.ldap.UnboundIdLdapInjectionSourceTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.ldap.UnboundIdLdapInjectionSourceTest@1ad282e0]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:50Z" finished-at="2018-06-06T00:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectLdapInjection()[pri:0, instance:com.h3xstream.findsecbugs.injection.ldap.UnboundIdLdapInjectionSourceTest@1ad282e0]" name="detectLdapInjection" duration-ms="308" started-at="2018-06-06T00:00:50Z" finished-at="2018-06-06T00:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectLdapInjection -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.ldap.UnboundIdLdapInjectionSourceTest@1ad282e0]" name="after" is-config="true" duration-ms="628" started-at="2018-06-06T00:00:50Z" finished-at="2018-06-06T00:00:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.ldap.UnboundIdLdapInjectionSourceTest -->
      <class name="com.h3xstream.findsecbugs.injection.aws.AwsQueryInjectionDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.aws.AwsQueryInjectionDetectorTest@3439f68d]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:01:02Z" finished-at="2018-06-06T00:01:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectAwsQueryInjection()[pri:0, instance:com.h3xstream.findsecbugs.injection.aws.AwsQueryInjectionDetectorTest@3439f68d]" name="detectAwsQueryInjection" duration-ms="317" started-at="2018-06-06T00:01:02Z" finished-at="2018-06-06T00:01:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectAwsQueryInjection -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.aws.AwsQueryInjectionDetectorTest@3439f68d]" name="after" is-config="true" duration-ms="292" started-at="2018-06-06T00:01:02Z" finished-at="2018-06-06T00:01:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.aws.AwsQueryInjectionDetectorTest -->
      <class name="com.h3xstream.findsecbugs.taintanalysis.TaintDataflowEngineTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.taintanalysis.TaintDataflowEngineTest@d6da883]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:18Z" finished-at="2018-06-06T00:02:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testDerivedConfiguration()[pri:0, instance:com.h3xstream.findsecbugs.taintanalysis.TaintDataflowEngineTest@d6da883]" name="testDerivedConfiguration" duration-ms="749" started-at="2018-06-06T00:02:18Z" finished-at="2018-06-06T00:02:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDerivedConfiguration -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.taintanalysis.TaintDataflowEngineTest@d6da883]" name="after" is-config="true" duration-ms="3367" started-at="2018-06-06T00:02:19Z" finished-at="2018-06-06T00:02:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.taintanalysis.TaintDataflowEngineTest -->
      <class name="com.h3xstream.findsecbugs.password.HardcodePasswordInMapDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.password.HardcodePasswordInMapDetectorTest@4e4aea35]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:02Z" finished-at="2018-06-06T00:02:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectHardCodeCredentials()[pri:0, instance:com.h3xstream.findsecbugs.password.HardcodePasswordInMapDetectorTest@4e4aea35]" name="detectHardCodeCredentials" duration-ms="296" started-at="2018-06-06T00:02:02Z" finished-at="2018-06-06T00:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectHardCodeCredentials -->
        <test-method status="PASS" signature="detectHardCodeCredentialsVariousMap()[pri:0, instance:com.h3xstream.findsecbugs.password.HardcodePasswordInMapDetectorTest@4e4aea35]" name="detectHardCodeCredentialsVariousMap" duration-ms="321" started-at="2018-06-06T00:02:03Z" finished-at="2018-06-06T00:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectHardCodeCredentialsVariousMap -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.password.HardcodePasswordInMapDetectorTest@4e4aea35]" name="after" is-config="true" duration-ms="494" started-at="2018-06-06T00:02:03Z" finished-at="2018-06-06T00:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.password.HardcodePasswordInMapDetectorTest -->
      <class name="com.h3xstream.findsecbugs.serial.UnsafeJacksonDeserializationDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.serial.UnsafeJacksonDeserializationDetectorTest@3444d69d]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:21Z" finished-at="2018-06-06T00:03:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="avoidJacksonFalsePositive()[pri:0, instance:com.h3xstream.findsecbugs.serial.UnsafeJacksonDeserializationDetectorTest@3444d69d]" name="avoidJacksonFalsePositive" duration-ms="285" started-at="2018-06-06T00:03:21Z" finished-at="2018-06-06T00:03:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avoidJacksonFalsePositive -->
        <test-method status="PASS" signature="testJacksonDeserialization()[pri:0, instance:com.h3xstream.findsecbugs.serial.UnsafeJacksonDeserializationDetectorTest@3444d69d]" name="testJacksonDeserialization" duration-ms="303" started-at="2018-06-06T00:03:22Z" finished-at="2018-06-06T00:03:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJacksonDeserialization -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.serial.UnsafeJacksonDeserializationDetectorTest@3444d69d]" name="after" is-config="true" duration-ms="692" started-at="2018-06-06T00:03:22Z" finished-at="2018-06-06T00:03:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.serial.UnsafeJacksonDeserializationDetectorTest -->
      <class name="com.h3xstream.findsecbugs.xpath.XPathInjectionApacheXPathApiDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.xpath.XPathInjectionApacheXPathApiDetectorTest@6e38921c]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:04:15Z" finished-at="2018-06-06T00:04:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectXPathInjectionApache()[pri:0, instance:com.h3xstream.findsecbugs.xpath.XPathInjectionApacheXPathApiDetectorTest@6e38921c]" name="detectXPathInjectionApache" duration-ms="298" started-at="2018-06-06T00:04:15Z" finished-at="2018-06-06T00:04:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXPathInjectionApache -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.xpath.XPathInjectionApacheXPathApiDetectorTest@6e38921c]" name="after" is-config="true" duration-ms="1648" started-at="2018-06-06T00:04:15Z" finished-at="2018-06-06T00:04:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.xpath.XPathInjectionApacheXPathApiDetectorTest -->
      <class name="com.h3xstream.findsecbugs.injection.beans.BeanInjectionDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.beans.BeanInjectionDetectorTest@50de0926]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:57Z" finished-at="2018-06-06T00:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectBeanInjection()[pri:0, instance:com.h3xstream.findsecbugs.injection.beans.BeanInjectionDetectorTest@50de0926]" name="detectBeanInjection" duration-ms="401" started-at="2018-06-06T00:00:57Z" finished-at="2018-06-06T00:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectBeanInjection -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.beans.BeanInjectionDetectorTest@50de0926]" name="after" is-config="true" duration-ms="455" started-at="2018-06-06T00:00:57Z" finished-at="2018-06-06T00:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.beans.BeanInjectionDetectorTest -->
      <class name="com.h3xstream.findsecbugs.xss.XssResourceBundleTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssResourceBundleTest@aecb35a]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:00:05Z" finished-at="2018-06-06T00:00:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="avoidResourceBundle()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssResourceBundleTest@aecb35a]" name="avoidResourceBundle" duration-ms="1150" started-at="2018-06-06T00:00:05Z" finished-at="2018-06-06T00:00:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avoidResourceBundle -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssResourceBundleTest@aecb35a]" name="after" is-config="true" duration-ms="172" started-at="2018-06-06T00:00:06Z" finished-at="2018-06-06T00:00:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.xss.XssResourceBundleTest -->
      <class name="com.h3xstream.findsecbugs.injection.formatter.FormatStringManipulationDetectorTest">
        <test-method status="PASS" signature="detectFormatStringManipulation()[pri:0, instance:com.h3xstream.findsecbugs.injection.formatter.FormatStringManipulationDetectorTest@140e5a13]" name="detectFormatStringManipulation" duration-ms="362" started-at="2018-06-06T00:01:00Z" finished-at="2018-06-06T00:01:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectFormatStringManipulation -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.formatter.FormatStringManipulationDetectorTest@140e5a13]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:01:00Z" finished-at="2018-06-06T00:01:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.formatter.FormatStringManipulationDetectorTest@140e5a13]" name="after" is-config="true" duration-ms="798" started-at="2018-06-06T00:01:01Z" finished-at="2018-06-06T00:01:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.formatter.FormatStringManipulationDetectorTest -->
      <class name="com.h3xstream.findsecbugs.injection.sql.TurbineSqlDetectorTest">
        <test-method status="PASS" signature="detectInjection()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.TurbineSqlDetectorTest@69379752]" name="detectInjection" duration-ms="361" started-at="2018-06-06T00:00:36Z" finished-at="2018-06-06T00:00:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectInjection -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.TurbineSqlDetectorTest@69379752]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:36Z" finished-at="2018-06-06T00:00:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.TurbineSqlDetectorTest@69379752]" name="after" is-config="true" duration-ms="167" started-at="2018-06-06T00:00:36Z" finished-at="2018-06-06T00:00:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.sql.TurbineSqlDetectorTest -->
      <class name="com.h3xstream.findsecbugs.crypto.StaticIvDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.crypto.StaticIvDetectorTest@58a90037]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:01:36Z" finished-at="2018-06-06T00:01:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="avoidFalsePositiveDecrypt()[pri:0, instance:com.h3xstream.findsecbugs.crypto.StaticIvDetectorTest@58a90037]" name="avoidFalsePositiveDecrypt" duration-ms="326" started-at="2018-06-06T00:01:36Z" finished-at="2018-06-06T00:01:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avoidFalsePositiveDecrypt -->
        <test-method status="PASS" signature="avoidFalsePositiveGenerateWithKeyGenerator()[pri:0, instance:com.h3xstream.findsecbugs.crypto.StaticIvDetectorTest@58a90037]" name="avoidFalsePositiveGenerateWithKeyGenerator" duration-ms="329" started-at="2018-06-06T00:01:36Z" finished-at="2018-06-06T00:01:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avoidFalsePositiveGenerateWithKeyGenerator -->
        <test-method status="PASS" signature="avoidFalsePositiveSecRandom()[pri:0, instance:com.h3xstream.findsecbugs.crypto.StaticIvDetectorTest@58a90037]" name="avoidFalsePositiveSecRandom" duration-ms="356" started-at="2018-06-06T00:01:37Z" finished-at="2018-06-06T00:01:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avoidFalsePositiveSecRandom -->
        <test-method status="PASS" signature="detectConstantIv()[pri:0, instance:com.h3xstream.findsecbugs.crypto.StaticIvDetectorTest@58a90037]" name="detectConstantIv" duration-ms="354" started-at="2018-06-06T00:01:37Z" finished-at="2018-06-06T00:01:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectConstantIv -->
        <test-method status="PASS" signature="detectStaticIv()[pri:0, instance:com.h3xstream.findsecbugs.crypto.StaticIvDetectorTest@58a90037]" name="detectStaticIv" duration-ms="403" started-at="2018-06-06T00:01:37Z" finished-at="2018-06-06T00:01:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectStaticIv -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.crypto.StaticIvDetectorTest@58a90037]" name="after" is-config="true" duration-ms="1208" started-at="2018-06-06T00:01:38Z" finished-at="2018-06-06T00:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.crypto.StaticIvDetectorTest -->
      <class name="com.h3xstream.findsecbugs.PotentialValueDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.PotentialValueDetectorTest@3e77a1ed]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:11Z" finished-at="2018-06-06T00:03:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectDes1()[pri:0, instance:com.h3xstream.findsecbugs.PotentialValueDetectorTest@3e77a1ed]" name="detectDes1" duration-ms="322" started-at="2018-06-06T00:03:11Z" finished-at="2018-06-06T00:03:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectDes1 -->
        <test-method status="PASS" signature="detectHardcodePassword1()[pri:0, instance:com.h3xstream.findsecbugs.PotentialValueDetectorTest@3e77a1ed]" name="detectHardcodePassword1" duration-ms="313" started-at="2018-06-06T00:03:11Z" finished-at="2018-06-06T00:03:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectHardcodePassword1 -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.PotentialValueDetectorTest@3e77a1ed]" name="after" is-config="true" duration-ms="703" started-at="2018-06-06T00:03:12Z" finished-at="2018-06-06T00:03:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.PotentialValueDetectorTest -->
      <class name="com.h3xstream.findsecbugs.injection.script.SeamLoggingDetectionTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.script.SeamLoggingDetectionTest@6366ebe0]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:00:25Z" finished-at="2018-06-06T00:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectInjection()[pri:0, instance:com.h3xstream.findsecbugs.injection.script.SeamLoggingDetectionTest@6366ebe0]" name="detectInjection" duration-ms="367" started-at="2018-06-06T00:00:25Z" finished-at="2018-06-06T00:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectInjection -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.script.SeamLoggingDetectionTest@6366ebe0]" name="after" is-config="true" duration-ms="327" started-at="2018-06-06T00:00:25Z" finished-at="2018-06-06T00:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.script.SeamLoggingDetectionTest -->
      <class name="com.h3xstream.findsecbugs.injection.ldap.JndiLdapInjectionSourceTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.ldap.JndiLdapInjectionSourceTest@51b279c9]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:00:49Z" finished-at="2018-06-06T00:00:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectLdapInjectionInQuery()[pri:0, instance:com.h3xstream.findsecbugs.injection.ldap.JndiLdapInjectionSourceTest@51b279c9]" name="detectLdapInjectionInQuery" duration-ms="357" started-at="2018-06-06T00:00:49Z" finished-at="2018-06-06T00:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectLdapInjectionInQuery -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.ldap.JndiLdapInjectionSourceTest@51b279c9]" name="after" is-config="true" duration-ms="315" started-at="2018-06-06T00:00:50Z" finished-at="2018-06-06T00:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.ldap.JndiLdapInjectionSourceTest -->
      <class name="com.h3xstream.findsecbugs.xml.XmlReaderDetectorTest">
        <test-method status="PASS" signature="avoidFalsePositive()[pri:0, instance:com.h3xstream.findsecbugs.xml.XmlReaderDetectorTest@76329302]" name="avoidFalsePositive" duration-ms="296" started-at="2018-06-06T00:02:57Z" finished-at="2018-06-06T00:02:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avoidFalsePositive -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.xml.XmlReaderDetectorTest@76329302]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:57Z" finished-at="2018-06-06T00:02:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectXxe()[pri:0, instance:com.h3xstream.findsecbugs.xml.XmlReaderDetectorTest@76329302]" name="detectXxe" duration-ms="300" started-at="2018-06-06T00:02:57Z" finished-at="2018-06-06T00:02:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXxe -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.xml.XmlReaderDetectorTest@76329302]" name="after" is-config="true" duration-ms="714" started-at="2018-06-06T00:02:58Z" finished-at="2018-06-06T00:02:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.xml.XmlReaderDetectorTest -->
      <class name="com.h3xstream.findsecbugs.StrutsValidatorFormDetectorTest">
        <test-method status="PASS" signature="strutsFormWithValidation()[pri:0, instance:com.h3xstream.findsecbugs.StrutsValidatorFormDetectorTest@10b48321]" name="strutsFormWithValidation" duration-ms="306" started-at="2018-06-06T00:03:41Z" finished-at="2018-06-06T00:03:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- strutsFormWithValidation -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.StrutsValidatorFormDetectorTest@10b48321]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:41Z" finished-at="2018-06-06T00:03:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="strutsFormWithoutValidation1()[pri:0, instance:com.h3xstream.findsecbugs.StrutsValidatorFormDetectorTest@10b48321]" name="strutsFormWithoutValidation1" duration-ms="266" started-at="2018-06-06T00:03:41Z" finished-at="2018-06-06T00:03:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- strutsFormWithoutValidation1 -->
        <test-method status="PASS" signature="strutsFormWithoutValidation2()[pri:0, instance:com.h3xstream.findsecbugs.StrutsValidatorFormDetectorTest@10b48321]" name="strutsFormWithoutValidation2" duration-ms="267" started-at="2018-06-06T00:03:42Z" finished-at="2018-06-06T00:03:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- strutsFormWithoutValidation2 -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.StrutsValidatorFormDetectorTest@10b48321]" name="after" is-config="true" duration-ms="638" started-at="2018-06-06T00:03:42Z" finished-at="2018-06-06T00:03:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.StrutsValidatorFormDetectorTest -->
      <class name="com.h3xstream.findsecbugs.scala.ScalaSensitiveDataExposureDetectorTest">
        <test-method status="PASS" signature="detectSensitiveDataExposure()[pri:0, instance:com.h3xstream.findsecbugs.scala.ScalaSensitiveDataExposureDetectorTest@530612ba]" name="detectSensitiveDataExposure" duration-ms="2109" started-at="2018-06-06T00:01:26Z" finished-at="2018-06-06T00:01:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectSensitiveDataExposure -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.scala.ScalaSensitiveDataExposureDetectorTest@530612ba]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:01:26Z" finished-at="2018-06-06T00:01:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.scala.ScalaSensitiveDataExposureDetectorTest@530612ba]" name="after" is-config="true" duration-ms="1854" started-at="2018-06-06T00:01:28Z" finished-at="2018-06-06T00:01:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.scala.ScalaSensitiveDataExposureDetectorTest -->
      <class name="com.h3xstream.findsecbugs.crypto.CipherWithNoIntegrityDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.crypto.CipherWithNoIntegrityDetectorTest@7181ae3f]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:01:56Z" finished-at="2018-06-06T00:01:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectNoIntegrity()[pri:0, instance:com.h3xstream.findsecbugs.crypto.CipherWithNoIntegrityDetectorTest@7181ae3f]" name="detectNoIntegrity" duration-ms="327" started-at="2018-06-06T00:01:56Z" finished-at="2018-06-06T00:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectNoIntegrity -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.crypto.CipherWithNoIntegrityDetectorTest@7181ae3f]" name="after" is-config="true" duration-ms="559" started-at="2018-06-06T00:01:57Z" finished-at="2018-06-06T00:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.crypto.CipherWithNoIntegrityDetectorTest -->
      <class name="com.h3xstream.findsecbugs.xml.TransformerFactoryDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.xml.TransformerFactoryDetectorTest@282003e1]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:51Z" finished-at="2018-06-06T00:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="traceCalls()[pri:0, instance:com.h3xstream.findsecbugs.xml.TransformerFactoryDetectorTest@282003e1]" name="traceCalls" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:51Z" finished-at="2018-06-06T00:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- traceCalls -->
        <test-method status="PASS" signature="avoidFalsePositive_TransformerFactory()[pri:0, instance:com.h3xstream.findsecbugs.xml.TransformerFactoryDetectorTest@282003e1]" name="avoidFalsePositive_TransformerFactory" duration-ms="331" started-at="2018-06-06T00:02:51Z" finished-at="2018-06-06T00:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avoidFalsePositive_TransformerFactory -->
        <test-method status="PASS" signature="detectVariation_SaxTransformerFactory()[pri:0, instance:com.h3xstream.findsecbugs.xml.TransformerFactoryDetectorTest@282003e1]" name="detectVariation_SaxTransformerFactory" duration-ms="283" started-at="2018-06-06T00:02:51Z" finished-at="2018-06-06T00:02:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectVariation_SaxTransformerFactory -->
        <test-method status="PASS" signature="detectXxe_TransformerFactory()[pri:0, instance:com.h3xstream.findsecbugs.xml.TransformerFactoryDetectorTest@282003e1]" name="detectXxe_TransformerFactory" duration-ms="365" started-at="2018-06-06T00:02:52Z" finished-at="2018-06-06T00:02:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXxe_TransformerFactory -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.xml.TransformerFactoryDetectorTest@282003e1]" name="after" is-config="true" duration-ms="659" started-at="2018-06-06T00:02:52Z" finished-at="2018-06-06T00:02:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.xml.TransformerFactoryDetectorTest -->
      <class name="com.h3xstream.findsecbugs.injection.crlf.CrlfLogInjectionDetectorTest">
        <test-method status="PASS" signature="detectResponseSplitting()[pri:0, instance:com.h3xstream.findsecbugs.injection.crlf.CrlfLogInjectionDetectorTest@4b9e255]" name="detectResponseSplitting" duration-ms="403" started-at="2018-06-06T00:00:46Z" finished-at="2018-06-06T00:00:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectResponseSplitting -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.crlf.CrlfLogInjectionDetectorTest@4b9e255]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:46Z" finished-at="2018-06-06T00:00:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectSlf4jResponseSplitting()[pri:0, instance:com.h3xstream.findsecbugs.injection.crlf.CrlfLogInjectionDetectorTest@4b9e255]" name="detectSlf4jResponseSplitting" duration-ms="326" started-at="2018-06-06T00:00:47Z" finished-at="2018-06-06T00:00:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectSlf4jResponseSplitting -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.crlf.CrlfLogInjectionDetectorTest@4b9e255]" name="after" is-config="true" duration-ms="436" started-at="2018-06-06T00:00:47Z" finished-at="2018-06-06T00:00:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.crlf.CrlfLogInjectionDetectorTest -->
      <class name="com.h3xstream.findsecbugs.crypto.DesUsageDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.crypto.DesUsageDetectorTest@1188e820]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:01:44Z" finished-at="2018-06-06T00:01:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectDesCipher()[pri:0, instance:com.h3xstream.findsecbugs.crypto.DesUsageDetectorTest@1188e820]" name="detectDesCipher" duration-ms="325" started-at="2018-06-06T00:01:44Z" finished-at="2018-06-06T00:01:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectDesCipher -->
        <test-method status="PASS" signature="detectDesKeyGeneration()[pri:0, instance:com.h3xstream.findsecbugs.crypto.DesUsageDetectorTest@1188e820]" name="detectDesKeyGeneration" duration-ms="303" started-at="2018-06-06T00:01:44Z" finished-at="2018-06-06T00:01:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectDesKeyGeneration -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.crypto.DesUsageDetectorTest@1188e820]" name="after" is-config="true" duration-ms="944" started-at="2018-06-06T00:01:44Z" finished-at="2018-06-06T00:01:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.crypto.DesUsageDetectorTest -->
      <class name="com.h3xstream.findsecbugs.injection.command.CommandInjectionDetectorAdvancedTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.command.CommandInjectionDetectorAdvancedTest@1cab0bfb]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:53Z" finished-at="2018-06-06T00:00:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="avoidFalsePositive()[pri:0, instance:com.h3xstream.findsecbugs.injection.command.CommandInjectionDetectorAdvancedTest@1cab0bfb]" name="avoidFalsePositive" duration-ms="356" started-at="2018-06-06T00:00:53Z" finished-at="2018-06-06T00:00:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avoidFalsePositive -->
        <test-method status="PASS" signature="detectSuspicious()[pri:0, instance:com.h3xstream.findsecbugs.injection.command.CommandInjectionDetectorAdvancedTest@1cab0bfb]" name="detectSuspicious" duration-ms="356" started-at="2018-06-06T00:00:54Z" finished-at="2018-06-06T00:00:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectSuspicious -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.command.CommandInjectionDetectorAdvancedTest@1cab0bfb]" name="after" is-config="true" duration-ms="615" started-at="2018-06-06T00:00:54Z" finished-at="2018-06-06T00:00:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.command.CommandInjectionDetectorAdvancedTest -->
      <class name="com.h3xstream.findsecbugs.android.ExternalFileAccessDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.android.ExternalFileAccessDetectorTest@80ec1f8]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:34Z" finished-at="2018-06-06T00:03:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectExternalFileAccess()[pri:0, instance:com.h3xstream.findsecbugs.android.ExternalFileAccessDetectorTest@80ec1f8]" name="detectExternalFileAccess" duration-ms="339" started-at="2018-06-06T00:03:34Z" finished-at="2018-06-06T00:03:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectExternalFileAccess -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.android.ExternalFileAccessDetectorTest@80ec1f8]" name="after" is-config="true" duration-ms="872" started-at="2018-06-06T00:03:34Z" finished-at="2018-06-06T00:03:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.android.ExternalFileAccessDetectorTest -->
      <class name="com.h3xstream.findsecbugs.injection.sql.AndroidInjectionSourceTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.AndroidInjectionSourceTest@1d7acb34]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:00:39Z" finished-at="2018-06-06T00:00:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectAndroidContentProviderInjection()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.AndroidInjectionSourceTest@1d7acb34]" name="detectAndroidContentProviderInjection" duration-ms="408" started-at="2018-06-06T00:00:39Z" finished-at="2018-06-06T00:00:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectAndroidContentProviderInjection -->
        <test-method status="PASS" signature="detectAndroidCustomContentProvider()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.AndroidInjectionSourceTest@1d7acb34]" name="detectAndroidCustomContentProvider" duration-ms="545" started-at="2018-06-06T00:00:39Z" finished-at="2018-06-06T00:00:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectAndroidCustomContentProvider -->
        <test-method status="PASS" signature="detectAndroidInjection()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.AndroidInjectionSourceTest@1d7acb34]" name="detectAndroidInjection" duration-ms="474" started-at="2018-06-06T00:00:40Z" finished-at="2018-06-06T00:00:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectAndroidInjection -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.AndroidInjectionSourceTest@1d7acb34]" name="after" is-config="true" duration-ms="981" started-at="2018-06-06T00:00:40Z" finished-at="2018-06-06T00:00:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.sql.AndroidInjectionSourceTest -->
      <class name="com.h3xstream.findsecbugs.endpoint.JaxRsEndpointDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.JaxRsEndpointDetectorTest@2d127a61]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:30Z" finished-at="2018-06-06T00:02:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectJaxRsEndpoint()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.JaxRsEndpointDetectorTest@2d127a61]" name="detectJaxRsEndpoint" duration-ms="282" started-at="2018-06-06T00:02:30Z" finished-at="2018-06-06T00:02:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectJaxRsEndpoint -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.JaxRsEndpointDetectorTest@2d127a61]" name="after" is-config="true" duration-ms="1457" started-at="2018-06-06T00:02:30Z" finished-at="2018-06-06T00:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.endpoint.JaxRsEndpointDetectorTest -->
      <class name="com.h3xstream.findsecbugs.injection.sql.TorqueSqlDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.TorqueSqlDetectorTest@17baae6e]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:00:35Z" finished-at="2018-06-06T00:00:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectInjection()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.TorqueSqlDetectorTest@17baae6e]" name="detectInjection" duration-ms="314" started-at="2018-06-06T00:00:35Z" finished-at="2018-06-06T00:00:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectInjection -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.TorqueSqlDetectorTest@17baae6e]" name="after" is-config="true" duration-ms="449" started-at="2018-06-06T00:00:35Z" finished-at="2018-06-06T00:00:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.sql.TorqueSqlDetectorTest -->
      <class name="com.h3xstream.findsecbugs.scala.SslDisablerDetectorTest">
        <test-method status="PASS" signature="detectSslDisabler()[pri:0, instance:com.h3xstream.findsecbugs.scala.SslDisablerDetectorTest@2a40cd94]" name="detectSslDisabler" duration-ms="396" started-at="2018-06-06T00:01:30Z" finished-at="2018-06-06T00:01:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectSslDisabler -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.scala.SslDisablerDetectorTest@2a40cd94]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:01:30Z" finished-at="2018-06-06T00:01:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.scala.SslDisablerDetectorTest@2a40cd94]" name="after" is-config="true" duration-ms="910" started-at="2018-06-06T00:01:30Z" finished-at="2018-06-06T00:01:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.scala.SslDisablerDetectorTest -->
      <class name="com.h3xstream.findsecbugs.injection.command.CommandInjectionDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.command.CommandInjectionDetectorTest@5e955596]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:00:55Z" finished-at="2018-06-06T00:00:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectCommandInjection()[pri:0, instance:com.h3xstream.findsecbugs.injection.command.CommandInjectionDetectorTest@5e955596]" name="detectCommandInjection" duration-ms="904" started-at="2018-06-06T00:00:55Z" finished-at="2018-06-06T00:00:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectCommandInjection -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.command.CommandInjectionDetectorTest@5e955596]" name="after" is-config="true" duration-ms="1100" started-at="2018-06-06T00:00:56Z" finished-at="2018-06-06T00:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.command.CommandInjectionDetectorTest -->
      <class name="com.h3xstream.findsecbugs.endpoint.WicketEndpointDetectorTest">
        <test-method status="PASS" signature="detectWicketEndpoint()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.WicketEndpointDetectorTest@2bbaf4f0]" name="detectWicketEndpoint" duration-ms="268" started-at="2018-06-06T00:02:32Z" finished-at="2018-06-06T00:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectWicketEndpoint -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.WicketEndpointDetectorTest@2bbaf4f0]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:32Z" finished-at="2018-06-06T00:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.WicketEndpointDetectorTest@2bbaf4f0]" name="after" is-config="true" duration-ms="556" started-at="2018-06-06T00:02:32Z" finished-at="2018-06-06T00:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.endpoint.WicketEndpointDetectorTest -->
      <class name="com.h3xstream.findsecbugs.ldap.AnonymousLdapDetectorTest">
        <test-method status="PASS" signature="detectAnonymousLdapBind()[pri:0, instance:com.h3xstream.findsecbugs.ldap.AnonymousLdapDetectorTest@12405818]" name="detectAnonymousLdapBind" duration-ms="308" started-at="2018-06-06T00:03:40Z" finished-at="2018-06-06T00:03:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectAnonymousLdapBind -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.ldap.AnonymousLdapDetectorTest@12405818]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:40Z" finished-at="2018-06-06T00:03:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.ldap.AnonymousLdapDetectorTest@12405818]" name="after" is-config="true" duration-ms="788" started-at="2018-06-06T00:03:40Z" finished-at="2018-06-06T00:03:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.ldap.AnonymousLdapDetectorTest -->
      <class name="com.h3xstream.findsecbugs.scala.PlayUnvalidatedRedirectDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.scala.PlayUnvalidatedRedirectDetectorTest@2df32bf7]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:01:25Z" finished-at="2018-06-06T00:01:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectUsePredictableRandom()[pri:0, instance:com.h3xstream.findsecbugs.scala.PlayUnvalidatedRedirectDetectorTest@2df32bf7]" name="detectUsePredictableRandom" duration-ms="857" started-at="2018-06-06T00:01:25Z" finished-at="2018-06-06T00:01:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectUsePredictableRandom -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.scala.PlayUnvalidatedRedirectDetectorTest@2df32bf7]" name="after" is-config="true" duration-ms="373" started-at="2018-06-06T00:01:25Z" finished-at="2018-06-06T00:01:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.scala.PlayUnvalidatedRedirectDetectorTest -->
      <class name="com.h3xstream.findsecbugs.jsp.JspIncludeDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.jsp.JspIncludeDetectorTest@442675e1]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:58Z" finished-at="2018-06-06T00:03:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="jspInclude1_unsafe()[pri:0, instance:com.h3xstream.findsecbugs.jsp.JspIncludeDetectorTest@442675e1]" name="jspInclude1_unsafe" duration-ms="356" started-at="2018-06-06T00:03:58Z" finished-at="2018-06-06T00:03:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jspInclude1_unsafe -->
        <test-method status="PASS" signature="jspInclude2_safe()[pri:0, instance:com.h3xstream.findsecbugs.jsp.JspIncludeDetectorTest@442675e1]" name="jspInclude2_safe" duration-ms="366" started-at="2018-06-06T00:03:59Z" finished-at="2018-06-06T00:03:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jspInclude2_safe -->
        <test-method status="PASS" signature="jspInclude3_unsafe()[pri:0, instance:com.h3xstream.findsecbugs.jsp.JspIncludeDetectorTest@442675e1]" name="jspInclude3_unsafe" duration-ms="422" started-at="2018-06-06T00:03:59Z" finished-at="2018-06-06T00:03:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jspInclude3_unsafe -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.jsp.JspIncludeDetectorTest@442675e1]" name="after" is-config="true" duration-ms="953" started-at="2018-06-06T00:03:59Z" finished-at="2018-06-06T00:04:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.jsp.JspIncludeDetectorTest -->
      <class name="com.h3xstream.findsecbugs.injection.SinkFilesValidationTest">
        <test-method status="PASS" signature="validateSinks()[pri:0, instance:com.h3xstream.findsecbugs.injection.SinkFilesValidationTest@71d15f18]" name="validateSinks" duration-ms="83" started-at="2018-06-06T00:01:04Z" finished-at="2018-06-06T00:01:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSinks -->
      </class> <!-- com.h3xstream.findsecbugs.injection.SinkFilesValidationTest -->
      <class name="com.h3xstream.findsecbugs.password.ConstantPasswordDetectorTest">
        <test-method status="PASS" signature="detectHardCodePasswordsAndKeys()[pri:0, instance:com.h3xstream.findsecbugs.password.ConstantPasswordDetectorTest@1442d7b5]" name="detectHardCodePasswordsAndKeys" duration-ms="682" started-at="2018-06-06T00:02:03Z" finished-at="2018-06-06T00:02:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectHardCodePasswordsAndKeys -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.password.ConstantPasswordDetectorTest@1442d7b5]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:03Z" finished-at="2018-06-06T00:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.password.ConstantPasswordDetectorTest@1442d7b5]" name="after" is-config="true" duration-ms="2260" started-at="2018-06-06T00:02:04Z" finished-at="2018-06-06T00:02:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.password.ConstantPasswordDetectorTest -->
      <class name="com.h3xstream.findsecbugs.xss.encoder.ApacheCommonsLangTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.xss.encoder.ApacheCommonsLangTest@b9afc07]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:13Z" finished-at="2018-06-06T00:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testCommonsLang26()[pri:0, instance:com.h3xstream.findsecbugs.xss.encoder.ApacheCommonsLangTest@b9afc07]" name="testCommonsLang26" duration-ms="408" started-at="2018-06-06T00:00:13Z" finished-at="2018-06-06T00:00:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCommonsLang26 -->
        <test-method status="PASS" signature="testCommonsLang3()[pri:0, instance:com.h3xstream.findsecbugs.xss.encoder.ApacheCommonsLangTest@b9afc07]" name="testCommonsLang3" duration-ms="342" started-at="2018-06-06T00:00:14Z" finished-at="2018-06-06T00:00:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCommonsLang3 -->
        <test-method status="PASS" signature="testCommonsText()[pri:0, instance:com.h3xstream.findsecbugs.xss.encoder.ApacheCommonsLangTest@b9afc07]" name="testCommonsText" duration-ms="350" started-at="2018-06-06T00:00:14Z" finished-at="2018-06-06T00:00:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCommonsText -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.xss.encoder.ApacheCommonsLangTest@b9afc07]" name="after" is-config="true" duration-ms="333" started-at="2018-06-06T00:00:14Z" finished-at="2018-06-06T00:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.xss.encoder.ApacheCommonsLangTest -->
      <class name="com.h3xstream.findsecbugs.xml.DocumentBuilderSafePropertyTest">
        <test-method status="PASS" signature="avoidFalsePositiveOnSafeConfiguration()[pri:0, instance:com.h3xstream.findsecbugs.xml.DocumentBuilderSafePropertyTest@701fc37a]" name="avoidFalsePositiveOnSafeConfiguration" duration-ms="351" started-at="2018-06-06T00:02:45Z" finished-at="2018-06-06T00:02:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avoidFalsePositiveOnSafeConfiguration -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.xml.DocumentBuilderSafePropertyTest@701fc37a]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:45Z" finished-at="2018-06-06T00:02:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectUnsafeNoSpecialSettings()[pri:0, instance:com.h3xstream.findsecbugs.xml.DocumentBuilderSafePropertyTest@701fc37a]" name="detectUnsafeNoSpecialSettings" duration-ms="346" started-at="2018-06-06T00:02:45Z" finished-at="2018-06-06T00:02:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectUnsafeNoSpecialSettings -->
        <test-method status="PASS" signature="detectUnsafePartialConfiguration()[pri:0, instance:com.h3xstream.findsecbugs.xml.DocumentBuilderSafePropertyTest@701fc37a]" name="detectUnsafePartialConfiguration" duration-ms="355" started-at="2018-06-06T00:02:45Z" finished-at="2018-06-06T00:02:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectUnsafePartialConfiguration -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.xml.DocumentBuilderSafePropertyTest@701fc37a]" name="after" is-config="true" duration-ms="1702" started-at="2018-06-06T00:02:46Z" finished-at="2018-06-06T00:02:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.xml.DocumentBuilderSafePropertyTest -->
      <class name="com.h3xstream.findsecbugs.scala.ScalaPathTraversalDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.scala.ScalaPathTraversalDetectorTest@3d8314f0]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:01:23Z" finished-at="2018-06-06T00:01:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectCommandInjection()[pri:0, instance:com.h3xstream.findsecbugs.scala.ScalaPathTraversalDetectorTest@3d8314f0]" name="detectCommandInjection" duration-ms="970" started-at="2018-06-06T00:01:23Z" finished-at="2018-06-06T00:01:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectCommandInjection -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.scala.ScalaPathTraversalDetectorTest@3d8314f0]" name="after" is-config="true" duration-ms="897" started-at="2018-06-06T00:01:24Z" finished-at="2018-06-06T00:01:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.scala.ScalaPathTraversalDetectorTest -->
      <class name="com.h3xstream.findsecbugs.injection.sql.JdoInjectionSourceTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.JdoInjectionSourceTest@1e4a7dd4]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:45Z" finished-at="2018-06-06T00:00:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectJdoInjection()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.JdoInjectionSourceTest@1e4a7dd4]" name="detectJdoInjection" duration-ms="314" started-at="2018-06-06T00:00:45Z" finished-at="2018-06-06T00:00:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectJdoInjection -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.JdoInjectionSourceTest@1e4a7dd4]" name="after" is-config="true" duration-ms="507" started-at="2018-06-06T00:00:45Z" finished-at="2018-06-06T00:00:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.sql.JdoInjectionSourceTest -->
      <class name="com.h3xstream.findsecbugs.password.HardcodedPasswordEqualsDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.password.HardcodedPasswordEqualsDetectorTest@517cd4b]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:11Z" finished-at="2018-06-06T00:02:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectHardCodePasswordsWithEquals()[pri:0, instance:com.h3xstream.findsecbugs.password.HardcodedPasswordEqualsDetectorTest@517cd4b]" name="detectHardCodePasswordsWithEquals" duration-ms="306" started-at="2018-06-06T00:02:11Z" finished-at="2018-06-06T00:02:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectHardCodePasswordsWithEquals -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.password.HardcodedPasswordEqualsDetectorTest@517cd4b]" name="after" is-config="true" duration-ms="1434" started-at="2018-06-06T00:02:12Z" finished-at="2018-06-06T00:02:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.password.HardcodedPasswordEqualsDetectorTest -->
      <class name="com.h3xstream.findsecbugs.password.HashUnsafeEqualsDetectorTest">
        <test-method status="PASS" signature="detectUnsafeHashEquals()[pri:0, instance:com.h3xstream.findsecbugs.password.HashUnsafeEqualsDetectorTest@76a4d6c]" name="detectUnsafeHashEquals" duration-ms="406" started-at="2018-06-06T00:02:10Z" finished-at="2018-06-06T00:02:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectUnsafeHashEquals -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.password.HashUnsafeEqualsDetectorTest@76a4d6c]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:10Z" finished-at="2018-06-06T00:02:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.password.HashUnsafeEqualsDetectorTest@76a4d6c]" name="after" is-config="true" duration-ms="514" started-at="2018-06-06T00:02:11Z" finished-at="2018-06-06T00:02:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.password.HashUnsafeEqualsDetectorTest -->
      <class name="com.h3xstream.findsecbugs.xpath.XPathApacheXmlSecTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.xpath.XPathApacheXmlSecTest@3d3fcdb0]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:04:09Z" finished-at="2018-06-06T00:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectXPathInjectionApache()[pri:0, instance:com.h3xstream.findsecbugs.xpath.XPathApacheXmlSecTest@3d3fcdb0]" name="detectXPathInjectionApache" duration-ms="295" started-at="2018-06-06T00:04:09Z" finished-at="2018-06-06T00:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXPathInjectionApache -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.xpath.XPathApacheXmlSecTest@3d3fcdb0]" name="after" is-config="true" duration-ms="2826" started-at="2018-06-06T00:04:09Z" finished-at="2018-06-06T00:04:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.xpath.XPathApacheXmlSecTest -->
      <class name="com.h3xstream.findsecbugs.file.ConstantValueTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.file.ConstantValueTest@4e41089d]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:36Z" finished-at="2018-06-06T00:02:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="avoidPathTraversalSafeValue()[pri:0, instance:com.h3xstream.findsecbugs.file.ConstantValueTest@4e41089d]" name="avoidPathTraversalSafeValue" duration-ms="716" started-at="2018-06-06T00:02:36Z" finished-at="2018-06-06T00:02:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avoidPathTraversalSafeValue -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.file.ConstantValueTest@4e41089d]" name="after" is-config="true" duration-ms="1747" started-at="2018-06-06T00:02:37Z" finished-at="2018-06-06T00:02:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.file.ConstantValueTest -->
      <class name="com.h3xstream.findsecbugs.UnvalidatedRedirectDetectorTest">
        <test-method status="PASS" signature="detectUnvalidatedRedirect()[pri:0, instance:com.h3xstream.findsecbugs.UnvalidatedRedirectDetectorTest@6385cb26]" name="detectUnvalidatedRedirect" duration-ms="279" started-at="2018-06-06T00:04:24Z" finished-at="2018-06-06T00:04:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectUnvalidatedRedirect -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.UnvalidatedRedirectDetectorTest@6385cb26]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:04:24Z" finished-at="2018-06-06T00:04:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.UnvalidatedRedirectDetectorTest@6385cb26]" name="after" is-config="true" duration-ms="798" started-at="2018-06-06T00:04:24Z" finished-at="2018-06-06T00:04:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.UnvalidatedRedirectDetectorTest -->
      <class name="com.h3xstream.findsecbugs.xpath.XPathInjectionJavaxDetectorTest">
        <test-method status="PASS" signature="detectXPathInjectionJavax()[pri:0, instance:com.h3xstream.findsecbugs.xpath.XPathInjectionJavaxDetectorTest@641147d0]" name="detectXPathInjectionJavax" duration-ms="335" started-at="2018-06-06T00:04:12Z" finished-at="2018-06-06T00:04:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXPathInjectionJavax -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.xpath.XPathInjectionJavaxDetectorTest@641147d0]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:04:12Z" finished-at="2018-06-06T00:04:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.xpath.XPathInjectionJavaxDetectorTest@641147d0]" name="after" is-config="true" duration-ms="2174" started-at="2018-06-06T00:04:13Z" finished-at="2018-06-06T00:04:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.xpath.XPathInjectionJavaxDetectorTest -->
      <class name="com.h3xstream.findsecbugs.injection.sql.SpringJdbcOperationsAndTemplateTest">
        <test-method status="PASS" signature="detectBasicSpringJdbcInjection()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.SpringJdbcOperationsAndTemplateTest@2698dc7]" name="detectBasicSpringJdbcInjection" duration-ms="646" started-at="2018-06-06T00:00:26Z" finished-at="2018-06-06T00:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectBasicSpringJdbcInjection -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.SpringJdbcOperationsAndTemplateTest@2698dc7]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:26Z" finished-at="2018-06-06T00:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectBatchUpdate()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.SpringJdbcOperationsAndTemplateTest@2698dc7]" name="detectBatchUpdate" duration-ms="655" started-at="2018-06-06T00:00:27Z" finished-at="2018-06-06T00:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectBatchUpdate -->
        <test-method status="PASS" signature="detectExecute()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.SpringJdbcOperationsAndTemplateTest@2698dc7]" name="detectExecute" duration-ms="859" started-at="2018-06-06T00:00:28Z" finished-at="2018-06-06T00:00:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectExecute -->
        <test-method status="PASS" signature="detectQuery()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.SpringJdbcOperationsAndTemplateTest@2698dc7]" name="detectQuery" duration-ms="609" started-at="2018-06-06T00:00:29Z" finished-at="2018-06-06T00:00:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectQuery -->
        <test-method status="PASS" signature="detectQueryForList()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.SpringJdbcOperationsAndTemplateTest@2698dc7]" name="detectQueryForList" duration-ms="604" started-at="2018-06-06T00:00:29Z" finished-at="2018-06-06T00:00:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectQueryForList -->
        <test-method status="PASS" signature="detectQueryForMap()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.SpringJdbcOperationsAndTemplateTest@2698dc7]" name="detectQueryForMap" duration-ms="617" started-at="2018-06-06T00:00:30Z" finished-at="2018-06-06T00:00:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectQueryForMap -->
        <test-method status="PASS" signature="detectQueryForObject()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.SpringJdbcOperationsAndTemplateTest@2698dc7]" name="detectQueryForObject" duration-ms="735" started-at="2018-06-06T00:00:30Z" finished-at="2018-06-06T00:00:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectQueryForObject -->
        <test-method status="PASS" signature="detectQueryForRowSet()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.SpringJdbcOperationsAndTemplateTest@2698dc7]" name="detectQueryForRowSet" duration-ms="648" started-at="2018-06-06T00:00:31Z" finished-at="2018-06-06T00:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectQueryForRowSet -->
        <test-method status="PASS" signature="detectQueryInt()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.SpringJdbcOperationsAndTemplateTest@2698dc7]" name="detectQueryInt" duration-ms="1303" started-at="2018-06-06T00:00:32Z" finished-at="2018-06-06T00:00:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectQueryInt -->
        <test-method status="PASS" signature="detectQueryLong()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.SpringJdbcOperationsAndTemplateTest@2698dc7]" name="detectQueryLong" duration-ms="555" started-at="2018-06-06T00:00:33Z" finished-at="2018-06-06T00:00:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectQueryLong -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.SpringJdbcOperationsAndTemplateTest@2698dc7]" name="after" is-config="true" duration-ms="376" started-at="2018-06-06T00:00:34Z" finished-at="2018-06-06T00:00:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.sql.SpringJdbcOperationsAndTemplateTest -->
      <class name="com.h3xstream.findsecbugs.xss.XSSRequestWrapperDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.xss.XSSRequestWrapperDetectorTest@7dc222ae]" name="before" is-config="true" duration-ms="11" started-at="2018-06-05T23:59:59Z" finished-at="2018-06-05T23:59:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="avoidFalsePositive()[pri:0, instance:com.h3xstream.findsecbugs.xss.XSSRequestWrapperDetectorTest@7dc222ae]" name="avoidFalsePositive" duration-ms="3459" started-at="2018-06-05T23:59:59Z" finished-at="2018-06-06T00:00:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avoidFalsePositive -->
        <test-method status="PASS" signature="detectXssWrapper1()[pri:0, instance:com.h3xstream.findsecbugs.xss.XSSRequestWrapperDetectorTest@7dc222ae]" name="detectXssWrapper1" duration-ms="930" started-at="2018-06-06T00:00:03Z" finished-at="2018-06-06T00:00:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXssWrapper1 -->
        <test-method status="PASS" signature="detectXssWrapper2()[pri:0, instance:com.h3xstream.findsecbugs.xss.XSSRequestWrapperDetectorTest@7dc222ae]" name="detectXssWrapper2" duration-ms="1139" started-at="2018-06-06T00:00:03Z" finished-at="2018-06-06T00:00:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXssWrapper2 -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.xss.XSSRequestWrapperDetectorTest@7dc222ae]" name="after" is-config="true" duration-ms="101" started-at="2018-06-06T00:00:05Z" finished-at="2018-06-06T00:00:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.xss.XSSRequestWrapperDetectorTest -->
      <class name="com.h3xstream.findsecbugs.android.WorldWritableDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.android.WorldWritableDetectorTest@5606c0b]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:32Z" finished-at="2018-06-06T00:03:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectWorldWritableHandle()[pri:0, instance:com.h3xstream.findsecbugs.android.WorldWritableDetectorTest@5606c0b]" name="detectWorldWritableHandle" duration-ms="500" started-at="2018-06-06T00:03:32Z" finished-at="2018-06-06T00:03:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectWorldWritableHandle -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.android.WorldWritableDetectorTest@5606c0b]" name="after" is-config="true" duration-ms="1883" started-at="2018-06-06T00:03:32Z" finished-at="2018-06-06T00:03:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.android.WorldWritableDetectorTest -->
      <class name="com.h3xstream.findsecbugs.scala.ScalaXssDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.scala.ScalaXssDetectorTest@2bea5ab4]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:01:20Z" finished-at="2018-06-06T00:01:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectXssInController()[pri:0, instance:com.h3xstream.findsecbugs.scala.ScalaXssDetectorTest@2bea5ab4]" name="detectXssInController" duration-ms="1295" started-at="2018-06-06T00:01:20Z" finished-at="2018-06-06T00:01:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXssInController -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.scala.ScalaXssDetectorTest@2bea5ab4]" name="after" is-config="true" duration-ms="996" started-at="2018-06-06T00:01:22Z" finished-at="2018-06-06T00:01:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.scala.ScalaXssDetectorTest -->
      <class name="com.h3xstream.findsecbugs.crypto.WeakTLSDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.crypto.WeakTLSDetectorTest@6e2c9341]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:01:58Z" finished-at="2018-06-06T00:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectWeakTLS()[pri:0, instance:com.h3xstream.findsecbugs.crypto.WeakTLSDetectorTest@6e2c9341]" name="detectWeakTLS" duration-ms="314" started-at="2018-06-06T00:01:58Z" finished-at="2018-06-06T00:01:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectWeakTLS -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.crypto.WeakTLSDetectorTest@6e2c9341]" name="after" is-config="true" duration-ms="1754" started-at="2018-06-06T00:01:59Z" finished-at="2018-06-06T00:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.crypto.WeakTLSDetectorTest -->
      <class name="com.h3xstream.findsecbugs.cookie.PersistentCookieDetectorTest">
        <test-method status="PASS" signature="detectPersistentCookieUsage()[pri:0, instance:com.h3xstream.findsecbugs.cookie.PersistentCookieDetectorTest@4df828d7]" name="detectPersistentCookieUsage" duration-ms="291" started-at="2018-06-06T00:03:00Z" finished-at="2018-06-06T00:03:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectPersistentCookieUsage -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.cookie.PersistentCookieDetectorTest@4df828d7]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:00Z" finished-at="2018-06-06T00:03:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.cookie.PersistentCookieDetectorTest@4df828d7]" name="after" is-config="true" duration-ms="727" started-at="2018-06-06T00:03:00Z" finished-at="2018-06-06T00:03:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.cookie.PersistentCookieDetectorTest -->
      <class name="com.h3xstream.findsecbugs.ExternalConfigurationControlDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.ExternalConfigurationControlDetectorTest@64d7f7e0]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:04:17Z" finished-at="2018-06-06T00:04:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectCatalog()[pri:0, instance:com.h3xstream.findsecbugs.ExternalConfigurationControlDetectorTest@64d7f7e0]" name="detectCatalog" duration-ms="278" started-at="2018-06-06T00:04:17Z" finished-at="2018-06-06T00:04:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectCatalog -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.ExternalConfigurationControlDetectorTest@64d7f7e0]" name="after" is-config="true" duration-ms="2181" started-at="2018-06-06T00:04:17Z" finished-at="2018-06-06T00:04:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.ExternalConfigurationControlDetectorTest -->
      <class name="com.h3xstream.findsecbugs.csrf.SpringCsrfUnrestrictedRequestMappingDetectorTest">
        <test-method status="PASS" signature="avoidFalsePositiveOnSafeSpringCsrfRequestMapping()[pri:0, instance:com.h3xstream.findsecbugs.csrf.SpringCsrfUnrestrictedRequestMappingDetectorTest@49e202ad]" name="avoidFalsePositiveOnSafeSpringCsrfRequestMapping" duration-ms="265" started-at="2018-06-06T00:04:03Z" finished-at="2018-06-06T00:04:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avoidFalsePositiveOnSafeSpringCsrfRequestMapping -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.csrf.SpringCsrfUnrestrictedRequestMappingDetectorTest@49e202ad]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:04:03Z" finished-at="2018-06-06T00:04:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectSpringCsrfUnrestrictedRequestMapping()[pri:0, instance:com.h3xstream.findsecbugs.csrf.SpringCsrfUnrestrictedRequestMappingDetectorTest@49e202ad]" name="detectSpringCsrfUnrestrictedRequestMapping" duration-ms="254" started-at="2018-06-06T00:04:03Z" finished-at="2018-06-06T00:04:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectSpringCsrfUnrestrictedRequestMapping -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.csrf.SpringCsrfUnrestrictedRequestMappingDetectorTest@49e202ad]" name="after" is-config="true" duration-ms="785" started-at="2018-06-06T00:04:04Z" finished-at="2018-06-06T00:04:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.csrf.SpringCsrfUnrestrictedRequestMappingDetectorTest -->
      <class name="com.h3xstream.findsecbugs.injection.script.ScriptEngineInjectionTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.script.ScriptEngineInjectionTest@15bfd87]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:21Z" finished-at="2018-06-06T00:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectInjection()[pri:0, instance:com.h3xstream.findsecbugs.injection.script.ScriptEngineInjectionTest@15bfd87]" name="detectInjection" duration-ms="297" started-at="2018-06-06T00:00:21Z" finished-at="2018-06-06T00:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectInjection -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.script.ScriptEngineInjectionTest@15bfd87]" name="after" is-config="true" duration-ms="134" started-at="2018-06-06T00:00:21Z" finished-at="2018-06-06T00:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.script.ScriptEngineInjectionTest -->
      <class name="com.h3xstream.findsecbugs.crypto.WeakMessageDigestDetectorTest">
        <test-method status="PASS" signature="detectWeakDigest()[pri:0, instance:com.h3xstream.findsecbugs.crypto.WeakMessageDigestDetectorTest@32464a14]" name="detectWeakDigest" duration-ms="359" started-at="2018-06-06T00:02:00Z" finished-at="2018-06-06T00:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectWeakDigest -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.crypto.WeakMessageDigestDetectorTest@32464a14]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:00Z" finished-at="2018-06-06T00:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectWeakDigestAdditionalSignatures()[pri:0, instance:com.h3xstream.findsecbugs.crypto.WeakMessageDigestDetectorTest@32464a14]" name="detectWeakDigestAdditionalSignatures" duration-ms="326" started-at="2018-06-06T00:02:01Z" finished-at="2018-06-06T00:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectWeakDigestAdditionalSignatures -->
        <test-method status="PASS" signature="detectWeakDigestApache()[pri:0, instance:com.h3xstream.findsecbugs.crypto.WeakMessageDigestDetectorTest@32464a14]" name="detectWeakDigestApache" duration-ms="372" started-at="2018-06-06T00:02:01Z" finished-at="2018-06-06T00:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectWeakDigestApache -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.crypto.WeakMessageDigestDetectorTest@32464a14]" name="after" is-config="true" duration-ms="967" started-at="2018-06-06T00:02:01Z" finished-at="2018-06-06T00:02:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.crypto.WeakMessageDigestDetectorTest -->
      <class name="com.h3xstream.findsecbugs.common.ByteCodeTraceTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.common.ByteCodeTraceTest@31206beb]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:07Z" finished-at="2018-06-06T00:03:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="avoidFalsePositive()[pri:0, instance:com.h3xstream.findsecbugs.common.ByteCodeTraceTest@31206beb]" name="avoidFalsePositive" duration-ms="2147" started-at="2018-06-06T00:03:07Z" finished-at="2018-06-06T00:03:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avoidFalsePositive -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.common.ByteCodeTraceTest@31206beb]" name="after" is-config="true" duration-ms="1469" started-at="2018-06-06T00:03:09Z" finished-at="2018-06-06T00:03:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.common.ByteCodeTraceTest -->
      <class name="com.h3xstream.findsecbugs.crypto.InsufficientKeySizeBlowfishDetectorTest">
        <test-method status="PASS" signature="detectBadKeySize()[pri:0, instance:com.h3xstream.findsecbugs.crypto.InsufficientKeySizeBlowfishDetectorTest@40f08448]" name="detectBadKeySize" duration-ms="288" started-at="2018-06-06T00:01:49Z" finished-at="2018-06-06T00:01:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectBadKeySize -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.crypto.InsufficientKeySizeBlowfishDetectorTest@40f08448]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:01:49Z" finished-at="2018-06-06T00:01:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.crypto.InsufficientKeySizeBlowfishDetectorTest@40f08448]" name="after" is-config="true" duration-ms="1581" started-at="2018-06-06T00:01:50Z" finished-at="2018-06-06T00:01:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.crypto.InsufficientKeySizeBlowfishDetectorTest -->
      <class name="com.h3xstream.findsecbugs.crypto.WeakTrustManagerDetectorTest">
        <test-method status="PASS" signature="detectWeakHostnameVerifier()[pri:0, instance:com.h3xstream.findsecbugs.crypto.WeakTrustManagerDetectorTest@f4168b8]" name="detectWeakHostnameVerifier" duration-ms="263" started-at="2018-06-06T00:01:31Z" finished-at="2018-06-06T00:01:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectWeakHostnameVerifier -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.crypto.WeakTrustManagerDetectorTest@f4168b8]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:01:31Z" finished-at="2018-06-06T00:01:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectWeakTrustManager()[pri:0, instance:com.h3xstream.findsecbugs.crypto.WeakTrustManagerDetectorTest@f4168b8]" name="detectWeakTrustManager" duration-ms="473" started-at="2018-06-06T00:01:31Z" finished-at="2018-06-06T00:01:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectWeakTrustManager -->
        <test-method status="PASS" signature="detectWeakTrustManagerSslDisabler()[pri:0, instance:com.h3xstream.findsecbugs.crypto.WeakTrustManagerDetectorTest@f4168b8]" name="detectWeakTrustManagerSslDisabler" duration-ms="362" started-at="2018-06-06T00:01:32Z" finished-at="2018-06-06T00:01:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectWeakTrustManagerSslDisabler -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.crypto.WeakTrustManagerDetectorTest@f4168b8]" name="after" is-config="true" duration-ms="1940" started-at="2018-06-06T00:01:32Z" finished-at="2018-06-06T00:01:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.crypto.WeakTrustManagerDetectorTest -->
      <class name="com.h3xstream.findsecbugs.XmlDecoderDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.XmlDecoderDetectorTest@6a79c292]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:26Z" finished-at="2018-06-06T00:03:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectXmlDecoder()[pri:0, instance:com.h3xstream.findsecbugs.XmlDecoderDetectorTest@6a79c292]" name="detectXmlDecoder" duration-ms="297" started-at="2018-06-06T00:03:26Z" finished-at="2018-06-06T00:03:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXmlDecoder -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.XmlDecoderDetectorTest@6a79c292]" name="after" is-config="true" duration-ms="514" started-at="2018-06-06T00:03:26Z" finished-at="2018-06-06T00:03:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.XmlDecoderDetectorTest -->
      <class name="com.h3xstream.findsecbugs.endpoint.ServletEndpointDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.ServletEndpointDetectorTest@799d4f69]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:23Z" finished-at="2018-06-06T00:02:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectServletVariousInputs()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.ServletEndpointDetectorTest@799d4f69]" name="detectServletVariousInputs" duration-ms="612" started-at="2018-06-06T00:02:23Z" finished-at="2018-06-06T00:02:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectServletVariousInputs -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.ServletEndpointDetectorTest@799d4f69]" name="after" is-config="true" duration-ms="620" started-at="2018-06-06T00:02:23Z" finished-at="2018-06-06T00:02:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.endpoint.ServletEndpointDetectorTest -->
      <class name="com.h3xstream.findsecbugs.HttpResponseSplittingDetectorTest">
        <test-method status="PASS" signature="detectResponseSplitting()[pri:0, instance:com.h3xstream.findsecbugs.HttpResponseSplittingDetectorTest@38364841]" name="detectResponseSplitting" duration-ms="345" started-at="2018-06-06T00:04:25Z" finished-at="2018-06-06T00:04:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectResponseSplitting -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.HttpResponseSplittingDetectorTest@38364841]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:04:25Z" finished-at="2018-06-06T00:04:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.HttpResponseSplittingDetectorTest@38364841]" name="after" is-config="true" duration-ms="1075" started-at="2018-06-06T00:04:25Z" finished-at="2018-06-06T00:04:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.HttpResponseSplittingDetectorTest -->
      <class name="com.h3xstream.findsecbugs.file.FileUploadFilenameDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.file.FileUploadFilenameDetectorTest@32a068d1]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:39Z" finished-at="2018-06-06T00:02:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectTaintedFilename()[pri:0, instance:com.h3xstream.findsecbugs.file.FileUploadFilenameDetectorTest@32a068d1]" name="detectTaintedFilename" duration-ms="346" started-at="2018-06-06T00:02:39Z" finished-at="2018-06-06T00:02:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectTaintedFilename -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.file.FileUploadFilenameDetectorTest@32a068d1]" name="after" is-config="true" duration-ms="1635" started-at="2018-06-06T00:02:39Z" finished-at="2018-06-06T00:02:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.file.FileUploadFilenameDetectorTest -->
      <class name="com.h3xstream.findsecbugs.injection.http.HttpParameterPollutionDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.http.HttpParameterPollutionDetectorTest@5e57643e]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:00:47Z" finished-at="2018-06-06T00:00:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectHttpParameterPollution()[pri:0, instance:com.h3xstream.findsecbugs.injection.http.HttpParameterPollutionDetectorTest@5e57643e]" name="detectHttpParameterPollution" duration-ms="338" started-at="2018-06-06T00:00:47Z" finished-at="2018-06-06T00:00:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectHttpParameterPollution -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.http.HttpParameterPollutionDetectorTest@5e57643e]" name="after" is-config="true" duration-ms="642" started-at="2018-06-06T00:00:48Z" finished-at="2018-06-06T00:00:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.http.HttpParameterPollutionDetectorTest -->
      <class name="com.h3xstream.findsecbugs.crypto.InsufficientKeySizeRsaDetectorTest">
        <test-method status="PASS" signature="detectBadKeySize()[pri:0, instance:com.h3xstream.findsecbugs.crypto.InsufficientKeySizeRsaDetectorTest@2f490758]" name="detectBadKeySize" duration-ms="396" started-at="2018-06-06T00:01:45Z" finished-at="2018-06-06T00:01:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectBadKeySize -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.crypto.InsufficientKeySizeRsaDetectorTest@2f490758]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:01:45Z" finished-at="2018-06-06T00:01:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.crypto.InsufficientKeySizeRsaDetectorTest@2f490758]" name="after" is-config="true" duration-ms="452" started-at="2018-06-06T00:01:46Z" finished-at="2018-06-06T00:01:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.crypto.InsufficientKeySizeRsaDetectorTest -->
      <class name="com.h3xstream.findsecbugs.crypto.RsaNoPaddingDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.crypto.RsaNoPaddingDetectorTest@166fa74d]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:01:48Z" finished-at="2018-06-06T00:01:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectRsaNoPadding()[pri:0, instance:com.h3xstream.findsecbugs.crypto.RsaNoPaddingDetectorTest@166fa74d]" name="detectRsaNoPadding" duration-ms="299" started-at="2018-06-06T00:01:48Z" finished-at="2018-06-06T00:01:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectRsaNoPadding -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.crypto.RsaNoPaddingDetectorTest@166fa74d]" name="after" is-config="true" duration-ms="1366" started-at="2018-06-06T00:01:48Z" finished-at="2018-06-06T00:01:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.crypto.RsaNoPaddingDetectorTest -->
      <class name="com.h3xstream.findsecbugs.android.WebViewJavascriptInterfaceDetectorTest">
        <test-method status="PASS" signature="detectWebViewJavascriptInterface()[pri:0, instance:com.h3xstream.findsecbugs.android.WebViewJavascriptInterfaceDetectorTest@1445d7f]" name="detectWebViewJavascriptInterface" duration-ms="496" started-at="2018-06-06T00:03:35Z" finished-at="2018-06-06T00:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectWebViewJavascriptInterface -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.android.WebViewJavascriptInterfaceDetectorTest@1445d7f]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:35Z" finished-at="2018-06-06T00:03:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.android.WebViewJavascriptInterfaceDetectorTest@1445d7f]" name="after" is-config="true" duration-ms="754" started-at="2018-06-06T00:03:36Z" finished-at="2018-06-06T00:03:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.android.WebViewJavascriptInterfaceDetectorTest -->
      <class name="com.h3xstream.findsecbugs.crypto.UnencryptedSocketDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.crypto.UnencryptedSocketDetectorTest@276438c9]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:01:51Z" finished-at="2018-06-06T00:01:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectUnencryptedSocket()[pri:0, instance:com.h3xstream.findsecbugs.crypto.UnencryptedSocketDetectorTest@276438c9]" name="detectUnencryptedSocket" duration-ms="350" started-at="2018-06-06T00:01:51Z" finished-at="2018-06-06T00:01:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectUnencryptedSocket -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.crypto.UnencryptedSocketDetectorTest@276438c9]" name="after" is-config="true" duration-ms="450" started-at="2018-06-06T00:01:52Z" finished-at="2018-06-06T00:01:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.crypto.UnencryptedSocketDetectorTest -->
      <class name="com.h3xstream.findsecbugs.endpoint.JaxWsEndpointDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.JaxWsEndpointDetectorTest@17776a8]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:28Z" finished-at="2018-06-06T00:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectJaxWsEndpoint()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.JaxWsEndpointDetectorTest@17776a8]" name="detectJaxWsEndpoint" duration-ms="283" started-at="2018-06-06T00:02:28Z" finished-at="2018-06-06T00:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectJaxWsEndpoint -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.JaxWsEndpointDetectorTest@17776a8]" name="after" is-config="true" duration-ms="649" started-at="2018-06-06T00:02:28Z" finished-at="2018-06-06T00:02:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.endpoint.JaxWsEndpointDetectorTest -->
      <class name="com.h3xstream.findsecbugs.taintanalysis.TaintMethodConfigTest">
        <test-method status="PASS" signature="validateSimpleTaintMethodConfig()[pri:0, instance:com.h3xstream.findsecbugs.taintanalysis.TaintMethodConfigTest@679b62af]" name="validateSimpleTaintMethodConfig" duration-ms="0" started-at="2018-06-06T00:02:18Z" finished-at="2018-06-06T00:02:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSimpleTaintMethodConfig -->
      </class> <!-- com.h3xstream.findsecbugs.taintanalysis.TaintMethodConfigTest -->
      <class name="com.h3xstream.findsecbugs.jsp.JstlOutDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.jsp.JstlOutDetectorTest@453da22c]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:03:49Z" finished-at="2018-06-06T00:03:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="jspEscape1_safe()[pri:0, instance:com.h3xstream.findsecbugs.jsp.JstlOutDetectorTest@453da22c]" name="jspEscape1_safe" duration-ms="424" started-at="2018-06-06T00:03:49Z" finished-at="2018-06-06T00:03:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jspEscape1_safe -->
        <test-method status="PASS" signature="jspEscape2_unsafe()[pri:0, instance:com.h3xstream.findsecbugs.jsp.JstlOutDetectorTest@453da22c]" name="jspEscape2_unsafe" duration-ms="383" started-at="2018-06-06T00:03:49Z" finished-at="2018-06-06T00:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jspEscape2_unsafe -->
        <test-method status="PASS" signature="jspEscape3_safe()[pri:0, instance:com.h3xstream.findsecbugs.jsp.JstlOutDetectorTest@453da22c]" name="jspEscape3_safe" duration-ms="391" started-at="2018-06-06T00:03:50Z" finished-at="2018-06-06T00:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jspEscape3_safe -->
        <test-method status="PASS" signature="jspEscape4_unknown()[pri:0, instance:com.h3xstream.findsecbugs.jsp.JstlOutDetectorTest@453da22c]" name="jspEscape4_unknown" duration-ms="392" started-at="2018-06-06T00:03:50Z" finished-at="2018-06-06T00:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jspEscape4_unknown -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.jsp.JstlOutDetectorTest@453da22c]" name="after" is-config="true" duration-ms="2049" started-at="2018-06-06T00:03:50Z" finished-at="2018-06-06T00:03:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.jsp.JstlOutDetectorTest -->
      <class name="com.h3xstream.findsecbugs.xss.OwaspBenchmarkTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.xss.OwaspBenchmarkTest@6483f5ae]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:13Z" finished-at="2018-06-06T00:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="retrocompatibilityBenchmarks()[pri:0, instance:com.h3xstream.findsecbugs.xss.OwaspBenchmarkTest@6483f5ae]" name="retrocompatibilityBenchmarks" duration-ms="372" started-at="2018-06-06T00:00:13Z" finished-at="2018-06-06T00:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- retrocompatibilityBenchmarks -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.xss.OwaspBenchmarkTest@6483f5ae]" name="after" is-config="true" duration-ms="252" started-at="2018-06-06T00:00:13Z" finished-at="2018-06-06T00:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.xss.OwaspBenchmarkTest -->
      <class name="com.h3xstream.findsecbugs.file.NioPathTraversalTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.file.NioPathTraversalTest@11c20519]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:32Z" finished-at="2018-06-06T00:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectPathTraversal()[pri:0, instance:com.h3xstream.findsecbugs.file.NioPathTraversalTest@11c20519]" name="detectPathTraversal" duration-ms="283" started-at="2018-06-06T00:02:32Z" finished-at="2018-06-06T00:02:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectPathTraversal -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.file.NioPathTraversalTest@11c20519]" name="after" is-config="true" duration-ms="1461" started-at="2018-06-06T00:02:33Z" finished-at="2018-06-06T00:02:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.file.NioPathTraversalTest -->
      <class name="com.h3xstream.findsecbugs.spring.SpringUnvalidatedRedirectDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.spring.SpringUnvalidatedRedirectDetectorTest@28c4711c]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:04:26Z" finished-at="2018-06-06T00:04:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectSpringUnvalidatedRedirect()[pri:0, instance:com.h3xstream.findsecbugs.spring.SpringUnvalidatedRedirectDetectorTest@28c4711c]" name="detectSpringUnvalidatedRedirect" duration-ms="302" started-at="2018-06-06T00:04:26Z" finished-at="2018-06-06T00:04:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectSpringUnvalidatedRedirect -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.spring.SpringUnvalidatedRedirectDetectorTest@28c4711c]" name="after" is-config="true" duration-ms="2263" started-at="2018-06-06T00:04:27Z" finished-at="2018-06-06T00:04:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.spring.SpringUnvalidatedRedirectDetectorTest -->
      <class name="com.h3xstream.findsecbugs.jsp.XslTransformJspDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.jsp.XslTransformJspDetectorTest@16267862]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:45Z" finished-at="2018-06-06T00:03:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testXsl1()[pri:0, instance:com.h3xstream.findsecbugs.jsp.XslTransformJspDetectorTest@16267862]" name="testXsl1" duration-ms="435" started-at="2018-06-06T00:03:45Z" finished-at="2018-06-06T00:03:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXsl1 -->
        <test-method status="PASS" signature="testXsl2()[pri:0, instance:com.h3xstream.findsecbugs.jsp.XslTransformJspDetectorTest@16267862]" name="testXsl2" duration-ms="396" started-at="2018-06-06T00:03:45Z" finished-at="2018-06-06T00:03:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXsl2 -->
        <test-method status="PASS" signature="testXsl3()[pri:0, instance:com.h3xstream.findsecbugs.jsp.XslTransformJspDetectorTest@16267862]" name="testXsl3" duration-ms="376" started-at="2018-06-06T00:03:46Z" finished-at="2018-06-06T00:03:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXsl3 -->
        <test-method status="PASS" signature="testXsl4()[pri:0, instance:com.h3xstream.findsecbugs.jsp.XslTransformJspDetectorTest@16267862]" name="testXsl4" duration-ms="552" started-at="2018-06-06T00:03:46Z" finished-at="2018-06-06T00:03:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXsl4 -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.jsp.XslTransformJspDetectorTest@16267862]" name="after" is-config="true" duration-ms="2004" started-at="2018-06-06T00:03:47Z" finished-at="2018-06-06T00:03:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.jsp.XslTransformJspDetectorTest -->
      <class name="com.h3xstream.findsecbugs.crypto.EcbModeDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.crypto.EcbModeDetectorTest@588df31b]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:01:52Z" finished-at="2018-06-06T00:01:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectEcbMode()[pri:0, instance:com.h3xstream.findsecbugs.crypto.EcbModeDetectorTest@588df31b]" name="detectEcbMode" duration-ms="314" started-at="2018-06-06T00:01:52Z" finished-at="2018-06-06T00:01:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectEcbMode -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.crypto.EcbModeDetectorTest@588df31b]" name="after" is-config="true" duration-ms="459" started-at="2018-06-06T00:01:52Z" finished-at="2018-06-06T00:01:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.crypto.EcbModeDetectorTest -->
      <class name="com.h3xstream.findsecbugs.crypto.ErrorMessageExposureDetectorTest">
        <test-method status="PASS" signature="detectErrorMessageUsage()[pri:0, instance:com.h3xstream.findsecbugs.crypto.ErrorMessageExposureDetectorTest@3bd94634]" name="detectErrorMessageUsage" duration-ms="313" started-at="2018-06-06T00:01:34Z" finished-at="2018-06-06T00:01:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectErrorMessageUsage -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.crypto.ErrorMessageExposureDetectorTest@3bd94634]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:01:34Z" finished-at="2018-06-06T00:01:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.crypto.ErrorMessageExposureDetectorTest@3bd94634]" name="after" is-config="true" duration-ms="1544" started-at="2018-06-06T00:01:34Z" finished-at="2018-06-06T00:01:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.crypto.ErrorMessageExposureDetectorTest -->
      <class name="com.h3xstream.findsecbugs.android.BroadcastDetectorTest">
        <test-method status="PASS" signature="detectSendBroadcast()[pri:0, instance:com.h3xstream.findsecbugs.android.BroadcastDetectorTest@21a947fe]" name="detectSendBroadcast" duration-ms="329" started-at="2018-06-06T00:03:31Z" finished-at="2018-06-06T00:03:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectSendBroadcast -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.android.BroadcastDetectorTest@21a947fe]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:31Z" finished-at="2018-06-06T00:03:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.android.BroadcastDetectorTest@21a947fe]" name="after" is-config="true" duration-ms="824" started-at="2018-06-06T00:03:31Z" finished-at="2018-06-06T00:03:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.android.BroadcastDetectorTest -->
      <class name="com.h3xstream.findsecbugs.crypto.UnencryptedServerSocketDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.crypto.UnencryptedServerSocketDetectorTest@74294adb]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:01:39Z" finished-at="2018-06-06T00:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectUnencryptedSocket()[pri:0, instance:com.h3xstream.findsecbugs.crypto.UnencryptedServerSocketDetectorTest@74294adb]" name="detectUnencryptedSocket" duration-ms="329" started-at="2018-06-06T00:01:39Z" finished-at="2018-06-06T00:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectUnencryptedSocket -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.crypto.UnencryptedServerSocketDetectorTest@74294adb]" name="after" is-config="true" duration-ms="1612" started-at="2018-06-06T00:01:39Z" finished-at="2018-06-06T00:01:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.crypto.UnencryptedServerSocketDetectorTest -->
      <class name="com.h3xstream.findsecbugs.password.IntuitiveHardcodePasswordDetectorTest">
        <test-method status="PASS" signature="detectHardCodePasswordsAndKeys()[pri:0, instance:com.h3xstream.findsecbugs.password.IntuitiveHardcodePasswordDetectorTest@1efee8e7]" name="detectHardCodePasswordsAndKeys" duration-ms="314" started-at="2018-06-06T00:02:06Z" finished-at="2018-06-06T00:02:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectHardCodePasswordsAndKeys -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.password.IntuitiveHardcodePasswordDetectorTest@1efee8e7]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:06Z" finished-at="2018-06-06T00:02:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.password.IntuitiveHardcodePasswordDetectorTest@1efee8e7]" name="after" is-config="true" duration-ms="1469" started-at="2018-06-06T00:02:07Z" finished-at="2018-06-06T00:02:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.password.IntuitiveHardcodePasswordDetectorTest -->
      <class name="com.h3xstream.findsecbugs.xml.StdXmlTransformDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.xml.StdXmlTransformDetectorTest@365c30cc]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:02:42Z" finished-at="2018-06-06T00:02:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="xslt1SafeStaticResource()[pri:0, instance:com.h3xstream.findsecbugs.xml.StdXmlTransformDetectorTest@365c30cc]" name="xslt1SafeStaticResource" duration-ms="360" started-at="2018-06-06T00:02:42Z" finished-at="2018-06-06T00:02:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xslt1SafeStaticResource -->
        <test-method status="PASS" signature="traceCalls()[pri:0, instance:com.h3xstream.findsecbugs.xml.StdXmlTransformDetectorTest@365c30cc]" name="traceCalls" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:42Z" finished-at="2018-06-06T00:02:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- traceCalls -->
        <test-method status="PASS" signature="xslt2UnsafeResource()[pri:0, instance:com.h3xstream.findsecbugs.xml.StdXmlTransformDetectorTest@365c30cc]" name="xslt2UnsafeResource" duration-ms="367" started-at="2018-06-06T00:02:42Z" finished-at="2018-06-06T00:02:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xslt2UnsafeResource -->
        <test-method status="PASS" signature="xslt3UnsafeResource()[pri:0, instance:com.h3xstream.findsecbugs.xml.StdXmlTransformDetectorTest@365c30cc]" name="xslt3UnsafeResource" duration-ms="367" started-at="2018-06-06T00:02:43Z" finished-at="2018-06-06T00:02:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xslt3UnsafeResource -->
        <test-method status="PASS" signature="xslt4UnsafeResource()[pri:0, instance:com.h3xstream.findsecbugs.xml.StdXmlTransformDetectorTest@365c30cc]" name="xslt4UnsafeResource" duration-ms="378" started-at="2018-06-06T00:02:43Z" finished-at="2018-06-06T00:02:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xslt4UnsafeResource -->
        <test-method status="PASS" signature="xslt5SafeResource()[pri:0, instance:com.h3xstream.findsecbugs.xml.StdXmlTransformDetectorTest@365c30cc]" name="xslt5SafeResource" duration-ms="372" started-at="2018-06-06T00:02:43Z" finished-at="2018-06-06T00:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xslt5SafeResource -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.xml.StdXmlTransformDetectorTest@365c30cc]" name="after" is-config="true" duration-ms="865" started-at="2018-06-06T00:02:44Z" finished-at="2018-06-06T00:02:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.xml.StdXmlTransformDetectorTest -->
      <class name="com.h3xstream.findsecbugs.scala.ScalaSqlInjectionAnormDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.scala.ScalaSqlInjectionAnormDetectorTest@76b10754]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:01:15Z" finished-at="2018-06-06T00:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectSqlInjection()[pri:0, instance:com.h3xstream.findsecbugs.scala.ScalaSqlInjectionAnormDetectorTest@76b10754]" name="detectSqlInjection" duration-ms="4519" started-at="2018-06-06T00:01:15Z" finished-at="2018-06-06T00:01:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectSqlInjection -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.scala.ScalaSqlInjectionAnormDetectorTest@76b10754]" name="after" is-config="true" duration-ms="1180" started-at="2018-06-06T00:01:19Z" finished-at="2018-06-06T00:01:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.scala.ScalaSqlInjectionAnormDetectorTest -->
      <class name="com.h3xstream.findsecbugs.injection.sql.JdbcInjectionSourceTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.JdbcInjectionSourceTest@48a242ce]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:41Z" finished-at="2018-06-06T00:00:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectBasicJdbcInjection()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.JdbcInjectionSourceTest@48a242ce]" name="detectBasicJdbcInjection" duration-ms="373" started-at="2018-06-06T00:00:41Z" finished-at="2018-06-06T00:00:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectBasicJdbcInjection -->
        <test-method status="PASS" signature="detectExecuteExecuteLargeUpdate()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.JdbcInjectionSourceTest@48a242ce]" name="detectExecuteExecuteLargeUpdate" duration-ms="370" started-at="2018-06-06T00:00:42Z" finished-at="2018-06-06T00:00:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectExecuteExecuteLargeUpdate -->
        <test-method status="PASS" signature="detectExecutePrepareCall()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.JdbcInjectionSourceTest@48a242ce]" name="detectExecutePrepareCall" duration-ms="368" started-at="2018-06-06T00:00:42Z" finished-at="2018-06-06T00:00:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectExecutePrepareCall -->
        <test-method status="PASS" signature="detectExecuteQuery()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.JdbcInjectionSourceTest@48a242ce]" name="detectExecuteQuery" duration-ms="350" started-at="2018-06-06T00:00:42Z" finished-at="2018-06-06T00:00:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectExecuteQuery -->
        <test-method status="PASS" signature="detectExecuteUpdate()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.JdbcInjectionSourceTest@48a242ce]" name="detectExecuteUpdate" duration-ms="359" started-at="2018-06-06T00:00:43Z" finished-at="2018-06-06T00:00:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectExecuteUpdate -->
        <test-method status="PASS" signature="detectNativeSqlAndOther()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.JdbcInjectionSourceTest@48a242ce]" name="detectNativeSqlAndOther" duration-ms="372" started-at="2018-06-06T00:00:43Z" finished-at="2018-06-06T00:00:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectNativeSqlAndOther -->
        <test-method status="PASS" signature="detectPrepareStatement()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.JdbcInjectionSourceTest@48a242ce]" name="detectPrepareStatement" duration-ms="356" started-at="2018-06-06T00:00:43Z" finished-at="2018-06-06T00:00:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectPrepareStatement -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.JdbcInjectionSourceTest@48a242ce]" name="after" is-config="true" duration-ms="826" started-at="2018-06-06T00:00:44Z" finished-at="2018-06-06T00:00:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.sql.JdbcInjectionSourceTest -->
      <class name="com.h3xstream.findsecbugs.injection.stringbuilder.InjectionWithStringBuilderTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.stringbuilder.InjectionWithStringBuilderTest@dbd940d]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:01:02Z" finished-at="2018-06-06T00:01:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="avoidFalsePositive()[pri:0, instance:com.h3xstream.findsecbugs.injection.stringbuilder.InjectionWithStringBuilderTest@dbd940d]" name="avoidFalsePositive" duration-ms="325" started-at="2018-06-06T00:01:02Z" finished-at="2018-06-06T00:01:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avoidFalsePositive -->
        <test-method status="PASS" signature="detectSuspiciousCase()[pri:0, instance:com.h3xstream.findsecbugs.injection.stringbuilder.InjectionWithStringBuilderTest@dbd940d]" name="detectSuspiciousCase" duration-ms="349" started-at="2018-06-06T00:01:02Z" finished-at="2018-06-06T00:01:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectSuspiciousCase -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.stringbuilder.InjectionWithStringBuilderTest@dbd940d]" name="after" is-config="true" duration-ms="727" started-at="2018-06-06T00:01:03Z" finished-at="2018-06-06T00:01:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.stringbuilder.InjectionWithStringBuilderTest -->
      <class name="com.h3xstream.findsecbugs.cookie.UrlRewritingDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.cookie.UrlRewritingDetectorTest@62fdb4a6]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:03:04Z" finished-at="2018-06-06T00:03:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectUrlRewriting()[pri:0, instance:com.h3xstream.findsecbugs.cookie.UrlRewritingDetectorTest@62fdb4a6]" name="detectUrlRewriting" duration-ms="295" started-at="2018-06-06T00:03:04Z" finished-at="2018-06-06T00:03:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectUrlRewriting -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.cookie.UrlRewritingDetectorTest@62fdb4a6]" name="after" is-config="true" duration-ms="606" started-at="2018-06-06T00:03:05Z" finished-at="2018-06-06T00:03:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.cookie.UrlRewritingDetectorTest -->
      <class name="com.h3xstream.findsecbugs.xml.XmlStreamReaderDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.xml.XmlStreamReaderDetectorTest@4148db48]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:02:47Z" finished-at="2018-06-06T00:02:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="avoidFPWithFilteredReader()[pri:0, instance:com.h3xstream.findsecbugs.xml.XmlStreamReaderDetectorTest@4148db48]" name="avoidFPWithFilteredReader" duration-ms="316" started-at="2018-06-06T00:02:47Z" finished-at="2018-06-06T00:02:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avoidFPWithFilteredReader -->
        <test-method status="PASS" signature="avoidFPWithXMLEventReader()[pri:0, instance:com.h3xstream.findsecbugs.xml.XmlStreamReaderDetectorTest@4148db48]" name="avoidFPWithXMLEventReader" duration-ms="310" started-at="2018-06-06T00:02:48Z" finished-at="2018-06-06T00:02:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avoidFPWithXMLEventReader -->
        <test-method status="PASS" signature="avoidFPWithXMLStreamReader()[pri:0, instance:com.h3xstream.findsecbugs.xml.XmlStreamReaderDetectorTest@4148db48]" name="avoidFPWithXMLStreamReader" duration-ms="320" started-at="2018-06-06T00:02:48Z" finished-at="2018-06-06T00:02:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avoidFPWithXMLStreamReader -->
        <test-method status="PASS" signature="detectXxeWithFilteredReader()[pri:0, instance:com.h3xstream.findsecbugs.xml.XmlStreamReaderDetectorTest@4148db48]" name="detectXxeWithFilteredReader" duration-ms="264" started-at="2018-06-06T00:02:48Z" finished-at="2018-06-06T00:02:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXxeWithFilteredReader -->
        <test-method status="PASS" signature="detectXxeWithXMLEventReader()[pri:0, instance:com.h3xstream.findsecbugs.xml.XmlStreamReaderDetectorTest@4148db48]" name="detectXxeWithXMLEventReader" duration-ms="304" started-at="2018-06-06T00:02:49Z" finished-at="2018-06-06T00:02:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXxeWithXMLEventReader -->
        <test-method status="PASS" signature="detectXxeWithXMLStreamReader()[pri:0, instance:com.h3xstream.findsecbugs.xml.XmlStreamReaderDetectorTest@4148db48]" name="detectXxeWithXMLStreamReader" duration-ms="302" started-at="2018-06-06T00:02:49Z" finished-at="2018-06-06T00:02:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXxeWithXMLStreamReader -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.xml.XmlStreamReaderDetectorTest@4148db48]" name="after" is-config="true" duration-ms="1774" started-at="2018-06-06T00:02:49Z" finished-at="2018-06-06T00:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.xml.XmlStreamReaderDetectorTest -->
      <class name="com.h3xstream.findsecbugs.crypto.HazelcastSymmetricEncryptionDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.crypto.HazelcastSymmetricEncryptionDetectorTest@77a57272]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:01:55Z" finished-at="2018-06-06T00:01:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectHazelcastSymmetric()[pri:0, instance:com.h3xstream.findsecbugs.crypto.HazelcastSymmetricEncryptionDetectorTest@77a57272]" name="detectHazelcastSymmetric" duration-ms="288" started-at="2018-06-06T00:01:55Z" finished-at="2018-06-06T00:01:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectHazelcastSymmetric -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.crypto.HazelcastSymmetricEncryptionDetectorTest@77a57272]" name="after" is-config="true" duration-ms="1314" started-at="2018-06-06T00:01:55Z" finished-at="2018-06-06T00:01:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.crypto.HazelcastSymmetricEncryptionDetectorTest -->
      <class name="com.h3xstream.findsecbugs.xml.SaxParserSafePropertyTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.xml.SaxParserSafePropertyTest@7fad8c79]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:53Z" finished-at="2018-06-06T00:02:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="avoidFalsePositiveOnSafeCases()[pri:0, instance:com.h3xstream.findsecbugs.xml.SaxParserSafePropertyTest@7fad8c79]" name="avoidFalsePositiveOnSafeCases" duration-ms="328" started-at="2018-06-06T00:02:53Z" finished-at="2018-06-06T00:02:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avoidFalsePositiveOnSafeCases -->
        <test-method status="PASS" signature="detectUnsafeNoSpecialSettings()[pri:0, instance:com.h3xstream.findsecbugs.xml.SaxParserSafePropertyTest@7fad8c79]" name="detectUnsafeNoSpecialSettings" duration-ms="328" started-at="2018-06-06T00:02:53Z" finished-at="2018-06-06T00:02:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectUnsafeNoSpecialSettings -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.xml.SaxParserSafePropertyTest@7fad8c79]" name="after" is-config="true" duration-ms="664" started-at="2018-06-06T00:02:53Z" finished-at="2018-06-06T00:02:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.xml.SaxParserSafePropertyTest -->
      <class name="com.h3xstream.findsecbugs.xss.XssServletDetectorTest">
        <test-method status="PASS" signature="detectXssServlet1()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="detectXssServlet1" duration-ms="404" started-at="2018-06-06T00:00:17Z" finished-at="2018-06-06T00:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXssServlet1 -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:17Z" finished-at="2018-06-06T00:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:17Z" finished-at="2018-06-06T00:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="afterTest" is-config="true" duration-ms="1" started-at="2018-06-06T00:00:17Z" finished-at="2018-06-06T00:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:17Z" finished-at="2018-06-06T00:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="detectXssServlet6()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="detectXssServlet6" duration-ms="314" started-at="2018-06-06T00:00:17Z" finished-at="2018-06-06T00:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXssServlet6 -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:17Z" finished-at="2018-06-06T00:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="detectXssServlet6_hideByDefault()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="detectXssServlet6_hideByDefault" duration-ms="313" started-at="2018-06-06T00:00:17Z" finished-at="2018-06-06T00:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXssServlet6_hideByDefault -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:17Z" finished-at="2018-06-06T00:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:18Z" finished-at="2018-06-06T00:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:18Z" finished-at="2018-06-06T00:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="detectXssServlet7()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="detectXssServlet7" duration-ms="361" started-at="2018-06-06T00:00:18Z" finished-at="2018-06-06T00:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXssServlet7 -->
        <test-method status="PASS" signature="detectXssServlet_basicTaintAnalysis()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="detectXssServlet_basicTaintAnalysis" duration-ms="315" started-at="2018-06-06T00:00:18Z" finished-at="2018-06-06T00:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXssServlet_basicTaintAnalysis -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:18Z" finished-at="2018-06-06T00:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:18Z" finished-at="2018-06-06T00:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:18Z" finished-at="2018-06-06T00:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:18Z" finished-at="2018-06-06T00:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="detectXssServlet_safeEncoders()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="detectXssServlet_safeEncoders" duration-ms="383" started-at="2018-06-06T00:00:18Z" finished-at="2018-06-06T00:00:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXssServlet_safeEncoders -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:19Z" finished-at="2018-06-06T00:00:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:19Z" finished-at="2018-06-06T00:00:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="detectXssServlet_separateMethodBasic()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="detectXssServlet_separateMethodBasic" duration-ms="319" started-at="2018-06-06T00:00:19Z" finished-at="2018-06-06T00:00:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXssServlet_separateMethodBasic -->
        <test-method status="PASS" signature="detectXssServlet_variousMethodSignatures()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="detectXssServlet_variousMethodSignatures" duration-ms="646" started-at="2018-06-06T00:00:19Z" finished-at="2018-06-06T00:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXssServlet_variousMethodSignatures -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:19Z" finished-at="2018-06-06T00:00:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:19Z" finished-at="2018-06-06T00:00:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:20Z" finished-at="2018-06-06T00:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.xss.XssServletDetectorTest@80169cf]" name="after" is-config="true" duration-ms="479" started-at="2018-06-06T00:00:20Z" finished-at="2018-06-06T00:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.xss.XssServletDetectorTest -->
      <class name="com.h3xstream.findsecbugs.password.GoogleApiKeyDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.password.GoogleApiKeyDetectorTest@1ee807c6]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:02:08Z" finished-at="2018-06-06T00:02:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectHardCodeApiKey()[pri:0, instance:com.h3xstream.findsecbugs.password.GoogleApiKeyDetectorTest@1ee807c6]" name="detectHardCodeApiKey" duration-ms="412" started-at="2018-06-06T00:02:08Z" finished-at="2018-06-06T00:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectHardCodeApiKey -->
        <test-method status="PASS" signature="detectHardCodeApiKeyWithClassRename()[pri:0, instance:com.h3xstream.findsecbugs.password.GoogleApiKeyDetectorTest@1ee807c6]" name="detectHardCodeApiKeyWithClassRename" duration-ms="390" started-at="2018-06-06T00:02:09Z" finished-at="2018-06-06T00:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectHardCodeApiKeyWithClassRename -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.password.GoogleApiKeyDetectorTest@1ee807c6]" name="after" is-config="true" duration-ms="1402" started-at="2018-06-06T00:02:09Z" finished-at="2018-06-06T00:02:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.password.GoogleApiKeyDetectorTest -->
      <class name="com.h3xstream.findsecbugs.scala.ScalaSqlInjectionSlickDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.scala.ScalaSqlInjectionSlickDetectorTest@17695df3]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:01:04Z" finished-at="2018-06-06T00:01:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectSqlInjection()[pri:0, instance:com.h3xstream.findsecbugs.scala.ScalaSqlInjectionSlickDetectorTest@17695df3]" name="detectSqlInjection" duration-ms="2899" started-at="2018-06-06T00:01:04Z" finished-at="2018-06-06T00:01:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectSqlInjection -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.scala.ScalaSqlInjectionSlickDetectorTest@17695df3]" name="after" is-config="true" duration-ms="2381" started-at="2018-06-06T00:01:07Z" finished-at="2018-06-06T00:01:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.scala.ScalaSqlInjectionSlickDetectorTest -->
      <class name="com.h3xstream.findsecbugs.injection.smtp.SmtpHeaderInjectionDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.smtp.SmtpHeaderInjectionDetectorTest@60438a68]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:59Z" finished-at="2018-06-06T00:00:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectSmtpInjection()[pri:0, instance:com.h3xstream.findsecbugs.injection.smtp.SmtpHeaderInjectionDetectorTest@60438a68]" name="detectSmtpInjection" duration-ms="362" started-at="2018-06-06T00:00:59Z" finished-at="2018-06-06T00:01:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectSmtpInjection -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.smtp.SmtpHeaderInjectionDetectorTest@60438a68]" name="after" is-config="true" duration-ms="825" started-at="2018-06-06T00:01:00Z" finished-at="2018-06-06T00:01:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.smtp.SmtpHeaderInjectionDetectorTest -->
      <class name="com.h3xstream.findsecbugs.injection.sql.SpringPreparedStatementCreatorFactoryTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.SpringPreparedStatementCreatorFactoryTest@43d7741f]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:00:34Z" finished-at="2018-06-06T00:00:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectJdbcInjection()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.SpringPreparedStatementCreatorFactoryTest@43d7741f]" name="detectJdbcInjection" duration-ms="294" started-at="2018-06-06T00:00:34Z" finished-at="2018-06-06T00:00:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectJdbcInjection -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.SpringPreparedStatementCreatorFactoryTest@43d7741f]" name="after" is-config="true" duration-ms="705" started-at="2018-06-06T00:00:34Z" finished-at="2018-06-06T00:00:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.sql.SpringPreparedStatementCreatorFactoryTest -->
      <class name="com.h3xstream.findsecbugs.PermissiveCORSDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.PermissiveCORSDetectorTest@6b0c2d26]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:04:07Z" finished-at="2018-06-06T00:04:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectPermissiveCORS()[pri:0, instance:com.h3xstream.findsecbugs.PermissiveCORSDetectorTest@6b0c2d26]" name="detectPermissiveCORS" duration-ms="294" started-at="2018-06-06T00:04:07Z" finished-at="2018-06-06T00:04:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectPermissiveCORS -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.PermissiveCORSDetectorTest@6b0c2d26]" name="after" is-config="true" duration-ms="2122" started-at="2018-06-06T00:04:07Z" finished-at="2018-06-06T00:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.PermissiveCORSDetectorTest -->
      <class name="com.h3xstream.findsecbugs.xss.JspXssFsaDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssFsaDetectorTest@5fcd892a]" name="before" is-config="true" duration-ms="2" started-at="2018-06-06T00:00:06Z" finished-at="2018-06-06T00:00:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="FAIL" signature="test()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssFsaDetectorTest@5fcd892a]" name="test" duration-ms="732" started-at="2018-06-06T00:00:06Z" finished-at="2018-06-06T00:00:07Z">
          <exception class="org.mockito.exceptions.verification.NeverWantedButInvoked">
            <message>
              <![CDATA[
securityReporter.doReportBug(
    BugInstance with:
bugType="XSS_JSP_PRINT",
);
Never wanted here:
-> at com.h3xstream.findsecbugs.xss.JspXssFsaDetectorTest.test(JspXssFsaDetectorTest.java:65)
But invoked here:
-> at edu.umd.cs.findbugs.AbstractBugReporter.reportBug(AbstractBugReporter.java:192)
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.mockito.exceptions.verification.NeverWantedButInvoked: 
securityReporter.doReportBug(
    BugInstance with:
bugType="XSS_JSP_PRINT",
);
Never wanted here:
-> at com.h3xstream.findsecbugs.xss.JspXssFsaDetectorTest.test(JspXssFsaDetectorTest.java:65)
But invoked here:
-> at edu.umd.cs.findbugs.AbstractBugReporter.reportBug(AbstractBugReporter.java:192)

	at com.h3xstream.findsecbugs.xss.JspXssFsaDetectorTest.test(JspXssFsaDetectorTest.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]>
            </full-stacktrace>
          </exception> <!-- org.mockito.exceptions.verification.NeverWantedButInvoked -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssFsaDetectorTest@5fcd892a]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:06Z" finished-at="2018-06-06T00:00:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssFsaDetectorTest@5fcd892a]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:07Z" finished-at="2018-06-06T00:00:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.xss.JspXssFsaDetectorTest@5fcd892a]" name="after" is-config="true" duration-ms="176" started-at="2018-06-06T00:00:07Z" finished-at="2018-06-06T00:00:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.xss.JspXssFsaDetectorTest -->
      <class name="com.h3xstream.findsecbugs.serial.ObjectDeserializationDetectorTest">
        <test-method status="PASS" signature="avoidReadObjectFalsePositive()[pri:0, instance:com.h3xstream.findsecbugs.serial.ObjectDeserializationDetectorTest@4ba2ca36]" name="avoidReadObjectFalsePositive" duration-ms="456" started-at="2018-06-06T00:03:18Z" finished-at="2018-06-06T00:03:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avoidReadObjectFalsePositive -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.serial.ObjectDeserializationDetectorTest@4ba2ca36]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:18Z" finished-at="2018-06-06T00:03:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectObjectDeserialization()[pri:0, instance:com.h3xstream.findsecbugs.serial.ObjectDeserializationDetectorTest@4ba2ca36]" name="detectObjectDeserialization" duration-ms="374" started-at="2018-06-06T00:03:19Z" finished-at="2018-06-06T00:03:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectObjectDeserialization -->
        <test-method status="PASS" signature="detectObjectDeserializationClassLoaderObjectInputStream()[pri:0, instance:com.h3xstream.findsecbugs.serial.ObjectDeserializationDetectorTest@4ba2ca36]" name="detectObjectDeserializationClassLoaderObjectInputStream" duration-ms="503" started-at="2018-06-06T00:03:19Z" finished-at="2018-06-06T00:03:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectObjectDeserializationClassLoaderObjectInputStream -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.serial.ObjectDeserializationDetectorTest@4ba2ca36]" name="after" is-config="true" duration-ms="1773" started-at="2018-06-06T00:03:20Z" finished-at="2018-06-06T00:03:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.serial.ObjectDeserializationDetectorTest -->
      <class name="com.h3xstream.findsecbugs.cookie.CookieReadDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.cookie.CookieReadDetectorTest@b59d31]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:03:01Z" finished-at="2018-06-06T00:03:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectCookieUsage()[pri:0, instance:com.h3xstream.findsecbugs.cookie.CookieReadDetectorTest@b59d31]" name="detectCookieUsage" duration-ms="291" started-at="2018-06-06T00:03:01Z" finished-at="2018-06-06T00:03:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectCookieUsage -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.cookie.CookieReadDetectorTest@b59d31]" name="after" is-config="true" duration-ms="2772" started-at="2018-06-06T00:03:01Z" finished-at="2018-06-06T00:03:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.cookie.CookieReadDetectorTest -->
      <class name="com.h3xstream.findsecbugs.injection.sql.JpaInjectionSourceTest">
        <test-method status="PASS" signature="detectJpaInjection()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.JpaInjectionSourceTest@5f71c76a]" name="detectJpaInjection" duration-ms="322" started-at="2018-06-06T00:00:37Z" finished-at="2018-06-06T00:00:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectJpaInjection -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.JpaInjectionSourceTest@5f71c76a]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:00:37Z" finished-at="2018-06-06T00:00:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectJpaInjectionInNativeQuery()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.JpaInjectionSourceTest@5f71c76a]" name="detectJpaInjectionInNativeQuery" duration-ms="317" started-at="2018-06-06T00:00:38Z" finished-at="2018-06-06T00:00:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectJpaInjectionInNativeQuery -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.injection.sql.JpaInjectionSourceTest@5f71c76a]" name="after" is-config="true" duration-ms="764" started-at="2018-06-06T00:00:38Z" finished-at="2018-06-06T00:00:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.injection.sql.JpaInjectionSourceTest -->
      <class name="com.h3xstream.findsecbugs.common.ByteCodeTest">
        <test-method status="PASS" signature="probeByteCodeDebug()[pri:0, instance:com.h3xstream.findsecbugs.common.ByteCodeTest@1dd02175]" name="probeByteCodeDebug" duration-ms="41" started-at="2018-06-06T00:03:07Z" finished-at="2018-06-06T00:03:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- probeByteCodeDebug -->
      </class> <!-- com.h3xstream.findsecbugs.common.ByteCodeTest -->
      <class name="com.h3xstream.findsecbugs.xml.XxeDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.xml.XxeDetectorTest@71a794e5]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:02:54Z" finished-at="2018-06-06T00:02:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectXxe()[pri:0, instance:com.h3xstream.findsecbugs.xml.XxeDetectorTest@71a794e5]" name="detectXxe" duration-ms="298" started-at="2018-06-06T00:02:54Z" finished-at="2018-06-06T00:02:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXxe -->
        <test-method status="PASS" signature="detectXxeFromDocumentBuilder()[pri:0, instance:com.h3xstream.findsecbugs.xml.XxeDetectorTest@71a794e5]" name="detectXxeFromDocumentBuilder" duration-ms="283" started-at="2018-06-06T00:02:54Z" finished-at="2018-06-06T00:02:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectXxeFromDocumentBuilder -->
        <test-method status="PASS" signature="safeWithUseOfEntityResolver()[pri:0, instance:com.h3xstream.findsecbugs.xml.XxeDetectorTest@71a794e5]" name="safeWithUseOfEntityResolver" duration-ms="307" started-at="2018-06-06T00:02:55Z" finished-at="2018-06-06T00:02:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- safeWithUseOfEntityResolver -->
        <test-method status="PASS" signature="safeWithUseOfPrivilegeExceptionAction()[pri:0, instance:com.h3xstream.findsecbugs.xml.XxeDetectorTest@71a794e5]" name="safeWithUseOfPrivilegeExceptionAction" duration-ms="339" started-at="2018-06-06T00:02:55Z" finished-at="2018-06-06T00:02:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- safeWithUseOfPrivilegeExceptionAction -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.xml.XxeDetectorTest@71a794e5]" name="after" is-config="true" duration-ms="1799" started-at="2018-06-06T00:02:55Z" finished-at="2018-06-06T00:02:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.xml.XxeDetectorTest -->
      <class name="com.h3xstream.findsecbugs.crypto.CustomMessageDigestDetectorTest">
        <test-method status="PASS" signature="detectCustomDigest()[pri:0, instance:com.h3xstream.findsecbugs.crypto.CustomMessageDigestDetectorTest@130f889]" name="detectCustomDigest" duration-ms="368" started-at="2018-06-06T00:01:43Z" finished-at="2018-06-06T00:01:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectCustomDigest -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.crypto.CustomMessageDigestDetectorTest@130f889]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:01:43Z" finished-at="2018-06-06T00:01:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.crypto.CustomMessageDigestDetectorTest@130f889]" name="after" is-config="true" duration-ms="860" started-at="2018-06-06T00:01:43Z" finished-at="2018-06-06T00:01:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.crypto.CustomMessageDigestDetectorTest -->
      <class name="com.h3xstream.findsecbugs.template.FreemarkerDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.template.FreemarkerDetectorTest@49070868]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:04:22Z" finished-at="2018-06-06T00:04:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="allSignatures()[pri:0, instance:com.h3xstream.findsecbugs.template.FreemarkerDetectorTest@49070868]" name="allSignatures" duration-ms="348" started-at="2018-06-06T00:04:22Z" finished-at="2018-06-06T00:04:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allSignatures -->
        <test-method status="PASS" signature="basicUsagesTesting()[pri:0, instance:com.h3xstream.findsecbugs.template.FreemarkerDetectorTest@49070868]" name="basicUsagesTesting" duration-ms="330" started-at="2018-06-06T00:04:23Z" finished-at="2018-06-06T00:04:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicUsagesTesting -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.template.FreemarkerDetectorTest@49070868]" name="after" is-config="true" duration-ms="780" started-at="2018-06-06T00:04:23Z" finished-at="2018-06-06T00:04:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.template.FreemarkerDetectorTest -->
      <class name="com.h3xstream.findsecbugs.crypto.InsecureSmtpSslDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.crypto.InsecureSmtpSslDetectorTest@70a9f84e]" name="before" is-config="true" duration-ms="1" started-at="2018-06-06T00:01:41Z" finished-at="2018-06-06T00:01:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectBadKeySize()[pri:0, instance:com.h3xstream.findsecbugs.crypto.InsecureSmtpSslDetectorTest@70a9f84e]" name="detectBadKeySize" duration-ms="294" started-at="2018-06-06T00:01:41Z" finished-at="2018-06-06T00:01:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectBadKeySize -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.crypto.InsecureSmtpSslDetectorTest@70a9f84e]" name="after" is-config="true" duration-ms="1397" started-at="2018-06-06T00:01:41Z" finished-at="2018-06-06T00:01:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.crypto.InsecureSmtpSslDetectorTest -->
      <class name="com.h3xstream.findsecbugs.endpoint.SpringMvcEndpointDetectorTest">
        <test-method status="PASS" signature="before()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.SpringMvcEndpointDetectorTest@12028586]" name="before" is-config="true" duration-ms="0" started-at="2018-06-06T00:02:26Z" finished-at="2018-06-06T00:02:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="detectSpringController()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.SpringMvcEndpointDetectorTest@12028586]" name="detectSpringController" duration-ms="324" started-at="2018-06-06T00:02:26Z" finished-at="2018-06-06T00:02:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectSpringController -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.h3xstream.findsecbugs.endpoint.SpringMvcEndpointDetectorTest@12028586]" name="after" is-config="true" duration-ms="1873" started-at="2018-06-06T00:02:26Z" finished-at="2018-06-06T00:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.h3xstream.findsecbugs.endpoint.SpringMvcEndpointDetectorTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
