function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 30-Aug-2018 17:07:41.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx1 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx1 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = 3.62e-05;
x1_step1.gain = 0.31831251078781;
x1_step1.ymin = -1;

% Layer 1
b1 = [-140.61797804686918312;137.15278164745137701;134.28074048526931961;-131.56518353221508733;-128.63480497256068702;125.86718800926395545;-123.03587705148210318;-120.18709959251930286;117.39260802853490873;-114.4973136971552492;111.77320092126956297;108.86866572659748442;106.12105109299339745;-103.11566356317148063;-100.43345774315287144;97.546284075027330118;-94.791172821586116015;-91.905997914165681095;-89.162389169804825428;86.306535346559584809;83.439610546074220565;80.649408718883947245;77.77609820848604727;-74.931848410769376301;-72.092098275034672383;-69.310883223933458908;-66.406546424355838099;-63.770575051885224127;-60.815119969877962092;-57.90625459253859475;55.221875120649777102;52.326481004102014083;-49.424160836217396309;-46.694022667689928596;43.888824819674475464;41.011671677841455619;38.194424618927904191;-35.375798046766185223;-32.480928203022088496;-29.668187603075576675;26.854477614469111302;24.018362670531868019;21.194819353029682674;18.345695841756622713;-15.561581969215126264;-12.803531333642329315;9.8586172573776931216;-7.1495959934883943632;-4.3346957331109088329;-1.3856157340057890792;1.4919011871798240065;4.0821920542095817552;-7.1045644768594762297;-9.9289471281936627634;-12.672736401161607489;15.594537841378246057;-18.298084896565260493;21.151102724362395691;24.047448484396777957;-26.921537710546843414;29.758600871501634799;32.45384344809662025;35.326472230237463634;-38.241064298168090829;40.977272611180168838;43.868240767154503601;-46.742903526629646649;49.417702043874875528;52.301437583064945613;-55.188359924571663839;57.89519008956816748;-60.904219251449625006;-63.575390248900099266;-66.526688331639761032;-69.256088708380133312;72.201680218124465682;74.88085866133997115;77.791907350770344465;80.615972591398190161;83.388566912163582856;86.300479308738147211;89.067577946137518552;91.869730169196827774;94.757967956050222824;97.588565252724578158;-100.38757930851976141;103.30579547029522303;105.97823415126983093;-108.83738042268763024;111.78514862211117986;-114.5590519258123976;117.31736706607452447;120.22281578240543354;122.96097226402859803;125.88972179704553866;128.76896404156150311;131.53019880832979993;-134.33164675397023302;137.2022237487931875;-140.12956854408503204];
IW1_1 = [139.38281707870720538;-140.01741511940855389;-140.05764114755771743;139.9510493582102697;140.04771152307733928;-139.99210882479420093;139.99485991627713588;140.01188464143174883;-139.98397148689397795;140.03665887716101679;-139.95386037804018997;-140.01378221024336312;-139.95296331868252082;140.08545125301540679;139.97874336302788834;-140.02054472263017715;139.97007715315700693;140.00751670290841844;139.95419581320905422;-139.97104155301730088;-139.99620148445364975;-139.97325239187350121;-140.0013129655079922;140.00845537929069451;140.01511429639634798;139.99119420892773746;140.0255271806727535;139.9369514729439743;139.99667429885556658;140.02950847463225159;-139.97209388766731308;-139.99881757049982411;140.02345700357849978;139.98855429716496701;-139.98209931641639514;-139.99932887672460424;-139.99684858106951424;139.99365204201461665;140.01017583027083901;140.00576678437911937;-140.00146814973979303;-140.00321741876138049;-140.00239319670404825;-140.00350449030085542;139.99628355436408356;139.99120893142080035;-139.99914894100348306;139.9924159376105024;139.99694966604400292;140.00041904373367174;139.99750979580852572;140.00366439553749842;-139.99666223675311016;-139.9977829941798575;-140.00464305533887455;139.99540531548802846;-140.010132830958554;140.00914169445832158;139.99683766446520394;-139.98946516340038215;139.98526806818188106;140.01386793314958368;140.00694402244548087;-139.98311786375111865;140.00985072616458638;139.99040334302213751;-139.97274198490686103;140.02502265765147627;140.00793941574929136;-139.98381608157041001;140.03389629799224281;-139.95764162170783607;-140.0255274785828874;-139.97040553842896315;-140.01812264011934417;139.95753350683460781;140.03589442742946858;139.99083842020482393;139.99469889169361636;140.02656116651539264;139.9756143155879613;140.01468868560166925;140.03244695295342126;139.99140074960862989;139.99085581065236283;-140.01174160791819645;139.94433702861783786;140.06173978916140754;-140.03951701832440335;139.94442359996452296;-139.98860027833691788;140.04712622576121817;139.97938659465205546;140.05989530418469258;139.97106473241041158;139.92212290004744091;139.98481575182745473;-140.00934849337122046;139.96840286153496891;-139.86970602470776726];

% Layer 2
b2 = -0.071245794798863698594;
LW2_1 = [-0.052483641426360055915 -0.025406997684158705991 -0.017171378042489044563 0.026063955790834036907 0.023288747102575581976 -0.015191123898073444556 0.027061006196872783996 0.018243378744740752773 -0.019633580029305958137 0.019035589677041574175 -0.015794183520111863134 -0.020009222350341530211 -0.017409966126284613652 0.016471755029468918008 0.010845839532365970231 -0.014054678794860452767 0.0113844475699350859 0.013189227610201709889 0.008477846298823935034 -0.0099881319274335456787 -0.0037478594339210324383 -0.0068109574663735381744 -0.0023751685507403517451 0.0056632752759766822118 0.00020999753488979219654 0.00016948314411278139063 -0.00035140125682038081747 -0.0071689097594320357054 -0.0033503993384747738152 -0.0029980282616273046942 0.0097945358892386254895 0.012285514708589359914 -0.0072175592605331594098 -0.0096955239506317618392 0.012823555772949900636 0.014580247317259816681 0.014910569531121303441 -0.01705734702337413991 -0.015243758368607134013 -0.01872709237906793403 0.018398790410333432099 0.023214380823515522873 0.018041056194535755319 0.022657312404714698151 -0.016965914688574387087 -0.024502366150497389974 0.02343752846599381906 -0.016396281168334542883 -0.027506882672377643007 -0.022011325083262849728 -0.024362173094949989699 -0.019898069102142222631 0.025696480733225092463 0.019256915718988559111 0.022194588996048682239 -0.021334357641342456546 0.020243627172646636719 -0.020302310503032341971 -0.021270624870867445994 0.015716768114972069076 -0.020900370979014974704 -0.017324138847109232797 -0.012808073486883448169 0.016023711216259804713 -0.013890826077785295781 -0.012019283473174035073 0.015474468337360922088 -0.0062499212316238419301 -0.0097016965366563245182 0.0077995683138294838802 -0.0058941825823747391253 0.0042222828120013879485 0.0029135258623219336196 0.00082183276557626166146 0.0018831988941312056973 0.0042475667937510305436 -0.0016123628676026817517 0.0040427309342300687608 0.00069189764779774222576 0.012921292570910333786 0.0058087619183074387305 0.0090329096619430702259 0.016122582947190603614 0.0093566348155259618236 0.0093684691875478148804 -0.018821330551898839828 0.01169634015961149541 0.019065073888090831866 -0.014326338290923029684 0.02631862905748220266 -0.011946347596948386077 0.023036575719365872533 0.019490098698845076397 0.021709240739201867559 0.019470661923787234426 0.026144206862302548505 0.018287184866307100439 -0.025598245662512883469 0.023393279200171313015 -0.014928098780299908777];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.715765689228962;
y1_step1.xoffset = -1.39593126188882;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
