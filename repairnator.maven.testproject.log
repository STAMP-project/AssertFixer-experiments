[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO] 
[INFO] ActiveEngine
[INFO] AE/annotation-processor
[INFO] AE/db
[INFO] AE/db-metadata
[INFO] AE/db-processor
[INFO] AE/web
[INFO] AE/web-metadata
[INFO] AE/web-processor
[INFO] AE/web-test
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building ActiveEngine 0.1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-enforcer-plugin:3.0.0-M1:enforce (enforce-maven) @ ae ---
[INFO] Skipping Rule Enforcement.
[INFO] 
[INFO] --- maven-dependency-plugin:3.0.2:properties (default) @ ae ---
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building AE/annotation-processor 0.1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-enforcer-plugin:3.0.0-M1:enforce (enforce-maven) @ annotation-processor ---
[INFO] Skipping Rule Enforcement.
[INFO] 
[INFO] --- maven-dependency-plugin:3.0.2:properties (default) @ annotation-processor ---
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:resources (default-resources) @ annotation-processor ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/matero/ae/435127099/annotation-processor/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ annotation-processor ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:testResources (default-testResources) @ annotation-processor ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/matero/ae/435127099/annotation-processor/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ annotation-processor ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.20.1:test (default-test) @ annotation-processor ---
[INFO] No tests to run.
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building AE/db 0.1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-enforcer-plugin:3.0.0-M1:enforce (enforce-maven) @ db ---
[INFO] Skipping Rule Enforcement.
[INFO] 
[INFO] --- maven-dependency-plugin:3.0.2:properties (default) @ db ---
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:resources (default-resources) @ db ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/matero/ae/435127099/db/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ db ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:testResources (default-testResources) @ db ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/matero/ae/435127099/db/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ db ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.20.1:test (default-test) @ db ---
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng/2.20.1/surefire-testng-2.20.1.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng/2.20.1/surefire-testng-2.20.1.pom (3 KB at 6.5 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.20.1/surefire-providers-2.20.1.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.20.1/surefire-providers-2.20.1.pom (3 KB at 71.8 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/common-java5/2.20.1/common-java5-2.20.1.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/common-java5/2.20.1/common-java5-2.20.1.pom (3 KB at 70.7 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng-utils/2.20.1/surefire-testng-utils-2.20.1.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng-utils/2.20.1/surefire-testng-utils-2.20.1.pom (3 KB at 87.7 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-grouper/2.20.1/surefire-grouper-2.20.1.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-grouper/2.20.1/surefire-grouper-2.20.1.pom (3 KB at 80.2 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-grouper/2.20.1/surefire-grouper-2.20.1.jar
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/common-java5/2.20.1/common-java5-2.20.1.jar
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng/2.20.1/surefire-testng-2.20.1.jar
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng-utils/2.20.1/surefire-testng-utils-2.20.1.jar
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/common-java5/2.20.1/common-java5-2.20.1.jar (49 KB at 773.5 KB/sec)
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng-utils/2.20.1/surefire-testng-utils-2.20.1.jar (27 KB at 332.0 KB/sec)
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-grouper/2.20.1/surefire-grouper-2.20.1.jar (40 KB at 470.0 KB/sec)
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng/2.20.1/surefire-testng-2.20.1.jar (43 KB at 481.2 KB/sec)
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running TestSuite
[INFO] Tests run: 30, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.466 s - in TestSuite
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 30, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building AE/db-metadata 0.1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-enforcer-plugin:3.0.0-M1:enforce (enforce-maven) @ db-metadata ---
[INFO] Skipping Rule Enforcement.
[INFO] 
[INFO] --- maven-dependency-plugin:3.0.2:properties (default) @ db-metadata ---
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:resources (default-resources) @ db-metadata ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/matero/ae/435127099/db-metadata/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ db-metadata ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 3 source files to /root/workspace/matero/ae/435127099/db-metadata/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:testResources (default-testResources) @ db-metadata ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/matero/ae/435127099/db-metadata/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ db-metadata ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.20.1:test (default-test) @ db-metadata ---
[INFO] No tests to run.
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building AE/db-processor 0.1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-enforcer-plugin:3.0.0-M1:enforce (enforce-maven) @ db-processor ---
[INFO] Skipping Rule Enforcement.
[INFO] 
[INFO] --- maven-dependency-plugin:3.0.2:properties (default) @ db-processor ---
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:resources (default-resources) @ db-processor ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/matero/ae/435127099/db-processor/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ db-processor ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:testResources (default-testResources) @ db-processor ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 7 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ db-processor ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.20.1:test (default-test) @ db-processor ---
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running ae.db.processor.ModelAnnotationProcessorIntegrationTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.082 s - in ae.db.processor.ModelAnnotationProcessorIntegrationTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building AE/web 0.1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-enforcer-plugin:3.0.0-M1:enforce (enforce-maven) @ web ---
[INFO] Skipping Rule Enforcement.
[INFO] 
[INFO] --- maven-dependency-plugin:3.0.2:properties (default) @ web ---
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:resources (default-resources) @ web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/matero/ae/435127099/web/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ web ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:testResources (default-testResources) @ web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/matero/ae/435127099/web/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ web ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.20.1:test (default-test) @ web ---
[INFO] No tests to run.
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building AE/web-metadata 0.1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-enforcer-plugin:3.0.0-M1:enforce (enforce-maven) @ web-metadata ---
[INFO] Skipping Rule Enforcement.
[INFO] 
[INFO] --- maven-dependency-plugin:3.0.2:properties (default) @ web-metadata ---
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:resources (default-resources) @ web-metadata ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/matero/ae/435127099/web-metadata/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ web-metadata ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:testResources (default-testResources) @ web-metadata ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/matero/ae/435127099/web-metadata/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ web-metadata ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.20.1:test (default-test) @ web-metadata ---
[INFO] No tests to run.
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building AE/web-processor 0.1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-enforcer-plugin:3.0.0-M1:enforce (enforce-maven) @ web-processor ---
[INFO] Skipping Rule Enforcement.
[INFO] 
[INFO] --- maven-dependency-plugin:3.0.2:properties (default) @ web-processor ---
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:resources (default-resources) @ web-processor ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/matero/ae/435127099/web-processor/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ web-processor ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 7 source files to /root/workspace/matero/ae/435127099/web-processor/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:testResources (default-testResources) @ web-processor ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 4 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ web-processor ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.20.1:test (default-test) @ web-processor ---
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running ae.routes.processor.RoutesProcessingTest
[ERROR] Tests run: 2, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 2.36 s <<< FAILURE! - in ae.routes.processor.RoutesProcessingTest
[ERROR] should_compile_multiple_verb_routes on should_compile_multiple_verb_routes(ae.routes.processor.RoutesProcessingTest)(ae.routes.processor.RoutesProcessingTest)  Time elapsed: 1.679 s  <<< FAILURE!
com.google.common.truth.Truth$AssertionErrorWithCause: 
Not true that </SOURCE_OUTPUT/processor/test/SigexRouter.java> is equivalent to </root/workspace/matero/ae/435127099/web-processor/target/test-classes/generated/routes/SigexRouter.java>.

Diffs:
======

Found 32 nodes that differed in expected and actual trees. 

> Difference in expected tree and actual tree.
  Expected node: Line 24 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_ClientController_htmlIndex)->NEW_CLASS->STRING_LITERAL(app)
  Actual node: Line 24 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_ClientController_htmlIndex)->NEW_CLASS->STRING_LITERAL(/app)
  Expected literal value to be <app> but was </app>.

> Difference in expected tree and actual tree.
  Expected node: Line 26 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_ClientController_index)->NEW_CLASS->STRING_LITERAL(app/api/v1)
  Actual node: Line 26 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_ClientController_index)->NEW_CLASS->STRING_LITERAL(/app/api/v1)
  Expected literal value to be <app/api/v1> but was </app/api/v1>.

> Difference in expected tree and actual tree.
  Expected node: Line 28 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_index)->NEW_CLASS->STRING_LITERAL(app/api/v1/book)
  Actual node: Line 28 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_index)->NEW_CLASS->STRING_LITERAL(/app/api/v1/book)
  Expected literal value to be <app/api/v1/book> but was </app/api/v1/book>.

> Difference in expected tree and actual tree.
  Expected node: Line 30 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_bar)->NEW_CLASS->STRING_LITERAL(app/api/v1/book/bar/{id}/{cursor}/{arg})
  Actual node: Line 30 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_bar)->NEW_CLASS->STRING_LITERAL(/app/api/v1/book/bar/{id}/{cursor}/{arg})
  Expected literal value to be <app/api/v1/book/bar/{id}/{cursor}/{arg}> but was </app/api/v1/book/bar/{id}/{cursor}/{arg}>.

> Difference in expected tree and actual tree.
  Expected node: Line 30 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_bar)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(app/api/v1/book/bar/(?<p0>[^/]+)/(?<p1>[^/]+)/(?<p2>[^/]+))
  Actual node: Line 30 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_bar)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(/app/api/v1/book/bar/(?<p0>[^/]+)/(?<p1>[^/]+)/(?<p2>[^/]+))
  Expected literal value to be <app/api/v1/book/bar/(?<p0>[^/]+)/(?<p1>[^/]+)/(?<p2>[^/]+)> but was </app/api/v1/book/bar/(?<p0>[^/]+)/(?<p1>[^/]+)/(?<p2>[^/]+)>.

> Difference in expected tree and actual tree.
  Expected node: Line 32 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_create)->NEW_CLASS->STRING_LITERAL(app/api/v1/book/create)
  Actual node: Line 32 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_create)->NEW_CLASS->STRING_LITERAL(/app/api/v1/book/create)
  Expected literal value to be <app/api/v1/book/create> but was </app/api/v1/book/create>.

> Difference in expected tree and actual tree.
  Expected node: Line 34 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_foo)->NEW_CLASS->STRING_LITERAL(app/api/v1/book/foo/{id}/{arg})
  Actual node: Line 34 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_foo)->NEW_CLASS->STRING_LITERAL(/app/api/v1/book/foo/{id}/{arg})
  Expected literal value to be <app/api/v1/book/foo/{id}/{arg}> but was </app/api/v1/book/foo/{id}/{arg}>.

> Difference in expected tree and actual tree.
  Expected node: Line 34 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_foo)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(app/api/v1/book/foo/(?<p0>[^/]+)/(?<p1>[^/]+))
  Actual node: Line 34 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_foo)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(/app/api/v1/book/foo/(?<p0>[^/]+)/(?<p1>[^/]+))
  Expected literal value to be <app/api/v1/book/foo/(?<p0>[^/]+)/(?<p1>[^/]+)> but was </app/api/v1/book/foo/(?<p0>[^/]+)/(?<p1>[^/]+)>.

> Difference in expected tree and actual tree.
  Expected node: Line 36 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_index)->NEW_CLASS->STRING_LITERAL(app/api/v1/gym)
  Actual node: Line 36 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_index)->NEW_CLASS->STRING_LITERAL(/app/api/v1/gym)
  Expected literal value to be <app/api/v1/gym> but was </app/api/v1/gym>.

> Difference in expected tree and actual tree.
  Expected node: Line 38 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_create)->NEW_CLASS->STRING_LITERAL(app/api/v1/gym/create)
  Actual node: Line 38 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_create)->NEW_CLASS->STRING_LITERAL(/app/api/v1/gym/create)
  Expected literal value to be <app/api/v1/gym/create> but was </app/api/v1/gym/create>.

> Difference in expected tree and actual tree.
  Expected node: Line 40 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_show)->NEW_CLASS->STRING_LITERAL(app/api/v1/gym/{id})
  Actual node: Line 40 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_show)->NEW_CLASS->STRING_LITERAL(/app/api/v1/gym/{id})
  Expected literal value to be <app/api/v1/gym/{id}> but was </app/api/v1/gym/{id}>.

> Difference in expected tree and actual tree.
  Expected node: Line 40 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_show)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(app/api/v1/gym/(?<p0>[^/]+))
  Actual node: Line 40 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_show)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(/app/api/v1/gym/(?<p0>[^/]+))
  Expected literal value to be <app/api/v1/gym/(?<p0>[^/]+)> but was </app/api/v1/gym/(?<p0>[^/]+)>.

> Difference in expected tree and actual tree.
  Expected node: Line 42 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_htmlIndex)->NEW_CLASS->STRING_LITERAL(app/book)
  Actual node: Line 42 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_htmlIndex)->NEW_CLASS->STRING_LITERAL(/app/book)
  Expected literal value to be <app/book> but was </app/book>.

> Difference in expected tree and actual tree.
  Expected node: Line 44 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_show)->NEW_CLASS->STRING_LITERAL(app/book/{id})
  Actual node: Line 44 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_show)->NEW_CLASS->STRING_LITERAL(/app/book/{id})
  Expected literal value to be <app/book/{id}> but was </app/book/{id}>.

> Difference in expected tree and actual tree.
  Expected node: Line 44 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_show)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(app/book/(?<p0>[^/]+))
  Actual node: Line 44 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_show)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(/app/book/(?<p0>[^/]+))
  Expected literal value to be <app/book/(?<p0>[^/]+)> but was </app/book/(?<p0>[^/]+)>.

> Difference in expected tree and actual tree.
  Expected node: Line 46 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_edit)->NEW_CLASS->STRING_LITERAL(app/book/{id}/edit)
  Actual node: Line 46 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_edit)->NEW_CLASS->STRING_LITERAL(/app/book/{id}/edit)
  Expected literal value to be <app/book/{id}/edit> but was </app/book/{id}/edit>.

> Difference in expected tree and actual tree.
  Expected node: Line 46 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_edit)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(app/book/(?<p0>[^/]+)/edit)
  Actual node: Line 46 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_edit)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(/app/book/(?<p0>[^/]+)/edit)
  Expected literal value to be <app/book/(?<p0>[^/]+)/edit> but was </app/book/(?<p0>[^/]+)/edit>.

> Difference in expected tree and actual tree.
  Expected node: Line 48 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_ClientController_create)->NEW_CLASS->STRING_LITERAL(app/create)
  Actual node: Line 48 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_ClientController_create)->NEW_CLASS->STRING_LITERAL(/app/create)
  Expected literal value to be <app/create> but was </app/create>.

> Difference in expected tree and actual tree.
  Expected node: Line 50 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_htmlIndex)->NEW_CLASS->STRING_LITERAL(app/gym)
  Actual node: Line 50 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_htmlIndex)->NEW_CLASS->STRING_LITERAL(/app/gym)
  Expected literal value to be <app/gym> but was </app/gym>.

> Difference in expected tree and actual tree.
  Expected node: Line 52 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_edit)->NEW_CLASS->STRING_LITERAL(app/gym/{id}/edit)
  Actual node: Line 52 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_edit)->NEW_CLASS->STRING_LITERAL(/app/gym/{id}/edit)
  Expected literal value to be <app/gym/{id}/edit> but was </app/gym/{id}/edit>.

> Difference in expected tree and actual tree.
  Expected node: Line 52 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_edit)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(app/gym/(?<p0>[^/]+)/edit)
  Actual node: Line 52 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_edit)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(/app/gym/(?<p0>[^/]+)/edit)
  Expected literal value to be <app/gym/(?<p0>[^/]+)/edit> but was </app/gym/(?<p0>[^/]+)/edit>.

> Difference in expected tree and actual tree.
  Expected node: Line 54 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(POST_processor_test_ClientController_save)->NEW_CLASS->STRING_LITERAL(app/api/v1)
  Actual node: Line 54 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(POST_processor_test_ClientController_save)->NEW_CLASS->STRING_LITERAL(/app/api/v1)
  Expected literal value to be <app/api/v1> but was </app/api/v1>.

> Difference in expected tree and actual tree.
  Expected node: Line 56 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(POST_processor_test_BookController_save)->NEW_CLASS->STRING_LITERAL(app/api/v1/book)
  Actual node: Line 56 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(POST_processor_test_BookController_save)->NEW_CLASS->STRING_LITERAL(/app/api/v1/book)
  Expected literal value to be <app/api/v1/book> but was </app/api/v1/book>.

> Difference in expected tree and actual tree.
  Expected node: Line 58 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(POST_processor_test_Gym_save)->NEW_CLASS->STRING_LITERAL(app/api/v1/gym)
  Actual node: Line 58 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(POST_processor_test_Gym_save)->NEW_CLASS->STRING_LITERAL(/app/api/v1/gym)
  Expected literal value to be <app/api/v1/gym> but was </app/api/v1/gym>.

> Difference in expected tree and actual tree.
  Expected node: Line 60 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(PUT_processor_test_BookController_update)->NEW_CLASS->STRING_LITERAL(app/api/v1/book/{id})
  Actual node: Line 60 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(PUT_processor_test_BookController_update)->NEW_CLASS->STRING_LITERAL(/app/api/v1/book/{id})
  Expected literal value to be <app/api/v1/book/{id}> but was </app/api/v1/book/{id}>.

> Difference in expected tree and actual tree.
  Expected node: Line 60 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(PUT_processor_test_BookController_update)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(app/api/v1/book/(?<p0>[^/]+))
  Actual node: Line 60 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(PUT_processor_test_BookController_update)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(/app/api/v1/book/(?<p0>[^/]+))
  Expected literal value to be <app/api/v1/book/(?<p0>[^/]+)> but was </app/api/v1/book/(?<p0>[^/]+)>.

> Difference in expected tree and actual tree.
  Expected node: Line 62 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(PUT_processor_test_Gym_update)->NEW_CLASS->STRING_LITERAL(app/api/v1/gym/{id})
  Actual node: Line 62 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(PUT_processor_test_Gym_update)->NEW_CLASS->STRING_LITERAL(/app/api/v1/gym/{id})
  Expected literal value to be <app/api/v1/gym/{id}> but was </app/api/v1/gym/{id}>.

> Difference in expected tree and actual tree.
  Expected node: Line 62 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(PUT_processor_test_Gym_update)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(app/api/v1/gym/(?<p0>[^/]+))
  Actual node: Line 62 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(PUT_processor_test_Gym_update)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(/app/api/v1/gym/(?<p0>[^/]+))
  Expected literal value to be <app/api/v1/gym/(?<p0>[^/]+)> but was </app/api/v1/gym/(?<p0>[^/]+)>.

> Difference in expected tree and actual tree.
  Expected node: Line 64 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(DELETE_processor_test_BookController_delete)->NEW_CLASS->STRING_LITERAL(app/api/v1/book/{id})
  Actual node: Line 64 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(DELETE_processor_test_BookController_delete)->NEW_CLASS->STRING_LITERAL(/app/api/v1/book/{id})
  Expected literal value to be <app/api/v1/book/{id}> but was </app/api/v1/book/{id}>.

> Difference in expected tree and actual tree.
  Expected node: Line 64 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(DELETE_processor_test_BookController_delete)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(app/api/v1/book/(?<p0>[^/]+))
  Actual node: Line 64 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(DELETE_processor_test_BookController_delete)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(/app/api/v1/book/(?<p0>[^/]+))
  Expected literal value to be <app/api/v1/book/(?<p0>[^/]+)> but was </app/api/v1/book/(?<p0>[^/]+)>.

> Difference in expected tree and actual tree.
  Expected node: Line 66 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(DELETE_processor_test_Gym_delete)->NEW_CLASS->STRING_LITERAL(app/api/v1/gym/{id})
  Actual node: Line 66 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(DELETE_processor_test_Gym_delete)->NEW_CLASS->STRING_LITERAL(/app/api/v1/gym/{id})
  Expected literal value to be <app/api/v1/gym/{id}> but was </app/api/v1/gym/{id}>.

> Difference in expected tree and actual tree.
  Expected node: Line 66 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(DELETE_processor_test_Gym_delete)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(app/api/v1/gym/(?<p0>[^/]+))
  Actual node: Line 66 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(DELETE_processor_test_Gym_delete)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(/app/api/v1/gym/(?<p0>[^/]+))
  Expected literal value to be <app/api/v1/gym/(?<p0>[^/]+)> but was </app/api/v1/gym/(?<p0>[^/]+)>.


Expected Source:
================

package processor.test;

import ae.web.Interpret;
import ae.web.OAuth2Flow;
import ae.web.ParameterizedRoute;
import ae.web.Route;
import ae.web.RouterServlet;
import com.google.appengine.api.datastore.Cursor;
import java.io.IOException;
import java.util.regex.Pattern;
import javax.annotation.Generated;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@Generated(
    value = "AE/web-processor",
    comments = "",
    date = "2017-02-23"
)
abstract class SigexRouter extends RouterServlet {
  private static final long serialVersionUID = 1487851200000L;

  private final Route GET_processor_test_ClientController_htmlIndex = new Route("app");

  private final Route GET_processor_test_ClientController_index = new Route("app/api/v1");

  private final Route GET_processor_test_BookController_index = new Route("app/api/v1/book");

  private final ParameterizedRoute GET_processor_test_BookController_bar = new ParameterizedRoute("app/api/v1/book/bar/{id}/{cursor}/{arg}", Pattern.compile("app/api/v1/book/bar/(?<p0>[^/]+)/(?<p1>[^/]+)/(?<p2>[^/]+)"));

  private final Route GET_processor_test_BookController_create = new Route("app/api/v1/book/create");

  private final ParameterizedRoute GET_processor_test_BookController_foo = new ParameterizedRoute("app/api/v1/book/foo/{id}/{arg}", Pattern.compile("app/api/v1/book/foo/(?<p0>[^/]+)/(?<p1>[^/]+)"));

  private final Route GET_processor_test_Gym_index = new Route("app/api/v1/gym");

  private final Route GET_processor_test_Gym_create = new Route("app/api/v1/gym/create");

  private final ParameterizedRoute GET_processor_test_Gym_show = new ParameterizedRoute("app/api/v1/gym/{id}", Pattern.compile("app/api/v1/gym/(?<p0>[^/]+)"));

  private final Route GET_processor_test_BookController_htmlIndex = new Route("app/book");

  private final ParameterizedRoute GET_processor_test_BookController_show = new ParameterizedRoute("app/book/{id}", Pattern.compile("app/book/(?<p0>[^/]+)"));

  private final ParameterizedRoute GET_processor_test_BookController_edit = new ParameterizedRoute("app/book/{id}/edit", Pattern.compile("app/book/(?<p0>[^/]+)/edit"));

  private final Route GET_processor_test_ClientController_create = new Route("app/create");

  private final Route GET_processor_test_Gym_htmlIndex = new Route("app/gym");

  private final ParameterizedRoute GET_processor_test_Gym_edit = new ParameterizedRoute("app/gym/{id}/edit", Pattern.compile("app/gym/(?<p0>[^/]+)/edit"));

  private final Route POST_processor_test_ClientController_save = new Route("app/api/v1");

  private final Route POST_processor_test_BookController_save = new Route("app/api/v1/book");

  private final Route POST_processor_test_Gym_save = new Route("app/api/v1/gym");

  private final ParameterizedRoute PUT_processor_test_BookController_update = new ParameterizedRoute("app/api/v1/book/{id}", Pattern.compile("app/api/v1/book/(?<p0>[^/]+)"));

  private final ParameterizedRoute PUT_processor_test_Gym_update = new ParameterizedRoute("app/api/v1/gym/{id}", Pattern.compile("app/api/v1/gym/(?<p0>[^/]+)"));

  private final ParameterizedRoute DELETE_processor_test_BookController_delete = new ParameterizedRoute("app/api/v1/book/{id}", Pattern.compile("app/api/v1/book/(?<p0>[^/]+)"));

  private final ParameterizedRoute DELETE_processor_test_Gym_delete = new ParameterizedRoute("app/api/v1/gym/{id}", Pattern.compile("app/api/v1/gym/(?<p0>[^/]+)"));

  @Override
  public void doGet(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    final String[] routeParameters = new String[]{null, null, null, null};
    if (GET_processor_test_ClientController_htmlIndex.matches(request)) {
      handle(new ClientController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.htmlIndex());
      return;
    }
    if (GET_processor_test_ClientController_index.matches(request)) {
      handle(new ClientController(request, response), (controller) -> controller.index());
      return;
    }
    if (GET_processor_test_BookController_index.matches(request)) {
      handle(new BookController(request, response), (controller) -> controller.index());
      return;
    }
    if (GET_processor_test_BookController_bar.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      final Cursor c = Interpret.asCursor(routeParameters[1]);
      final String arg = Interpret.asString(routeParameters[2]);
      handle(new BookController(request, response), (controller) -> controller.bar(id,c,arg));
      return;
    }
    if (GET_processor_test_BookController_create.matches(request)) {
      handle(new BookController(request, response), (controller) -> controller.create());
      return;
    }
    if (GET_processor_test_BookController_foo.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      final String arg = Interpret.asString(routeParameters[1]);
      handle(new BookController(request, response), (controller) -> OAuth2Flow.Director.of(controller).authorize((c) -> c.foo(id,arg)));
      return;
    }
    if (GET_processor_test_Gym_index.matches(request)) {
      handle(new Gym(request, response), (controller) -> controller.index());
      return;
    }
    if (GET_processor_test_Gym_create.matches(request)) {
      handle(new Gym(request, response), (controller) -> controller.create());
      return;
    }
    if (GET_processor_test_Gym_show.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new Gym(request, response), (controller) -> controller.show(id));
      return;
    }
    if (GET_processor_test_BookController_htmlIndex.matches(request)) {
      handle(new BookController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.htmlIndex());
      return;
    }
    if (GET_processor_test_BookController_show.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new BookController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.show(id));
      return;
    }
    if (GET_processor_test_BookController_edit.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new BookController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.edit(id));
      return;
    }
    if (GET_processor_test_ClientController_create.matches(request)) {
      handle(new ClientController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.create());
      return;
    }
    if (GET_processor_test_Gym_htmlIndex.matches(request)) {
      handle(new Gym(request, response, webContext(request, response), templateEngine()), (controller) -> controller.htmlIndex());
      return;
    }
    if (GET_processor_test_Gym_edit.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new Gym(request, response, webContext(request, response), templateEngine()), (controller) -> controller.edit(id));
      return;
    }
    unhandledGet(request, response);
  }

  @Override
  public void doPost(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    if (POST_processor_test_ClientController_save.matches(request)) {
      handle(new ClientController(request, response), (controller) -> controller.save());
      return;
    }
    if (POST_processor_test_BookController_save.matches(request)) {
      handle(new BookController(request, response), (controller) -> controller.save());
      return;
    }
    if (POST_processor_test_Gym_save.matches(request)) {
      handle(new Gym(request, response), (controller) -> controller.save());
      return;
    }
    unhandledPost(request, response);
  }

  @Override
  public void doPut(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    final String[] routeParameters = new String[]{null, null};
    if (PUT_processor_test_BookController_update.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new BookController(request, response), (controller) -> controller.update(id));
      return;
    }
    if (PUT_processor_test_Gym_update.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new Gym(request, response), (controller) -> controller.update(id));
      return;
    }
    unhandledPut(request, response);
  }

  @Override
  public void doDelete(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    final String[] routeParameters = new String[]{null, null};
    if (DELETE_processor_test_BookController_delete.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new BookController(request, response), (controller) -> controller.delete(id));
      return;
    }
    if (DELETE_processor_test_Gym_delete.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new Gym(request, response), (controller) -> controller.delete(id));
      return;
    }
    unhandledDelete(request, response);
  }
}


Actual Source:
==============

package processor.test;

import ae.web.Interpret;
import ae.web.OAuth2Flow;
import ae.web.ParameterizedRoute;
import ae.web.Route;
import ae.web.RouterServlet;
import com.google.appengine.api.datastore.Cursor;
import java.io.IOException;
import java.util.regex.Pattern;
import javax.annotation.Generated;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@Generated(
    value = "AE/web-processor",
    comments = "",
    date = "2017-02-23"
)
abstract class SigexRouter extends RouterServlet {
  private static final long serialVersionUID = 1487851200000L;

  private final Route GET_processor_test_ClientController_htmlIndex = new Route("/app");

  private final Route GET_processor_test_ClientController_index = new Route("/app/api/v1");

  private final Route GET_processor_test_BookController_index = new Route("/app/api/v1/book");

  private final ParameterizedRoute GET_processor_test_BookController_bar = new ParameterizedRoute("/app/api/v1/book/bar/{id}/{cursor}/{arg}", Pattern.compile("/app/api/v1/book/bar/(?<p0>[^/]+)/(?<p1>[^/]+)/(?<p2>[^/]+)"));

  private final Route GET_processor_test_BookController_create = new Route("/app/api/v1/book/create");

  private final ParameterizedRoute GET_processor_test_BookController_foo = new ParameterizedRoute("/app/api/v1/book/foo/{id}/{arg}", Pattern.compile("/app/api/v1/book/foo/(?<p0>[^/]+)/(?<p1>[^/]+)"));

  private final Route GET_processor_test_Gym_index = new Route("/app/api/v1/gym");

  private final Route GET_processor_test_Gym_create = new Route("/app/api/v1/gym/create");

  private final ParameterizedRoute GET_processor_test_Gym_show = new ParameterizedRoute("/app/api/v1/gym/{id}", Pattern.compile("/app/api/v1/gym/(?<p0>[^/]+)"));

  private final Route GET_processor_test_BookController_htmlIndex = new Route("/app/book");

  private final ParameterizedRoute GET_processor_test_BookController_show = new ParameterizedRoute("/app/book/{id}", Pattern.compile("/app/book/(?<p0>[^/]+)"));

  private final ParameterizedRoute GET_processor_test_BookController_edit = new ParameterizedRoute("/app/book/{id}/edit", Pattern.compile("/app/book/(?<p0>[^/]+)/edit"));

  private final Route GET_processor_test_ClientController_create = new Route("/app/create");

  private final Route GET_processor_test_Gym_htmlIndex = new Route("/app/gym");

  private final ParameterizedRoute GET_processor_test_Gym_edit = new ParameterizedRoute("/app/gym/{id}/edit", Pattern.compile("/app/gym/(?<p0>[^/]+)/edit"));

  private final Route POST_processor_test_ClientController_save = new Route("/app/api/v1");

  private final Route POST_processor_test_BookController_save = new Route("/app/api/v1/book");

  private final Route POST_processor_test_Gym_save = new Route("/app/api/v1/gym");

  private final ParameterizedRoute PUT_processor_test_BookController_update = new ParameterizedRoute("/app/api/v1/book/{id}", Pattern.compile("/app/api/v1/book/(?<p0>[^/]+)"));

  private final ParameterizedRoute PUT_processor_test_Gym_update = new ParameterizedRoute("/app/api/v1/gym/{id}", Pattern.compile("/app/api/v1/gym/(?<p0>[^/]+)"));

  private final ParameterizedRoute DELETE_processor_test_BookController_delete = new ParameterizedRoute("/app/api/v1/book/{id}", Pattern.compile("/app/api/v1/book/(?<p0>[^/]+)"));

  private final ParameterizedRoute DELETE_processor_test_Gym_delete = new ParameterizedRoute("/app/api/v1/gym/{id}", Pattern.compile("/app/api/v1/gym/(?<p0>[^/]+)"));

  @Override
  public void doGet(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    final String[] routeParameters = new String[]{null, null, null, null};
    if (GET_processor_test_ClientController_htmlIndex.matches(request)) {
      handle(new ClientController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.htmlIndex());
      return;
    }
    if (GET_processor_test_ClientController_index.matches(request)) {
      handle(new ClientController(request, response), (controller) -> controller.index());
      return;
    }
    if (GET_processor_test_BookController_index.matches(request)) {
      handle(new BookController(request, response), (controller) -> controller.index());
      return;
    }
    if (GET_processor_test_BookController_bar.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      final Cursor c = Interpret.asCursor(routeParameters[1]);
      final String arg = Interpret.asString(routeParameters[2]);
      handle(new BookController(request, response), (controller) -> controller.bar(id,c,arg));
      return;
    }
    if (GET_processor_test_BookController_create.matches(request)) {
      handle(new BookController(request, response), (controller) -> controller.create());
      return;
    }
    if (GET_processor_test_BookController_foo.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      final String arg = Interpret.asString(routeParameters[1]);
      handle(new BookController(request, response), (controller) -> OAuth2Flow.Director.of(controller).authorize((c) -> c.foo(id,arg)));
      return;
    }
    if (GET_processor_test_Gym_index.matches(request)) {
      handle(new Gym(request, response), (controller) -> controller.index());
      return;
    }
    if (GET_processor_test_Gym_create.matches(request)) {
      handle(new Gym(request, response), (controller) -> controller.create());
      return;
    }
    if (GET_processor_test_Gym_show.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new Gym(request, response), (controller) -> controller.show(id));
      return;
    }
    if (GET_processor_test_BookController_htmlIndex.matches(request)) {
      handle(new BookController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.htmlIndex());
      return;
    }
    if (GET_processor_test_BookController_show.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new BookController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.show(id));
      return;
    }
    if (GET_processor_test_BookController_edit.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new BookController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.edit(id));
      return;
    }
    if (GET_processor_test_ClientController_create.matches(request)) {
      handle(new ClientController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.create());
      return;
    }
    if (GET_processor_test_Gym_htmlIndex.matches(request)) {
      handle(new Gym(request, response, webContext(request, response), templateEngine()), (controller) -> controller.htmlIndex());
      return;
    }
    if (GET_processor_test_Gym_edit.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new Gym(request, response, webContext(request, response), templateEngine()), (controller) -> controller.edit(id));
      return;
    }
    unhandledGet(request, response);
  }

  @Override
  public void doPost(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    if (POST_processor_test_ClientController_save.matches(request)) {
      handle(new ClientController(request, response), (controller) -> controller.save());
      return;
    }
    if (POST_processor_test_BookController_save.matches(request)) {
      handle(new BookController(request, response), (controller) -> controller.save());
      return;
    }
    if (POST_processor_test_Gym_save.matches(request)) {
      handle(new Gym(request, response), (controller) -> controller.save());
      return;
    }
    unhandledPost(request, response);
  }

  @Override
  public void doPut(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    final String[] routeParameters = new String[]{null, null};
    if (PUT_processor_test_BookController_update.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new BookController(request, response), (controller) -> controller.update(id));
      return;
    }
    if (PUT_processor_test_Gym_update.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new Gym(request, response), (controller) -> controller.update(id));
      return;
    }
    unhandledPut(request, response);
  }

  @Override
  public void doDelete(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    final String[] routeParameters = new String[]{null, null};
    if (DELETE_processor_test_BookController_delete.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new BookController(request, response), (controller) -> controller.delete(id));
      return;
    }
    if (DELETE_processor_test_Gym_delete.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new Gym(request, response), (controller) -> controller.delete(id));
      return;
    }
    unhandledDelete(request, response);
  }
}

	at ae.routes.processor.RoutesProcessingTest.should_compile_multiple_verb_routes(RoutesProcessingTest.java:58)

[ERROR] should_compile_with_roles_constraints_defined on should_compile_with_roles_constraints_defined(ae.routes.processor.RoutesProcessingTest)(ae.routes.processor.RoutesProcessingTest)  Time elapsed: 0.237 s  <<< FAILURE!
com.google.common.truth.Truth$AssertionErrorWithCause: 
Not true that </SOURCE_OUTPUT/processor/test/RolesRouter.java> is equivalent to </root/workspace/matero/ae/435127099/web-processor/target/test-classes/generated/routes/RolesRouter.java>.

Diffs:
======

Found 4 nodes that differed in expected and actual trees. 

> Difference in expected tree and actual tree.
  Expected node: Line 19 COMPILATION_UNIT->CLASS(RolesRouter)->VARIABLE(GET_processor_test_FooController_index)->NEW_CLASS->STRING_LITERAL(app/api/v1/foo)
  Actual node: Line 19 COMPILATION_UNIT->CLASS(RolesRouter)->VARIABLE(GET_processor_test_FooController_index)->NEW_CLASS->STRING_LITERAL(/app/api/v1/foo)
  Expected literal value to be <app/api/v1/foo> but was </app/api/v1/foo>.

> Difference in expected tree and actual tree.
  Expected node: Line 21 COMPILATION_UNIT->CLASS(RolesRouter)->VARIABLE(GET_processor_test_FooController_htmlIndex)->NEW_CLASS->STRING_LITERAL(app/foo)
  Actual node: Line 21 COMPILATION_UNIT->CLASS(RolesRouter)->VARIABLE(GET_processor_test_FooController_htmlIndex)->NEW_CLASS->STRING_LITERAL(/app/foo)
  Expected literal value to be <app/foo> but was </app/foo>.

> Difference in expected tree and actual tree.
  Expected node: Line 23 COMPILATION_UNIT->CLASS(RolesRouter)->VARIABLE(GET_processor_test_FooController_create)->NEW_CLASS->STRING_LITERAL(app/foo/create)
  Actual node: Line 23 COMPILATION_UNIT->CLASS(RolesRouter)->VARIABLE(GET_processor_test_FooController_create)->NEW_CLASS->STRING_LITERAL(/app/foo/create)
  Expected literal value to be <app/foo/create> but was </app/foo/create>.

> Difference in expected tree and actual tree.
  Expected node: Line 25 COMPILATION_UNIT->CLASS(RolesRouter)->VARIABLE(POST_processor_test_FooController_save)->NEW_CLASS->STRING_LITERAL(app/api/v1/foo)
  Actual node: Line 25 COMPILATION_UNIT->CLASS(RolesRouter)->VARIABLE(POST_processor_test_FooController_save)->NEW_CLASS->STRING_LITERAL(/app/api/v1/foo)
  Expected literal value to be <app/api/v1/foo> but was </app/api/v1/foo>.


Expected Source:
================

package processor.test;

import ae.web.Route;
import ae.web.RouterWithRoleConstraintsServlet;
import java.io.IOException;
import javax.annotation.Generated;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@Generated(
    value = "AE/web-processor",
    comments = "",
    date = "2017-02-23"
)
abstract class RolesRouter extends RouterWithRoleConstraintsServlet {
  private static final long serialVersionUID = 1487851200000L;

  private final Route GET_processor_test_FooController_index = new Route("app/api/v1/foo");

  private final Route GET_processor_test_FooController_htmlIndex = new Route("app/foo");

  private final Route GET_processor_test_FooController_create = new Route("app/foo/create");

  private final Route POST_processor_test_FooController_save = new Route("app/api/v1/foo");

  @Override
  public void doGet(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    if (GET_processor_test_FooController_index.matches(request)) {
      handle(new FooController(request, response), (controller) -> controller.index());
      return;
    }
    if (loggedUserHas("r1") && GET_processor_test_FooController_htmlIndex.matches(request)) {
      handle(new FooController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.htmlIndex());
      return;
    }
    if (loggedUserHasOneOf("r1", "r2") && GET_processor_test_FooController_create.matches(request)) {
      handle(new FooController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.create());
      return;
    }
    unhandledGet(request, response);
  }

  @Override
  public void doPost(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    if (POST_processor_test_FooController_save.matches(request)) {
      handle(new FooController(request, response), (controller) -> controller.save());
      return;
    }
    unhandledPost(request, response);
  }
}


Actual Source:
==============

package processor.test;

import ae.web.Route;
import ae.web.RouterWithRoleConstraintsServlet;
import java.io.IOException;
import javax.annotation.Generated;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@Generated(
    value = "AE/web-processor",
    comments = "",
    date = "2017-02-23"
)
abstract class RolesRouter extends RouterWithRoleConstraintsServlet {
  private static final long serialVersionUID = 1487851200000L;

  private final Route GET_processor_test_FooController_index = new Route("/app/api/v1/foo");

  private final Route GET_processor_test_FooController_htmlIndex = new Route("/app/foo");

  private final Route GET_processor_test_FooController_create = new Route("/app/foo/create");

  private final Route POST_processor_test_FooController_save = new Route("/app/api/v1/foo");

  @Override
  public void doGet(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    if (GET_processor_test_FooController_index.matches(request)) {
      handle(new FooController(request, response), (controller) -> controller.index());
      return;
    }
    if (loggedUserHas("r1") && GET_processor_test_FooController_htmlIndex.matches(request)) {
      handle(new FooController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.htmlIndex());
      return;
    }
    if (loggedUserHasOneOf("r1", "r2") && GET_processor_test_FooController_create.matches(request)) {
      handle(new FooController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.create());
      return;
    }
    unhandledGet(request, response);
  }

  @Override
  public void doPost(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    if (POST_processor_test_FooController_save.matches(request)) {
      handle(new FooController(request, response), (controller) -> controller.save());
      return;
    }
    unhandledPost(request, response);
  }
}

	at ae.routes.processor.RoutesProcessingTest.should_compile_with_roles_constraints_defined(RoutesProcessingTest.java:71)

[INFO] 
[INFO] Results:
[INFO] 
[ERROR] Failures: 
[ERROR]   RoutesProcessingTest.should_compile_multiple_verb_routes:58 Not true that </SOURCE_OUTPUT/processor/test/SigexRouter.java> is equivalent to </root/workspace/matero/ae/435127099/web-processor/target/test-classes/generated/routes/SigexRouter.java>.

Diffs:
======

Found 32 nodes that differed in expected and actual trees. 

> Difference in expected tree and actual tree.
  Expected node: Line 24 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_ClientController_htmlIndex)->NEW_CLASS->STRING_LITERAL(app)
  Actual node: Line 24 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_ClientController_htmlIndex)->NEW_CLASS->STRING_LITERAL(/app)
  Expected literal value to be <app> but was </app>.

> Difference in expected tree and actual tree.
  Expected node: Line 26 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_ClientController_index)->NEW_CLASS->STRING_LITERAL(app/api/v1)
  Actual node: Line 26 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_ClientController_index)->NEW_CLASS->STRING_LITERAL(/app/api/v1)
  Expected literal value to be <app/api/v1> but was </app/api/v1>.

> Difference in expected tree and actual tree.
  Expected node: Line 28 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_index)->NEW_CLASS->STRING_LITERAL(app/api/v1/book)
  Actual node: Line 28 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_index)->NEW_CLASS->STRING_LITERAL(/app/api/v1/book)
  Expected literal value to be <app/api/v1/book> but was </app/api/v1/book>.

> Difference in expected tree and actual tree.
  Expected node: Line 30 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_bar)->NEW_CLASS->STRING_LITERAL(app/api/v1/book/bar/{id}/{cursor}/{arg})
  Actual node: Line 30 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_bar)->NEW_CLASS->STRING_LITERAL(/app/api/v1/book/bar/{id}/{cursor}/{arg})
  Expected literal value to be <app/api/v1/book/bar/{id}/{cursor}/{arg}> but was </app/api/v1/book/bar/{id}/{cursor}/{arg}>.

> Difference in expected tree and actual tree.
  Expected node: Line 30 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_bar)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(app/api/v1/book/bar/(?<p0>[^/]+)/(?<p1>[^/]+)/(?<p2>[^/]+))
  Actual node: Line 30 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_bar)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(/app/api/v1/book/bar/(?<p0>[^/]+)/(?<p1>[^/]+)/(?<p2>[^/]+))
  Expected literal value to be <app/api/v1/book/bar/(?<p0>[^/]+)/(?<p1>[^/]+)/(?<p2>[^/]+)> but was </app/api/v1/book/bar/(?<p0>[^/]+)/(?<p1>[^/]+)/(?<p2>[^/]+)>.

> Difference in expected tree and actual tree.
  Expected node: Line 32 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_create)->NEW_CLASS->STRING_LITERAL(app/api/v1/book/create)
  Actual node: Line 32 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_create)->NEW_CLASS->STRING_LITERAL(/app/api/v1/book/create)
  Expected literal value to be <app/api/v1/book/create> but was </app/api/v1/book/create>.

> Difference in expected tree and actual tree.
  Expected node: Line 34 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_foo)->NEW_CLASS->STRING_LITERAL(app/api/v1/book/foo/{id}/{arg})
  Actual node: Line 34 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_foo)->NEW_CLASS->STRING_LITERAL(/app/api/v1/book/foo/{id}/{arg})
  Expected literal value to be <app/api/v1/book/foo/{id}/{arg}> but was </app/api/v1/book/foo/{id}/{arg}>.

> Difference in expected tree and actual tree.
  Expected node: Line 34 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_foo)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(app/api/v1/book/foo/(?<p0>[^/]+)/(?<p1>[^/]+))
  Actual node: Line 34 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_foo)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(/app/api/v1/book/foo/(?<p0>[^/]+)/(?<p1>[^/]+))
  Expected literal value to be <app/api/v1/book/foo/(?<p0>[^/]+)/(?<p1>[^/]+)> but was </app/api/v1/book/foo/(?<p0>[^/]+)/(?<p1>[^/]+)>.

> Difference in expected tree and actual tree.
  Expected node: Line 36 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_index)->NEW_CLASS->STRING_LITERAL(app/api/v1/gym)
  Actual node: Line 36 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_index)->NEW_CLASS->STRING_LITERAL(/app/api/v1/gym)
  Expected literal value to be <app/api/v1/gym> but was </app/api/v1/gym>.

> Difference in expected tree and actual tree.
  Expected node: Line 38 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_create)->NEW_CLASS->STRING_LITERAL(app/api/v1/gym/create)
  Actual node: Line 38 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_create)->NEW_CLASS->STRING_LITERAL(/app/api/v1/gym/create)
  Expected literal value to be <app/api/v1/gym/create> but was </app/api/v1/gym/create>.

> Difference in expected tree and actual tree.
  Expected node: Line 40 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_show)->NEW_CLASS->STRING_LITERAL(app/api/v1/gym/{id})
  Actual node: Line 40 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_show)->NEW_CLASS->STRING_LITERAL(/app/api/v1/gym/{id})
  Expected literal value to be <app/api/v1/gym/{id}> but was </app/api/v1/gym/{id}>.

> Difference in expected tree and actual tree.
  Expected node: Line 40 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_show)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(app/api/v1/gym/(?<p0>[^/]+))
  Actual node: Line 40 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_show)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(/app/api/v1/gym/(?<p0>[^/]+))
  Expected literal value to be <app/api/v1/gym/(?<p0>[^/]+)> but was </app/api/v1/gym/(?<p0>[^/]+)>.

> Difference in expected tree and actual tree.
  Expected node: Line 42 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_htmlIndex)->NEW_CLASS->STRING_LITERAL(app/book)
  Actual node: Line 42 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_htmlIndex)->NEW_CLASS->STRING_LITERAL(/app/book)
  Expected literal value to be <app/book> but was </app/book>.

> Difference in expected tree and actual tree.
  Expected node: Line 44 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_show)->NEW_CLASS->STRING_LITERAL(app/book/{id})
  Actual node: Line 44 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_show)->NEW_CLASS->STRING_LITERAL(/app/book/{id})
  Expected literal value to be <app/book/{id}> but was </app/book/{id}>.

> Difference in expected tree and actual tree.
  Expected node: Line 44 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_show)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(app/book/(?<p0>[^/]+))
  Actual node: Line 44 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_show)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(/app/book/(?<p0>[^/]+))
  Expected literal value to be <app/book/(?<p0>[^/]+)> but was </app/book/(?<p0>[^/]+)>.

> Difference in expected tree and actual tree.
  Expected node: Line 46 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_edit)->NEW_CLASS->STRING_LITERAL(app/book/{id}/edit)
  Actual node: Line 46 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_edit)->NEW_CLASS->STRING_LITERAL(/app/book/{id}/edit)
  Expected literal value to be <app/book/{id}/edit> but was </app/book/{id}/edit>.

> Difference in expected tree and actual tree.
  Expected node: Line 46 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_edit)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(app/book/(?<p0>[^/]+)/edit)
  Actual node: Line 46 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_BookController_edit)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(/app/book/(?<p0>[^/]+)/edit)
  Expected literal value to be <app/book/(?<p0>[^/]+)/edit> but was </app/book/(?<p0>[^/]+)/edit>.

> Difference in expected tree and actual tree.
  Expected node: Line 48 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_ClientController_create)->NEW_CLASS->STRING_LITERAL(app/create)
  Actual node: Line 48 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_ClientController_create)->NEW_CLASS->STRING_LITERAL(/app/create)
  Expected literal value to be <app/create> but was </app/create>.

> Difference in expected tree and actual tree.
  Expected node: Line 50 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_htmlIndex)->NEW_CLASS->STRING_LITERAL(app/gym)
  Actual node: Line 50 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_htmlIndex)->NEW_CLASS->STRING_LITERAL(/app/gym)
  Expected literal value to be <app/gym> but was </app/gym>.

> Difference in expected tree and actual tree.
  Expected node: Line 52 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_edit)->NEW_CLASS->STRING_LITERAL(app/gym/{id}/edit)
  Actual node: Line 52 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_edit)->NEW_CLASS->STRING_LITERAL(/app/gym/{id}/edit)
  Expected literal value to be <app/gym/{id}/edit> but was </app/gym/{id}/edit>.

> Difference in expected tree and actual tree.
  Expected node: Line 52 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_edit)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(app/gym/(?<p0>[^/]+)/edit)
  Actual node: Line 52 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(GET_processor_test_Gym_edit)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(/app/gym/(?<p0>[^/]+)/edit)
  Expected literal value to be <app/gym/(?<p0>[^/]+)/edit> but was </app/gym/(?<p0>[^/]+)/edit>.

> Difference in expected tree and actual tree.
  Expected node: Line 54 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(POST_processor_test_ClientController_save)->NEW_CLASS->STRING_LITERAL(app/api/v1)
  Actual node: Line 54 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(POST_processor_test_ClientController_save)->NEW_CLASS->STRING_LITERAL(/app/api/v1)
  Expected literal value to be <app/api/v1> but was </app/api/v1>.

> Difference in expected tree and actual tree.
  Expected node: Line 56 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(POST_processor_test_BookController_save)->NEW_CLASS->STRING_LITERAL(app/api/v1/book)
  Actual node: Line 56 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(POST_processor_test_BookController_save)->NEW_CLASS->STRING_LITERAL(/app/api/v1/book)
  Expected literal value to be <app/api/v1/book> but was </app/api/v1/book>.

> Difference in expected tree and actual tree.
  Expected node: Line 58 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(POST_processor_test_Gym_save)->NEW_CLASS->STRING_LITERAL(app/api/v1/gym)
  Actual node: Line 58 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(POST_processor_test_Gym_save)->NEW_CLASS->STRING_LITERAL(/app/api/v1/gym)
  Expected literal value to be <app/api/v1/gym> but was </app/api/v1/gym>.

> Difference in expected tree and actual tree.
  Expected node: Line 60 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(PUT_processor_test_BookController_update)->NEW_CLASS->STRING_LITERAL(app/api/v1/book/{id})
  Actual node: Line 60 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(PUT_processor_test_BookController_update)->NEW_CLASS->STRING_LITERAL(/app/api/v1/book/{id})
  Expected literal value to be <app/api/v1/book/{id}> but was </app/api/v1/book/{id}>.

> Difference in expected tree and actual tree.
  Expected node: Line 60 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(PUT_processor_test_BookController_update)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(app/api/v1/book/(?<p0>[^/]+))
  Actual node: Line 60 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(PUT_processor_test_BookController_update)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(/app/api/v1/book/(?<p0>[^/]+))
  Expected literal value to be <app/api/v1/book/(?<p0>[^/]+)> but was </app/api/v1/book/(?<p0>[^/]+)>.

> Difference in expected tree and actual tree.
  Expected node: Line 62 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(PUT_processor_test_Gym_update)->NEW_CLASS->STRING_LITERAL(app/api/v1/gym/{id})
  Actual node: Line 62 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(PUT_processor_test_Gym_update)->NEW_CLASS->STRING_LITERAL(/app/api/v1/gym/{id})
  Expected literal value to be <app/api/v1/gym/{id}> but was </app/api/v1/gym/{id}>.

> Difference in expected tree and actual tree.
  Expected node: Line 62 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(PUT_processor_test_Gym_update)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(app/api/v1/gym/(?<p0>[^/]+))
  Actual node: Line 62 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(PUT_processor_test_Gym_update)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(/app/api/v1/gym/(?<p0>[^/]+))
  Expected literal value to be <app/api/v1/gym/(?<p0>[^/]+)> but was </app/api/v1/gym/(?<p0>[^/]+)>.

> Difference in expected tree and actual tree.
  Expected node: Line 64 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(DELETE_processor_test_BookController_delete)->NEW_CLASS->STRING_LITERAL(app/api/v1/book/{id})
  Actual node: Line 64 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(DELETE_processor_test_BookController_delete)->NEW_CLASS->STRING_LITERAL(/app/api/v1/book/{id})
  Expected literal value to be <app/api/v1/book/{id}> but was </app/api/v1/book/{id}>.

> Difference in expected tree and actual tree.
  Expected node: Line 64 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(DELETE_processor_test_BookController_delete)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(app/api/v1/book/(?<p0>[^/]+))
  Actual node: Line 64 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(DELETE_processor_test_BookController_delete)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(/app/api/v1/book/(?<p0>[^/]+))
  Expected literal value to be <app/api/v1/book/(?<p0>[^/]+)> but was </app/api/v1/book/(?<p0>[^/]+)>.

> Difference in expected tree and actual tree.
  Expected node: Line 66 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(DELETE_processor_test_Gym_delete)->NEW_CLASS->STRING_LITERAL(app/api/v1/gym/{id})
  Actual node: Line 66 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(DELETE_processor_test_Gym_delete)->NEW_CLASS->STRING_LITERAL(/app/api/v1/gym/{id})
  Expected literal value to be <app/api/v1/gym/{id}> but was </app/api/v1/gym/{id}>.

> Difference in expected tree and actual tree.
  Expected node: Line 66 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(DELETE_processor_test_Gym_delete)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(app/api/v1/gym/(?<p0>[^/]+))
  Actual node: Line 66 COMPILATION_UNIT->CLASS(SigexRouter)->VARIABLE(DELETE_processor_test_Gym_delete)->NEW_CLASS->METHOD_INVOCATION->STRING_LITERAL(/app/api/v1/gym/(?<p0>[^/]+))
  Expected literal value to be <app/api/v1/gym/(?<p0>[^/]+)> but was </app/api/v1/gym/(?<p0>[^/]+)>.


Expected Source:
================

package processor.test;

import ae.web.Interpret;
import ae.web.OAuth2Flow;
import ae.web.ParameterizedRoute;
import ae.web.Route;
import ae.web.RouterServlet;
import com.google.appengine.api.datastore.Cursor;
import java.io.IOException;
import java.util.regex.Pattern;
import javax.annotation.Generated;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@Generated(
    value = "AE/web-processor",
    comments = "",
    date = "2017-02-23"
)
abstract class SigexRouter extends RouterServlet {
  private static final long serialVersionUID = 1487851200000L;

  private final Route GET_processor_test_ClientController_htmlIndex = new Route("app");

  private final Route GET_processor_test_ClientController_index = new Route("app/api/v1");

  private final Route GET_processor_test_BookController_index = new Route("app/api/v1/book");

  private final ParameterizedRoute GET_processor_test_BookController_bar = new ParameterizedRoute("app/api/v1/book/bar/{id}/{cursor}/{arg}", Pattern.compile("app/api/v1/book/bar/(?<p0>[^/]+)/(?<p1>[^/]+)/(?<p2>[^/]+)"));

  private final Route GET_processor_test_BookController_create = new Route("app/api/v1/book/create");

  private final ParameterizedRoute GET_processor_test_BookController_foo = new ParameterizedRoute("app/api/v1/book/foo/{id}/{arg}", Pattern.compile("app/api/v1/book/foo/(?<p0>[^/]+)/(?<p1>[^/]+)"));

  private final Route GET_processor_test_Gym_index = new Route("app/api/v1/gym");

  private final Route GET_processor_test_Gym_create = new Route("app/api/v1/gym/create");

  private final ParameterizedRoute GET_processor_test_Gym_show = new ParameterizedRoute("app/api/v1/gym/{id}", Pattern.compile("app/api/v1/gym/(?<p0>[^/]+)"));

  private final Route GET_processor_test_BookController_htmlIndex = new Route("app/book");

  private final ParameterizedRoute GET_processor_test_BookController_show = new ParameterizedRoute("app/book/{id}", Pattern.compile("app/book/(?<p0>[^/]+)"));

  private final ParameterizedRoute GET_processor_test_BookController_edit = new ParameterizedRoute("app/book/{id}/edit", Pattern.compile("app/book/(?<p0>[^/]+)/edit"));

  private final Route GET_processor_test_ClientController_create = new Route("app/create");

  private final Route GET_processor_test_Gym_htmlIndex = new Route("app/gym");

  private final ParameterizedRoute GET_processor_test_Gym_edit = new ParameterizedRoute("app/gym/{id}/edit", Pattern.compile("app/gym/(?<p0>[^/]+)/edit"));

  private final Route POST_processor_test_ClientController_save = new Route("app/api/v1");

  private final Route POST_processor_test_BookController_save = new Route("app/api/v1/book");

  private final Route POST_processor_test_Gym_save = new Route("app/api/v1/gym");

  private final ParameterizedRoute PUT_processor_test_BookController_update = new ParameterizedRoute("app/api/v1/book/{id}", Pattern.compile("app/api/v1/book/(?<p0>[^/]+)"));

  private final ParameterizedRoute PUT_processor_test_Gym_update = new ParameterizedRoute("app/api/v1/gym/{id}", Pattern.compile("app/api/v1/gym/(?<p0>[^/]+)"));

  private final ParameterizedRoute DELETE_processor_test_BookController_delete = new ParameterizedRoute("app/api/v1/book/{id}", Pattern.compile("app/api/v1/book/(?<p0>[^/]+)"));

  private final ParameterizedRoute DELETE_processor_test_Gym_delete = new ParameterizedRoute("app/api/v1/gym/{id}", Pattern.compile("app/api/v1/gym/(?<p0>[^/]+)"));

  @Override
  public void doGet(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    final String[] routeParameters = new String[]{null, null, null, null};
    if (GET_processor_test_ClientController_htmlIndex.matches(request)) {
      handle(new ClientController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.htmlIndex());
      return;
    }
    if (GET_processor_test_ClientController_index.matches(request)) {
      handle(new ClientController(request, response), (controller) -> controller.index());
      return;
    }
    if (GET_processor_test_BookController_index.matches(request)) {
      handle(new BookController(request, response), (controller) -> controller.index());
      return;
    }
    if (GET_processor_test_BookController_bar.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      final Cursor c = Interpret.asCursor(routeParameters[1]);
      final String arg = Interpret.asString(routeParameters[2]);
      handle(new BookController(request, response), (controller) -> controller.bar(id,c,arg));
      return;
    }
    if (GET_processor_test_BookController_create.matches(request)) {
      handle(new BookController(request, response), (controller) -> controller.create());
      return;
    }
    if (GET_processor_test_BookController_foo.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      final String arg = Interpret.asString(routeParameters[1]);
      handle(new BookController(request, response), (controller) -> OAuth2Flow.Director.of(controller).authorize((c) -> c.foo(id,arg)));
      return;
    }
    if (GET_processor_test_Gym_index.matches(request)) {
      handle(new Gym(request, response), (controller) -> controller.index());
      return;
    }
    if (GET_processor_test_Gym_create.matches(request)) {
      handle(new Gym(request, response), (controller) -> controller.create());
      return;
    }
    if (GET_processor_test_Gym_show.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new Gym(request, response), (controller) -> controller.show(id));
      return;
    }
    if (GET_processor_test_BookController_htmlIndex.matches(request)) {
      handle(new BookController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.htmlIndex());
      return;
    }
    if (GET_processor_test_BookController_show.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new BookController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.show(id));
      return;
    }
    if (GET_processor_test_BookController_edit.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new BookController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.edit(id));
      return;
    }
    if (GET_processor_test_ClientController_create.matches(request)) {
      handle(new ClientController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.create());
      return;
    }
    if (GET_processor_test_Gym_htmlIndex.matches(request)) {
      handle(new Gym(request, response, webContext(request, response), templateEngine()), (controller) -> controller.htmlIndex());
      return;
    }
    if (GET_processor_test_Gym_edit.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new Gym(request, response, webContext(request, response), templateEngine()), (controller) -> controller.edit(id));
      return;
    }
    unhandledGet(request, response);
  }

  @Override
  public void doPost(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    if (POST_processor_test_ClientController_save.matches(request)) {
      handle(new ClientController(request, response), (controller) -> controller.save());
      return;
    }
    if (POST_processor_test_BookController_save.matches(request)) {
      handle(new BookController(request, response), (controller) -> controller.save());
      return;
    }
    if (POST_processor_test_Gym_save.matches(request)) {
      handle(new Gym(request, response), (controller) -> controller.save());
      return;
    }
    unhandledPost(request, response);
  }

  @Override
  public void doPut(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    final String[] routeParameters = new String[]{null, null};
    if (PUT_processor_test_BookController_update.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new BookController(request, response), (controller) -> controller.update(id));
      return;
    }
    if (PUT_processor_test_Gym_update.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new Gym(request, response), (controller) -> controller.update(id));
      return;
    }
    unhandledPut(request, response);
  }

  @Override
  public void doDelete(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    final String[] routeParameters = new String[]{null, null};
    if (DELETE_processor_test_BookController_delete.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new BookController(request, response), (controller) -> controller.delete(id));
      return;
    }
    if (DELETE_processor_test_Gym_delete.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new Gym(request, response), (controller) -> controller.delete(id));
      return;
    }
    unhandledDelete(request, response);
  }
}


Actual Source:
==============

package processor.test;

import ae.web.Interpret;
import ae.web.OAuth2Flow;
import ae.web.ParameterizedRoute;
import ae.web.Route;
import ae.web.RouterServlet;
import com.google.appengine.api.datastore.Cursor;
import java.io.IOException;
import java.util.regex.Pattern;
import javax.annotation.Generated;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@Generated(
    value = "AE/web-processor",
    comments = "",
    date = "2017-02-23"
)
abstract class SigexRouter extends RouterServlet {
  private static final long serialVersionUID = 1487851200000L;

  private final Route GET_processor_test_ClientController_htmlIndex = new Route("/app");

  private final Route GET_processor_test_ClientController_index = new Route("/app/api/v1");

  private final Route GET_processor_test_BookController_index = new Route("/app/api/v1/book");

  private final ParameterizedRoute GET_processor_test_BookController_bar = new ParameterizedRoute("/app/api/v1/book/bar/{id}/{cursor}/{arg}", Pattern.compile("/app/api/v1/book/bar/(?<p0>[^/]+)/(?<p1>[^/]+)/(?<p2>[^/]+)"));

  private final Route GET_processor_test_BookController_create = new Route("/app/api/v1/book/create");

  private final ParameterizedRoute GET_processor_test_BookController_foo = new ParameterizedRoute("/app/api/v1/book/foo/{id}/{arg}", Pattern.compile("/app/api/v1/book/foo/(?<p0>[^/]+)/(?<p1>[^/]+)"));

  private final Route GET_processor_test_Gym_index = new Route("/app/api/v1/gym");

  private final Route GET_processor_test_Gym_create = new Route("/app/api/v1/gym/create");

  private final ParameterizedRoute GET_processor_test_Gym_show = new ParameterizedRoute("/app/api/v1/gym/{id}", Pattern.compile("/app/api/v1/gym/(?<p0>[^/]+)"));

  private final Route GET_processor_test_BookController_htmlIndex = new Route("/app/book");

  private final ParameterizedRoute GET_processor_test_BookController_show = new ParameterizedRoute("/app/book/{id}", Pattern.compile("/app/book/(?<p0>[^/]+)"));

  private final ParameterizedRoute GET_processor_test_BookController_edit = new ParameterizedRoute("/app/book/{id}/edit", Pattern.compile("/app/book/(?<p0>[^/]+)/edit"));

  private final Route GET_processor_test_ClientController_create = new Route("/app/create");

  private final Route GET_processor_test_Gym_htmlIndex = new Route("/app/gym");

  private final ParameterizedRoute GET_processor_test_Gym_edit = new ParameterizedRoute("/app/gym/{id}/edit", Pattern.compile("/app/gym/(?<p0>[^/]+)/edit"));

  private final Route POST_processor_test_ClientController_save = new Route("/app/api/v1");

  private final Route POST_processor_test_BookController_save = new Route("/app/api/v1/book");

  private final Route POST_processor_test_Gym_save = new Route("/app/api/v1/gym");

  private final ParameterizedRoute PUT_processor_test_BookController_update = new ParameterizedRoute("/app/api/v1/book/{id}", Pattern.compile("/app/api/v1/book/(?<p0>[^/]+)"));

  private final ParameterizedRoute PUT_processor_test_Gym_update = new ParameterizedRoute("/app/api/v1/gym/{id}", Pattern.compile("/app/api/v1/gym/(?<p0>[^/]+)"));

  private final ParameterizedRoute DELETE_processor_test_BookController_delete = new ParameterizedRoute("/app/api/v1/book/{id}", Pattern.compile("/app/api/v1/book/(?<p0>[^/]+)"));

  private final ParameterizedRoute DELETE_processor_test_Gym_delete = new ParameterizedRoute("/app/api/v1/gym/{id}", Pattern.compile("/app/api/v1/gym/(?<p0>[^/]+)"));

  @Override
  public void doGet(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    final String[] routeParameters = new String[]{null, null, null, null};
    if (GET_processor_test_ClientController_htmlIndex.matches(request)) {
      handle(new ClientController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.htmlIndex());
      return;
    }
    if (GET_processor_test_ClientController_index.matches(request)) {
      handle(new ClientController(request, response), (controller) -> controller.index());
      return;
    }
    if (GET_processor_test_BookController_index.matches(request)) {
      handle(new BookController(request, response), (controller) -> controller.index());
      return;
    }
    if (GET_processor_test_BookController_bar.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      final Cursor c = Interpret.asCursor(routeParameters[1]);
      final String arg = Interpret.asString(routeParameters[2]);
      handle(new BookController(request, response), (controller) -> controller.bar(id,c,arg));
      return;
    }
    if (GET_processor_test_BookController_create.matches(request)) {
      handle(new BookController(request, response), (controller) -> controller.create());
      return;
    }
    if (GET_processor_test_BookController_foo.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      final String arg = Interpret.asString(routeParameters[1]);
      handle(new BookController(request, response), (controller) -> OAuth2Flow.Director.of(controller).authorize((c) -> c.foo(id,arg)));
      return;
    }
    if (GET_processor_test_Gym_index.matches(request)) {
      handle(new Gym(request, response), (controller) -> controller.index());
      return;
    }
    if (GET_processor_test_Gym_create.matches(request)) {
      handle(new Gym(request, response), (controller) -> controller.create());
      return;
    }
    if (GET_processor_test_Gym_show.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new Gym(request, response), (controller) -> controller.show(id));
      return;
    }
    if (GET_processor_test_BookController_htmlIndex.matches(request)) {
      handle(new BookController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.htmlIndex());
      return;
    }
    if (GET_processor_test_BookController_show.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new BookController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.show(id));
      return;
    }
    if (GET_processor_test_BookController_edit.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new BookController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.edit(id));
      return;
    }
    if (GET_processor_test_ClientController_create.matches(request)) {
      handle(new ClientController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.create());
      return;
    }
    if (GET_processor_test_Gym_htmlIndex.matches(request)) {
      handle(new Gym(request, response, webContext(request, response), templateEngine()), (controller) -> controller.htmlIndex());
      return;
    }
    if (GET_processor_test_Gym_edit.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new Gym(request, response, webContext(request, response), templateEngine()), (controller) -> controller.edit(id));
      return;
    }
    unhandledGet(request, response);
  }

  @Override
  public void doPost(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    if (POST_processor_test_ClientController_save.matches(request)) {
      handle(new ClientController(request, response), (controller) -> controller.save());
      return;
    }
    if (POST_processor_test_BookController_save.matches(request)) {
      handle(new BookController(request, response), (controller) -> controller.save());
      return;
    }
    if (POST_processor_test_Gym_save.matches(request)) {
      handle(new Gym(request, response), (controller) -> controller.save());
      return;
    }
    unhandledPost(request, response);
  }

  @Override
  public void doPut(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    final String[] routeParameters = new String[]{null, null};
    if (PUT_processor_test_BookController_update.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new BookController(request, response), (controller) -> controller.update(id));
      return;
    }
    if (PUT_processor_test_Gym_update.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new Gym(request, response), (controller) -> controller.update(id));
      return;
    }
    unhandledPut(request, response);
  }

  @Override
  public void doDelete(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    final String[] routeParameters = new String[]{null, null};
    if (DELETE_processor_test_BookController_delete.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new BookController(request, response), (controller) -> controller.delete(id));
      return;
    }
    if (DELETE_processor_test_Gym_delete.matches(request, routeParameters)) {
      final long id = Interpret.asPrimitiveLong(routeParameters[0]);
      handle(new Gym(request, response), (controller) -> controller.delete(id));
      return;
    }
    unhandledDelete(request, response);
  }
}

[ERROR]   RoutesProcessingTest.should_compile_with_roles_constraints_defined:71 Not true that </SOURCE_OUTPUT/processor/test/RolesRouter.java> is equivalent to </root/workspace/matero/ae/435127099/web-processor/target/test-classes/generated/routes/RolesRouter.java>.

Diffs:
======

Found 4 nodes that differed in expected and actual trees. 

> Difference in expected tree and actual tree.
  Expected node: Line 19 COMPILATION_UNIT->CLASS(RolesRouter)->VARIABLE(GET_processor_test_FooController_index)->NEW_CLASS->STRING_LITERAL(app/api/v1/foo)
  Actual node: Line 19 COMPILATION_UNIT->CLASS(RolesRouter)->VARIABLE(GET_processor_test_FooController_index)->NEW_CLASS->STRING_LITERAL(/app/api/v1/foo)
  Expected literal value to be <app/api/v1/foo> but was </app/api/v1/foo>.

> Difference in expected tree and actual tree.
  Expected node: Line 21 COMPILATION_UNIT->CLASS(RolesRouter)->VARIABLE(GET_processor_test_FooController_htmlIndex)->NEW_CLASS->STRING_LITERAL(app/foo)
  Actual node: Line 21 COMPILATION_UNIT->CLASS(RolesRouter)->VARIABLE(GET_processor_test_FooController_htmlIndex)->NEW_CLASS->STRING_LITERAL(/app/foo)
  Expected literal value to be <app/foo> but was </app/foo>.

> Difference in expected tree and actual tree.
  Expected node: Line 23 COMPILATION_UNIT->CLASS(RolesRouter)->VARIABLE(GET_processor_test_FooController_create)->NEW_CLASS->STRING_LITERAL(app/foo/create)
  Actual node: Line 23 COMPILATION_UNIT->CLASS(RolesRouter)->VARIABLE(GET_processor_test_FooController_create)->NEW_CLASS->STRING_LITERAL(/app/foo/create)
  Expected literal value to be <app/foo/create> but was </app/foo/create>.

> Difference in expected tree and actual tree.
  Expected node: Line 25 COMPILATION_UNIT->CLASS(RolesRouter)->VARIABLE(POST_processor_test_FooController_save)->NEW_CLASS->STRING_LITERAL(app/api/v1/foo)
  Actual node: Line 25 COMPILATION_UNIT->CLASS(RolesRouter)->VARIABLE(POST_processor_test_FooController_save)->NEW_CLASS->STRING_LITERAL(/app/api/v1/foo)
  Expected literal value to be <app/api/v1/foo> but was </app/api/v1/foo>.


Expected Source:
================

package processor.test;

import ae.web.Route;
import ae.web.RouterWithRoleConstraintsServlet;
import java.io.IOException;
import javax.annotation.Generated;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@Generated(
    value = "AE/web-processor",
    comments = "",
    date = "2017-02-23"
)
abstract class RolesRouter extends RouterWithRoleConstraintsServlet {
  private static final long serialVersionUID = 1487851200000L;

  private final Route GET_processor_test_FooController_index = new Route("app/api/v1/foo");

  private final Route GET_processor_test_FooController_htmlIndex = new Route("app/foo");

  private final Route GET_processor_test_FooController_create = new Route("app/foo/create");

  private final Route POST_processor_test_FooController_save = new Route("app/api/v1/foo");

  @Override
  public void doGet(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    if (GET_processor_test_FooController_index.matches(request)) {
      handle(new FooController(request, response), (controller) -> controller.index());
      return;
    }
    if (loggedUserHas("r1") && GET_processor_test_FooController_htmlIndex.matches(request)) {
      handle(new FooController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.htmlIndex());
      return;
    }
    if (loggedUserHasOneOf("r1", "r2") && GET_processor_test_FooController_create.matches(request)) {
      handle(new FooController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.create());
      return;
    }
    unhandledGet(request, response);
  }

  @Override
  public void doPost(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    if (POST_processor_test_FooController_save.matches(request)) {
      handle(new FooController(request, response), (controller) -> controller.save());
      return;
    }
    unhandledPost(request, response);
  }
}


Actual Source:
==============

package processor.test;

import ae.web.Route;
import ae.web.RouterWithRoleConstraintsServlet;
import java.io.IOException;
import javax.annotation.Generated;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@Generated(
    value = "AE/web-processor",
    comments = "",
    date = "2017-02-23"
)
abstract class RolesRouter extends RouterWithRoleConstraintsServlet {
  private static final long serialVersionUID = 1487851200000L;

  private final Route GET_processor_test_FooController_index = new Route("/app/api/v1/foo");

  private final Route GET_processor_test_FooController_htmlIndex = new Route("/app/foo");

  private final Route GET_processor_test_FooController_create = new Route("/app/foo/create");

  private final Route POST_processor_test_FooController_save = new Route("/app/api/v1/foo");

  @Override
  public void doGet(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    if (GET_processor_test_FooController_index.matches(request)) {
      handle(new FooController(request, response), (controller) -> controller.index());
      return;
    }
    if (loggedUserHas("r1") && GET_processor_test_FooController_htmlIndex.matches(request)) {
      handle(new FooController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.htmlIndex());
      return;
    }
    if (loggedUserHasOneOf("r1", "r2") && GET_processor_test_FooController_create.matches(request)) {
      handle(new FooController(request, response, webContext(request, response), templateEngine()), (controller) -> controller.create());
      return;
    }
    unhandledGet(request, response);
  }

  @Override
  public void doPost(final HttpServletRequest request, final HttpServletResponse response) throws
      ServletException, IOException {
    if (POST_processor_test_FooController_save.matches(request)) {
      handle(new FooController(request, response), (controller) -> controller.save());
      return;
    }
    unhandledPost(request, response);
  }
}

[INFO] 
[ERROR] Tests run: 2, Failures: 2, Errors: 0, Skipped: 0
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] ActiveEngine ....................................... SUCCESS [  1.250 s]
[INFO] AE/annotation-processor ............................ SUCCESS [  0.604 s]
[INFO] AE/db .............................................. SUCCESS [  2.496 s]
[INFO] AE/db-metadata ..................................... SUCCESS [  0.387 s]
[INFO] AE/db-processor .................................... SUCCESS [  2.728 s]
[INFO] AE/web ............................................. SUCCESS [  0.066 s]
[INFO] AE/web-metadata .................................... SUCCESS [  0.032 s]
[INFO] AE/web-processor ................................... FAILURE [  4.156 s]
[INFO] AE/web-test ........................................ SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 11.919 s
[INFO] Finished at: 2018-09-30T02:26:20+02:00
[INFO] Final Memory: 32M/510M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.20.1:test (default-test) on project web-processor: There are test failures.
[ERROR] 
[ERROR] Please refer to /root/workspace/matero/ae/435127099/web-processor/target/surefire-reports for the individual test results.
[ERROR] Please refer to dump files (if any exist) [date]-jvmRun[N].dump, [date].dumpstream and [date]-jvmRun[N].dumpstream.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <goals> -rf :web-processor
