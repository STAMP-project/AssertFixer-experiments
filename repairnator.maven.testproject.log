[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building tg_sysrlog 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:3.0.1:resources (default-resources) @ tg_sysrlog ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 3 resources
[INFO] Copying 21 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ tg_sysrlog ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:3.0.1:testResources (default-testResources) @ tg_sysrlog ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/JoaoVFG/sysrlog/411577462/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ tg_sysrlog ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.21.0:test (default-test) @ tg_sysrlog ---
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.21.0/surefire-junit4-2.21.0.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.21.0/surefire-junit4-2.21.0.pom (4 KB at 5.9 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.21.0/surefire-providers-2.21.0.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.21.0/surefire-providers-2.21.0.pom (3 KB at 111.6 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.21.0/surefire-junit4-2.21.0.jar
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.21.0/surefire-junit4-2.21.0.jar (83 KB at 1722.1 KB/sec)
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running JoaoVFG.com.github.TestsPessoaService
05:51:01.606 [main] DEBUG org.springframework.test.context.junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class JoaoVFG.com.github.TestsPessoaService]
05:51:01.614 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
05:51:01.622 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
05:51:01.642 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [JoaoVFG.com.github.TestsPessoaService] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
05:51:01.655 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [JoaoVFG.com.github.TestsPessoaService], using SpringBootContextLoader
05:51:01.658 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [JoaoVFG.com.github.TestsPessoaService]: class path resource [JoaoVFG/com/github/TestsPessoaService-context.xml] does not exist
05:51:01.659 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [JoaoVFG.com.github.TestsPessoaService]: class path resource [JoaoVFG/com/github/TestsPessoaServiceContext.groovy] does not exist
05:51:01.659 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [JoaoVFG.com.github.TestsPessoaService]: no resource found for suffixes {-context.xml, Context.groovy}.
05:51:01.660 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [JoaoVFG.com.github.TestsPessoaService]: TestsPessoaService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
05:51:01.703 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [JoaoVFG.com.github.TestsPessoaService]
05:51:01.713 [main] DEBUG org.springframework.core.env.StandardEnvironment - Adding PropertySource 'systemProperties' with lowest search precedence
05:51:01.713 [main] DEBUG org.springframework.core.env.StandardEnvironment - Adding PropertySource 'systemEnvironment' with lowest search precedence
05:51:01.714 [main] DEBUG org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [MapPropertySource@1825027294 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.121-b13, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, skip.gulp=true, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, findbugs.skip=true, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/root/workspace/JoaoVFG/sysrlog/411577462, checkstyle.skip=true, java.runtime.version=1.8.0_121-8u121-b13-1~bpo8+1-b13, skip.npm=true, basedir=/root/workspace/JoaoVFG/sysrlog/411577462, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, surefire.real.class.path=/root/workspace/JoaoVFG/sysrlog/411577462/target/surefire/surefirebooter8765789512324249418.jar, gpg.skip=true, java.io.tmpdir=/tmp, line.separator=
, cobertura.skip=true, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, license.skip=true, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, surefire.test.class.path=/root/workspace/JoaoVFG/sysrlog/411577462/target/test-classes:/root/workspace/JoaoVFG/sysrlog/411577462/target/classes:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-web/2.0.3.RELEASE/spring-boot-starter-web-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter/2.0.3.RELEASE/spring-boot-starter-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-logging/2.0.3.RELEASE/spring-boot-starter-logging-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/logging/log4j/log4j-to-slf4j/2.10.0/log4j-to-slf4j-2.10.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-json/2.0.3.RELEASE/spring-boot-starter-json-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/core/jackson-databind/2.9.6/jackson-databind-2.9.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/core/jackson-core/2.9.6/jackson-core-2.9.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.9.6/jackson-datatype-jdk8-2.9.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.9.6/jackson-datatype-jsr310-2.9.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/module/jackson-module-parameter-names/2.9.6/jackson-module-parameter-names-2.9.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-tomcat/2.0.3.RELEASE/spring-boot-starter-tomcat-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/tomcat/embed/tomcat-embed-core/8.5.31/tomcat-embed-core-8.5.31.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/tomcat/embed/tomcat-embed-el/8.5.31/tomcat-embed-el-8.5.31.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/tomcat/embed/tomcat-embed-websocket/8.5.31/tomcat-embed-websocket-8.5.31.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hibernate/validator/hibernate-validator/6.0.10.Final/hibernate-validator-6.0.10.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-web/5.0.7.RELEASE/spring-web-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-beans/5.0.7.RELEASE/spring-beans-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-webmvc/5.0.7.RELEASE/spring-webmvc-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-aop/5.0.7.RELEASE/spring-aop-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-expression/5.0.7.RELEASE/spring-expression-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-test/2.0.3.RELEASE/spring-boot-starter-test-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-test/2.0.3.RELEASE/spring-boot-test-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-test-autoconfigure/2.0.3.RELEASE/spring-boot-test-autoconfigure-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/jayway/jsonpath/json-path/2.4.0/json-path-2.4.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/net/minidev/json-smart/2.3/json-smart-2.3.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/net/minidev/accessors-smart/1.2/accessors-smart-1.2.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/ow2/asm/asm/5.0.4/asm-5.0.4.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/junit/junit/4.12/junit-4.12.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/assertj/assertj-core/3.9.1/assertj-core-3.9.1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/mockito/mockito-core/2.15.0/mockito-core-2.15.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/net/bytebuddy/byte-buddy/1.7.11/byte-buddy-1.7.11.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/net/bytebuddy/byte-buddy-agent/1.7.11/byte-buddy-agent-1.7.11.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/objenesis/objenesis/2.6/objenesis-2.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/skyscreamer/jsonassert/1.5.0/jsonassert-1.5.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-core/5.0.7.RELEASE/spring-core-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-jcl/5.0.7.RELEASE/spring-jcl-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-test/5.0.7.RELEASE/spring-test-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/xmlunit/xmlunit-core/2.5.1/xmlunit-core-2.5.1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-data-jpa/2.0.3.RELEASE/spring-boot-starter-data-jpa-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-aop/2.0.3.RELEASE/spring-boot-starter-aop-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/aspectj/aspectjweaver/1.8.13/aspectjweaver-1.8.13.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-jdbc/2.0.3.RELEASE/spring-boot-starter-jdbc-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/zaxxer/HikariCP/2.7.9/HikariCP-2.7.9.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-jdbc/5.0.7.RELEASE/spring-jdbc-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hibernate/hibernate-core/5.2.17.Final/hibernate-core-5.2.17.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.2.Final/hibernate-jpa-2.1-api-1.0.2.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/javassist/javassist/3.22.0-GA/javassist-3.22.0-GA.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/antlr/antlr/2.7.7/antlr-2.7.7.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/javax/transaction/javax.transaction-api/1.2/javax.transaction-api-1.2.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/data/spring-data-jpa/2.0.8.RELEASE/spring-data-jpa-2.0.8.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/data/spring-data-commons/2.0.8.RELEASE/spring-data-commons-2.0.8.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-orm/5.0.7.RELEASE/spring-orm-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-tx/5.0.7.RELEASE/spring-tx-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-aspects/5.0.7.RELEASE/spring-aspects-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-mail/2.0.3.RELEASE/spring-boot-starter-mail-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-context/5.0.7.RELEASE/spring-context-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-context-support/5.0.7.RELEASE/spring-context-support-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/sun/mail/javax.mail/1.6.1/javax.mail-1.6.1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/javax/activation/activation/1.1/activation-1.1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-thymeleaf/2.0.3.RELEASE/spring-boot-starter-thymeleaf-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/thymeleaf/thymeleaf-spring5/3.0.9.RELEASE/thymeleaf-spring5-3.0.9.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/thymeleaf/thymeleaf/3.0.9.RELEASE/thymeleaf-3.0.9.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/attoparser/attoparser/2.0.4.RELEASE/attoparser-2.0.4.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/unbescape/unbescape/1.1.5.RELEASE/unbescape-1.1.5.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/thymeleaf/extras/thymeleaf-extras-java8time/3.0.1.RELEASE/thymeleaf-extras-java8time-3.0.1.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-devtools/2.0.3.RELEASE/spring-boot-devtools-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot/2.0.3.RELEASE/spring-boot-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-autoconfigure/2.0.3.RELEASE/spring-boot-autoconfigure-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/h2database/h2/1.4.197/h2-1.4.197.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/mysql/mysql-connector-java/5.1.46/mysql-connector-java-5.1.46.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/liquibase/liquibase-core/3.5.5/liquibase-core-3.5.5.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/yaml/snakeyaml/1.19/snakeyaml-1.19.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/projectlombok/lombok/1.16.22/lombok-1.16.22.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/httpcomponents/httpclient/4.5.5/httpclient-4.5.5.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/httpcomponents/httpcore/4.4.9/httpcore-4.4.9.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/glassfish/javax.json/1.0.4/javax.json-1.0.4.jar:, java.specification.name=Java Platform API Specification, java.class.version=52.0, skip.bower=true, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, maven.repo.local=/root/./workspace/JoaoVFG/sysrlog/411577462/.m2, os.version=3.10.0-862.3.2.el7.x86_64, user.home=/root, user.timezone=Europe/Paris, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/root/workspace/JoaoVFG/sysrlog/411577462/target/test-classes:/root/workspace/JoaoVFG/sysrlog/411577462/target/classes:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-web/2.0.3.RELEASE/spring-boot-starter-web-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter/2.0.3.RELEASE/spring-boot-starter-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-logging/2.0.3.RELEASE/spring-boot-starter-logging-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/logging/log4j/log4j-to-slf4j/2.10.0/log4j-to-slf4j-2.10.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-json/2.0.3.RELEASE/spring-boot-starter-json-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/core/jackson-databind/2.9.6/jackson-databind-2.9.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/core/jackson-core/2.9.6/jackson-core-2.9.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.9.6/jackson-datatype-jdk8-2.9.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.9.6/jackson-datatype-jsr310-2.9.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/module/jackson-module-parameter-names/2.9.6/jackson-module-parameter-names-2.9.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-tomcat/2.0.3.RELEASE/spring-boot-starter-tomcat-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/tomcat/embed/tomcat-embed-core/8.5.31/tomcat-embed-core-8.5.31.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/tomcat/embed/tomcat-embed-el/8.5.31/tomcat-embed-el-8.5.31.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/tomcat/embed/tomcat-embed-websocket/8.5.31/tomcat-embed-websocket-8.5.31.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hibernate/validator/hibernate-validator/6.0.10.Final/hibernate-validator-6.0.10.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-web/5.0.7.RELEASE/spring-web-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-beans/5.0.7.RELEASE/spring-beans-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-webmvc/5.0.7.RELEASE/spring-webmvc-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-aop/5.0.7.RELEASE/spring-aop-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-expression/5.0.7.RELEASE/spring-expression-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-test/2.0.3.RELEASE/spring-boot-starter-test-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-test/2.0.3.RELEASE/spring-boot-test-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-test-autoconfigure/2.0.3.RELEASE/spring-boot-test-autoconfigure-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/jayway/jsonpath/json-path/2.4.0/json-path-2.4.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/net/minidev/json-smart/2.3/json-smart-2.3.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/net/minidev/accessors-smart/1.2/accessors-smart-1.2.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/ow2/asm/asm/5.0.4/asm-5.0.4.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/junit/junit/4.12/junit-4.12.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/assertj/assertj-core/3.9.1/assertj-core-3.9.1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/mockito/mockito-core/2.15.0/mockito-core-2.15.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/net/bytebuddy/byte-buddy/1.7.11/byte-buddy-1.7.11.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/net/bytebuddy/byte-buddy-agent/1.7.11/byte-buddy-agent-1.7.11.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/objenesis/objenesis/2.6/objenesis-2.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/skyscreamer/jsonassert/1.5.0/jsonassert-1.5.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-core/5.0.7.RELEASE/spring-core-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-jcl/5.0.7.RELEASE/spring-jcl-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-test/5.0.7.RELEASE/spring-test-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/xmlunit/xmlunit-core/2.5.1/xmlunit-core-2.5.1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-data-jpa/2.0.3.RELEASE/spring-boot-starter-data-jpa-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-aop/2.0.3.RELEASE/spring-boot-starter-aop-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/aspectj/aspectjweaver/1.8.13/aspectjweaver-1.8.13.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-jdbc/2.0.3.RELEASE/spring-boot-starter-jdbc-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/zaxxer/HikariCP/2.7.9/HikariCP-2.7.9.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-jdbc/5.0.7.RELEASE/spring-jdbc-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hibernate/hibernate-core/5.2.17.Final/hibernate-core-5.2.17.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.2.Final/hibernate-jpa-2.1-api-1.0.2.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/javassist/javassist/3.22.0-GA/javassist-3.22.0-GA.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/antlr/antlr/2.7.7/antlr-2.7.7.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/javax/transaction/javax.transaction-api/1.2/javax.transaction-api-1.2.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/data/spring-data-jpa/2.0.8.RELEASE/spring-data-jpa-2.0.8.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/data/spring-data-commons/2.0.8.RELEASE/spring-data-commons-2.0.8.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-orm/5.0.7.RELEASE/spring-orm-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-tx/5.0.7.RELEASE/spring-tx-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-aspects/5.0.7.RELEASE/spring-aspects-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-mail/2.0.3.RELEASE/spring-boot-starter-mail-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-context/5.0.7.RELEASE/spring-context-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-context-support/5.0.7.RELEASE/spring-context-support-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/sun/mail/javax.mail/1.6.1/javax.mail-1.6.1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/javax/activation/activation/1.1/activation-1.1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-thymeleaf/2.0.3.RELEASE/spring-boot-starter-thymeleaf-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/thymeleaf/thymeleaf-spring5/3.0.9.RELEASE/thymeleaf-spring5-3.0.9.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/thymeleaf/thymeleaf/3.0.9.RELEASE/thymeleaf-3.0.9.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/attoparser/attoparser/2.0.4.RELEASE/attoparser-2.0.4.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/unbescape/unbescape/1.1.5.RELEASE/unbescape-1.1.5.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/thymeleaf/extras/thymeleaf-extras-java8time/3.0.1.RELEASE/thymeleaf-extras-java8time-3.0.1.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-devtools/2.0.3.RELEASE/spring-boot-devtools-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot/2.0.3.RELEASE/spring-boot-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-autoconfigure/2.0.3.RELEASE/spring-boot-autoconfigure-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/h2database/h2/1.4.197/h2-1.4.197.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/mysql/mysql-connector-java/5.1.46/mysql-connector-java-5.1.46.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/liquibase/liquibase-core/3.5.5/liquibase-core-3.5.5.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/yaml/snakeyaml/1.19/snakeyaml-1.19.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/projectlombok/lombok/1.16.22/lombok-1.16.22.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/httpcomponents/httpclient/4.5.5/httpclient-4.5.5.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/httpcomponents/httpcore/4.4.9/httpcore-4.4.9.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/glassfish/javax.json/1.0.4/javax.json-1.0.4.jar:, user.name=root, skipITs=true, java.vm.specification.version=1.8, sun.java.command=/root/workspace/JoaoVFG/sysrlog/411577462/target/surefire/surefirebooter8765789512324249418.jar /root/workspace/JoaoVFG/sysrlog/411577462/target/surefire 2018-08-03T05-50-59_874-jvmRun1 surefire2866724075045359667tmp surefire_07743663107322815283tmp, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=en, java.specification.vendor=Oracle Corporation, dependency-check.skip=true, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_121, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, rat.skip=true, enforcer.skip=true, java.vendor=Oracle Corporation, localRepository=/root/./workspace/JoaoVFG/sysrlog/411577462/.m2, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@852445367 {name='systemEnvironment', properties={PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64, NOTIFY_TO=, CA_CERTIFICATES_JAVA_VERSION=20161107~bpo8+1, MONGODB_HOST=, BUILD_ID=, LANG=C.UTF-8, MAVEN_HOME=/usr/share/maven, SMTP_SERVER=, MONGODB_NAME=, REPAIR_MODE=repair, PWD=/root/workspace/JoaoVFG/sysrlog/411577462, JAVA_VERSION=8u121, GITHUB_OAUTH=, MAVEN_CMD_LINE_ARGS=/root/.m2 -B -D enforcer.skip=true -D dependency-check.skip=true -D skipITs=true -D cobertura.skip=true -D maven.repo.local=/root/./workspace/JoaoVFG/sysrlog/411577462/.m2 -D rat.skip=true -D findbugs.skip=true -D skip.bower=true -D gpg.skip=true -D checkstyle.skip=true -D skip.gulp=true -D license.skip=true -D skip.npm=true test, _=/usr/bin/java, OUTPUT=, MAVEN_TERMINATE_CMD=on, MAVEN_CONFIG=/root/.m2, MAVEN_PROJECTBASEDIR=/root/workspace/JoaoVFG/sysrlog/411577462, OLDPWD=/root/workspace/JoaoVFG/sysrlog/411577462, LOG_FILENAME=repairnator-pipeline_2018-08-03_0549_411577462_6927fb33-1ea7-4003-9018-b027a8f8f5e3, RUN_ID=, HOSTNAME=cyclone1, JAVA_DEBIAN_VERSION=8u121-b13-1~bpo8+1, M2_HOME=/usr/share/maven, REPAIR_TOOLS=AssertFixer, HOME=/root, SHLVL=1, PUSH_URL=}}]
05:51:01.734 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver - Resolved classpath location [JoaoVFG/com/github/] to resources [URL [file:/root/workspace/JoaoVFG/sysrlog/411577462/target/test-classes/JoaoVFG/com/github/], URL [file:/root/workspace/JoaoVFG/sysrlog/411577462/target/classes/JoaoVFG/com/github/]]
05:51:01.734 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [/root/workspace/JoaoVFG/sysrlog/411577462/target/test-classes/JoaoVFG/com/github]
05:51:01.734 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver - Searching directory [/root/workspace/JoaoVFG/sysrlog/411577462/target/test-classes/JoaoVFG/com/github] for files matching pattern [/root/workspace/JoaoVFG/sysrlog/411577462/target/test-classes/JoaoVFG/com/github/*.class]
05:51:01.740 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [/root/workspace/JoaoVFG/sysrlog/411577462/target/classes/JoaoVFG/com/github]
05:51:01.740 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver - Searching directory [/root/workspace/JoaoVFG/sysrlog/411577462/target/classes/JoaoVFG/com/github] for files matching pattern [/root/workspace/JoaoVFG/sysrlog/411577462/target/classes/JoaoVFG/com/github/*.class]
05:51:01.742 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:JoaoVFG/com/github/*.class] to resources [file [/root/workspace/JoaoVFG/sysrlog/411577462/target/test-classes/JoaoVFG/com/github/TestsCeps.class], file [/root/workspace/JoaoVFG/sysrlog/411577462/target/test-classes/JoaoVFG/com/github/TestsPessoaRepository.class], file [/root/workspace/JoaoVFG/sysrlog/411577462/target/test-classes/JoaoVFG/com/github/TestsPessoaService.class], file [/root/workspace/JoaoVFG/sysrlog/411577462/target/test-classes/JoaoVFG/com/github/TestsRota.class], file [/root/workspace/JoaoVFG/sysrlog/411577462/target/classes/JoaoVFG/com/github/TgSysrlogApplication.class]]
05:51:01.814 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/root/workspace/JoaoVFG/sysrlog/411577462/target/classes/JoaoVFG/com/github/TgSysrlogApplication.class]
05:51:01.816 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration JoaoVFG.com.github.TgSysrlogApplication for test class JoaoVFG.com.github.TestsPessoaService
05:51:01.978 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [JoaoVFG.com.github.TestsPessoaService]: using defaults.
05:51:01.979 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
05:51:02.002 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@279fedbd, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@b3ca52e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@45c7e403, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@2925bf5b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@710f4dc7, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1ff4931d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@65e98b1c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@61322f9d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6ad82709, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@510f3d34, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7817fd62, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@8297b3a]
05:51:02.005 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [JoaoVFG.com.github.TestsPessoaService]
05:51:02.006 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [JoaoVFG.com.github.TestsPessoaService]
05:51:02.010 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [JoaoVFG.com.github.TestsPessoaService]
05:51:02.010 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [JoaoVFG.com.github.TestsPessoaService]
05:51:02.011 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [JoaoVFG.com.github.TestsPessoaService]
05:51:02.011 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [JoaoVFG.com.github.TestsPessoaService]
05:51:02.017 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@22fcf7ab testClass = TestsPessoaService, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2de23121 testClass = TestsPessoaService, locations = '{}', classes = '{class JoaoVFG.com.github.TgSysrlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@548ad73b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@727803de, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@587c290d, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@80169cf], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
05:51:02.018 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [JoaoVFG.com.github.TestsPessoaService]
05:51:02.018 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [JoaoVFG.com.github.TestsPessoaService]
05:51:02.050 [main] DEBUG org.springframework.core.env.StandardEnvironment - Adding PropertySource 'systemProperties' with lowest search precedence
05:51:02.050 [main] DEBUG org.springframework.core.env.StandardEnvironment - Adding PropertySource 'systemEnvironment' with lowest search precedence
05:51:02.051 [main] DEBUG org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [MapPropertySource@265321659 {name='systemProperties', properties={java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.vm.version=25.121-b13, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, skip.gulp=true, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, findbugs.skip=true, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/root/workspace/JoaoVFG/sysrlog/411577462, checkstyle.skip=true, java.runtime.version=1.8.0_121-8u121-b13-1~bpo8+1-b13, skip.npm=true, basedir=/root/workspace/JoaoVFG/sysrlog/411577462, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, os.arch=amd64, surefire.real.class.path=/root/workspace/JoaoVFG/sysrlog/411577462/target/surefire/surefirebooter8765789512324249418.jar, gpg.skip=true, java.io.tmpdir=/tmp, line.separator=
, cobertura.skip=true, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, license.skip=true, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, surefire.test.class.path=/root/workspace/JoaoVFG/sysrlog/411577462/target/test-classes:/root/workspace/JoaoVFG/sysrlog/411577462/target/classes:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-web/2.0.3.RELEASE/spring-boot-starter-web-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter/2.0.3.RELEASE/spring-boot-starter-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-logging/2.0.3.RELEASE/spring-boot-starter-logging-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/logging/log4j/log4j-to-slf4j/2.10.0/log4j-to-slf4j-2.10.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-json/2.0.3.RELEASE/spring-boot-starter-json-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/core/jackson-databind/2.9.6/jackson-databind-2.9.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/core/jackson-core/2.9.6/jackson-core-2.9.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.9.6/jackson-datatype-jdk8-2.9.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.9.6/jackson-datatype-jsr310-2.9.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/module/jackson-module-parameter-names/2.9.6/jackson-module-parameter-names-2.9.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-tomcat/2.0.3.RELEASE/spring-boot-starter-tomcat-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/tomcat/embed/tomcat-embed-core/8.5.31/tomcat-embed-core-8.5.31.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/tomcat/embed/tomcat-embed-el/8.5.31/tomcat-embed-el-8.5.31.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/tomcat/embed/tomcat-embed-websocket/8.5.31/tomcat-embed-websocket-8.5.31.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hibernate/validator/hibernate-validator/6.0.10.Final/hibernate-validator-6.0.10.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-web/5.0.7.RELEASE/spring-web-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-beans/5.0.7.RELEASE/spring-beans-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-webmvc/5.0.7.RELEASE/spring-webmvc-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-aop/5.0.7.RELEASE/spring-aop-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-expression/5.0.7.RELEASE/spring-expression-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-test/2.0.3.RELEASE/spring-boot-starter-test-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-test/2.0.3.RELEASE/spring-boot-test-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-test-autoconfigure/2.0.3.RELEASE/spring-boot-test-autoconfigure-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/jayway/jsonpath/json-path/2.4.0/json-path-2.4.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/net/minidev/json-smart/2.3/json-smart-2.3.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/net/minidev/accessors-smart/1.2/accessors-smart-1.2.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/ow2/asm/asm/5.0.4/asm-5.0.4.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/junit/junit/4.12/junit-4.12.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/assertj/assertj-core/3.9.1/assertj-core-3.9.1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/mockito/mockito-core/2.15.0/mockito-core-2.15.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/net/bytebuddy/byte-buddy/1.7.11/byte-buddy-1.7.11.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/net/bytebuddy/byte-buddy-agent/1.7.11/byte-buddy-agent-1.7.11.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/objenesis/objenesis/2.6/objenesis-2.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/skyscreamer/jsonassert/1.5.0/jsonassert-1.5.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-core/5.0.7.RELEASE/spring-core-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-jcl/5.0.7.RELEASE/spring-jcl-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-test/5.0.7.RELEASE/spring-test-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/xmlunit/xmlunit-core/2.5.1/xmlunit-core-2.5.1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-data-jpa/2.0.3.RELEASE/spring-boot-starter-data-jpa-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-aop/2.0.3.RELEASE/spring-boot-starter-aop-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/aspectj/aspectjweaver/1.8.13/aspectjweaver-1.8.13.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-jdbc/2.0.3.RELEASE/spring-boot-starter-jdbc-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/zaxxer/HikariCP/2.7.9/HikariCP-2.7.9.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-jdbc/5.0.7.RELEASE/spring-jdbc-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hibernate/hibernate-core/5.2.17.Final/hibernate-core-5.2.17.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.2.Final/hibernate-jpa-2.1-api-1.0.2.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/javassist/javassist/3.22.0-GA/javassist-3.22.0-GA.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/antlr/antlr/2.7.7/antlr-2.7.7.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/javax/transaction/javax.transaction-api/1.2/javax.transaction-api-1.2.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/data/spring-data-jpa/2.0.8.RELEASE/spring-data-jpa-2.0.8.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/data/spring-data-commons/2.0.8.RELEASE/spring-data-commons-2.0.8.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-orm/5.0.7.RELEASE/spring-orm-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-tx/5.0.7.RELEASE/spring-tx-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-aspects/5.0.7.RELEASE/spring-aspects-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-mail/2.0.3.RELEASE/spring-boot-starter-mail-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-context/5.0.7.RELEASE/spring-context-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-context-support/5.0.7.RELEASE/spring-context-support-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/sun/mail/javax.mail/1.6.1/javax.mail-1.6.1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/javax/activation/activation/1.1/activation-1.1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-thymeleaf/2.0.3.RELEASE/spring-boot-starter-thymeleaf-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/thymeleaf/thymeleaf-spring5/3.0.9.RELEASE/thymeleaf-spring5-3.0.9.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/thymeleaf/thymeleaf/3.0.9.RELEASE/thymeleaf-3.0.9.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/attoparser/attoparser/2.0.4.RELEASE/attoparser-2.0.4.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/unbescape/unbescape/1.1.5.RELEASE/unbescape-1.1.5.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/thymeleaf/extras/thymeleaf-extras-java8time/3.0.1.RELEASE/thymeleaf-extras-java8time-3.0.1.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-devtools/2.0.3.RELEASE/spring-boot-devtools-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot/2.0.3.RELEASE/spring-boot-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-autoconfigure/2.0.3.RELEASE/spring-boot-autoconfigure-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/h2database/h2/1.4.197/h2-1.4.197.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/mysql/mysql-connector-java/5.1.46/mysql-connector-java-5.1.46.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/liquibase/liquibase-core/3.5.5/liquibase-core-3.5.5.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/yaml/snakeyaml/1.19/snakeyaml-1.19.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/projectlombok/lombok/1.16.22/lombok-1.16.22.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/httpcomponents/httpclient/4.5.5/httpclient-4.5.5.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/httpcomponents/httpcore/4.4.9/httpcore-4.4.9.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/glassfish/javax.json/1.0.4/javax.json-1.0.4.jar:, java.specification.name=Java Platform API Specification, java.class.version=52.0, skip.bower=true, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, maven.repo.local=/root/./workspace/JoaoVFG/sysrlog/411577462/.m2, os.version=3.10.0-862.3.2.el7.x86_64, user.home=/root, user.timezone=Europe/Paris, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/root/workspace/JoaoVFG/sysrlog/411577462/target/test-classes:/root/workspace/JoaoVFG/sysrlog/411577462/target/classes:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-web/2.0.3.RELEASE/spring-boot-starter-web-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter/2.0.3.RELEASE/spring-boot-starter-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-logging/2.0.3.RELEASE/spring-boot-starter-logging-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/logging/log4j/log4j-to-slf4j/2.10.0/log4j-to-slf4j-2.10.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-json/2.0.3.RELEASE/spring-boot-starter-json-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/core/jackson-databind/2.9.6/jackson-databind-2.9.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/core/jackson-core/2.9.6/jackson-core-2.9.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.9.6/jackson-datatype-jdk8-2.9.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.9.6/jackson-datatype-jsr310-2.9.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/jackson/module/jackson-module-parameter-names/2.9.6/jackson-module-parameter-names-2.9.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-tomcat/2.0.3.RELEASE/spring-boot-starter-tomcat-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/tomcat/embed/tomcat-embed-core/8.5.31/tomcat-embed-core-8.5.31.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/tomcat/embed/tomcat-embed-el/8.5.31/tomcat-embed-el-8.5.31.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/tomcat/embed/tomcat-embed-websocket/8.5.31/tomcat-embed-websocket-8.5.31.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hibernate/validator/hibernate-validator/6.0.10.Final/hibernate-validator-6.0.10.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-web/5.0.7.RELEASE/spring-web-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-beans/5.0.7.RELEASE/spring-beans-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-webmvc/5.0.7.RELEASE/spring-webmvc-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-aop/5.0.7.RELEASE/spring-aop-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-expression/5.0.7.RELEASE/spring-expression-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-test/2.0.3.RELEASE/spring-boot-starter-test-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-test/2.0.3.RELEASE/spring-boot-test-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-test-autoconfigure/2.0.3.RELEASE/spring-boot-test-autoconfigure-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/jayway/jsonpath/json-path/2.4.0/json-path-2.4.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/net/minidev/json-smart/2.3/json-smart-2.3.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/net/minidev/accessors-smart/1.2/accessors-smart-1.2.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/ow2/asm/asm/5.0.4/asm-5.0.4.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/junit/junit/4.12/junit-4.12.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/assertj/assertj-core/3.9.1/assertj-core-3.9.1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/mockito/mockito-core/2.15.0/mockito-core-2.15.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/net/bytebuddy/byte-buddy/1.7.11/byte-buddy-1.7.11.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/net/bytebuddy/byte-buddy-agent/1.7.11/byte-buddy-agent-1.7.11.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/objenesis/objenesis/2.6/objenesis-2.6.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/skyscreamer/jsonassert/1.5.0/jsonassert-1.5.0.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-core/5.0.7.RELEASE/spring-core-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-jcl/5.0.7.RELEASE/spring-jcl-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-test/5.0.7.RELEASE/spring-test-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/xmlunit/xmlunit-core/2.5.1/xmlunit-core-2.5.1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-data-jpa/2.0.3.RELEASE/spring-boot-starter-data-jpa-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-aop/2.0.3.RELEASE/spring-boot-starter-aop-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/aspectj/aspectjweaver/1.8.13/aspectjweaver-1.8.13.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-jdbc/2.0.3.RELEASE/spring-boot-starter-jdbc-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/zaxxer/HikariCP/2.7.9/HikariCP-2.7.9.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-jdbc/5.0.7.RELEASE/spring-jdbc-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hibernate/hibernate-core/5.2.17.Final/hibernate-core-5.2.17.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.2.Final/hibernate-jpa-2.1-api-1.0.2.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/javassist/javassist/3.22.0-GA/javassist-3.22.0-GA.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/antlr/antlr/2.7.7/antlr-2.7.7.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/javax/transaction/javax.transaction-api/1.2/javax.transaction-api-1.2.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/data/spring-data-jpa/2.0.8.RELEASE/spring-data-jpa-2.0.8.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/data/spring-data-commons/2.0.8.RELEASE/spring-data-commons-2.0.8.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-orm/5.0.7.RELEASE/spring-orm-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-tx/5.0.7.RELEASE/spring-tx-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-aspects/5.0.7.RELEASE/spring-aspects-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-mail/2.0.3.RELEASE/spring-boot-starter-mail-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-context/5.0.7.RELEASE/spring-context-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/spring-context-support/5.0.7.RELEASE/spring-context-support-5.0.7.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/sun/mail/javax.mail/1.6.1/javax.mail-1.6.1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/javax/activation/activation/1.1/activation-1.1.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-starter-thymeleaf/2.0.3.RELEASE/spring-boot-starter-thymeleaf-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/thymeleaf/thymeleaf-spring5/3.0.9.RELEASE/thymeleaf-spring5-3.0.9.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/thymeleaf/thymeleaf/3.0.9.RELEASE/thymeleaf-3.0.9.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/attoparser/attoparser/2.0.4.RELEASE/attoparser-2.0.4.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/unbescape/unbescape/1.1.5.RELEASE/unbescape-1.1.5.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/thymeleaf/extras/thymeleaf-extras-java8time/3.0.1.RELEASE/thymeleaf-extras-java8time-3.0.1.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-devtools/2.0.3.RELEASE/spring-boot-devtools-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot/2.0.3.RELEASE/spring-boot-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/springframework/boot/spring-boot-autoconfigure/2.0.3.RELEASE/spring-boot-autoconfigure-2.0.3.RELEASE.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/com/h2database/h2/1.4.197/h2-1.4.197.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/mysql/mysql-connector-java/5.1.46/mysql-connector-java-5.1.46.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/liquibase/liquibase-core/3.5.5/liquibase-core-3.5.5.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/yaml/snakeyaml/1.19/snakeyaml-1.19.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/projectlombok/lombok/1.16.22/lombok-1.16.22.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/httpcomponents/httpclient/4.5.5/httpclient-4.5.5.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/apache/httpcomponents/httpcore/4.4.9/httpcore-4.4.9.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/root/./workspace/JoaoVFG/sysrlog/411577462/.m2/org/glassfish/javax.json/1.0.4/javax.json-1.0.4.jar:, user.name=root, skipITs=true, java.vm.specification.version=1.8, sun.java.command=/root/workspace/JoaoVFG/sysrlog/411577462/target/surefire/surefirebooter8765789512324249418.jar /root/workspace/JoaoVFG/sysrlog/411577462/target/surefire 2018-08-03T05-50-59_874-jvmRun1 surefire2866724075045359667tmp surefire_07743663107322815283tmp, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, sun.arch.data.model=64, user.language=en, java.specification.vendor=Oracle Corporation, dependency-check.skip=true, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_121, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, rat.skip=true, enforcer.skip=true, java.vendor=Oracle Corporation, localRepository=/root/./workspace/JoaoVFG/sysrlog/411577462/.m2, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@896644936 {name='systemEnvironment', properties={PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin, JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64, NOTIFY_TO=, CA_CERTIFICATES_JAVA_VERSION=20161107~bpo8+1, MONGODB_HOST=, BUILD_ID=, LANG=C.UTF-8, MAVEN_HOME=/usr/share/maven, SMTP_SERVER=, MONGODB_NAME=, REPAIR_MODE=repair, PWD=/root/workspace/JoaoVFG/sysrlog/411577462, JAVA_VERSION=8u121, GITHUB_OAUTH=, MAVEN_CMD_LINE_ARGS=/root/.m2 -B -D enforcer.skip=true -D dependency-check.skip=true -D skipITs=true -D cobertura.skip=true -D maven.repo.local=/root/./workspace/JoaoVFG/sysrlog/411577462/.m2 -D rat.skip=true -D findbugs.skip=true -D skip.bower=true -D gpg.skip=true -D checkstyle.skip=true -D skip.gulp=true -D license.skip=true -D skip.npm=true test, _=/usr/bin/java, OUTPUT=, MAVEN_TERMINATE_CMD=on, MAVEN_CONFIG=/root/.m2, MAVEN_PROJECTBASEDIR=/root/workspace/JoaoVFG/sysrlog/411577462, OLDPWD=/root/workspace/JoaoVFG/sysrlog/411577462, LOG_FILENAME=repairnator-pipeline_2018-08-03_0549_411577462_6927fb33-1ea7-4003-9018-b027a8f8f5e3, RUN_ID=, HOSTNAME=cyclone1, JAVA_DEBIAN_VERSION=8u121-b13-1~bpo8+1, M2_HOME=/usr/share/maven, REPAIR_TOOLS=AssertFixer, HOME=/root, SHLVL=1, PUSH_URL=}}]
05:51:02.054 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}
05:51:02.054 [main] DEBUG org.springframework.core.env.StandardEnvironment - Adding PropertySource 'Inlined Test Properties' with highest search precedence

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.0.3.RELEASE)

2018-08-03 05:51:02.912  INFO 160 --- [           main] JoaoVFG.com.github.TestsPessoaService    : Starting TestsPessoaService on cyclone1 with PID 160 (started by root in /root/workspace/JoaoVFG/sysrlog/411577462)
2018-08-03 05:51:02.913  INFO 160 --- [           main] JoaoVFG.com.github.TestsPessoaService    : The following profiles are active: test
2018-08-03 05:51:02.995  INFO 160 --- [           main] o.s.w.c.s.GenericWebApplicationContext   : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@1b28f282: startup date [Fri Aug 03 05:51:02 CEST 2018]; root of context hierarchy
2018-08-03 05:51:04.547  INFO 160 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$925ca6e1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-03 05:51:05.045  INFO 160 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2018-08-03 05:51:05.228  INFO 160 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2018-08-03 05:51:05.378  INFO 160 --- [           main] liquibase                                : Successfully acquired change log lock
2018-08-03 05:51:06.844  INFO 160 --- [           main] liquibase                                : Creating database history table with name: PUBLIC.DATABASECHANGELOG
2018-08-03 05:51:06.849  INFO 160 --- [           main] liquibase                                : Reading from PUBLIC.DATABASECHANGELOG
2018-08-03 05:51:06.936  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/01-create-estado.xml::01::JoaoVFG: Table ESTADO created
2018-08-03 05:51:06.936  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/01-create-estado.xml::01::JoaoVFG: ChangeSet classpath:db/changelog/01-create-estado.xml::01::JoaoVFG ran successfully in 10ms
2018-08-03 05:51:06.948  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.949  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.950  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.951  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.952  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.953  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.954  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.955  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.956  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.958  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.959  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.960  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.961  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.961  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.962  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.963  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.965  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.966  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.967  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.968  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.968  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.969  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.970  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.971  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.972  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.972  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.973  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: New row inserted into Estado
2018-08-03 05:51:06.975  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG: ChangeSet classpath:db/changelog/02-insert-estados.xml::02::JoaoVFG ran successfully in 29ms
2018-08-03 05:51:06.981  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/03-create-cidade.xml::03::JoaoVFG: Table CIDADE created
2018-08-03 05:51:06.981  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/03-create-cidade.xml::03::JoaoVFG: ChangeSet classpath:db/changelog/03-create-cidade.xml::03::JoaoVFG ran successfully in 2ms
2018-08-03 05:51:06.985  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/04-create-cep.xml::04::JoaoVFG: Table CEP created
2018-08-03 05:51:06.985  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/04-create-cep.xml::04::JoaoVFG: ChangeSet classpath:db/changelog/04-create-cep.xml::04::JoaoVFG ran successfully in 2ms
2018-08-03 05:51:07.002  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/05-add-autoincrement.xml::05::JoaoVFG: Auto-increment added to CIDADE.ID
2018-08-03 05:51:07.010  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/05-add-autoincrement.xml::05::JoaoVFG: Auto-increment added to CEP.ID
2018-08-03 05:51:07.010  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/05-add-autoincrement.xml::05::JoaoVFG: ChangeSet classpath:db/changelog/05-add-autoincrement.xml::05::JoaoVFG ran successfully in 23ms
2018-08-03 05:51:07.017  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/06-add-foreignkey-cidade.xml::06::JoaoVFG: Foreign key constraint added to CIDADE (ESTADO_ID)
2018-08-03 05:51:07.017  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/06-add-foreignkey-cidade.xml::06::JoaoVFG: ChangeSet classpath:db/changelog/06-add-foreignkey-cidade.xml::06::JoaoVFG ran successfully in 5ms
2018-08-03 05:51:07.022  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/07-add-foreignkey-cep.xml::07::JoaoVFG: Foreign key constraint added to CEP (CIDADE_ID)
2018-08-03 05:51:07.022  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/07-add-foreignkey-cep.xml::07::JoaoVFG: ChangeSet classpath:db/changelog/07-add-foreignkey-cep.xml::07::JoaoVFG ran successfully in 2ms
2018-08-03 05:51:07.027  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/08-create-tipopessoa.xml::08::JoaoVFG: Table TIPO_PESSOA created
2018-08-03 05:51:07.028  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/08-create-tipopessoa.xml::08::JoaoVFG: ChangeSet classpath:db/changelog/08-create-tipopessoa.xml::08::JoaoVFG ran successfully in 3ms
2018-08-03 05:51:07.030  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/08-create-tipopessoa.xml::08.1::JoaoVFG: New row inserted into Tipo_Pessoa
2018-08-03 05:51:07.031  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/08-create-tipopessoa.xml::08.1::JoaoVFG: New row inserted into Tipo_Pessoa
2018-08-03 05:51:07.031  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/08-create-tipopessoa.xml::08.1::JoaoVFG: ChangeSet classpath:db/changelog/08-create-tipopessoa.xml::08.1::JoaoVFG ran successfully in 1ms
2018-08-03 05:51:07.036  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/09-create-pessoa.xml::09::JoaoVFG: Table PESSOA created
2018-08-03 05:51:07.037  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/09-create-pessoa.xml::09::JoaoVFG: ChangeSet classpath:db/changelog/09-create-pessoa.xml::09::JoaoVFG ran successfully in 4ms
2018-08-03 05:51:07.046  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/09-create-pessoa.xml::09.1::JoaoVFG: Auto-increment added to PESSOA.ID
2018-08-03 05:51:07.046  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/09-create-pessoa.xml::09.1::JoaoVFG: ChangeSet classpath:db/changelog/09-create-pessoa.xml::09.1::JoaoVFG ran successfully in 7ms
2018-08-03 05:51:07.051  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/10-add-foreignkey-pessoa.xml::10::JoaoVFG: Foreign key constraint added to PESSOA (TIPO_ID)
2018-08-03 05:51:07.052  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/10-add-foreignkey-pessoa.xml::10::JoaoVFG: ChangeSet classpath:db/changelog/10-add-foreignkey-pessoa.xml::10::JoaoVFG ran successfully in 4ms
2018-08-03 05:51:07.056  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/11-create-telefone.xml::11::JoaoVFG: Table TELEFONE created
2018-08-03 05:51:07.056  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/11-create-telefone.xml::11::JoaoVFG: ChangeSet classpath:db/changelog/11-create-telefone.xml::11::JoaoVFG ran successfully in 2ms
2018-08-03 05:51:07.066  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/11-create-telefone.xml::11.1::JoaoVFG: Auto-increment added to TELEFONE.ID
2018-08-03 05:51:07.067  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/11-create-telefone.xml::11.1::JoaoVFG: ChangeSet classpath:db/changelog/11-create-telefone.xml::11.1::JoaoVFG ran successfully in 9ms
2018-08-03 05:51:07.071  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/12-add-foreignkey-telefone.xml::12::JoaoVFG: Foreign key constraint added to TELEFONE (PESSOA_ID)
2018-08-03 05:51:07.072  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/12-add-foreignkey-telefone.xml::12::JoaoVFG: ChangeSet classpath:db/changelog/12-add-foreignkey-telefone.xml::12::JoaoVFG ran successfully in 3ms
2018-08-03 05:51:07.077  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/13-create-endereco.xml::13::JoaoVFG: Table ENDERECO created
2018-08-03 05:51:07.077  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/13-create-endereco.xml::13::JoaoVFG: ChangeSet classpath:db/changelog/13-create-endereco.xml::13::JoaoVFG ran successfully in 3ms
2018-08-03 05:51:07.087  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/13-create-endereco.xml::13.1::JoaoVFG: Auto-increment added to ENDERECO.ID
2018-08-03 05:51:07.087  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/13-create-endereco.xml::13.1::JoaoVFG: ChangeSet classpath:db/changelog/13-create-endereco.xml::13.1::JoaoVFG ran successfully in 8ms
2018-08-03 05:51:07.091  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/14-add-foreignkey-endereco.xml::14::JoaoVFG: Foreign key constraint added to ENDERECO (PESSOA_ID)
2018-08-03 05:51:07.094  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/14-add-foreignkey-endereco.xml::14::JoaoVFG: Foreign key constraint added to ENDERECO (CEP_ID)
2018-08-03 05:51:07.094  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/14-add-foreignkey-endereco.xml::14::JoaoVFG: ChangeSet classpath:db/changelog/14-add-foreignkey-endereco.xml::14::JoaoVFG ran successfully in 5ms
2018-08-03 05:51:07.099  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/15-create-tipoempresa.xml::15::JoaoVFG: Table TIPO_EMPRESA created
2018-08-03 05:51:07.100  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/15-create-tipoempresa.xml::15::JoaoVFG: ChangeSet classpath:db/changelog/15-create-tipoempresa.xml::15::JoaoVFG ran successfully in 3ms
2018-08-03 05:51:07.103  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/15-create-tipoempresa.xml::15.1::JoaoVFG: New row inserted into TIPO_EMPRESA
2018-08-03 05:51:07.104  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/15-create-tipoempresa.xml::15.1::JoaoVFG: New row inserted into TIPO_EMPRESA
2018-08-03 05:51:07.104  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/15-create-tipoempresa.xml::15.1::JoaoVFG: ChangeSet classpath:db/changelog/15-create-tipoempresa.xml::15.1::JoaoVFG ran successfully in 2ms
2018-08-03 05:51:07.108  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/16-create-empresa.xml::16::JoaoVFG: Table EMPRESA created
2018-08-03 05:51:07.108  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/16-create-empresa.xml::16::JoaoVFG: ChangeSet classpath:db/changelog/16-create-empresa.xml::16::JoaoVFG ran successfully in 2ms
2018-08-03 05:51:07.117  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/16-create-empresa.xml::13.1::JoaoVFG: Auto-increment added to EMPRESA.ID
2018-08-03 05:51:07.117  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/16-create-empresa.xml::13.1::JoaoVFG: ChangeSet classpath:db/changelog/16-create-empresa.xml::13.1::JoaoVFG ran successfully in 7ms
2018-08-03 05:51:07.121  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/17-add-foreignkey-empresa.xml::17::JoaoVFG: Foreign key constraint added to EMPRESA (PESSOA_ID)
2018-08-03 05:51:07.124  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/17-add-foreignkey-empresa.xml::17::JoaoVFG: Foreign key constraint added to EMPRESA (TIPO_EMPRESA)
2018-08-03 05:51:07.124  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/17-add-foreignkey-empresa.xml::17::JoaoVFG: ChangeSet classpath:db/changelog/17-add-foreignkey-empresa.xml::17::JoaoVFG ran successfully in 5ms
2018-08-03 05:51:07.128  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/18-create-cargo.xml::18::JoaoVFG: Table CARGO created
2018-08-03 05:51:07.129  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/18-create-cargo.xml::18::JoaoVFG: ChangeSet classpath:db/changelog/18-create-cargo.xml::18::JoaoVFG ran successfully in 3ms
2018-08-03 05:51:07.136  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/18-create-cargo.xml::18.1::JoaoVFG: Auto-increment added to CARGO.ID
2018-08-03 05:51:07.137  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/18-create-cargo.xml::18.1::JoaoVFG: ChangeSet classpath:db/changelog/18-create-cargo.xml::18.1::JoaoVFG ran successfully in 6ms
2018-08-03 05:51:07.141  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/19-create-funcionario.xml::19::JoaoVFG: Table FUNCIONARIO created
2018-08-03 05:51:07.141  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/19-create-funcionario.xml::19::JoaoVFG: ChangeSet classpath:db/changelog/19-create-funcionario.xml::19::JoaoVFG ran successfully in 2ms
2018-08-03 05:51:07.148  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/19-create-funcionario.xml::19.1::JoaoVFG: Auto-increment added to FUNCIONARIO.ID
2018-08-03 05:51:07.148  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/19-create-funcionario.xml::19.1::JoaoVFG: ChangeSet classpath:db/changelog/19-create-funcionario.xml::19.1::JoaoVFG ran successfully in 6ms
2018-08-03 05:51:07.152  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/20-add-foreignkey-funcionario.xml::20::JoaoVFG: Foreign key constraint added to FUNCIONARIO (PESSOA_ID)
2018-08-03 05:51:07.154  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/20-add-foreignkey-funcionario.xml::20::JoaoVFG: Foreign key constraint added to FUNCIONARIO (EMPRESA_ID)
2018-08-03 05:51:07.157  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/20-add-foreignkey-funcionario.xml::20::JoaoVFG: Foreign key constraint added to FUNCIONARIO (CARGO_ID)
2018-08-03 05:51:07.157  INFO 160 --- [           main] liquibase                                : classpath:db/liquibase-changelog.xml: classpath:db/changelog/20-add-foreignkey-funcionario.xml::20::JoaoVFG: ChangeSet classpath:db/changelog/20-add-foreignkey-funcionario.xml::20::JoaoVFG ran successfully in 7ms
2018-08-03 05:51:07.160  INFO 160 --- [           main] liquibase                                : Successfully released change log lock
2018-08-03 05:51:07.390  INFO 160 --- [           main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2018-08-03 05:51:07.425  INFO 160 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-08-03 05:51:07.549  INFO 160 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate Core {5.2.17.Final}
2018-08-03 05:51:07.551  INFO 160 --- [           main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2018-08-03 05:51:07.622  INFO 160 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-08-03 05:51:07.826  INFO 160 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2018-08-03 05:51:08.811  INFO 160 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-08-03 05:51:09.669  INFO 160 --- [           main] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.estado_id=? 
        and (
            cidade0_.nome like ?
        )
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    insert 
    into
        cidade
        (id, estado_id, nome) 
    values
        (null, ?, ?)
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.id=?
Hibernate: 
    select
        estado0_.id as id1_5_0_,
        estado0_.nome as nome2_5_0_,
        estado0_.sigla as sigla3_5_0_ 
    from
        estado estado0_ 
    where
        estado0_.id=?
teste
Hibernate: 
    insert 
    into
        cep
        (id, bairro, cep, cidade_id, nome_rua) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.id=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.estado_id=? 
        and (
            cidade0_.nome like ?
        )
Hibernate: 
    select
        estado0_.id as id1_5_0_,
        estado0_.nome as nome2_5_0_,
        estado0_.sigla as sigla3_5_0_ 
    from
        estado estado0_ 
    where
        estado0_.id=?
Hibernate: 
    insert 
    into
        cep
        (id, bairro, cep, cidade_id, nome_rua) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.id=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.estado_id=? 
        and (
            cidade0_.nome like ?
        )
Hibernate: 
    select
        estado0_.id as id1_5_0_,
        estado0_.nome as nome2_5_0_,
        estado0_.sigla as sigla3_5_0_ 
    from
        estado estado0_ 
    where
        estado0_.id=?
Hibernate: 
    insert 
    into
        cep
        (id, bairro, cep, cidade_id, nome_rua) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.id=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.estado_id=? 
        and (
            cidade0_.nome like ?
        )
Hibernate: 
    select
        estado0_.id as id1_5_0_,
        estado0_.nome as nome2_5_0_,
        estado0_.sigla as sigla3_5_0_ 
    from
        estado estado0_ 
    where
        estado0_.id=?
Hibernate: 
    insert 
    into
        cep
        (id, bairro, cep, cidade_id, nome_rua) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.id=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.estado_id=? 
        and (
            cidade0_.nome like ?
        )
Hibernate: 
    select
        estado0_.id as id1_5_0_,
        estado0_.nome as nome2_5_0_,
        estado0_.sigla as sigla3_5_0_ 
    from
        estado estado0_ 
    where
        estado0_.id=?
Hibernate: 
    insert 
    into
        cep
        (id, bairro, cep, cidade_id, nome_rua) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.id=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.estado_id=? 
        and (
            cidade0_.nome like ?
        )
Hibernate: 
    select
        estado0_.id as id1_5_0_,
        estado0_.nome as nome2_5_0_,
        estado0_.sigla as sigla3_5_0_ 
    from
        estado estado0_ 
    where
        estado0_.id=?
Hibernate: 
    insert 
    into
        cep
        (id, bairro, cep, cidade_id, nome_rua) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.id=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.estado_id=? 
        and (
            cidade0_.nome like ?
        )
Hibernate: 
    select
        estado0_.id as id1_5_0_,
        estado0_.nome as nome2_5_0_,
        estado0_.sigla as sigla3_5_0_ 
    from
        estado estado0_ 
    where
        estado0_.id=?
Hibernate: 
    insert 
    into
        cep
        (id, bairro, cep, cidade_id, nome_rua) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.id=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.descricao=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.descricao=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.descricao=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.descricao=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.descricao=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.descricao=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.descricao=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.descricao=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.descricao=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.descricao=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.descricao=?
Hibernate: 
    select
        tipopessoa_.id,
        tipopessoa_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa_ 
    where
        tipopessoa_.id=?
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        tipopessoa_.id,
        tipopessoa_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa_ 
    where
        tipopessoa_.id=?
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        telefone
        (id, numero, pessoa_id, tipo_numero) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        telefone
        (id, numero, pessoa_id, tipo_numero) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        telefone
        (id, numero, pessoa_id, tipo_numero) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        telefone
        (id, numero, pessoa_id, tipo_numero) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        telefone
        (id, numero, pessoa_id, tipo_numero) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        telefone
        (id, numero, pessoa_id, tipo_numero) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        telefone
        (id, numero, pessoa_id, tipo_numero) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        telefone
        (id, numero, pessoa_id, tipo_numero) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        telefone
        (id, numero, pessoa_id, tipo_numero) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        telefone
        (id, numero, pessoa_id, tipo_numero) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        telefone
        (id, numero, pessoa_id, tipo_numero) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        telefone
        (id, numero, pessoa_id, tipo_numero) 
    values
        (null, ?, ?, ?)
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.cep=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
EUHEUHEUHEUHEUHEUHEUEUEHUE_________________________________1
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.cep=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
EUHEUHEUHEUHEUHEUHEUEUEHUE_________________________________2
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.cep=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
EUHEUHEUHEUHEUHEUHEUEUEHUE_________________________________3
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.cep=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.estado_id=? 
        and (
            cidade0_.nome like ?
        )
Hibernate: 
    select
        estado0_.id as id1_5_0_,
        estado0_.nome as nome2_5_0_,
        estado0_.sigla as sigla3_5_0_ 
    from
        estado estado0_ 
    where
        estado0_.id=?
Hibernate: 
    insert 
    into
        cep
        (id, bairro, cep, cidade_id, nome_rua) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.id=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
EUHEUHEUHEUHEUHEUHEUEUEHUE_________________________________4
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.cep=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.estado_id=? 
        and (
            cidade0_.nome like ?
        )
Hibernate: 
    select
        estado0_.id as id1_5_0_,
        estado0_.nome as nome2_5_0_,
        estado0_.sigla as sigla3_5_0_ 
    from
        estado estado0_ 
    where
        estado0_.id=?
Hibernate: 
    insert 
    into
        cep
        (id, bairro, cep, cidade_id, nome_rua) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.id=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
EUHEUHEUHEUHEUHEUHEUEUEHUE_________________________________5
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.cep=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.estado_id=? 
        and (
            cidade0_.nome like ?
        )
Hibernate: 
    select
        estado0_.id as id1_5_0_,
        estado0_.nome as nome2_5_0_,
        estado0_.sigla as sigla3_5_0_ 
    from
        estado estado0_ 
    where
        estado0_.id=?
Hibernate: 
    insert 
    into
        cep
        (id, bairro, cep, cidade_id, nome_rua) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.id=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
EUHEUHEUHEUHEUHEUHEUEUEHUE_________________________________6
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.cep=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.estado_id=? 
        and (
            cidade0_.nome like ?
        )
Hibernate: 
    select
        estado0_.id as id1_5_0_,
        estado0_.nome as nome2_5_0_,
        estado0_.sigla as sigla3_5_0_ 
    from
        estado estado0_ 
    where
        estado0_.id=?
Hibernate: 
    insert 
    into
        cep
        (id, bairro, cep, cidade_id, nome_rua) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.id=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
EUHEUHEUHEUHEUHEUHEUEUEHUE_________________________________7
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.cep=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.estado_id=? 
        and (
            cidade0_.nome like ?
        )
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    insert 
    into
        cidade
        (id, estado_id, nome) 
    values
        (null, ?, ?)
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.id=?
Hibernate: 
    select
        estado0_.id as id1_5_0_,
        estado0_.nome as nome2_5_0_,
        estado0_.sigla as sigla3_5_0_ 
    from
        estado estado0_ 
    where
        estado0_.id=?
teste
Hibernate: 
    insert 
    into
        cep
        (id, bairro, cep, cidade_id, nome_rua) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.id=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
EUHEUHEUHEUHEUHEUHEUEUEHUE_________________________________8
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.cep=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.estado_id=? 
        and (
            cidade0_.nome like ?
        )
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    insert 
    into
        cidade
        (id, estado_id, nome) 
    values
        (null, ?, ?)
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.id=?
Hibernate: 
    select
        estado0_.id as id1_5_0_,
        estado0_.nome as nome2_5_0_,
        estado0_.sigla as sigla3_5_0_ 
    from
        estado estado0_ 
    where
        estado0_.id=?
teste
Hibernate: 
    insert 
    into
        cep
        (id, bairro, cep, cidade_id, nome_rua) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.id=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
EUHEUHEUHEUHEUHEUHEUEUEHUE_________________________________9
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.cep=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.estado_id=? 
        and (
            cidade0_.nome like ?
        )
Hibernate: 
    select
        estado0_.id as id1_5_0_,
        estado0_.nome as nome2_5_0_,
        estado0_.sigla as sigla3_5_0_ 
    from
        estado estado0_ 
    where
        estado0_.id=?
Hibernate: 
    insert 
    into
        cep
        (id, bairro, cep, cidade_id, nome_rua) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.id=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
EUHEUHEUHEUHEUHEUHEUEUEHUE_________________________________10
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.cep=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.estado_id=? 
        and (
            cidade0_.nome like ?
        )
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    insert 
    into
        cidade
        (id, estado_id, nome) 
    values
        (null, ?, ?)
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.id=?
Hibernate: 
    select
        estado0_.id as id1_5_0_,
        estado0_.nome as nome2_5_0_,
        estado0_.sigla as sigla3_5_0_ 
    from
        estado estado0_ 
    where
        estado0_.id=?
teste
Hibernate: 
    insert 
    into
        cep
        (id, bairro, cep, cidade_id, nome_rua) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.id=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
EUHEUHEUHEUHEUHEUHEUEUEHUE_________________________________11
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.cep=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.estado_id=? 
        and (
            cidade0_.nome like ?
        )
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    insert 
    into
        cidade
        (id, estado_id, nome) 
    values
        (null, ?, ?)
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.id=?
Hibernate: 
    select
        estado0_.id as id1_5_0_,
        estado0_.nome as nome2_5_0_,
        estado0_.sigla as sigla3_5_0_ 
    from
        estado estado0_ 
    where
        estado0_.id=?
teste
Hibernate: 
    insert 
    into
        cep
        (id, bairro, cep, cidade_id, nome_rua) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.id=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
EUHEUHEUHEUHEUHEUHEUEUEHUE_________________________________12
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.cep=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.estado_id=? 
        and (
            cidade0_.nome like ?
        )
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    insert 
    into
        cidade
        (id, estado_id, nome) 
    values
        (null, ?, ?)
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.id=?
Hibernate: 
    select
        estado0_.id as id1_5_0_,
        estado0_.nome as nome2_5_0_,
        estado0_.sigla as sigla3_5_0_ 
    from
        estado estado0_ 
    where
        estado0_.id=?
teste
Hibernate: 
    insert 
    into
        cep
        (id, bairro, cep, cidade_id, nome_rua) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.id=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
EUHEUHEUHEUHEUHEUHEUEUEHUE_________________________________13
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.cep=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.estado_id=? 
        and (
            cidade0_.nome like ?
        )
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    insert 
    into
        cidade
        (id, estado_id, nome) 
    values
        (null, ?, ?)
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.id=?
Hibernate: 
    select
        estado0_.id as id1_5_0_,
        estado0_.nome as nome2_5_0_,
        estado0_.sigla as sigla3_5_0_ 
    from
        estado estado0_ 
    where
        estado0_.id=?
teste
Hibernate: 
    insert 
    into
        cep
        (id, bairro, cep, cidade_id, nome_rua) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.id=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
EUHEUHEUHEUHEUHEUHEUEUEHUE_________________________________14
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.cep=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.estado_id=? 
        and (
            cidade0_.nome like ?
        )
Hibernate: 
    select
        estado0_.id as id1_5_0_,
        estado0_.nome as nome2_5_0_,
        estado0_.sigla as sigla3_5_0_ 
    from
        estado estado0_ 
    where
        estado0_.id=?
Hibernate: 
    insert 
    into
        cep
        (id, bairro, cep, cidade_id, nome_rua) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.id=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
EUHEUHEUHEUHEUHEUHEUEUEHUE_________________________________15
Hibernate: 
    insert 
    into
        endereco
        (id, cep_id, complemento, numero_logradouro, pessoa_id) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        endereco
        (id, cep_id, complemento, numero_logradouro, pessoa_id) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        endereco
        (id, cep_id, complemento, numero_logradouro, pessoa_id) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        endereco
        (id, cep_id, complemento, numero_logradouro, pessoa_id) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        endereco
        (id, cep_id, complemento, numero_logradouro, pessoa_id) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        endereco
        (id, cep_id, complemento, numero_logradouro, pessoa_id) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        endereco
        (id, cep_id, complemento, numero_logradouro, pessoa_id) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        endereco
        (id, cep_id, complemento, numero_logradouro, pessoa_id) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        endereco
        (id, cep_id, complemento, numero_logradouro, pessoa_id) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        endereco
        (id, cep_id, complemento, numero_logradouro, pessoa_id) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        endereco
        (id, cep_id, complemento, numero_logradouro, pessoa_id) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        endereco
        (id, cep_id, complemento, numero_logradouro, pessoa_id) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        endereco
        (id, cep_id, complemento, numero_logradouro, pessoa_id) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        endereco
        (id, cep_id, complemento, numero_logradouro, pessoa_id) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        endereco
        (id, cep_id, complemento, numero_logradouro, pessoa_id) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        tipoempres0_.id as id1_9_,
        tipoempres0_.descricao as descrica2_9_ 
    from
        tipo_empresa tipoempres0_ 
    where
        tipoempres0_.id=?
Hibernate: 
    select
        tipoempres0_.id as id1_9_,
        tipoempres0_.descricao as descrica2_9_ 
    from
        tipo_empresa tipoempres0_ 
    where
        tipoempres0_.id=?
Hibernate: 
    select
        tipoempres0_.id as id1_9_,
        tipoempres0_.descricao as descrica2_9_ 
    from
        tipo_empresa tipoempres0_ 
    where
        tipoempres0_.id=?
Hibernate: 
    select
        tipoempres0_.id as id1_9_,
        tipoempres0_.descricao as descrica2_9_ 
    from
        tipo_empresa tipoempres0_ 
    where
        tipoempres0_.id=?
Hibernate: 
    select
        tipoempres0_.id as id1_9_,
        tipoempres0_.descricao as descrica2_9_ 
    from
        tipo_empresa tipoempres0_ 
    where
        tipoempres0_.id=?
Hibernate: 
    select
        tipoempres0_.id as id1_9_,
        tipoempres0_.descricao as descrica2_9_ 
    from
        tipo_empresa tipoempres0_ 
    where
        tipoempres0_.id=?
Hibernate: 
    select
        tipoempres0_.id as id1_9_,
        tipoempres0_.descricao as descrica2_9_ 
    from
        tipo_empresa tipoempres0_ 
    where
        tipoempres0_.id=?
Hibernate: 
    select
        tipoempres0_.id as id1_9_,
        tipoempres0_.descricao as descrica2_9_ 
    from
        tipo_empresa tipoempres0_ 
    where
        tipoempres0_.id=?
Hibernate: 
    select
        tipoempres0_.id as id1_9_,
        tipoempres0_.descricao as descrica2_9_ 
    from
        tipo_empresa tipoempres0_ 
    where
        tipoempres0_.id=?
Hibernate: 
    select
        tipoempres0_.id as id1_9_,
        tipoempres0_.descricao as descrica2_9_ 
    from
        tipo_empresa tipoempres0_ 
    where
        tipoempres0_.id=?
Hibernate: 
    select
        tipoempres0_.id as id1_9_,
        tipoempres0_.descricao as descrica2_9_ 
    from
        tipo_empresa tipoempres0_ 
    where
        tipoempres0_.id=?
Hibernate: 
    select
        tipoempres_.id,
        tipoempres_.descricao as descrica2_9_ 
    from
        tipo_empresa tipoempres_ 
    where
        tipoempres_.id=?
Hibernate: 
    insert 
    into
        empresa
        (id, empresa_matriz_id, pessoa_id, tipo_empresa, transportadora) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        empresa
        (id, empresa_matriz_id, pessoa_id, tipo_empresa, transportadora) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        empresa
        (id, empresa_matriz_id, pessoa_id, tipo_empresa, transportadora) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        empresa
        (id, empresa_matriz_id, pessoa_id, tipo_empresa, transportadora) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        tipoempres_.id,
        tipoempres_.descricao as descrica2_9_ 
    from
        tipo_empresa tipoempres_ 
    where
        tipoempres_.id=?
Hibernate: 
    insert 
    into
        empresa
        (id, empresa_matriz_id, pessoa_id, tipo_empresa, transportadora) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        empresa
        (id, empresa_matriz_id, pessoa_id, tipo_empresa, transportadora) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        empresa
        (id, empresa_matriz_id, pessoa_id, tipo_empresa, transportadora) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        empresa
        (id, empresa_matriz_id, pessoa_id, tipo_empresa, transportadora) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        empresa
        (id, empresa_matriz_id, pessoa_id, tipo_empresa, transportadora) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        empresa
        (id, empresa_matriz_id, pessoa_id, tipo_empresa, transportadora) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        empresa
        (id, empresa_matriz_id, pessoa_id, tipo_empresa, transportadora) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        cargo
        (id, descricao) 
    values
        (null, ?)
Hibernate: 
    insert 
    into
        cargo
        (id, descricao) 
    values
        (null, ?)
Hibernate: 
    insert 
    into
        cargo
        (id, descricao) 
    values
        (null, ?)
Hibernate: 
    insert 
    into
        cargo
        (id, descricao) 
    values
        (null, ?)
Hibernate: 
    insert 
    into
        cargo
        (id, descricao) 
    values
        (null, ?)
Hibernate: 
    insert 
    into
        cargo
        (id, descricao) 
    values
        (null, ?)
Hibernate: 
    insert 
    into
        cargo
        (id, descricao) 
    values
        (null, ?)
Hibernate: 
    insert 
    into
        cargo
        (id, descricao) 
    values
        (null, ?)
Hibernate: 
    insert 
    into
        cargo
        (id, descricao) 
    values
        (null, ?)
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa_.id,
        tipopessoa_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa_ 
    where
        tipopessoa_.id=?
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
Hibernate: 
    insert 
    into
        funcionario
        (id, cargo_id, empresa_id, pessoa_id) 
    values
        (null, ?, ?, ?)
2018-08-03 05:51:21.439  INFO 160 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-03 05:51:21.754  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@1b28f282: startup date [Fri Aug 03 05:51:02 CEST 2018]; root of context hierarchy
2018-08-03 05:51:21.808  WARN 160 --- [           main] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-08-03 05:51:21.853  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cargo/buscacargo],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.util.List<JoaoVFG.com.github.entity.Cargo>> JoaoVFG.com.github.resources.CargoResource.findAll()
2018-08-03 05:51:21.854  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cargo/buscacargo/{id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<JoaoVFG.com.github.entity.Cargo> JoaoVFG.com.github.resources.CargoResource.findById(java.lang.Integer)
2018-08-03 05:51:21.854  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cargo/buscacargo/descricao/{descricao}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.util.List<JoaoVFG.com.github.entity.Cargo>> JoaoVFG.com.github.resources.CargoResource.findByDescricaoContains(java.lang.String)
2018-08-03 05:51:21.855  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cargo/insert/{descricao}],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.lang.Void> JoaoVFG.com.github.resources.CargoResource.createCargo(java.lang.String)
2018-08-03 05:51:21.855  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cargo/delete/{id}],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity<java.lang.Void> JoaoVFG.com.github.resources.CargoResource.deleteCargo(java.lang.Integer)
2018-08-03 05:51:21.857  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ceps/buscacep],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.util.List<JoaoVFG.com.github.entity.Cep>> JoaoVFG.com.github.resources.CepResource.findAll()
2018-08-03 05:51:21.857  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ceps/buscacep/{cep}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<JoaoVFG.com.github.entity.Cep> JoaoVFG.com.github.resources.CepResource.findByCep(java.lang.String)
2018-08-03 05:51:21.857  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ceps/buscacep/rua/{nomeRua}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.util.List<JoaoVFG.com.github.entity.Cep>> JoaoVFG.com.github.resources.CepResource.findByNomeRua(java.lang.String)
2018-08-03 05:51:21.858  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ceps/buscacep/cidade/{cidade}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.util.List<JoaoVFG.com.github.entity.Cep>> JoaoVFG.com.github.resources.CepResource.findByCidade(java.lang.String)
2018-08-03 05:51:21.858  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ceps/buscacep/cidadeEstado/{estadoSigla}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.util.List<JoaoVFG.com.github.entity.Cidade>> JoaoVFG.com.github.resources.CepResource.findByEstado(java.lang.String)
2018-08-03 05:51:21.863  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/empresa/buscaempresa],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.util.List<JoaoVFG.com.github.entity.Empresa>> JoaoVFG.com.github.resources.EmpresaResource.findAll()
2018-08-03 05:51:21.863  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/empresa/buscaempresa/{id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<JoaoVFG.com.github.entity.Empresa> JoaoVFG.com.github.resources.EmpresaResource.findById(java.lang.Integer)
2018-08-03 05:51:21.864  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/empresa/buscaempresa/idpessoa/{id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<JoaoVFG.com.github.entity.Empresa> JoaoVFG.com.github.resources.EmpresaResource.findByIdPessoa(java.lang.Integer)
2018-08-03 05:51:21.864  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/empresa/buscaempresa/tipoempresa/{id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.util.List<JoaoVFG.com.github.entity.Empresa>> JoaoVFG.com.github.resources.EmpresaResource.findByTipoEmpresa(java.lang.Integer)
2018-08-03 05:51:21.864  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/empresa/buscaempresa/transportadoras],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.util.List<JoaoVFG.com.github.entity.Empresa>> JoaoVFG.com.github.resources.EmpresaResource.findTransportadoras()
2018-08-03 05:51:21.865  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/empresa/buscaempresa/idMatriz/{id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.util.List<JoaoVFG.com.github.entity.Empresa>> JoaoVFG.com.github.resources.EmpresaResource.findByMatriz(java.lang.Integer)
2018-08-03 05:51:21.865  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/empresa/insert],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.lang.Void> JoaoVFG.com.github.resources.EmpresaResource.createEmpresa(JoaoVFG.com.github.entity.dto.EmpresaDTO)
2018-08-03 05:51:21.865  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/empresa/deleta/{id}],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity<java.lang.Void> JoaoVFG.com.github.resources.EmpresaResource.deletaEmpresa(java.lang.Integer)
2018-08-03 05:51:21.867  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/endereco/buscaendereco],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.util.List<JoaoVFG.com.github.entity.Endereco>> JoaoVFG.com.github.resources.EnderecoResource.findAll()
2018-08-03 05:51:21.867  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/endereco/buscaendereco/{id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<JoaoVFG.com.github.entity.Endereco> JoaoVFG.com.github.resources.EnderecoResource.findById(java.lang.Integer)
2018-08-03 05:51:21.868  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/endereco/buscaendereco/pessoa/{id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.util.List<JoaoVFG.com.github.entity.Endereco>> JoaoVFG.com.github.resources.EnderecoResource.findByPessoa(java.lang.Integer)
2018-08-03 05:51:21.868  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/endereco/buscaendereco/cep/{cep}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.util.List<JoaoVFG.com.github.entity.Endereco>> JoaoVFG.com.github.resources.EnderecoResource.findByCep(java.lang.String)
2018-08-03 05:51:21.868  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/endereco/create],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.lang.Void> JoaoVFG.com.github.resources.EnderecoResource.createEndereco(JoaoVFG.com.github.entity.dto.EnderecoDTO)
2018-08-03 05:51:21.869  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/endereco/deleta/{id}],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity<java.lang.Void> JoaoVFG.com.github.resources.EnderecoResource.deletaEndereco(java.lang.Integer)
2018-08-03 05:51:21.871  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pessoa/buscapessoa],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.util.List<JoaoVFG.com.github.entity.Pessoa>> JoaoVFG.com.github.resources.PessoaResource.findAll()
2018-08-03 05:51:21.871  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pessoa/buscapessoa/{id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<JoaoVFG.com.github.entity.Pessoa> JoaoVFG.com.github.resources.PessoaResource.findById(java.lang.String)
2018-08-03 05:51:21.871  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pessoa/buscapessoa/cpf/{cpf}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<JoaoVFG.com.github.entity.Pessoa> JoaoVFG.com.github.resources.PessoaResource.findByCpf(java.lang.String)
2018-08-03 05:51:21.872  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pessoa/buscapessoa/cnpj/{cnpj}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<JoaoVFG.com.github.entity.Pessoa> JoaoVFG.com.github.resources.PessoaResource.findByCnpj(java.lang.String)
2018-08-03 05:51:21.872  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pessoa/buscapessoa/tipo/{tipo}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.util.List<JoaoVFG.com.github.entity.Pessoa>> JoaoVFG.com.github.resources.PessoaResource.findByTipo(java.lang.String)
2018-08-03 05:51:21.872  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pessoa/buscapessoa/razaoSocial/{razaoSocial}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.util.List<JoaoVFG.com.github.entity.Pessoa>> JoaoVFG.com.github.resources.PessoaResource.findByRazaoSocial(java.lang.String)
2018-08-03 05:51:21.872  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pessoa/insertpf],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.lang.Void> JoaoVFG.com.github.resources.PessoaResource.createPessoaFisica(JoaoVFG.com.github.entity.dto.PessoaFisicaDTO)
2018-08-03 05:51:21.873  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pessoa/insertpj],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.lang.Void> JoaoVFG.com.github.resources.PessoaResource.createPessoaJuridica(JoaoVFG.com.github.entity.dto.PessoaJuridicaDTO)
2018-08-03 05:51:21.873  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pessoa/{id}],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity<java.lang.Void> JoaoVFG.com.github.resources.PessoaResource.deletaPessoa(java.lang.Integer)
2018-08-03 05:51:21.874  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rota/criaRotaJson],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.net.URL> JoaoVFG.com.github.resources.RotaResource.gerarRota(JoaoVFG.com.github.entity.dto.ListaEnderecoRotaDTO)
2018-08-03 05:51:21.875  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/telefone/buscatelefone/{id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<JoaoVFG.com.github.entity.Telefone> JoaoVFG.com.github.resources.TelefoneResource.findById(java.lang.Integer)
2018-08-03 05:51:21.876  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/telefone/buscatelefone/pessoa/{id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.util.List<JoaoVFG.com.github.entity.Telefone>> JoaoVFG.com.github.resources.TelefoneResource.findByPessoa(java.lang.Integer)
2018-08-03 05:51:21.876  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/telefone/{id}],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity<java.lang.Void> JoaoVFG.com.github.resources.TelefoneResource.deletaTelefone(java.lang.Integer)
2018-08-03 05:51:21.876  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/telefone/buscatelefone],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.util.List<JoaoVFG.com.github.entity.Telefone>> JoaoVFG.com.github.resources.TelefoneResource.FindAll()
2018-08-03 05:51:21.877  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/telefone/buscatelefone/pessoatiponum/{id}/{tipo}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.util.List<JoaoVFG.com.github.entity.Telefone>> JoaoVFG.com.github.resources.TelefoneResource.findByPessoaETipo(java.lang.Integer,java.lang.String)
2018-08-03 05:51:21.877  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/telefone],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.lang.Void> JoaoVFG.com.github.resources.TelefoneResource.createTelefone(JoaoVFG.com.github.entity.dto.TelefoneDTO)
2018-08-03 05:51:21.880  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-03 05:51:21.880  INFO 160 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-03 05:51:21.918  INFO 160 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-03 05:51:21.918  INFO 160 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-03 05:51:21.938  INFO 160 --- [           main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in resourceExceptionHandler
2018-08-03 05:51:21.999  WARN 160 --- [           main] ion$DefaultTemplateResolverConfiguration : Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2018-08-03 05:51:22.374  INFO 160 --- [           main] JoaoVFG.com.github.TestsPessoaService    : Started TestsPessoaService in 20.31 seconds (JVM running for 21.301)
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_,
        pessoa0_.cnpj as cnpj2_7_,
        pessoa0_.cpf as cpf3_7_,
        pessoa0_.data_nascimento as data_nas4_7_,
        pessoa0_.nome as nome5_7_,
        pessoa0_.razao_social as razao_so6_7_,
        pessoa0_.sexo as sexo7_7_,
        pessoa0_.tipo_id as tipo_id8_7_ 
    from
        pessoa pessoa0_ 
    where
        pessoa0_.cnpj=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_0_,
        tipopessoa0_.descricao as descrica2_10_0_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_,
        pessoa0_.cnpj as cnpj2_7_,
        pessoa0_.cpf as cpf3_7_,
        pessoa0_.data_nascimento as data_nas4_7_,
        pessoa0_.nome as nome5_7_,
        pessoa0_.razao_social as razao_so6_7_,
        pessoa0_.sexo as sexo7_7_,
        pessoa0_.tipo_id as tipo_id8_7_ 
    from
        pessoa pessoa0_ 
    where
        pessoa0_.razao_social like ?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_0_,
        tipopessoa0_.descricao as descrica2_10_0_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_,
        pessoa0_.cnpj as cnpj2_7_,
        pessoa0_.cpf as cpf3_7_,
        pessoa0_.data_nascimento as data_nas4_7_,
        pessoa0_.nome as nome5_7_,
        pessoa0_.razao_social as razao_so6_7_,
        pessoa0_.sexo as sexo7_7_,
        pessoa0_.tipo_id as tipo_id8_7_ 
    from
        pessoa pessoa0_ 
    where
        pessoa0_.cnpj=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_0_,
        tipopessoa0_.descricao as descrica2_10_0_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        telefone0_.id as id1_8_,
        telefone0_.numero as numero2_8_,
        telefone0_.pessoa_id as pessoa_i4_8_,
        telefone0_.tipo_numero as tipo_num3_8_ 
    from
        telefone telefone0_ 
    where
        telefone0_.tipo_numero=? 
        and telefone0_.pessoa_id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        telefone0_.id as id1_8_,
        telefone0_.numero as numero2_8_,
        telefone0_.pessoa_id as pessoa_i4_8_,
        telefone0_.tipo_numero as tipo_num3_8_ 
    from
        telefone telefone0_
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.descricao=?
Hibernate: 
    select
        tipopessoa_.id,
        tipopessoa_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa_ 
    where
        tipopessoa_.id=?
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        pessoa0_.id as id1_7_,
        pessoa0_.cnpj as cnpj2_7_,
        pessoa0_.cpf as cpf3_7_,
        pessoa0_.data_nascimento as data_nas4_7_,
        pessoa0_.nome as nome5_7_,
        pessoa0_.razao_social as razao_so6_7_,
        pessoa0_.sexo as sexo7_7_,
        pessoa0_.tipo_id as tipo_id8_7_ 
    from
        pessoa pessoa0_ 
    where
        pessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_0_,
        tipopessoa0_.descricao as descrica2_10_0_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_
Hibernate: 
    select
        pessoa0_.id as id1_7_,
        pessoa0_.cnpj as cnpj2_7_,
        pessoa0_.cpf as cpf3_7_,
        pessoa0_.data_nascimento as data_nas4_7_,
        pessoa0_.nome as nome5_7_,
        pessoa0_.razao_social as razao_so6_7_,
        pessoa0_.sexo as sexo7_7_,
        pessoa0_.tipo_id as tipo_id8_7_ 
    from
        pessoa pessoa0_ 
    where
        pessoa0_.cnpj=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_0_,
        tipopessoa0_.descricao as descrica2_10_0_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_,
        pessoa0_.cnpj as cnpj2_7_,
        pessoa0_.cpf as cpf3_7_,
        pessoa0_.data_nascimento as data_nas4_7_,
        pessoa0_.nome as nome5_7_,
        pessoa0_.razao_social as razao_so6_7_,
        pessoa0_.sexo as sexo7_7_,
        pessoa0_.tipo_id as tipo_id8_7_ 
    from
        pessoa pessoa0_ 
    where
        pessoa0_.cpf=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_0_,
        tipopessoa0_.descricao as descrica2_10_0_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_,
        pessoa0_.cnpj as cnpj2_7_,
        pessoa0_.cpf as cpf3_7_,
        pessoa0_.data_nascimento as data_nas4_7_,
        pessoa0_.nome as nome5_7_,
        pessoa0_.razao_social as razao_so6_7_,
        pessoa0_.sexo as sexo7_7_,
        pessoa0_.tipo_id as tipo_id8_7_ 
    from
        pessoa pessoa0_ 
    where
        pessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_0_,
        tipopessoa0_.descricao as descrica2_10_0_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_4_,
        endereco0_.cep_id as cep_id4_4_,
        endereco0_.complemento as compleme2_4_,
        endereco0_.numero_logradouro as numero_l3_4_,
        endereco0_.pessoa_id as pessoa_i5_4_ 
    from
        endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        cep0_.id as id1_1_0_,
        cep0_.bairro as bairro2_1_0_,
        cep0_.cep as cep3_1_0_,
        cep0_.cidade_id as cidade_i5_1_0_,
        cep0_.nome_rua as nome_rua4_1_0_,
        cidade1_.id as id1_2_1_,
        cidade1_.estado_id as estado_i3_2_1_,
        cidade1_.nome as nome2_2_1_,
        estado2_.id as id1_5_2_,
        estado2_.nome as nome2_5_2_,
        estado2_.sigla as sigla3_5_2_ 
    from
        cep cep0_ 
    left outer join
        cidade cidade1_ 
            on cep0_.cidade_id=cidade1_.id 
    left outer join
        estado estado2_ 
            on cidade1_.estado_id=estado2_.id 
    where
        cep0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_4_,
        endereco0_.cep_id as cep_id4_4_,
        endereco0_.complemento as compleme2_4_,
        endereco0_.numero_logradouro as numero_l3_4_,
        endereco0_.pessoa_id as pessoa_i5_4_ 
    from
        endereco endereco0_
Hibernate: 
    select
        cep0_.id as id1_1_0_,
        cep0_.bairro as bairro2_1_0_,
        cep0_.cep as cep3_1_0_,
        cep0_.cidade_id as cidade_i5_1_0_,
        cep0_.nome_rua as nome_rua4_1_0_,
        cidade1_.id as id1_2_1_,
        cidade1_.estado_id as estado_i3_2_1_,
        cidade1_.nome as nome2_2_1_,
        estado2_.id as id1_5_2_,
        estado2_.nome as nome2_5_2_,
        estado2_.sigla as sigla3_5_2_ 
    from
        cep cep0_ 
    left outer join
        cidade cidade1_ 
            on cep0_.cidade_id=cidade1_.id 
    left outer join
        estado estado2_ 
            on cidade1_.estado_id=estado2_.id 
    where
        cep0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        cep0_.id as id1_1_0_,
        cep0_.bairro as bairro2_1_0_,
        cep0_.cep as cep3_1_0_,
        cep0_.cidade_id as cidade_i5_1_0_,
        cep0_.nome_rua as nome_rua4_1_0_,
        cidade1_.id as id1_2_1_,
        cidade1_.estado_id as estado_i3_2_1_,
        cidade1_.nome as nome2_2_1_,
        estado2_.id as id1_5_2_,
        estado2_.nome as nome2_5_2_,
        estado2_.sigla as sigla3_5_2_ 
    from
        cep cep0_ 
    left outer join
        cidade cidade1_ 
            on cep0_.cidade_id=cidade1_.id 
    left outer join
        estado estado2_ 
            on cidade1_.estado_id=estado2_.id 
    where
        cep0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        cep0_.id as id1_1_0_,
        cep0_.bairro as bairro2_1_0_,
        cep0_.cep as cep3_1_0_,
        cep0_.cidade_id as cidade_i5_1_0_,
        cep0_.nome_rua as nome_rua4_1_0_,
        cidade1_.id as id1_2_1_,
        cidade1_.estado_id as estado_i3_2_1_,
        cidade1_.nome as nome2_2_1_,
        estado2_.id as id1_5_2_,
        estado2_.nome as nome2_5_2_,
        estado2_.sigla as sigla3_5_2_ 
    from
        cep cep0_ 
    left outer join
        cidade cidade1_ 
            on cep0_.cidade_id=cidade1_.id 
    left outer join
        estado estado2_ 
            on cidade1_.estado_id=estado2_.id 
    where
        cep0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        cep0_.id as id1_1_0_,
        cep0_.bairro as bairro2_1_0_,
        cep0_.cep as cep3_1_0_,
        cep0_.cidade_id as cidade_i5_1_0_,
        cep0_.nome_rua as nome_rua4_1_0_,
        cidade1_.id as id1_2_1_,
        cidade1_.estado_id as estado_i3_2_1_,
        cidade1_.nome as nome2_2_1_,
        estado2_.id as id1_5_2_,
        estado2_.nome as nome2_5_2_,
        estado2_.sigla as sigla3_5_2_ 
    from
        cep cep0_ 
    left outer join
        cidade cidade1_ 
            on cep0_.cidade_id=cidade1_.id 
    left outer join
        estado estado2_ 
            on cidade1_.estado_id=estado2_.id 
    where
        cep0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        cep0_.id as id1_1_0_,
        cep0_.bairro as bairro2_1_0_,
        cep0_.cep as cep3_1_0_,
        cep0_.cidade_id as cidade_i5_1_0_,
        cep0_.nome_rua as nome_rua4_1_0_,
        cidade1_.id as id1_2_1_,
        cidade1_.estado_id as estado_i3_2_1_,
        cidade1_.nome as nome2_2_1_,
        estado2_.id as id1_5_2_,
        estado2_.nome as nome2_5_2_,
        estado2_.sigla as sigla3_5_2_ 
    from
        cep cep0_ 
    left outer join
        cidade cidade1_ 
            on cep0_.cidade_id=cidade1_.id 
    left outer join
        estado estado2_ 
            on cidade1_.estado_id=estado2_.id 
    where
        cep0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        cep0_.id as id1_1_0_,
        cep0_.bairro as bairro2_1_0_,
        cep0_.cep as cep3_1_0_,
        cep0_.cidade_id as cidade_i5_1_0_,
        cep0_.nome_rua as nome_rua4_1_0_,
        cidade1_.id as id1_2_1_,
        cidade1_.estado_id as estado_i3_2_1_,
        cidade1_.nome as nome2_2_1_,
        estado2_.id as id1_5_2_,
        estado2_.nome as nome2_5_2_,
        estado2_.sigla as sigla3_5_2_ 
    from
        cep cep0_ 
    left outer join
        cidade cidade1_ 
            on cep0_.cidade_id=cidade1_.id 
    left outer join
        estado estado2_ 
            on cidade1_.estado_id=estado2_.id 
    where
        cep0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        cep0_.id as id1_1_0_,
        cep0_.bairro as bairro2_1_0_,
        cep0_.cep as cep3_1_0_,
        cep0_.cidade_id as cidade_i5_1_0_,
        cep0_.nome_rua as nome_rua4_1_0_,
        cidade1_.id as id1_2_1_,
        cidade1_.estado_id as estado_i3_2_1_,
        cidade1_.nome as nome2_2_1_,
        estado2_.id as id1_5_2_,
        estado2_.nome as nome2_5_2_,
        estado2_.sigla as sigla3_5_2_ 
    from
        cep cep0_ 
    left outer join
        cidade cidade1_ 
            on cep0_.cidade_id=cidade1_.id 
    left outer join
        estado estado2_ 
            on cidade1_.estado_id=estado2_.id 
    where
        cep0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        cep0_.id as id1_1_0_,
        cep0_.bairro as bairro2_1_0_,
        cep0_.cep as cep3_1_0_,
        cep0_.cidade_id as cidade_i5_1_0_,
        cep0_.nome_rua as nome_rua4_1_0_,
        cidade1_.id as id1_2_1_,
        cidade1_.estado_id as estado_i3_2_1_,
        cidade1_.nome as nome2_2_1_,
        estado2_.id as id1_5_2_,
        estado2_.nome as nome2_5_2_,
        estado2_.sigla as sigla3_5_2_ 
    from
        cep cep0_ 
    left outer join
        cidade cidade1_ 
            on cep0_.cidade_id=cidade1_.id 
    left outer join
        estado estado2_ 
            on cidade1_.estado_id=estado2_.id 
    where
        cep0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        cep0_.id as id1_1_0_,
        cep0_.bairro as bairro2_1_0_,
        cep0_.cep as cep3_1_0_,
        cep0_.cidade_id as cidade_i5_1_0_,
        cep0_.nome_rua as nome_rua4_1_0_,
        cidade1_.id as id1_2_1_,
        cidade1_.estado_id as estado_i3_2_1_,
        cidade1_.nome as nome2_2_1_,
        estado2_.id as id1_5_2_,
        estado2_.nome as nome2_5_2_,
        estado2_.sigla as sigla3_5_2_ 
    from
        cep cep0_ 
    left outer join
        cidade cidade1_ 
            on cep0_.cidade_id=cidade1_.id 
    left outer join
        estado estado2_ 
            on cidade1_.estado_id=estado2_.id 
    where
        cep0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        cep0_.id as id1_1_0_,
        cep0_.bairro as bairro2_1_0_,
        cep0_.cep as cep3_1_0_,
        cep0_.cidade_id as cidade_i5_1_0_,
        cep0_.nome_rua as nome_rua4_1_0_,
        cidade1_.id as id1_2_1_,
        cidade1_.estado_id as estado_i3_2_1_,
        cidade1_.nome as nome2_2_1_,
        estado2_.id as id1_5_2_,
        estado2_.nome as nome2_5_2_,
        estado2_.sigla as sigla3_5_2_ 
    from
        cep cep0_ 
    left outer join
        cidade cidade1_ 
            on cep0_.cidade_id=cidade1_.id 
    left outer join
        estado estado2_ 
            on cidade1_.estado_id=estado2_.id 
    where
        cep0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        cep0_.id as id1_1_0_,
        cep0_.bairro as bairro2_1_0_,
        cep0_.cep as cep3_1_0_,
        cep0_.cidade_id as cidade_i5_1_0_,
        cep0_.nome_rua as nome_rua4_1_0_,
        cidade1_.id as id1_2_1_,
        cidade1_.estado_id as estado_i3_2_1_,
        cidade1_.nome as nome2_2_1_,
        estado2_.id as id1_5_2_,
        estado2_.nome as nome2_5_2_,
        estado2_.sigla as sigla3_5_2_ 
    from
        cep cep0_ 
    left outer join
        cidade cidade1_ 
            on cep0_.cidade_id=cidade1_.id 
    left outer join
        estado estado2_ 
            on cidade1_.estado_id=estado2_.id 
    where
        cep0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        cep0_.id as id1_1_0_,
        cep0_.bairro as bairro2_1_0_,
        cep0_.cep as cep3_1_0_,
        cep0_.cidade_id as cidade_i5_1_0_,
        cep0_.nome_rua as nome_rua4_1_0_,
        cidade1_.id as id1_2_1_,
        cidade1_.estado_id as estado_i3_2_1_,
        cidade1_.nome as nome2_2_1_,
        estado2_.id as id1_5_2_,
        estado2_.nome as nome2_5_2_,
        estado2_.sigla as sigla3_5_2_ 
    from
        cep cep0_ 
    left outer join
        cidade cidade1_ 
            on cep0_.cidade_id=cidade1_.id 
    left outer join
        estado estado2_ 
            on cidade1_.estado_id=estado2_.id 
    where
        cep0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        cep0_.id as id1_1_0_,
        cep0_.bairro as bairro2_1_0_,
        cep0_.cep as cep3_1_0_,
        cep0_.cidade_id as cidade_i5_1_0_,
        cep0_.nome_rua as nome_rua4_1_0_,
        cidade1_.id as id1_2_1_,
        cidade1_.estado_id as estado_i3_2_1_,
        cidade1_.nome as nome2_2_1_,
        estado2_.id as id1_5_2_,
        estado2_.nome as nome2_5_2_,
        estado2_.sigla as sigla3_5_2_ 
    from
        cep cep0_ 
    left outer join
        cidade cidade1_ 
            on cep0_.cidade_id=cidade1_.id 
    left outer join
        estado estado2_ 
            on cidade1_.estado_id=estado2_.id 
    where
        cep0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_,
        pessoa0_.cnpj as cnpj2_7_,
        pessoa0_.cpf as cpf3_7_,
        pessoa0_.data_nascimento as data_nas4_7_,
        pessoa0_.nome as nome5_7_,
        pessoa0_.razao_social as razao_so6_7_,
        pessoa0_.sexo as sexo7_7_,
        pessoa0_.tipo_id as tipo_id8_7_ 
    from
        pessoa pessoa0_ 
    where
        pessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_0_,
        tipopessoa0_.descricao as descrica2_10_0_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        telefone0_.id as id1_8_,
        telefone0_.numero as numero2_8_,
        telefone0_.pessoa_id as pessoa_i4_8_,
        telefone0_.tipo_numero as tipo_num3_8_ 
    from
        telefone telefone0_ 
    where
        telefone0_.pessoa_id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.descricao=?
Hibernate: 
    select
        tipopessoa_.id,
        tipopessoa_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa_ 
    where
        tipopessoa_.id=?
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        pessoa0_.id as id1_7_,
        pessoa0_.cnpj as cnpj2_7_,
        pessoa0_.cpf as cpf3_7_,
        pessoa0_.data_nascimento as data_nas4_7_,
        pessoa0_.nome as nome5_7_,
        pessoa0_.razao_social as razao_so6_7_,
        pessoa0_.sexo as sexo7_7_,
        pessoa0_.tipo_id as tipo_id8_7_ 
    from
        pessoa pessoa0_ 
    where
        pessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_0_,
        tipopessoa0_.descricao as descrica2_10_0_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.descricao=?
Hibernate: 
    select
        telefone0_.id as id1_8_,
        telefone0_.numero as numero2_8_,
        telefone0_.pessoa_id as pessoa_i4_8_,
        telefone0_.tipo_numero as tipo_num3_8_ 
    from
        telefone telefone0_ 
    where
        telefone0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_,
        pessoa0_.cnpj as cnpj2_7_,
        pessoa0_.cpf as cpf3_7_,
        pessoa0_.data_nascimento as data_nas4_7_,
        pessoa0_.nome as nome5_7_,
        pessoa0_.razao_social as razao_so6_7_,
        pessoa0_.sexo as sexo7_7_,
        pessoa0_.tipo_id as tipo_id8_7_ 
    from
        pessoa pessoa0_
Hibernate: 
    select
        tipopessoa0_.id as id1_10_0_,
        tipopessoa0_.descricao as descrica2_10_0_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_0_,
        tipopessoa0_.descricao as descrica2_10_0_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_,
        pessoa0_.cnpj as cnpj2_7_,
        pessoa0_.cpf as cpf3_7_,
        pessoa0_.data_nascimento as data_nas4_7_,
        pessoa0_.nome as nome5_7_,
        pessoa0_.razao_social as razao_so6_7_,
        pessoa0_.sexo as sexo7_7_,
        pessoa0_.tipo_id as tipo_id8_7_ 
    from
        pessoa pessoa0_ 
    where
        pessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_0_,
        tipopessoa0_.descricao as descrica2_10_0_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    insert 
    into
        telefone
        (id, numero, pessoa_id, tipo_numero) 
    values
        (null, ?, ?, ?)
Hibernate: 
    select
        telefone0_.id as id1_8_,
        telefone0_.numero as numero2_8_,
        telefone0_.pessoa_id as pessoa_i4_8_,
        telefone0_.tipo_numero as tipo_num3_8_ 
    from
        telefone telefone0_ 
    where
        telefone0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
[ERROR] Tests run: 18, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 21.231 s <<< FAILURE! - in JoaoVFG.com.github.TestsPessoaService
[ERROR] testeBucscaEnderecoPorPessoa(JoaoVFG.com.github.TestsPessoaService)  Time elapsed: 0.012 s  <<< ERROR!
org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at JoaoVFG.com.github.TestsPessoaService.testeBucscaEnderecoPorPessoa(TestsPessoaService.java:147)
Caused by: javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at JoaoVFG.com.github.TestsPessoaService.testeBucscaEnderecoPorPessoa(TestsPessoaService.java:147)

[INFO] Running JoaoVFG.com.github.TestsRota
2018-08-03 05:51:22.624  INFO 160 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [JoaoVFG.com.github.TestsRota], using SpringBootContextLoader
2018-08-03 05:51:22.625  INFO 160 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [JoaoVFG.com.github.TestsRota]: no resource found for suffixes {-context.xml, Context.groovy}.
2018-08-03 05:51:22.625  INFO 160 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [JoaoVFG.com.github.TestsRota]: TestsRota does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2018-08-03 05:51:22.627  INFO 160 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration JoaoVFG.com.github.TgSysrlogApplication for test class JoaoVFG.com.github.TestsRota
2018-08-03 05:51:22.629  INFO 160 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2018-08-03 05:51:22.629  INFO 160 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1dab2cf5, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@19f9287a, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4924ad09, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@7e9d171c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3a1540be, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6aff157e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@65fa1cd, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@106c73ed, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6cd1ee, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@122a6078, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6980fa39, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1a000fff]
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.cep=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.cep=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.cep=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.cep=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.cep=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.cep=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
12288560
http://maps.googleapis.com/maps/api/distancematrix/json?origins=12288560&destinations=Rua+Coronel+Jo%C3%A3o+Dias+Guimar%C3%A3es+435%2C+Vila+S%C3%A3o+Jo%C3%A3o%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12281350&travelmode=driving
http://maps.googleapis.com/maps/api/distancematrix/json?origins=12288560&destinations=Rodovia+Jo%C3%A3o+Amaral+Gurgel+1225%2C+Parque+Residencial+Maria+Elmira%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12285020&travelmode=driving
http://maps.googleapis.com/maps/api/distancematrix/json?origins=12288560&destinations=Rua+Rouxinol+132%2C+Loteamento+Pedro+Rizzo+II%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12295370&travelmode=driving
http://maps.googleapis.com/maps/api/distancematrix/json?origins=12288560&destinations=Rua+Presidente+Roosevelt+100%2C+Centro%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12281460&travelmode=driving
http://maps.googleapis.com/maps/api/distancematrix/json?origins=12288560&destinations=Rua+Artur+Benedito+de+Oliveira+Porto+100%2C+Jardim+Rafael%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12288460&travelmode=driving
http://maps.googleapis.com/maps/api/distancematrix/json?origins=12288560&destinations=Rua+Bento+Vieira+de+Almeida+s%2Fn%2C+Vila+S%C3%A3o+Jo%C3%A3o%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12281420&travelmode=driving
Rua Artur Benedito de Oliveira Porto 100, Jardim Rafael, Caçapava, São Paulo, 12288460
http://maps.googleapis.com/maps/api/distancematrix/json?origins=Rua+Artur+Benedito+de+Oliveira+Porto+100%2C+Jardim+Rafael%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12288460&destinations=Rua+Coronel+Jo%C3%A3o+Dias+Guimar%C3%A3es+435%2C+Vila+S%C3%A3o+Jo%C3%A3o%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12281350&travelmode=driving
http://maps.googleapis.com/maps/api/distancematrix/json?origins=Rua+Artur+Benedito+de+Oliveira+Porto+100%2C+Jardim+Rafael%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12288460&destinations=Rodovia+Jo%C3%A3o+Amaral+Gurgel+1225%2C+Parque+Residencial+Maria+Elmira%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12285020&travelmode=driving
http://maps.googleapis.com/maps/api/distancematrix/json?origins=Rua+Artur+Benedito+de+Oliveira+Porto+100%2C+Jardim+Rafael%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12288460&destinations=Rua+Rouxinol+132%2C+Loteamento+Pedro+Rizzo+II%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12295370&travelmode=driving
http://maps.googleapis.com/maps/api/distancematrix/json?origins=Rua+Artur+Benedito+de+Oliveira+Porto+100%2C+Jardim+Rafael%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12288460&destinations=Rua+Presidente+Roosevelt+100%2C+Centro%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12281460&travelmode=driving
http://maps.googleapis.com/maps/api/distancematrix/json?origins=Rua+Artur+Benedito+de+Oliveira+Porto+100%2C+Jardim+Rafael%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12288460&destinations=Rua+Bento+Vieira+de+Almeida+s%2Fn%2C+Vila+S%C3%A3o+Jo%C3%A3o%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12281420&travelmode=driving
Rua Presidente Roosevelt 100, Centro, Caçapava, São Paulo, 12281460
http://maps.googleapis.com/maps/api/distancematrix/json?origins=Rua+Presidente+Roosevelt+100%2C+Centro%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12281460&destinations=Rua+Coronel+Jo%C3%A3o+Dias+Guimar%C3%A3es+435%2C+Vila+S%C3%A3o+Jo%C3%A3o%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12281350&travelmode=driving
http://maps.googleapis.com/maps/api/distancematrix/json?origins=Rua+Presidente+Roosevelt+100%2C+Centro%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12281460&destinations=Rodovia+Jo%C3%A3o+Amaral+Gurgel+1225%2C+Parque+Residencial+Maria+Elmira%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12285020&travelmode=driving
http://maps.googleapis.com/maps/api/distancematrix/json?origins=Rua+Presidente+Roosevelt+100%2C+Centro%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12281460&destinations=Rua+Rouxinol+132%2C+Loteamento+Pedro+Rizzo+II%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12295370&travelmode=driving
http://maps.googleapis.com/maps/api/distancematrix/json?origins=Rua+Presidente+Roosevelt+100%2C+Centro%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12281460&destinations=Rua+Bento+Vieira+de+Almeida+s%2Fn%2C+Vila+S%C3%A3o+Jo%C3%A3o%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12281420&travelmode=driving
Rua Bento Vieira de Almeida s/n, Vila São João, Caçapava, São Paulo, 12281420
http://maps.googleapis.com/maps/api/distancematrix/json?origins=Rua+Bento+Vieira+de+Almeida+s%2Fn%2C+Vila+S%C3%A3o+Jo%C3%A3o%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12281420&destinations=Rua+Coronel+Jo%C3%A3o+Dias+Guimar%C3%A3es+435%2C+Vila+S%C3%A3o+Jo%C3%A3o%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12281350&travelmode=driving
http://maps.googleapis.com/maps/api/distancematrix/json?origins=Rua+Bento+Vieira+de+Almeida+s%2Fn%2C+Vila+S%C3%A3o+Jo%C3%A3o%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12281420&destinations=Rodovia+Jo%C3%A3o+Amaral+Gurgel+1225%2C+Parque+Residencial+Maria+Elmira%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12285020&travelmode=driving
http://maps.googleapis.com/maps/api/distancematrix/json?origins=Rua+Bento+Vieira+de+Almeida+s%2Fn%2C+Vila+S%C3%A3o+Jo%C3%A3o%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12281420&destinations=Rua+Rouxinol+132%2C+Loteamento+Pedro+Rizzo+II%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12295370&travelmode=driving
Rua Coronel João Dias Guimarães 435, Vila São João, Caçapava, São Paulo, 12281350
http://maps.googleapis.com/maps/api/distancematrix/json?origins=Rua+Coronel+Jo%C3%A3o+Dias+Guimar%C3%A3es+435%2C+Vila+S%C3%A3o+Jo%C3%A3o%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12281350&destinations=Rodovia+Jo%C3%A3o+Amaral+Gurgel+1225%2C+Parque+Residencial+Maria+Elmira%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12285020&travelmode=driving
http://maps.googleapis.com/maps/api/distancematrix/json?origins=Rua+Coronel+Jo%C3%A3o+Dias+Guimar%C3%A3es+435%2C+Vila+S%C3%A3o+Jo%C3%A3o%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12281350&destinations=Rua+Rouxinol+132%2C+Loteamento+Pedro+Rizzo+II%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12295370&travelmode=driving
Rodovia João Amaral Gurgel 1225, Parque Residencial Maria Elmira, Caçapava, São Paulo, 12285020
http://maps.googleapis.com/maps/api/distancematrix/json?origins=Rodovia+Jo%C3%A3o+Amaral+Gurgel+1225%2C+Parque+Residencial+Maria+Elmira%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12285020&destinations=Rua+Rouxinol+132%2C+Loteamento+Pedro+Rizzo+II%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12295370&travelmode=driving
[Rua Artur Benedito de Oliveira Porto 100, Jardim Rafael, Caçapava, São Paulo, 12288460, Rua Presidente Roosevelt 100, Centro, Caçapava, São Paulo, 12281460, Rua Bento Vieira de Almeida s/n, Vila São João, Caçapava, São Paulo, 12281420, Rua Coronel João Dias Guimarães 435, Vila São João, Caçapava, São Paulo, 12281350, Rodovia João Amaral Gurgel 1225, Parque Residencial Maria Elmira, Caçapava, São Paulo, 12285020, Rua Rouxinol 132, Loteamento Pedro Rizzo II, Caçapava, São Paulo, 12295370]
https://www.google.com/maps/dir/?api=1&origin=12288560&destination=12288560&waypoints=Rua+Artur+Benedito+de+Oliveira+Porto+100%2C+Jardim+Rafael%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12288460|Rua+Presidente+Roosevelt+100%2C+Centro%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12281460|Rua+Bento+Vieira+de+Almeida+s%2Fn%2C+Vila+S%C3%A3o+Jo%C3%A3o%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12281420|Rua+Coronel+Jo%C3%A3o+Dias+Guimar%C3%A3es+435%2C+Vila+S%C3%A3o+Jo%C3%A3o%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12281350|Rodovia+Jo%C3%A3o+Amaral+Gurgel+1225%2C+Parque+Residencial+Maria+Elmira%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12285020|Rua+Rouxinol+132%2C+Loteamento+Pedro+Rizzo+II%2C+Ca%C3%A7apava%2C+S%C3%A3o+Paulo%2C+12295370|&travelmode=driving
http://maps.googleapis.com/maps/api/distancematrix/json?origins=12288560&destinations=12285020&travelmode=driving
12288560
12285020
614
3783
Distancia [cepOrigem=12288560, cepDestino=12285020, distanciaInMeters=3783, timeInSeconds=614]
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.098 s - in JoaoVFG.com.github.TestsRota
[INFO] Running JoaoVFG.com.github.TestsPessoaRepository
2018-08-03 05:51:23.765  INFO 160 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [JoaoVFG.com.github.TestsPessoaRepository], using SpringBootContextLoader
2018-08-03 05:51:23.766  INFO 160 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [JoaoVFG.com.github.TestsPessoaRepository]: no resource found for suffixes {-context.xml, Context.groovy}.
2018-08-03 05:51:23.766  INFO 160 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [JoaoVFG.com.github.TestsPessoaRepository]: TestsPessoaRepository does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2018-08-03 05:51:23.768  INFO 160 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration JoaoVFG.com.github.TgSysrlogApplication for test class JoaoVFG.com.github.TestsPessoaRepository
2018-08-03 05:51:23.770  INFO 160 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2018-08-03 05:51:23.771  INFO 160 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2a3c3a04, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@78ca8258, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4628f386, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@38224635, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7385a72f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5ff12345, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5e445ffe, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@74fda9ed, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2a9fd482, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7ca2319f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@653a5a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@19ce597a]
Hibernate: 
    select
        pessoa0_.id as id1_7_,
        pessoa0_.cnpj as cnpj2_7_,
        pessoa0_.cpf as cpf3_7_,
        pessoa0_.data_nascimento as data_nas4_7_,
        pessoa0_.nome as nome5_7_,
        pessoa0_.razao_social as razao_so6_7_,
        pessoa0_.sexo as sexo7_7_,
        pessoa0_.tipo_id as tipo_id8_7_ 
    from
        pessoa pessoa0_ 
    where
        pessoa0_.razao_social like ?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_0_,
        tipopessoa0_.descricao as descrica2_10_0_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_,
        pessoa0_.cnpj as cnpj2_7_,
        pessoa0_.cpf as cpf3_7_,
        pessoa0_.data_nascimento as data_nas4_7_,
        pessoa0_.nome as nome5_7_,
        pessoa0_.razao_social as razao_so6_7_,
        pessoa0_.sexo as sexo7_7_,
        pessoa0_.tipo_id as tipo_id8_7_ 
    from
        pessoa pessoa0_ 
    where
        pessoa0_.cnpj=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_0_,
        tipopessoa0_.descricao as descrica2_10_0_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_,
        pessoa0_.cnpj as cnpj2_7_,
        pessoa0_.cpf as cpf3_7_,
        pessoa0_.data_nascimento as data_nas4_7_,
        pessoa0_.nome as nome5_7_,
        pessoa0_.razao_social as razao_so6_7_,
        pessoa0_.sexo as sexo7_7_,
        pessoa0_.tipo_id as tipo_id8_7_ 
    from
        pessoa pessoa0_ 
    where
        pessoa0_.tipo_id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_0_,
        tipopessoa0_.descricao as descrica2_10_0_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
[JoaoVFG.com.github.entity.Pessoa@121f97fb, JoaoVFG.com.github.entity.Pessoa@70a3b, JoaoVFG.com.github.entity.Pessoa@18baee88, JoaoVFG.com.github.entity.Pessoa@59e67a18, JoaoVFG.com.github.entity.Pessoa@37289e90, JoaoVFG.com.github.entity.Pessoa@f461c9c, JoaoVFG.com.github.entity.Pessoa@40477d52, JoaoVFG.com.github.entity.Pessoa@2a1be9f8, JoaoVFG.com.github.entity.Pessoa@59b43e35, JoaoVFG.com.github.entity.Pessoa@66297b63, JoaoVFG.com.github.entity.Pessoa@1d7f2719, JoaoVFG.com.github.entity.Pessoa@685e5967, JoaoVFG.com.github.entity.Pessoa@106387cf, JoaoVFG.com.github.entity.Pessoa@3d3c14c3, JoaoVFG.com.github.entity.Pessoa@599fab92, JoaoVFG.com.github.entity.Pessoa@439054a7, JoaoVFG.com.github.entity.Pessoa@4fc1eee5, JoaoVFG.com.github.entity.Pessoa@120661d2, JoaoVFG.com.github.entity.Pessoa@36618b3b, JoaoVFG.com.github.entity.Pessoa@7715d43c, JoaoVFG.com.github.entity.Pessoa@3763aafd, JoaoVFG.com.github.entity.Pessoa@16ca4532, JoaoVFG.com.github.entity.Pessoa@2cc82c83, JoaoVFG.com.github.entity.Pessoa@75a5a912, JoaoVFG.com.github.entity.Pessoa@5f3bc119, JoaoVFG.com.github.entity.Pessoa@1b9cfc19, JoaoVFG.com.github.entity.Pessoa@765d67dd, JoaoVFG.com.github.entity.Pessoa@2e68bd3d, JoaoVFG.com.github.entity.Pessoa@2fda92e0]
Hibernate: 
    select
        pessoa0_.id as id1_7_,
        pessoa0_.cnpj as cnpj2_7_,
        pessoa0_.cpf as cpf3_7_,
        pessoa0_.data_nascimento as data_nas4_7_,
        pessoa0_.nome as nome5_7_,
        pessoa0_.razao_social as razao_so6_7_,
        pessoa0_.sexo as sexo7_7_,
        pessoa0_.tipo_id as tipo_id8_7_ 
    from
        pessoa pessoa0_ 
    where
        pessoa0_.cpf=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_0_,
        tipopessoa0_.descricao as descrica2_10_0_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        telefone0_.id as id1_8_,
        telefone0_.numero as numero2_8_,
        telefone0_.pessoa_id as pessoa_i4_8_,
        telefone0_.tipo_numero as tipo_num3_8_ 
    from
        telefone telefone0_ 
    where
        telefone0_.pessoa_id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_,
        pessoa0_.cnpj as cnpj2_7_,
        pessoa0_.cpf as cpf3_7_,
        pessoa0_.data_nascimento as data_nas4_7_,
        pessoa0_.nome as nome5_7_,
        pessoa0_.razao_social as razao_so6_7_,
        pessoa0_.sexo as sexo7_7_,
        pessoa0_.tipo_id as tipo_id8_7_ 
    from
        pessoa pessoa0_ 
    where
        pessoa0_.cpf=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_0_,
        tipopessoa0_.descricao as descrica2_10_0_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
JV
Hibernate: 
    select
        pessoa0_.id as id1_7_,
        pessoa0_.cnpj as cnpj2_7_,
        pessoa0_.cpf as cpf3_7_,
        pessoa0_.data_nascimento as data_nas4_7_,
        pessoa0_.nome as nome5_7_,
        pessoa0_.razao_social as razao_so6_7_,
        pessoa0_.sexo as sexo7_7_,
        pessoa0_.tipo_id as tipo_id8_7_ 
    from
        pessoa pessoa0_ 
    where
        pessoa0_.cpf=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_0_,
        tipopessoa0_.descricao as descrica2_10_0_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_4_,
        endereco0_.cep_id as cep_id4_4_,
        endereco0_.complemento as compleme2_4_,
        endereco0_.numero_logradouro as numero_l3_4_,
        endereco0_.pessoa_id as pessoa_i5_4_ 
    from
        endereco endereco0_ 
    where
        endereco0_.pessoa_id=?
Hibernate: 
    select
        cep0_.id as id1_1_0_,
        cep0_.bairro as bairro2_1_0_,
        cep0_.cep as cep3_1_0_,
        cep0_.cidade_id as cidade_i5_1_0_,
        cep0_.nome_rua as nome_rua4_1_0_,
        cidade1_.id as id1_2_1_,
        cidade1_.estado_id as estado_i3_2_1_,
        cidade1_.nome as nome2_2_1_,
        estado2_.id as id1_5_2_,
        estado2_.nome as nome2_5_2_,
        estado2_.sigla as sigla3_5_2_ 
    from
        cep cep0_ 
    left outer join
        cidade cidade1_ 
            on cep0_.cidade_id=cidade1_.id 
    left outer join
        estado estado2_ 
            on cidade1_.estado_id=estado2_.id 
    where
        cep0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_,
        pessoa0_.cnpj as cnpj2_7_,
        pessoa0_.cpf as cpf3_7_,
        pessoa0_.data_nascimento as data_nas4_7_,
        pessoa0_.nome as nome5_7_,
        pessoa0_.razao_social as razao_so6_7_,
        pessoa0_.sexo as sexo7_7_,
        pessoa0_.tipo_id as tipo_id8_7_ 
    from
        pessoa pessoa0_ 
    where
        pessoa0_.cpf=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_0_,
        tipopessoa0_.descricao as descrica2_10_0_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        telefone0_.id as id1_8_,
        telefone0_.numero as numero2_8_,
        telefone0_.pessoa_id as pessoa_i4_8_,
        telefone0_.tipo_numero as tipo_num3_8_ 
    from
        telefone telefone0_ 
    where
        telefone0_.tipo_numero=? 
        and telefone0_.pessoa_id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_,
        tipopessoa0_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        tipopessoa_.id,
        tipopessoa_.descricao as descrica2_10_ 
    from
        tipo_pessoa tipopessoa_ 
    where
        tipopessoa_.id=?
Hibernate: 
    insert 
    into
        pessoa
        (id, cnpj, cpf, data_nascimento, nome, razao_social, sexo, tipo_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        pessoa0_.id as id1_7_,
        pessoa0_.cnpj as cnpj2_7_,
        pessoa0_.cpf as cpf3_7_,
        pessoa0_.data_nascimento as data_nas4_7_,
        pessoa0_.nome as nome5_7_,
        pessoa0_.razao_social as razao_so6_7_,
        pessoa0_.sexo as sexo7_7_,
        pessoa0_.tipo_id as tipo_id8_7_ 
    from
        pessoa pessoa0_ 
    where
        pessoa0_.cnpj=?
Hibernate: 
    select
        tipopessoa0_.id as id1_10_0_,
        tipopessoa0_.descricao as descrica2_10_0_ 
    from
        tipo_pessoa tipopessoa0_ 
    where
        tipopessoa0_.id=?
Hibernate: 
    select
        telefone0_.id as id1_8_,
        telefone0_.numero as numero2_8_,
        telefone0_.pessoa_id as pessoa_i4_8_,
        telefone0_.tipo_numero as tipo_num3_8_ 
    from
        telefone telefone0_ 
    where
        telefone0_.pessoa_id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.cep=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_4_,
        endereco0_.cep_id as cep_id4_4_,
        endereco0_.complemento as compleme2_4_,
        endereco0_.numero_logradouro as numero_l3_4_,
        endereco0_.pessoa_id as pessoa_i5_4_ 
    from
        endereco endereco0_ 
    where
        endereco0_.cep_id=?
Hibernate: 
    select
        cep0_.id as id1_1_0_,
        cep0_.bairro as bairro2_1_0_,
        cep0_.cep as cep3_1_0_,
        cep0_.cidade_id as cidade_i5_1_0_,
        cep0_.nome_rua as nome_rua4_1_0_,
        cidade1_.id as id1_2_1_,
        cidade1_.estado_id as estado_i3_2_1_,
        cidade1_.nome as nome2_2_1_,
        estado2_.id as id1_5_2_,
        estado2_.nome as nome2_5_2_,
        estado2_.sigla as sigla3_5_2_ 
    from
        cep cep0_ 
    left outer join
        cidade cidade1_ 
            on cep0_.cidade_id=cidade1_.id 
    left outer join
        estado estado2_ 
            on cidade1_.estado_id=estado2_.id 
    where
        cep0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
Hibernate: 
    select
        pessoa0_.id as id1_7_0_,
        pessoa0_.cnpj as cnpj2_7_0_,
        pessoa0_.cpf as cpf3_7_0_,
        pessoa0_.data_nascimento as data_nas4_7_0_,
        pessoa0_.nome as nome5_7_0_,
        pessoa0_.razao_social as razao_so6_7_0_,
        pessoa0_.sexo as sexo7_7_0_,
        pessoa0_.tipo_id as tipo_id8_7_0_,
        tipopessoa1_.id as id1_10_1_,
        tipopessoa1_.descricao as descrica2_10_1_ 
    from
        pessoa pessoa0_ 
    left outer join
        tipo_pessoa tipopessoa1_ 
            on pessoa0_.tipo_id=tipopessoa1_.id 
    where
        pessoa0_.id=?
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.107 s - in JoaoVFG.com.github.TestsPessoaRepository
[INFO] Running JoaoVFG.com.github.TestsCeps
2018-08-03 05:51:23.881  INFO 160 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [JoaoVFG.com.github.TestsCeps], using SpringBootContextLoader
2018-08-03 05:51:23.882  INFO 160 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [JoaoVFG.com.github.TestsCeps]: no resource found for suffixes {-context.xml, Context.groovy}.
2018-08-03 05:51:23.882  INFO 160 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [JoaoVFG.com.github.TestsCeps]: TestsCeps does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2018-08-03 05:51:23.885  INFO 160 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration JoaoVFG.com.github.TgSysrlogApplication for test class JoaoVFG.com.github.TestsCeps
2018-08-03 05:51:23.887  INFO 160 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2018-08-03 05:51:23.887  INFO 160 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@45c10678, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4ad57db1, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6e140753, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@53bc6492, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1e834a5b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fda84cf, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@313a3af8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@19240b9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5471342, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2e1003d9, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4e9d1119, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5d1907fb]
busca por cep
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.cep=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
geracep
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        estado0_.id as id1_5_,
        estado0_.nome as nome2_5_,
        estado0_.sigla as sigla3_5_ 
    from
        estado estado0_ 
    where
        estado0_.sigla=?
Hibernate: 
    select
        cidade0_.id as id1_2_,
        cidade0_.estado_id as estado_i3_2_,
        cidade0_.nome as nome2_2_ 
    from
        cidade cidade0_ 
    where
        cidade0_.estado_id=? 
        and (
            cidade0_.nome like ?
        )
Hibernate: 
    select
        estado0_.id as id1_5_0_,
        estado0_.nome as nome2_5_0_,
        estado0_.sigla as sigla3_5_0_ 
    from
        estado estado0_ 
    where
        estado0_.id=?
Hibernate: 
    insert 
    into
        cep
        (id, bairro, cep, cidade_id, nome_rua) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        cep0_.id as id1_1_,
        cep0_.bairro as bairro2_1_,
        cep0_.cep as cep3_1_,
        cep0_.cidade_id as cidade_i5_1_,
        cep0_.nome_rua as nome_rua4_1_ 
    from
        cep cep0_ 
    where
        cep0_.id=?
Hibernate: 
    select
        cidade0_.id as id1_2_0_,
        cidade0_.estado_id as estado_i3_2_0_,
        cidade0_.nome as nome2_2_0_,
        estado1_.id as id1_5_1_,
        estado1_.nome as nome2_5_1_,
        estado1_.sigla as sigla3_5_1_ 
    from
        cidade cidade0_ 
    left outer join
        estado estado1_ 
            on cidade0_.estado_id=estado1_.id 
    where
        cidade0_.id=?
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.541 s - in JoaoVFG.com.github.TestsCeps
2018-08-03 05:51:24.434  INFO 160 --- [       Thread-4] o.s.w.c.s.GenericWebApplicationContext   : Closing org.springframework.web.context.support.GenericWebApplicationContext@1b28f282: startup date [Fri Aug 03 05:51:02 CEST 2018]; root of context hierarchy
2018-08-03 05:51:24.449  INFO 160 --- [       Thread-4] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2018-08-03 05:51:24.454  WARN 160 --- [       Thread-4] o.s.b.f.support.DisposableBeanAdapter    : Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-197]
2018-08-03 05:51:24.455  INFO 160 --- [       Thread-4] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2018-08-03 05:51:24.459  INFO 160 --- [       Thread-4] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
[INFO] 
[INFO] Results:
[INFO] 
[ERROR] Errors: 
[ERROR]   TestsPessoaService.testeBucscaEnderecoPorPessoa:147 » IncorrectResultSizeDataAccess
[INFO] 
[ERROR] Tests run: 33, Failures: 0, Errors: 1, Skipped: 0
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 26.722 s
[INFO] Finished at: 2018-08-03T05:51:24+02:00
[INFO] Final Memory: 27M/397M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.21.0:test (default-test) on project tg_sysrlog: There are test failures.
[ERROR] 
[ERROR] Please refer to /root/workspace/JoaoVFG/sysrlog/411577462/target/surefire-reports for the individual test results.
[ERROR] Please refer to dump files (if any exist) [date]-jvmRun[N].dump, [date].dumpstream and [date]-jvmRun[N].dumpstream.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
