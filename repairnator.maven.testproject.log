[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for fr.inria.coming:coming:jar:0.1-SNAPSHOT
[WARNING] 'repositories.repository.id' must not contain any of these characters \/:"<>|?* but found / @ line 134, column 8
[WARNING] 'repositories.repository.id' must not contain any of these characters \/:"<>|?* but found / @ line 140, column 8
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building coming-parent 0.1-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ coming ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 130 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ coming ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ coming ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/Spirals-Team/coming/438652192/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ coming ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ coming ---
[INFO] Surefire report directory: /root/workspace/Spirals-Team/coming/438652192/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running fr.inria.coming.spoon.patterns.MathExperimentTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 3, Time elapsed: 0.063 sec
Running fr.inria.coming.spoon.patterns.ExperimentMiningInstancesD4JTest
Output: Delete FieldRead at org.apache.commons.math.geometry.Vector3D:473
	(v2.z)
Delete FieldRead at org.apache.commons.math.geometry.Vector3D:473
	(v2.x)
Delete FieldRead at org.apache.commons.math.geometry.Vector3D:473
	(v2.y)
Delete FieldRead at org.apache.commons.math.geometry.Vector3D:473
	(v1.x)
Delete FieldRead at org.apache.commons.math.geometry.Vector3D:473
	(v1.z)
Delete FieldRead at org.apache.commons.math.geometry.Vector3D:473
	(v1.y)
Insert VariableRead at org.apache.commons.math.geometry.Vector3D:490
	z2
Insert LocalVariable at org.apache.commons.math.geometry.Vector3D:468
	final double x1 = org.apache.commons.math.util.FastMath.scalb(, (-deltaExp))
Insert LocalVariable at org.apache.commons.math.geometry.Vector3D:472
	final double y2 = org.apache.commons.math.util.FastMath.scalb(, deltaExp)
Insert LocalVariable at org.apache.commons.math.geometry.Vector3D:483
	final double rho = (org.apache.commons.math.util.FastMath.rint((256 * ratio))) / 256
Insert LocalVariable at org.apache.commons.math.geometry.Vector3D:460
	final double n2 = v2.getNormSq()
Insert LocalVariable at org.apache.commons.math.geometry.Vector3D:482
	final double ratio = (((x1 * x2) + (y1 * y2)) + (z1 * z2)) / (org.apache.commons.math.util.FastMath.scalb(n2, (2 * deltaExp)))
Insert LocalVariable at org.apache.commons.math.geometry.Vector3D:487
	final double z3 = z1 - (rho * z2)
Insert VariableRead at org.apache.commons.math.geometry.Vector3D:490
	z2
Insert VariableRead at org.apache.commons.math.geometry.Vector3D:490
	y2
Insert LocalVariable at org.apache.commons.math.geometry.Vector3D:467
	final int deltaExp = ((org.apache.commons.math.util.FastMath.getExponent(n1)) - (org.apache.commons.math.util.FastMath.getExponent(n2))) / 4
Insert VariableRead at org.apache.commons.math.geometry.Vector3D:490
	x2
Insert VariableRead at org.apache.commons.math.geometry.Vector3D:490
	y2
Insert VariableRead at org.apache.commons.math.geometry.Vector3D:490
	y3
Insert If at org.apache.commons.math.geometry.Vector3D:461
	if ((n1 * n2) < (org.apache.commons.math.util.MathUtils.SAFE_MIN)) {
	    return org.apache.commons.math.geometry.Vector3D.ZERO;
	}
Insert VariableRead at org.apache.commons.math.geometry.Vector3D:490
	y3
Insert LocalVariable at org.apache.commons.math.geometry.Vector3D:469
	final double y1 = org.apache.commons.math.util.FastMath.scalb(, (-deltaExp))
Insert VariableRead at org.apache.commons.math.geometry.Vector3D:490
	z3
Insert VariableRead at org.apache.commons.math.geometry.Vector3D:490
	x2
Insert LocalVariable at org.apache.commons.math.geometry.Vector3D:485
	final double x3 = x1 - (rho * x2)
Insert LocalVariable at org.apache.commons.math.geometry.Vector3D:473
	final double z2 = org.apache.commons.math.util.FastMath.scalb(, deltaExp)
Insert LocalVariable at org.apache.commons.math.geometry.Vector3D:471
	final double x2 = org.apache.commons.math.util.FastMath.scalb(, deltaExp)
Insert LocalVariable at org.apache.commons.math.geometry.Vector3D:486
	final double y3 = y1 - (rho * y2)
Insert LocalVariable at org.apache.commons.math.geometry.Vector3D:470
	final double z1 = org.apache.commons.math.util.FastMath.scalb(, (-deltaExp))
Insert LocalVariable at org.apache.commons.math.geometry.Vector3D:459
	final double n1 = v1.getNormSq()
Insert VariableRead at org.apache.commons.math.geometry.Vector3D:490
	x3
Insert VariableRead at org.apache.commons.math.geometry.Vector3D:490
	x3
Insert VariableRead at org.apache.commons.math.geometry.Vector3D:490
	z3
Move FieldRead from org.apache.commons.math.geometry.Vector3D:473 to org.apache.commons.math.geometry.Vector3D:473
	(v2.z)
Move FieldRead from org.apache.commons.math.geometry.Vector3D:473 to org.apache.commons.math.geometry.Vector3D:468
	(v1.x)
Move FieldRead from org.apache.commons.math.geometry.Vector3D:473 to org.apache.commons.math.geometry.Vector3D:471
	(v2.x)
Move FieldRead from org.apache.commons.math.geometry.Vector3D:473 to org.apache.commons.math.geometry.Vector3D:472
	(v2.y)
Move FieldRead from org.apache.commons.math.geometry.Vector3D:473 to org.apache.commons.math.geometry.Vector3D:470
	(v1.z)
Move FieldRead from org.apache.commons.math.geometry.Vector3D:473 to org.apache.commons.math.geometry.Vector3D:469
	(v1.y)

ChangePatternInstance [actions=[Insert If at org.apache.commons.math.geometry.Vector3D:461
	if ((n1 * n2) < (org.apache.commons.math.util.MathUtils.SAFE_MIN)) {
	    return org.apache.commons.math.geometry.Vector3D.ZERO;
	}
, Insert Return at org.apache.commons.math.geometry.Vector3D:462
	return org.apache.commons.math.geometry.Vector3D.ZERO
]]
Output: Delete Invocation at org.apache.commons.math.dfp.Dfp:2319
	lessThan()
Insert Block at org.apache.commons.math.dfp.Dfp:2485
	{
	    return (sign) < 0 ? -0.0 : +0.0;
	}
Insert If at org.apache.commons.math.dfp.Dfp:310
	if ((bits & -9223372036854775808L) != 0) {
	    sign = -1;
	}
Insert BinaryOperator at org.apache.commons.math.dfp.Dfp:2485
	cmp0 == 0
Insert Block at org.apache.commons.math.dfp.Dfp:2487
	
	    if (cmp0 < 0) 
Insert LocalVariable at org.apache.commons.math.dfp.Dfp:2484
	int cmp0 = org.apache.commons.math.dfp.Dfp.compare(this, )
Move Invocation from org.apache.commons.math.dfp.Dfp:2319 to org.apache.commons.math.dfp.Dfp:2484
	getZero()
Move Block from org.apache.commons.math.dfp.Dfp:2319 to org.apache.commons.math.dfp.Dfp:2487
	{
	    y = negate();
	    negate = true;
	}

ChangePatternInstance [actions=[Insert If at org.apache.commons.math.dfp.Dfp:310
	if ((bits & -9223372036854775808L) != 0) {
	    sign = -1;
	}
, Insert Assignment at org.apache.commons.math.dfp.Dfp:311
	sign = -1
]]
Output: Insert BinaryOperator at org.apache.commons.math.complex.Complex:1018
	 || (java.lang.Double.isInfinite(real))
Insert If at org.apache.commons.math.complex.Complex:1075
	if ((real) < (-20.0)) {
	    return createComplex((-1.0), 0.0);
	}
Insert If at org.apache.commons.math.complex.Complex:1024
	if ((imaginary) < (-20.0)) {
	    return createComplex(0.0, (-1.0));
	}
Insert BinaryOperator at org.apache.commons.math.complex.Complex:1069
	 || (java.lang.Double.isInfinite(imaginary))
Insert If at org.apache.commons.math.complex.Complex:1072
	if ((real) > 20.0) {
	    return createComplex(1.0, 0.0);
	}
Insert If at org.apache.commons.math.complex.Complex:1021
	if ((imaginary) > 20.0) {
	    return createComplex(0.0, 1.0);
	}
Move FieldRead from org.apache.commons.math.complex.Complex:1018 to org.apache.commons.math.complex.Complex:1018
	isNaN
Move FieldRead from org.apache.commons.math.complex.Complex:1063 to org.apache.commons.math.complex.Complex:1069
	isNaN

ChangePatternInstance [actions=[Insert If at org.apache.commons.math.complex.Complex:1021
	if ((imaginary) > 20.0) {
	    return createComplex(0.0, 1.0);
	}
, Insert Return at org.apache.commons.math.complex.Complex:1022
	return createComplex(0.0, 1.0)
]]
ChangePatternInstance [actions=[Insert If at org.apache.commons.math.complex.Complex:1024
	if ((imaginary) < (-20.0)) {
	    return createComplex(0.0, (-1.0));
	}
, Insert Return at org.apache.commons.math.complex.Complex:1025
	return createComplex(0.0, (-1.0))
]]
ChangePatternInstance [actions=[Insert If at org.apache.commons.math.complex.Complex:1072
	if ((real) > 20.0) {
	    return createComplex(1.0, 0.0);
	}
, Insert Return at org.apache.commons.math.complex.Complex:1073
	return createComplex(1.0, 0.0)
]]
ChangePatternInstance [actions=[Insert If at org.apache.commons.math.complex.Complex:1075
	if ((real) < (-20.0)) {
	    return createComplex((-1.0), 0.0);
	}
, Insert Return at org.apache.commons.math.complex.Complex:1076
	return createComplex((-1.0), 0.0)
]]
Output: Insert LocalVariable at org.apache.commons.math.stat.inference.ChiSquareTestImpl:74
	double sumExpected = 0.0
Insert OperatorAssignment at org.apache.commons.math.stat.inference.ChiSquareTestImpl:77
	sumExpected += expected[i]
Insert If at org.apache.commons.math.stat.inference.ChiSquareTestImpl:82
	if ((java.lang.Math.abs((sumExpected - sumObserved))) > 1.0E-5) {
	    ratio = sumObserved / sumExpected;
	    rescale = true;
	}
Insert LocalVariable at org.apache.commons.math.stat.inference.ChiSquareTestImpl:76
	int i = 0
Insert BinaryOperator at org.apache.commons.math.stat.inference.ChiSquareTestImpl:76
	i < (observed.length)
Insert LocalVariable at org.apache.commons.math.stat.inference.ChiSquareTestImpl:80
	double ratio = 1.0
Insert OperatorAssignment at org.apache.commons.math.stat.inference.ChiSquareTestImpl:78
	sumObserved += observed[i]
Insert LocalVariable at org.apache.commons.math.stat.inference.ChiSquareTestImpl:75
	double sumObserved = 0.0
Insert LocalVariable at org.apache.commons.math.stat.inference.ChiSquareTestImpl:81
	boolean rescale = false
Insert For at org.apache.commons.math.stat.inference.ChiSquareTestImpl:88
	for (; ; ) {
	    if (rescale) {
	        dev = ((double) (observed[i])) - (ratio * (expected[i]));
	        sumSq += (dev * dev) / (ratio * (expected[i]));
	    }else {
	        ;
	        ;
	    }
	}
Insert UnaryOperator at org.apache.commons.math.stat.inference.ChiSquareTestImpl:76
	i++
Move Assignment from org.apache.commons.math.stat.inference.ChiSquareTestImpl:77 to org.apache.commons.math.stat.inference.ChiSquareTestImpl:93
	dev = ((double) (observed[i])) - (expected[i])
Move For from org.apache.commons.math.stat.inference.ChiSquareTestImpl:76 to org.apache.commons.math.stat.inference.ChiSquareTestImpl:76
	for (int i = 0; i < (observed.length); i++) {
	    dev = ((double) (observed[i])) - (expected[i]);
	    sumSq += (dev * dev) / (expected[i]);
	}
Move BinaryOperator from org.apache.commons.math.stat.inference.ChiSquareTestImpl:76 to org.apache.commons.math.stat.inference.ChiSquareTestImpl:88
	i < (observed.length)
Move UnaryOperator from org.apache.commons.math.stat.inference.ChiSquareTestImpl:76 to org.apache.commons.math.stat.inference.ChiSquareTestImpl:88
	i++
Move LocalVariable from org.apache.commons.math.stat.inference.ChiSquareTestImpl:76 to org.apache.commons.math.stat.inference.ChiSquareTestImpl:88
	int i = 0
Move OperatorAssignment from org.apache.commons.math.stat.inference.ChiSquareTestImpl:78 to org.apache.commons.math.stat.inference.ChiSquareTestImpl:94
	sumSq += (dev * dev) / (expected[i])

ChangePatternInstance [actions=[Insert If at org.apache.commons.math.stat.inference.ChiSquareTestImpl:82
	if ((java.lang.Math.abs((sumExpected - sumObserved))) > 1.0E-5) {
	    ratio = sumObserved / sumExpected;
	    rescale = true;
	}
, Insert Assignment at org.apache.commons.math.stat.inference.ChiSquareTestImpl:83
	ratio = sumObserved / sumExpected
]]
ChangePatternInstance [actions=[Insert If at org.apache.commons.math.stat.inference.ChiSquareTestImpl:82
	if ((java.lang.Math.abs((sumExpected - sumObserved))) > 1.0E-5) {
	    ratio = sumObserved / sumExpected;
	    rescale = true;
	}
, Insert Assignment at org.apache.commons.math.stat.inference.ChiSquareTestImpl:84
	rescale = true
]]
ChangePatternInstance [actions=[Insert If at org.apache.commons.math.stat.inference.ChiSquareTestImpl:89
	if (rescale) {
	    dev = ((double) (observed[i])) - (ratio * (expected[i]));
	    sumSq += (dev * dev) / (ratio * (expected[i]));
	}else {
	    ;
	    ;
	}
, Insert Assignment at org.apache.commons.math.stat.inference.ChiSquareTestImpl:90
	dev = ((double) (observed[i])) - (ratio * (expected[i]))
]]
Output: Insert If at org.apache.commons.math.analysis.solvers.BrentSolver:136
	if ((yMin * yMax) > 0) {
	    throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(org.apache.commons.math.analysis.solvers.BrentSolver.NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
	}

ChangePatternInstance [actions=[Insert If at org.apache.commons.math.analysis.solvers.BrentSolver:136
	if ((yMin * yMax) > 0) {
	    throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(org.apache.commons.math.analysis.solvers.BrentSolver.NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
	}
, Insert Throw at org.apache.commons.math.analysis.solvers.BrentSolver:137
	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(org.apache.commons.math.analysis.solvers.BrentSolver.NON_BRACKETING_MESSAGE, min, max, yMin, yMax)
]]
Output: Insert If at org.apache.commons.math.fraction.BigFraction:686
	if (java.lang.Double.isNaN(result)) {
	    int shift = (java.lang.Math.max(numerator.bitLength(), denominator.bitLength())) - (java.lang.Double.MAX_EXPONENT);
	    result = (numerator.shiftRight(shift).doubleValue()) / (denominator.shiftRight(shift).doubleValue());
	}
Insert If at org.apache.commons.math.fraction.BigFraction:739
	if (java.lang.Double.isNaN(result)) {
	    int shift = (java.lang.Math.max(numerator.bitLength(), denominator.bitLength())) - (java.lang.Float.MAX_EXPONENT);
	    result = (numerator.shiftRight(shift).floatValue()) / (denominator.shiftRight(shift).floatValue());
	}

ChangePatternInstance [actions=[Insert If at org.apache.commons.math.fraction.BigFraction:686
	if (java.lang.Double.isNaN(result)) {
	    int shift = (java.lang.Math.max(numerator.bitLength(), denominator.bitLength())) - (java.lang.Double.MAX_EXPONENT);
	    result = (numerator.shiftRight(shift).doubleValue()) / (denominator.shiftRight(shift).doubleValue());
	}
, Insert Assignment at org.apache.commons.math.fraction.BigFraction:691
	result = (numerator.shiftRight(shift).doubleValue()) / (denominator.shiftRight(shift).doubleValue())
]]
ChangePatternInstance [actions=[Insert If at org.apache.commons.math.fraction.BigFraction:739
	if (java.lang.Double.isNaN(result)) {
	    int shift = (java.lang.Math.max(numerator.bitLength(), denominator.bitLength())) - (java.lang.Float.MAX_EXPONENT);
	    result = (numerator.shiftRight(shift).floatValue()) / (denominator.shiftRight(shift).floatValue());
	}
, Insert Assignment at org.apache.commons.math.fraction.BigFraction:744
	result = (numerator.shiftRight(shift).floatValue()) / (denominator.shiftRight(shift).floatValue())
]]
Output: Delete If at org.apache.commons.math.linear.CholeskyDecompositionImpl:114
	if ((lTData[i][i]) < absolutePositivityThreshold) 
Insert If at org.apache.commons.math.linear.CholeskyDecompositionImpl:134
	if ((ltI[i]) < absolutePositivityThreshold) 
Move Block from org.apache.commons.math.linear.CholeskyDecompositionImpl:114 to org.apache.commons.math.linear.CholeskyDecompositionImpl:134
	{
	    throw new org.apache.commons.math.linear.NotPositiveDefiniteMatrixException();
	}

Output: Delete If at org.apache.commons.math.util.MathUtils:542
	if () 
Insert Throw at org.apache.commons.math.util.MathUtils:544
	throw org.apache.commons.math.MathRuntimeException.createArithmeticException("overflow: gcd({0}, {1}) is 2^31", new java.lang.Object[]{ p, q })
Insert If at org.apache.commons.math.util.MathUtils:542
	if () {
	    if ((u == (java.lang.Integer.MIN_VALUE)) || (v == (java.lang.Integer.MIN_VALUE))) 
	    ;
	}
Insert If at org.apache.commons.math.util.MathUtils:719
	if (lcm == (java.lang.Integer.MIN_VALUE)) {
	    throw new java.lang.ArithmeticException("overflow: lcm is 2^31");
	}
Move BinaryOperator from org.apache.commons.math.util.MathUtils:542 to org.apache.commons.math.util.MathUtils:542
	(u == 0) || (v == 0)
Move Return from org.apache.commons.math.util.MathUtils:543 to org.apache.commons.math.util.MathUtils:548
	return (java.lang.Math.abs(u)) + (java.lang.Math.abs(v))
Move Block from org.apache.commons.math.util.MathUtils:542 to org.apache.commons.math.util.MathUtils:543
	{
	    return (java.lang.Math.abs(u)) + (java.lang.Math.abs(v));
	}

ChangePatternInstance [actions=[Insert If at org.apache.commons.math.util.MathUtils:719
	if (lcm == (java.lang.Integer.MIN_VALUE)) {
	    throw new java.lang.ArithmeticException("overflow: lcm is 2^31");
	}
, Insert Throw at org.apache.commons.math.util.MathUtils:720
	throw new java.lang.ArithmeticException("overflow: lcm is 2^31")
]]
ChangePatternInstance [actions=[Insert If at org.apache.commons.math.util.MathUtils:543
	if ((u == (java.lang.Integer.MIN_VALUE)) || (v == (java.lang.Integer.MIN_VALUE))) 
, Insert Throw at org.apache.commons.math.util.MathUtils:544
	throw org.apache.commons.math.MathRuntimeException.createArithmeticException("overflow: gcd({0}, {1}) is 2^31", new java.lang.Object[]{ p, q })
]]
Output: Update VariableRead at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:346
	oldRes to qtf
Delete FieldRead at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:278
	residuals
Delete Block at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:442
	{
	
	}
Insert If at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:433
	if ((checker) != null) {
	
	}
Insert Assignment at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:352
	objective = oldObj
Insert ArrayRead at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:321
	(qtf[i])
Insert Assignment at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:451
	oldObj = tmpVec
Insert Assignment at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:449
	tmpVec = objective
Insert VariableRead at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:283
	qtf
Insert For at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:272
	for (int i = 0; i < (rows); i++) {
	    qtf[i] = ;
	}
Insert Assignment at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:450
	objective = oldObj
Insert Assignment at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:353
	oldObj = tmpVec
Insert LocalVariable at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:258
	double[] oldObj = new double[rows]
Insert Assignment at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:330
	current = new org.apache.commons.math.optimization.VectorialPointValuePair(point, objective)
Insert Assignment at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:351
	tmpVec = objective
Insert Invocation at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:329
	updateResidualsAndCost()
Insert LocalVariable at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:259
	double[] qtf = new double[rows]
Move Assignment from org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:365 to org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:430
	current = new org.apache.commons.math.optimization.VectorialPointValuePair(point, objective)
Move If from org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:443 to org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:435
	if (checker.converged(getIterations(), previous, current)) {
	    return current;
	}
Move ArrayRead from org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:316 to org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:273
	(residuals[i])

Output: Delete If at org.apache.commons.math3.fraction.BigFraction:303
	if () 
Insert Break at org.apache.commons.math3.fraction.BigFraction:307
	break
Insert If at org.apache.commons.math3.fraction.BigFraction:303
	if () {
	    if ((epsilon == 0.0) && ((org.apache.commons.math3.util.FastMath.abs(q1)) < maxDenominator)) 
	    ;
	}
Move BinaryOperator from org.apache.commons.math3.fraction.BigFraction:303 to org.apache.commons.math3.fraction.BigFraction:303
	(p2 > overflow) || (q2 > overflow)
Move Block from org.apache.commons.math3.fraction.BigFraction:303 to org.apache.commons.math3.fraction.BigFraction:306
	{
	    throw new org.apache.commons.math3.fraction.FractionConversionException(value, p2, q2);
	}
Move Throw from org.apache.commons.math3.fraction.BigFraction:306 to org.apache.commons.math3.fraction.BigFraction:309
	throw new org.apache.commons.math3.fraction.FractionConversionException(value, p2, q2)

ChangePatternInstance [actions=[Insert If at org.apache.commons.math3.fraction.BigFraction:306
	if ((epsilon == 0.0) && ((org.apache.commons.math3.util.FastMath.abs(q1)) < maxDenominator)) 
, Insert Break at org.apache.commons.math3.fraction.BigFraction:307
	break
]]
Output: Insert If at org.apache.commons.math.analysis.solvers.BaseSecantSolver:186
	if (x == x1) {
	    final double delta = org.apache.commons.math.util.FastMath.max((rtol * (org.apache.commons.math.util.FastMath.abs(x1))), atol);
	    x0 = 0.5 * ((x0 + x1) - delta);
	    f0 = computeObjectiveValue(x0);
	}
Insert Case at org.apache.commons.math.analysis.solvers.BaseSecantSolver:195
	default :
	    throw new org.apache.commons.math.exception.MathInternalError();
Insert FieldRead at org.apache.commons.math.analysis.solvers.BaseSecantSolver:185
	org.apache.commons.math.analysis.solvers.BaseSecantSolver.Method.REGULA_FALSI
Insert Break at org.apache.commons.math.analysis.solvers.BaseSecantSolver:194
	break

ChangePatternInstance [actions=[Insert If at org.apache.commons.math.analysis.solvers.BaseSecantSolver:186
	if (x == x1) {
	    final double delta = org.apache.commons.math.util.FastMath.max((rtol * (org.apache.commons.math.util.FastMath.abs(x1))), atol);
	    x0 = 0.5 * ((x0 + x1) - delta);
	    f0 = computeObjectiveValue(x0);
	}
, Insert Assignment at org.apache.commons.math.analysis.solvers.BaseSecantSolver:191
	x0 = 0.5 * ((x0 + x1) - delta)
]]
ChangePatternInstance [actions=[Insert If at org.apache.commons.math.analysis.solvers.BaseSecantSolver:186
	if (x == x1) {
	    final double delta = org.apache.commons.math.util.FastMath.max((rtol * (org.apache.commons.math.util.FastMath.abs(x1))), atol);
	    x0 = 0.5 * ((x0 + x1) - delta);
	    f0 = computeObjectiveValue(x0);
	}
, Insert Assignment at org.apache.commons.math.analysis.solvers.BaseSecantSolver:192
	f0 = computeObjectiveValue(x0)
]]
Output: Insert LocalVariable at org.apache.commons.math.linear.OpenMapRealMatrix:50
	long lRow = ((long) (rowDimension))
Insert If at org.apache.commons.math.linear.OpenMapRealMatrix:52
	if ((lRow * lCol) >= ((long) (java.lang.Integer.MAX_VALUE))) {
	    throw new org.apache.commons.math.exception.NumberIsTooLargeException((lRow * lCol), java.lang.Integer.MAX_VALUE, false);
	}
Insert LocalVariable at org.apache.commons.math.linear.OpenMapRealMatrix:51
	long lCol = ((long) (columnDimension))

ChangePatternInstance [actions=[Insert If at org.apache.commons.math.linear.OpenMapRealMatrix:52
	if ((lRow * lCol) >= ((long) (java.lang.Integer.MAX_VALUE))) {
	    throw new org.apache.commons.math.exception.NumberIsTooLargeException((lRow * lCol), java.lang.Integer.MAX_VALUE, false);
	}
, Insert Throw at org.apache.commons.math.linear.OpenMapRealMatrix:53
	throw new org.apache.commons.math.exception.NumberIsTooLargeException((lRow * lCol), java.lang.Integer.MAX_VALUE, false)
]]
Output: Update VariableRead at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:346
	oldRes to qtf
Delete Block at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:442
	{
	
	}
Delete FieldRead at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:278
	residuals
Insert Assignment at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:451
	oldObj = tmpVec
Insert LocalVariable at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:259
	double[] qtf = new double[rows]
Insert VariableRead at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:283
	qtf
Insert Assignment at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:330
	current = new org.apache.commons.math.optimization.VectorialPointValuePair(point, objective)
Insert LocalVariable at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:258
	double[] oldObj = new double[rows]
Insert ArrayRead at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:321
	(qtf[i])
Insert Assignment at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:449
	tmpVec = objective
Insert Invocation at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:329
	updateResidualsAndCost()
Insert Assignment at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:450
	objective = oldObj
Insert If at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:433
	if ((checker) != null) {
	
	}
Insert Assignment at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:351
	tmpVec = objective
Insert Assignment at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:352
	objective = oldObj
Insert For at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:272
	for (int i = 0; i < (rows); i++) {
	    qtf[i] = ;
	}
Insert Assignment at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:353
	oldObj = tmpVec
Move If from org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:443 to org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:435
	if (checker.converged(getIterations(), previous, current)) {
	    return current;
	}
Move Assignment from org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:365 to org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:430
	current = new org.apache.commons.math.optimization.VectorialPointValuePair(point, objective)
Move ArrayRead from org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:316 to org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:273
	(residuals[i])

Output: Delete Invocation at org.apache.commons.math.dfp.Dfp:2319
	lessThan()
Insert BinaryOperator at org.apache.commons.math.dfp.Dfp:2485
	cmp0 == 0
Insert Block at org.apache.commons.math.dfp.Dfp:2485
	{
	    return (sign) < 0 ? -0.0 : +0.0;
	}
Insert Block at org.apache.commons.math.dfp.Dfp:2487
	
	    if (cmp0 < 0) 
Insert If at org.apache.commons.math.dfp.Dfp:310
	if ((bits & -9223372036854775808L) != 0) {
	    sign = -1;
	}
Insert LocalVariable at org.apache.commons.math.dfp.Dfp:2484
	int cmp0 = org.apache.commons.math.dfp.Dfp.compare(this, )
Move Invocation from org.apache.commons.math.dfp.Dfp:2319 to org.apache.commons.math.dfp.Dfp:2484
	getZero()
Move Block from org.apache.commons.math.dfp.Dfp:2319 to org.apache.commons.math.dfp.Dfp:2487
	{
	    y = negate();
	    negate = true;
	}

Output: Update TypeAccess at org.apache.commons.math.util.MathUtils:236
	 to org.apache.commons.math.util.MathUtils
Update Invocation at org.apache.commons.math.util.MathUtils:184
	 to java.lang.Math.log(org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(n, k))
Delete BinaryOperator at org.apache.commons.math.util.MathUtils:185
	 == (java.lang.Long.MAX_VALUE)
Delete Return at org.apache.commons.math.util.MathUtils:236
	return .floor(((java.lang.Math.exp(.binomialCoefficientLog(, ))) + ))
Delete Throw at org.apache.commons.math.util.MathUtils:186
	throw new java.lang.ArithmeticException("result too large to represent in a long integer")
Insert If at org.apache.commons.math.util.MathUtils:264
	if (n < 67) {
	    return .binomialCoefficient(, );
	}
Insert Return at org.apache.commons.math.util.MathUtils:273
	return java.lang.Math.floor((result + ))
Insert BinaryOperator at org.apache.commons.math.util.MathUtils:194
	n <= 61
Insert If at org.apache.commons.math.util.MathUtils:255
	if ((n == k) || (k == 0)) {
	    return 1.0;
	}
Insert For at org.apache.commons.math.util.MathUtils:269
	for (int i = 1; i <= k; i++) {
	    result *= ((double) ((n - k) + i)) / ((double) (i));
	}
Insert Literal at org.apache.commons.math.util.MathUtils:193
	1
Insert Block at org.apache.commons.math.util.MathUtils:199
	
	    if (n <= 66) else {
	        for (int j = 1, i = (n - k) + 1; j <= k; i++ , j++) {
	            long d = org.apache.commons.math.util.MathUtils.gcd(i, j);
	            result = org.apache.commons.math.util.MathUtils.mulAndCheck((result / (j / d)), (i / d));
	        }
	    }
Insert LocalVariable at org.apache.commons.math.util.MathUtils:268
	double result = 1.0
Insert If at org.apache.commons.math.util.MathUtils:258
	if ((k == 1) || (k == (n - 1))) {
	    return n;
	}
Insert If at org.apache.commons.math.util.MathUtils:314
	if (n < 67) {
	    return java.lang.Math.log(org.apache.commons.math.util.MathUtils.binomialCoefficient(n, k));
	}
Insert If at org.apache.commons.math.util.MathUtils:247
	if (n < k) {
	    throw new java.lang.IllegalArgumentException("must have n >= k for binomial coefficient (n,k)");
	}
Insert If at org.apache.commons.math.util.MathUtils:261
	if (k > (n / 2)) {
	    return .binomialCoefficientDouble(n, (n - k));
	}
Insert Block at org.apache.commons.math.util.MathUtils:194
	{
	    for (int j = 1, i = (n - k) + 1; j <= k; i++ , j++) {
	        result = ( * i) / j;
	    }
	}
Insert For at org.apache.commons.math.util.MathUtils:202
	for (int j = 1, i = (n - k) + 1; j <= k; i++ , j++) {
	    long d = org.apache.commons.math.util.MathUtils.gcd(i, j);
	    result = (result / (j / d)) * (i / d);
	}
Insert If at org.apache.commons.math.util.MathUtils:185
	if (k > (n / 2))
	    return org.apache.commons.math.util.MathUtils.binomialCoefficient(n, (n - k));
Insert If at org.apache.commons.math.util.MathUtils:322
	if (n < 1030) {
	    return ;
	}
Insert If at org.apache.commons.math.util.MathUtils:251
	if (n < 0) {
	    throw new java.lang.IllegalArgumentException("must have n >= 0 for binomial coefficient (n,k)");
	}
Move Block from org.apache.commons.math.util.MathUtils:185 to org.apache.commons.math.util.MathUtils:199
	{
	    throw new java.lang.ArithmeticException("result too large to represent in a long integer");
	}
Move Invocation from org.apache.commons.math.util.MathUtils:184 to org.apache.commons.math.util.MathUtils:323
	java.lang.Math.round(org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(n, k))
Move VariableRead from org.apache.commons.math.util.MathUtils:185 to org.apache.commons.math.util.MathUtils:197
	result
Move VariableRead from org.apache.commons.math.util.MathUtils:236 to org.apache.commons.math.util.MathUtils:265
	k
Move VariableRead from org.apache.commons.math.util.MathUtils:236 to org.apache.commons.math.util.MathUtils:265
	n
Move Literal from org.apache.commons.math.util.MathUtils:236 to org.apache.commons.math.util.MathUtils:273
	0.5
Move TypeAccess from org.apache.commons.math.util.MathUtils:236 to org.apache.commons.math.util.MathUtils
	java.lang.Math
Move TypeAccess from org.apache.commons.math.util.MathUtils to org.apache.commons.math.util.MathUtils
	org.apache.commons.math.util.MathUtils

ChangePatternInstance [actions=[Insert If at org.apache.commons.math.util.MathUtils:185
	if (k > (n / 2))
	    return org.apache.commons.math.util.MathUtils.binomialCoefficient(n, (n - k));
, Insert Return at org.apache.commons.math.util.MathUtils:186
	return org.apache.commons.math.util.MathUtils.binomialCoefficient(n, (n - k))
]]
ChangePatternInstance [actions=[Insert If at org.apache.commons.math.util.MathUtils:255
	if ((n == k) || (k == 0)) {
	    return 1.0;
	}
, Insert Return at org.apache.commons.math.util.MathUtils:256
	return 1.0
]]
ChangePatternInstance [actions=[Insert If at org.apache.commons.math.util.MathUtils:258
	if ((k == 1) || (k == (n - 1))) {
	    return n;
	}
, Insert Return at org.apache.commons.math.util.MathUtils:259
	return n
]]
ChangePatternInstance [actions=[Insert If at org.apache.commons.math.util.MathUtils:261
	if (k > (n / 2)) {
	    return .binomialCoefficientDouble(n, (n - k));
	}
, Insert Return at org.apache.commons.math.util.MathUtils:262
	return .binomialCoefficientDouble(n, (n - k))
]]
ChangePatternInstance [actions=[Insert If at org.apache.commons.math.util.MathUtils:264
	if (n < 67) {
	    return .binomialCoefficient(, );
	}
, Insert Return at org.apache.commons.math.util.MathUtils:265
	return .binomialCoefficient(, )
]]
ChangePatternInstance [actions=[Insert If at org.apache.commons.math.util.MathUtils:314
	if (n < 67) {
	    return java.lang.Math.log(org.apache.commons.math.util.MathUtils.binomialCoefficient(n, k));
	}
, Insert Return at org.apache.commons.math.util.MathUtils:315
	return java.lang.Math.log(org.apache.commons.math.util.MathUtils.binomialCoefficient(n, k))
]]
ChangePatternInstance [actions=[Insert If at org.apache.commons.math.util.MathUtils:322
	if (n < 1030) {
	    return ;
	}
, Insert Return at org.apache.commons.math.util.MathUtils:323
	return 
]]
Output: Insert If at org.apache.commons.math.ode.events.EventState:191
	if ((ga * gb) > 0) {
	    final double epsilon = (forward ? 0.25 : -0.25) * (convergence);
	    for (int k = 0; (k < 4) && ((ga * gb) > 0); ++k) {
	        ta += epsilon;
	        interpolator.setInterpolatedTime(ta);
	        ga = handler.g(ta, interpolator.getInterpolatedState());
	    }
	    if ((ga * gb) > 0) {
	        throw org.apache.commons.math.MathRuntimeException.createInternalError(null);
	    }
	}

ChangePatternInstance [actions=[Insert If at org.apache.commons.math.ode.events.EventState:191
	if ((ga * gb) > 0) {
	    final double epsilon = (forward ? 0.25 : -0.25) * (convergence);
	    for (int k = 0; (k < 4) && ((ga * gb) > 0); ++k) {
	        ta += epsilon;
	        interpolator.setInterpolatedTime(ta);
	        ga = handler.g(ta, interpolator.getInterpolatedState());
	    }
	    if ((ga * gb) > 0) {
	        throw org.apache.commons.math.MathRuntimeException.createInternalError(null);
	    }
	}
, Insert If at org.apache.commons.math.ode.events.EventState:205
	if ((ga * gb) > 0) {
	    throw org.apache.commons.math.MathRuntimeException.createInternalError(null);
	}
]]
Output: Insert Invocation at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:166
	setConvergenceChecker(null)
Insert VariableRead at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:428
	current
Insert LocalVariable at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:254
	org.apache.commons.math.optimization.VectorialPointValuePair previous = current
Insert If at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:417
	if ((checker) != null) {
	    if (checker.converged(getIterations(), previous, current)) {
	        return current;
	    }
	}else {
	
	}
Insert LocalVariable at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:248
	org.apache.commons.math.optimization.VectorialPointValuePair current = 
Insert VariableRead at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:306
	current
Insert Assignment at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:348
	current = 
Move ConstructorCall from org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:303 to org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:348
	new org.apache.commons.math.optimization.VectorialPointValuePair(point, objective)
Move If from org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:415 to org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:424
	if (((((java.lang.Math.abs(actRed)) <= (costRelativeTolerance)) && (preRed <= (costRelativeTolerance))) && (ratio <= 2.0)) || (delta <= ((parRelativeTolerance) * xNorm))) {
	    return new org.apache.commons.math.optimization.VectorialPointValuePair(point, objective);
	}
Move ConstructorCall from org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:419 to org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:248
	new org.apache.commons.math.optimization.VectorialPointValuePair(point, objective)

ChangePatternInstance [actions=[Insert If at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:417
	if ((checker) != null) {
	    if (checker.converged(getIterations(), previous, current)) {
	        return current;
	    }
	}else {
	
	}
, Insert If at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:419
	if (checker.converged(getIterations(), previous, current)) {
	    return current;
	}
]]
Output: Insert If at org.apache.commons.math3.optimization.fitting.HarmonicFitter:323
	if (c2 == 0) {
	    throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.ZERO_DENOMINATOR);
	}

ChangePatternInstance [actions=[Insert If at org.apache.commons.math3.optimization.fitting.HarmonicFitter:323
	if (c2 == 0) {
	    throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.ZERO_DENOMINATOR);
	}
, Insert Throw at org.apache.commons.math3.optimization.fitting.HarmonicFitter:326
	throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.ZERO_DENOMINATOR)
]]
Output: Update TypeAccess at org.apache.commons.math.util.MathUtils:236
	 to org.apache.commons.math.util.MathUtils
Update Invocation at org.apache.commons.math.util.MathUtils:184
	 to java.lang.Math.log(org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(n, k))
Delete Return at org.apache.commons.math.util.MathUtils:236
	return .floor(((java.lang.Math.exp(.binomialCoefficientLog(, ))) + ))
Delete Throw at org.apache.commons.math.util.MathUtils:186
	throw new java.lang.ArithmeticException("result too large to represent in a long integer")
Delete BinaryOperator at org.apache.commons.math.util.MathUtils:185
	 == (java.lang.Long.MAX_VALUE)
Insert For at org.apache.commons.math.util.MathUtils:269
	for (int i = 1; i <= k; i++) {
	    result *= ((double) ((n - k) + i)) / ((double) (i));
	}
Insert Literal at org.apache.commons.math.util.MathUtils:193
	1
Insert If at org.apache.commons.math.util.MathUtils:258
	if ((k == 1) || (k == (n - 1))) {
	    return n;
	}
Insert If at org.apache.commons.math.util.MathUtils:322
	if (n < 1030) {
	    return ;
	}
Insert If at org.apache.commons.math.util.MathUtils:261
	if (k > (n / 2)) {
	    return .binomialCoefficientDouble(n, (n - k));
	}
Insert If at org.apache.commons.math.util.MathUtils:251
	if (n < 0) {
	    throw new java.lang.IllegalArgumentException("must have n >= 0 for binomial coefficient (n,k)");
	}
Insert BinaryOperator at org.apache.commons.math.util.MathUtils:194
	n <= 61
Insert Block at org.apache.commons.math.util.MathUtils:194
	{
	    for (int j = 1, i = (n - k) + 1; j <= k; i++ , j++) {
	        result = ( * i) / j;
	    }
	}
Insert If at org.apache.commons.math.util.MathUtils:264
	if (n < 67) {
	    return .binomialCoefficient(, );
	}
Insert LocalVariable at org.apache.commons.math.util.MathUtils:268
	double result = 1.0
Insert If at org.apache.commons.math.util.MathUtils:185
	if (k > (n / 2))
	    return org.apache.commons.math.util.MathUtils.binomialCoefficient(n, (n - k));
Insert If at org.apache.commons.math.util.MathUtils:314
	if (n < 67) {
	    return java.lang.Math.log(org.apache.commons.math.util.MathUtils.binomialCoefficient(n, k));
	}
Insert For at org.apache.commons.math.util.MathUtils:202
	for (int j = 1, i = (n - k) + 1; j <= k; i++ , j++) {
	    long d = org.apache.commons.math.util.MathUtils.gcd(i, j);
	    result = (result / (j / d)) * (i / d);
	}
Insert Return at org.apache.commons.math.util.MathUtils:273
	return java.lang.Math.floor((result + ))
Insert If at org.apache.commons.math.util.MathUtils:247
	if (n < k) {
	    throw new java.lang.IllegalArgumentException("must have n >= k for binomial coefficient (n,k)");
	}
Insert Block at org.apache.commons.math.util.MathUtils:199
	
	    if (n <= 66) else {
	        for (int j = 1, i = (n - k) + 1; j <= k; i++ , j++) {
	            long d = org.apache.commons.math.util.MathUtils.gcd(i, j);
	            result = org.apache.commons.math.util.MathUtils.mulAndCheck((result / (j / d)), (i / d));
	        }
	    }
Insert If at org.apache.commons.math.util.MathUtils:255
	if ((n == k) || (k == 0)) {
	    return 1.0;
	}
Move Literal from org.apache.commons.math.util.MathUtils:236 to org.apache.commons.math.util.MathUtils:273
	0.5
Move VariableRead from org.apache.commons.math.util.MathUtils:236 to org.apache.commons.math.util.MathUtils:265
	n
Move VariableRead from org.apache.commons.math.util.MathUtils:236 to org.apache.commons.math.util.MathUtils:265
	k
Move VariableRead from org.apache.commons.math.util.MathUtils:185 to org.apache.commons.math.util.MathUtils:197
	result
Move TypeAccess from org.apache.commons.math.util.MathUtils:236 to org.apache.commons.math.util.MathUtils
	java.lang.Math
Move Invocation from org.apache.commons.math.util.MathUtils:184 to org.apache.commons.math.util.MathUtils:323
	java.lang.Math.round(org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(n, k))
Move Block from org.apache.commons.math.util.MathUtils:185 to org.apache.commons.math.util.MathUtils:199
	{
	    throw new java.lang.ArithmeticException("result too large to represent in a long integer");
	}
Move TypeAccess from org.apache.commons.math.util.MathUtils to org.apache.commons.math.util.MathUtils
	org.apache.commons.math.util.MathUtils

Output: Update VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:83
	isi to isr
Update VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:92
	 to swapR
Update VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:83
	isi to isr
Update LocalVariable at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:91
	int tmp = index[r] to final int tmpIndex = index[r]
Update LocalVariable at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:82
	int isi = index[[i]] to int isr = index[swapR]
Update VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:93
	tmp to tmpIndex
Update VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:82
	 to swapR
Delete Assignment at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:79
	swap[r] = r
Delete ArrayRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:82
	[i]
Delete ArrayRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:90
	(swap[r])
Delete ArrayWrite at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:84
	swap[r]
Delete ArrayRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:92
	[r]
Delete ArrayRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:93
	swap[r]
Delete BinaryOperator at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:128
	e * e
Delete VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:90
	r
Delete LocalVariable at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:69
	int[] swap = new int[order]
Insert BinaryOperator at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:131
	((c[ii][ir]) * (c[ii][ir])) * inverse2
Insert LocalVariable at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:90
	final int tmpIndex = index[r]
Insert LocalVariable at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:78
	int swapR = r
Insert Assignment at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:94
	b[r] = b[swapR]
Insert VariableWrite at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:83
	swapR
Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:89
	r
Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:89
	swapR
Insert LocalVariable at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:126
	final double inverse2 = 1 / (c[ir][ir])
Insert LocalVariable at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:93
	final double[] tmpRow = b[r]
Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:92
	swapR
Insert Assignment at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:95
	b[swapR] = tmpRow
Move VariableRead from org.apache.commons.math3.linear.RectangularCholeskyDecomposition:92 to org.apache.commons.math3.linear.RectangularCholeskyDecomposition:91
	swap
Move VariableRead from org.apache.commons.math3.linear.RectangularCholeskyDecomposition:82 to org.apache.commons.math3.linear.RectangularCholeskyDecomposition:81
	swap

ChangePatternInstance [actions=[Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:89
	swapR
]]
ChangePatternInstance [actions=[Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:89
	r
]]
ChangePatternInstance [actions=[Update LocalVariable at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:91
	int tmp = index[r] to final int tmpIndex = index[r]
]]
ChangePatternInstance [actions=[Insert LocalVariable at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:93
	final double[] tmpRow = b[r]
]]
ChangePatternInstance [actions=[Insert Assignment at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:94
	b[r] = b[swapR]
]]
ChangePatternInstance [actions=[Insert Assignment at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:95
	b[swapR] = tmpRow
]]
ChangePatternInstance [actions=[Insert LocalVariable at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:126
	final double inverse2 = 1 / (c[ir][ir])
]]
ChangePatternInstance [actions=[Update VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:93
	tmp to tmpIndex
]]
ChangePatternInstance [actions=[Insert ArrayTypeReference at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:93
	double[]
]]
ChangePatternInstance [actions=[Insert LocalVariable at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:93
	final double[] tmpRow = b[r]
]]
ChangePatternInstance [actions=[Insert ArrayRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:93
	b[r]
]]
ChangePatternInstance [actions=[Insert ArrayWrite at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:94
	b[r]
]]
ChangePatternInstance [actions=[Insert ArrayRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:94
	b[swapR]
]]
ChangePatternInstance [actions=[Insert ArrayWrite at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:95
	b[swapR]
]]
ChangePatternInstance [actions=[Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:95
	tmpRow
]]
ChangePatternInstance [actions=[Insert TypeReference at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:126
	double
]]
ChangePatternInstance [actions=[Insert LocalVariable at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:126
	final double inverse2 = 1 / (c[ir][ir])
]]
ChangePatternInstance [actions=[Insert BinaryOperator at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:126
	1 / (c[ir][ir])
]]
ChangePatternInstance [actions=[Update VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:83
	isi to isr
]]
ChangePatternInstance [actions=[Insert VariableWrite at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:83
	swapR
]]
ChangePatternInstance [actions=[Insert LocalVariable at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:90
	final int tmpIndex = index[r]
]]
ChangePatternInstance [actions=[Update VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:92
	 to swapR
]]
ChangePatternInstance [actions=[Move VariableRead from org.apache.commons.math3.linear.RectangularCholeskyDecomposition:92 to org.apache.commons.math3.linear.RectangularCholeskyDecomposition:91
	swap
]]
ChangePatternInstance [actions=[Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:92
	swapR
]]
ChangePatternInstance [actions=[Insert LocalVariable at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:93
	final double[] tmpRow = b[r]
]]
ChangePatternInstance [actions=[Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:93
	b
]]
ChangePatternInstance [actions=[Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:93
	r
]]
ChangePatternInstance [actions=[Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:94
	b
]]
ChangePatternInstance [actions=[Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:94
	r
]]
ChangePatternInstance [actions=[Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:94
	b
]]
ChangePatternInstance [actions=[Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:94
	swapR
]]
ChangePatternInstance [actions=[Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:95
	b
]]
ChangePatternInstance [actions=[Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:95
	swapR
]]
ChangePatternInstance [actions=[Insert LocalVariable at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:126
	final double inverse2 = 1 / (c[ir][ir])
]]
ChangePatternInstance [actions=[Insert Literal at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:126
	1
]]
ChangePatternInstance [actions=[Insert ArrayRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:126
	(c[ir][ir])
]]
ChangePatternInstance [actions=[Insert BinaryOperator at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:131
	((c[ii][ir]) * (c[ii][ir])) * inverse2
]]
ChangePatternInstance [actions=[Update VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:83
	isi to isr
]]
ChangePatternInstance [actions=[Insert ArrayRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:126
	c[ir]
]]
ChangePatternInstance [actions=[Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:126
	ir
]]
ChangePatternInstance [actions=[Insert BinaryOperator at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:131
	((c[ii][ir]) * (c[ii][ir]))
]]
ChangePatternInstance [actions=[Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:131
	inverse2
]]
ChangePatternInstance [actions=[Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:126
	c
]]
ChangePatternInstance [actions=[Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:126
	ir
]]
ChangePatternInstance [actions=[Insert ArrayRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:131
	(c[ii][ir])
]]
ChangePatternInstance [actions=[Insert ArrayRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:131
	(c[ii][ir])
]]
ChangePatternInstance [actions=[Insert ArrayRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:131
	c[ii]
]]
ChangePatternInstance [actions=[Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:131
	ir
]]
ChangePatternInstance [actions=[Insert ArrayRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:131
	c[ii]
]]
ChangePatternInstance [actions=[Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:131
	ir
]]
ChangePatternInstance [actions=[Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:131
	c
]]
ChangePatternInstance [actions=[Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:131
	ii
]]
ChangePatternInstance [actions=[Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:131
	c
]]
ChangePatternInstance [actions=[Insert VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:131
	ii
]]
ChangePatternInstance [actions=[Delete VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:84
	swap
]]
ChangePatternInstance [actions=[Delete VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:84
	r
]]
ChangePatternInstance [actions=[Delete ArrayWrite at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:84
	swap[r]
]]
ChangePatternInstance [actions=[Delete VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:90
	swap
]]
ChangePatternInstance [actions=[Delete VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:90
	r
]]
ChangePatternInstance [actions=[Delete ArrayRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:90
	(swap[r])
]]
ChangePatternInstance [actions=[Delete VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:90
	r
]]
ChangePatternInstance [actions=[Delete VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:92
	r
]]
ChangePatternInstance [actions=[Delete ArrayRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:92
	[r]
]]
ChangePatternInstance [actions=[Delete VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:93
	swap
]]
ChangePatternInstance [actions=[Delete VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:93
	r
]]
ChangePatternInstance [actions=[Delete ArrayRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:93
	swap[r]
]]
ChangePatternInstance [actions=[Delete VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:128
	e
]]
ChangePatternInstance [actions=[Delete VariableRead at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:128
	e
]]
ChangePatternInstance [actions=[Delete BinaryOperator at org.apache.commons.math3.linear.RectangularCholeskyDecomposition:128
	e * e
]]
Output: Insert If at org.apache.commons.math.complex.Complex:159
	if ((isNaN) || (rhs.isNaN)) {
	    return org.apache.commons.math.complex.Complex.NaN;
	}

ChangePatternInstance [actions=[Insert If at org.apache.commons.math.complex.Complex:159
	if ((isNaN) || (rhs.isNaN)) {
	    return org.apache.commons.math.complex.Complex.NaN;
	}
, Insert Return at org.apache.commons.math.complex.Complex:160
	return org.apache.commons.math.complex.Complex.NaN
]]
Output: Update Literal at org.apache.commons.math.distribution.NormalDistributionImpl:132
	20 to 40
Delete Try at org.apache.commons.math.distribution.NormalDistributionImpl:126
	try {
	    ;
	} catch (org.apache.commons.math.MaxIterationsExceededException ex) {
	    if (x < ((mean) - (20 * ))) {
	        return 0;
	    }else
	        if () else {
	            throw ex;
	        }
	
	}
Delete VariableRead at org.apache.commons.math.distribution.NormalDistributionImpl:132
	x
Delete FieldRead at org.apache.commons.math.distribution.NormalDistributionImpl:132
	(standardDeviation)
Delete BinaryOperator at org.apache.commons.math.distribution.NormalDistributionImpl:132
	((mean) + )
Delete Literal at org.apache.commons.math.distribution.NormalDistributionImpl:133
	1
Insert If at org.apache.commons.math.distribution.NormalDistributionImpl:127
	if () 
Insert Conditional at org.apache.commons.math.distribution.NormalDistributionImpl:128
	dev < 0 ? 0.0 : 1.0
Insert Invocation at org.apache.commons.math.distribution.NormalDistributionImpl:127
	(org.apache.commons.math.util.FastMath.abs(dev))
Move Block from org.apache.commons.math.distribution.NormalDistributionImpl:132 to org.apache.commons.math.distribution.NormalDistributionImpl:127
	{
	    return 1;
	}
Move Return from org.apache.commons.math.distribution.NormalDistributionImpl:127 to org.apache.commons.math.distribution.NormalDistributionImpl:131
	return 0.5 * (1.0 + (org.apache.commons.math.special.Erf.erf((dev / ((standardDeviation) * (org.apache.commons.math.util.FastMath.sqrt(2.0)))))))
Move BinaryOperator from org.apache.commons.math.distribution.NormalDistributionImpl:132 to org.apache.commons.math.distribution.NormalDistributionImpl:127
	x > ((mean) + (20 * (standardDeviation)))

Output: Insert For at org.apache.commons.math.optimization.direct.MultiDirectional:103
	for (int i = 0; i < (simplex.length); ++i) {
	    converged &= checker.converged(iter, original[i], simplex[i]);
	}
Insert If at org.apache.commons.math.optimization.direct.MultiDirectional:106
	if (converged) {
	    return;
	}
Insert LocalVariable at org.apache.commons.math.optimization.direct.MultiDirectional:102
	boolean converged = true
Insert LocalVariable at org.apache.commons.math.optimization.direct.MultiDirectional:101
	final int iter = getIterations()
Insert LocalVariable at org.apache.commons.math.optimization.direct.MultiDirectional:68
	final org.apache.commons.math.optimization.RealConvergenceChecker checker = getConvergenceChecker()

ChangePatternInstance [actions=[Insert If at org.apache.commons.math.optimization.direct.MultiDirectional:106
	if (converged) {
	    return;
	}
, Insert Return at org.apache.commons.math.optimization.direct.MultiDirectional:108
	return
]]
Output: Update VariableRead at org.apache.commons.math.util.MathUtils:346
	result to n
Update BinaryOperator at org.apache.commons.math.util.MathUtils:346
	result == (java.lang.Long.MAX_VALUE) to n > 20
Delete LocalVariable at org.apache.commons.math.util.MathUtils:345
	long result = java.lang.Math.round(org.apache.commons.math.util.MathUtils.factorialDouble(n))
Insert If at org.apache.commons.math.util.MathUtils:379
	if (n < 21) {
	    return org.apache.commons.math.util.MathUtils.factorial(n);
	}
Insert If at org.apache.commons.math.util.MathUtils:402
	if (n < 21) {
	    return java.lang.Math.log(org.apache.commons.math.util.MathUtils.factorial(n));
	}
Insert If at org.apache.commons.math.util.MathUtils:345
	if (n < 0) {
	    throw new java.lang.IllegalArgumentException("must have n >= 0 for n!");
	}

ChangePatternInstance [actions=[Insert If at org.apache.commons.math.util.MathUtils:379
	if (n < 21) {
	    return org.apache.commons.math.util.MathUtils.factorial(n);
	}
, Insert Return at org.apache.commons.math.util.MathUtils:380
	return org.apache.commons.math.util.MathUtils.factorial(n)
]]
ChangePatternInstance [actions=[Insert If at org.apache.commons.math.util.MathUtils:402
	if (n < 21) {
	    return java.lang.Math.log(org.apache.commons.math.util.MathUtils.factorial(n));
	}
, Insert Return at org.apache.commons.math.util.MathUtils:403
	return java.lang.Math.log(org.apache.commons.math.util.MathUtils.factorial(n))
]]
Output: Insert If at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:250
	if (forward) {
	    if (((stepStart) + (stepSize)) >= t) {
	        stepSize = t - (stepStart);
	    }
	}else {
	    if (((stepStart) + (stepSize)) <= t) {
	        stepSize = t - (stepStart);
	    }
	}

ChangePatternInstance [actions=[Insert If at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:250
	if (forward) {
	    if (((stepStart) + (stepSize)) >= t) {
	        stepSize = t - (stepStart);
	    }
	}else {
	    if (((stepStart) + (stepSize)) <= t) {
	        stepSize = t - (stepStart);
	    }
	}
, Insert If at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:251
	if (((stepStart) + (stepSize)) >= t) {
	    stepSize = t - (stepStart);
	}
]]
ChangePatternInstance [actions=[Insert If at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:250
	if (forward) {
	    if (((stepStart) + (stepSize)) >= t) {
	        stepSize = t - (stepStart);
	    }
	}else {
	    if (((stepStart) + (stepSize)) <= t) {
	        stepSize = t - (stepStart);
	    }
	}
, Insert If at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:255
	if (((stepStart) + (stepSize)) <= t) {
	    stepSize = t - (stepStart);
	}
]]
Output: Insert If at org.apache.commons.math.complex.Complex:1021
	if ((imaginary) > 20.0) {
	    return createComplex(0.0, 1.0);
	}
Insert If at org.apache.commons.math.complex.Complex:1075
	if ((real) < (-20.0)) {
	    return createComplex((-1.0), 0.0);
	}
Insert If at org.apache.commons.math.complex.Complex:1024
	if ((imaginary) < (-20.0)) {
	    return createComplex(0.0, (-1.0));
	}
Insert If at org.apache.commons.math.complex.Complex:1072
	if ((real) > 20.0) {
	    return createComplex(1.0, 0.0);
	}
Insert BinaryOperator at org.apache.commons.math.complex.Complex:1018
	 || (java.lang.Double.isInfinite(real))
Insert BinaryOperator at org.apache.commons.math.complex.Complex:1069
	 || (java.lang.Double.isInfinite(imaginary))
Move FieldRead from org.apache.commons.math.complex.Complex:1018 to org.apache.commons.math.complex.Complex:1018
	isNaN
Move FieldRead from org.apache.commons.math.complex.Complex:1063 to org.apache.commons.math.complex.Complex:1069
	isNaN

ChangePatternInstance [actions=[Insert BinaryOperator at org.apache.commons.math.complex.Complex:1018
	 || (java.lang.Double.isInfinite(real))
]]
ChangePatternInstance [actions=[Insert BinaryOperator at org.apache.commons.math.complex.Complex:1021
	(imaginary) > 20.0
]]
ChangePatternInstance [actions=[Insert Block at org.apache.commons.math.complex.Complex:1021
	{
	    return createComplex(0.0, 1.0);
	}
]]
ChangePatternInstance [actions=[Insert BinaryOperator at org.apache.commons.math.complex.Complex:1024
	(imaginary) < (-20.0)
]]
ChangePatternInstance [actions=[Insert Block at org.apache.commons.math.complex.Complex:1024
	{
	    return createComplex(0.0, (-1.0));
	}
]]
ChangePatternInstance [actions=[Insert BinaryOperator at org.apache.commons.math.complex.Complex:1069
	 || (java.lang.Double.isInfinite(imaginary))
]]
ChangePatternInstance [actions=[Insert BinaryOperator at org.apache.commons.math.complex.Complex:1072
	(real) > 20.0
]]
ChangePatternInstance [actions=[Insert Block at org.apache.commons.math.complex.Complex:1072
	{
	    return createComplex(1.0, 0.0);
	}
]]
ChangePatternInstance [actions=[Insert BinaryOperator at org.apache.commons.math.complex.Complex:1075
	(real) < (-20.0)
]]
ChangePatternInstance [actions=[Insert Block at org.apache.commons.math.complex.Complex:1075
	{
	    return createComplex((-1.0), 0.0);
	}
]]
ChangePatternInstance [actions=[Move FieldRead from org.apache.commons.math.complex.Complex:1018 to org.apache.commons.math.complex.Complex:1018
	isNaN
]]
ChangePatternInstance [actions=[Insert Invocation at org.apache.commons.math.complex.Complex:1018
	(java.lang.Double.isInfinite(real))
]]
ChangePatternInstance [actions=[Insert FieldRead at org.apache.commons.math.complex.Complex:1021
	(imaginary)
]]
ChangePatternInstance [actions=[Insert Literal at org.apache.commons.math.complex.Complex:1021
	20.0
]]
ChangePatternInstance [actions=[Insert Return at org.apache.commons.math.complex.Complex:1022
	return createComplex(0.0, 1.0)
]]
ChangePatternInstance [actions=[Insert FieldRead at org.apache.commons.math.complex.Complex:1024
	(imaginary)
]]
ChangePatternInstance [actions=[Insert UnaryOperator at org.apache.commons.math.complex.Complex:1024
	(-20.0)
]]
ChangePatternInstance [actions=[Insert Return at org.apache.commons.math.complex.Complex:1025
	return createComplex(0.0, (-1.0))
]]
ChangePatternInstance [actions=[Move FieldRead from org.apache.commons.math.complex.Complex:1063 to org.apache.commons.math.complex.Complex:1069
	isNaN
]]
ChangePatternInstance [actions=[Insert Invocation at org.apache.commons.math.complex.Complex:1069
	(java.lang.Double.isInfinite(imaginary))
]]
ChangePatternInstance [actions=[Insert FieldRead at org.apache.commons.math.complex.Complex:1072
	(real)
]]
ChangePatternInstance [actions=[Insert Literal at org.apache.commons.math.complex.Complex:1072
	20.0
]]
ChangePatternInstance [actions=[Insert Return at org.apache.commons.math.complex.Complex:1073
	return createComplex(1.0, 0.0)
]]
ChangePatternInstance [actions=[Insert FieldRead at org.apache.commons.math.complex.Complex:1075
	(real)
]]
ChangePatternInstance [actions=[Insert UnaryOperator at org.apache.commons.math.complex.Complex:1075
	(-20.0)
]]
ChangePatternInstance [actions=[Insert Return at org.apache.commons.math.complex.Complex:1076
	return createComplex((-1.0), 0.0)
]]
ChangePatternInstance [actions=[Insert TypeAccess at org.apache.commons.math.complex.Complex:1018
	java.lang.Double
]]
ChangePatternInstance [actions=[Insert FieldRead at org.apache.commons.math.complex.Complex:1018
	real
]]
ChangePatternInstance [actions=[Insert TypeAccess at org.apache.commons.math.complex.Complex
	org.apache.commons.math.complex.Complex
]]
ChangePatternInstance [actions=[Insert Invocation at org.apache.commons.math.complex.Complex:1022
	createComplex(0.0, 1.0)
]]
ChangePatternInstance [actions=[Insert TypeAccess at org.apache.commons.math.complex.Complex
	org.apache.commons.math.complex.Complex
]]
ChangePatternInstance [actions=[Insert Literal at org.apache.commons.math.complex.Complex:1024
	20.0
]]
ChangePatternInstance [actions=[Insert Invocation at org.apache.commons.math.complex.Complex:1025
	createComplex(0.0, (-1.0))
]]
ChangePatternInstance [actions=[Insert TypeAccess at org.apache.commons.math.complex.Complex:1069
	java.lang.Double
]]
ChangePatternInstance [actions=[Insert FieldRead at org.apache.commons.math.complex.Complex:1069
	imaginary
]]
ChangePatternInstance [actions=[Insert TypeAccess at org.apache.commons.math.complex.Complex
	org.apache.commons.math.complex.Complex
]]
ChangePatternInstance [actions=[Insert Invocation at org.apache.commons.math.complex.Complex:1073
	createComplex(1.0, 0.0)
]]
ChangePatternInstance [actions=[Insert TypeAccess at org.apache.commons.math.complex.Complex
	org.apache.commons.math.complex.Complex
]]
ChangePatternInstance [actions=[Insert Literal at org.apache.commons.math.complex.Complex:1075
	20.0
]]
ChangePatternInstance [actions=[Insert Invocation at org.apache.commons.math.complex.Complex:1076
	createComplex((-1.0), 0.0)
]]
ChangePatternInstance [actions=[Insert TypeAccess at org.apache.commons.math.complex.Complex
	org.apache.commons.math.complex.Complex
]]
ChangePatternInstance [actions=[Insert TypeAccess at org.apache.commons.math.complex.Complex
	org.apache.commons.math.complex.Complex
]]
ChangePatternInstance [actions=[Insert Literal at org.apache.commons.math.complex.Complex:1022
	0.0
]]
ChangePatternInstance [actions=[Insert Literal at org.apache.commons.math.complex.Complex:1022
	1.0
]]
ChangePatternInstance [actions=[Insert TypeAccess at org.apache.commons.math.complex.Complex
	org.apache.commons.math.complex.Complex
]]
ChangePatternInstance [actions=[Insert Literal at org.apache.commons.math.complex.Complex:1025
	0.0
]]
ChangePatternInstance [actions=[Insert UnaryOperator at org.apache.commons.math.complex.Complex:1025
	(-1.0)
]]
ChangePatternInstance [actions=[Insert TypeAccess at org.apache.commons.math.complex.Complex
	org.apache.commons.math.complex.Complex
]]
ChangePatternInstance [actions=[Insert TypeAccess at org.apache.commons.math.complex.Complex
	org.apache.commons.math.complex.Complex
]]
ChangePatternInstance [actions=[Insert Literal at org.apache.commons.math.complex.Complex:1073
	1.0
]]
ChangePatternInstance [actions=[Insert Literal at org.apache.commons.math.complex.Complex:1073
	0.0
]]
ChangePatternInstance [actions=[Insert TypeAccess at org.apache.commons.math.complex.Complex
	org.apache.commons.math.complex.Complex
]]
ChangePatternInstance [actions=[Insert UnaryOperator at org.apache.commons.math.complex.Complex:1076
	(-1.0)
]]
ChangePatternInstance [actions=[Insert Literal at org.apache.commons.math.complex.Complex:1076
	0.0
]]
ChangePatternInstance [actions=[Insert Literal at org.apache.commons.math.complex.Complex:1025
	1.0
]]
ChangePatternInstance [actions=[Insert Literal at org.apache.commons.math.complex.Complex:1076
	1.0
]]
Output: Insert Literal at org.apache.commons.math.distribution.FDistributionImpl:144
	1.0
Insert If at org.apache.commons.math.distribution.FDistributionImpl:146
	if (d > 2.0) {
	    ;
	}
Move Assignment from org.apache.commons.math.distribution.FDistributionImpl:147 to org.apache.commons.math.distribution.FDistributionImpl:148
	ret = d / (d - 2.0)

ChangePatternInstance [actions=[Insert If at org.apache.commons.math.distribution.FDistributionImpl:146
	if (d > 2.0) {
	    ;
	}
, Move Assignment from org.apache.commons.math.distribution.FDistributionImpl:147 to org.apache.commons.math.distribution.FDistributionImpl:148
	ret = d / (d - 2.0)
]]
Output: Update VariableRead at org.apache.commons.math3.linear.OpenMapRealVector:352
	 to i
Update Invocation at org.apache.commons.math3.linear.OpenMapRealVector:352
	(iter.value()) to (this.getEntry(i))
Update TypeReference at org.apache.commons.math3.linear.OpenMapRealVector:349
	org.apache.commons.math3.util.OpenIntToDoubleHashMap.Iterator to int
Update Invocation at org.apache.commons.math3.linear.OpenMapRealVector:352
	(v.getEntry(.key())) to (v.getEntry(i))
Update Invocation at org.apache.commons.math3.linear.OpenMapRealVector:349
	entries.iterator() to getDimension()
Update VariableRead at org.apache.commons.math3.linear.OpenMapRealVector:352
	 to i
Update VariableRead at org.apache.commons.math3.linear.OpenMapRealVector:352
	iter to i
Update LocalVariable at org.apache.commons.math3.linear.OpenMapRealVector:349
	org.apache.commons.math3.util.OpenIntToDoubleHashMap.Iterator iter = entries.iterator() to final int n = getDimension()
Delete While at org.apache.commons.math3.linear.OpenMapRealVector:350
	while (iter.hasNext()) {
	    iter.advance();
	    .setEntry(.key(), );
	} 
Insert If at org.apache.commons.math3.linear.OpenMapRealVector:373
	if ((v.isNaN()) || (v.isInfinite())) {
	    final int n = getDimension();
	    for (int i = 0; i < n; i++) {
	        final double y = v.getEntry(i);
	        if (java.lang.Double.isNaN(y)) {
	            res.setEntry(i, java.lang.Double.NaN);
	        }else
	            if (java.lang.Double.isInfinite(y)) {
	                final double x = this.getEntry(i);
	                res.setEntry(i, (x * y));
	            }
	
	    }
	}
Insert For at org.apache.commons.math3.linear.OpenMapRealVector:350
	for (int i = 0; i < n; i++) {
	    .setEntry(, );
	}
Insert LocalVariable at org.apache.commons.math3.linear.OpenMapRealVector:349
	final int n = getDimension()
Move VariableRead from org.apache.commons.math3.linear.OpenMapRealVector:352 to org.apache.commons.math3.linear.OpenMapRealVector:351
	iter
Move VariableRead from org.apache.commons.math3.linear.OpenMapRealVector:352 to org.apache.commons.math3.linear.OpenMapRealVector:351
	iter
Move VariableRead from org.apache.commons.math3.linear.OpenMapRealVector:352 to org.apache.commons.math3.linear.OpenMapRealVector:351
	res
Move BinaryOperator from org.apache.commons.math3.linear.OpenMapRealVector:352 to org.apache.commons.math3.linear.OpenMapRealVector:351
	((iter.value()) / (v.getEntry(iter.key())))

ChangePatternInstance [actions=[Insert If at org.apache.commons.math3.linear.OpenMapRealVector:373
	if ((v.isNaN()) || (v.isInfinite())) {
	    final int n = getDimension();
	    for (int i = 0; i < n; i++) {
	        final double y = v.getEntry(i);
	        if (java.lang.Double.isNaN(y)) {
	            res.setEntry(i, java.lang.Double.NaN);
	        }else
	            if (java.lang.Double.isInfinite(y)) {
	                final double x = this.getEntry(i);
	                res.setEntry(i, (x * y));
	            }
	
	    }
	}
, Insert If at org.apache.commons.math3.linear.OpenMapRealVector:377
	if (java.lang.Double.isNaN(y)) {
	    res.setEntry(i, java.lang.Double.NaN);
	}else
	    if (java.lang.Double.isInfinite(y)) {
	        final double x = this.getEntry(i);
	        res.setEntry(i, (x * y));
	    }
]]
ChangePatternInstance [actions=[Insert If at org.apache.commons.math3.linear.OpenMapRealVector:377
	if (java.lang.Double.isNaN(y)) {
	    res.setEntry(i, java.lang.Double.NaN);
	}else
	    if (java.lang.Double.isInfinite(y)) {
	        final double x = this.getEntry(i);
	        res.setEntry(i, (x * y));
	    }
, Insert If at org.apache.commons.math3.linear.OpenMapRealVector:379
	if (java.lang.Double.isInfinite(y)) {
	    final double x = this.getEntry(i);
	    res.setEntry(i, (x * y));
	}
]]
Output: Update VariableRead at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:346
	oldRes to qtf
Delete FieldRead at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:278
	residuals
Delete Block at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:442
	{
	
	}
Insert Invocation at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:329
	updateResidualsAndCost()
Insert LocalVariable at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:259
	double[] qtf = new double[rows]
Insert Assignment at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:450
	objective = oldObj
Insert Assignment at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:330
	current = new org.apache.commons.math.optimization.VectorialPointValuePair(point, objective)
Insert LocalVariable at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:258
	double[] oldObj = new double[rows]
Insert VariableRead at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:283
	qtf
Insert Assignment at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:449
	tmpVec = objective
Insert Assignment at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:351
	tmpVec = objective
Insert Assignment at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:352
	objective = oldObj
Insert ArrayRead at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:321
	(qtf[i])
Insert If at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:433
	if ((checker) != null) {
	
	}
Insert For at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:272
	for (int i = 0; i < (rows); i++) {
	    qtf[i] = ;
	}
Insert Assignment at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:451
	oldObj = tmpVec
Insert Assignment at org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:353
	oldObj = tmpVec
Move ArrayRead from org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:316 to org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:273
	(residuals[i])
Move Assignment from org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:365 to org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:430
	current = new org.apache.commons.math.optimization.VectorialPointValuePair(point, objective)
Move If from org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:443 to org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:435
	if (checker.converged(getIterations(), previous, current)) {
	    return current;
	}

Output: Insert If at org.apache.commons.math3.util.MathArrays:822
	if (len == 1) {
	    return (a[0]) * (b[0]);
	}

ChangePatternInstance [actions=[Insert If at org.apache.commons.math3.util.MathArrays:822
	if (len == 1) {
	    return (a[0]) * (b[0]);
	}
, Insert Return at org.apache.commons.math3.util.MathArrays:824
	return (a[0]) * (b[0])
]]
Output: Insert If at org.apache.commons.math3.geometry.euclidean.twod.SubLine:132
	if (v2D == null) {
	    return null;
	}

ChangePatternInstance [actions=[Insert If at org.apache.commons.math3.geometry.euclidean.twod.SubLine:132
	if (v2D == null) {
	    return null;
	}
, Insert Return at org.apache.commons.math3.geometry.euclidean.twod.SubLine:133
	return null
]]
Output: Insert For at org.apache.commons.math3.optimization.direct.CMAESOptimizer:540
	for (int i = 0; i < (lB.length); i++) {
	    if (java.lang.Double.isInfinite(((boundaries[1][i]) - (boundaries[0][i])))) {
	        final double max = (java.lang.Double.MAX_VALUE) + (boundaries[0][i]);
	        final org.apache.commons.math3.exception.NumberIsTooLargeException e = new org.apache.commons.math3.exception.NumberIsTooLargeException(boundaries[1][i], max, true);
	        e.getContext().addMessage(LocalizedFormats.OVERFLOW);
	        e.getContext().addMessage(LocalizedFormats.INDEX, i);
	        throw e;
	    }
	}

ChangePatternInstance [actions=[Insert If at org.apache.commons.math3.optimization.direct.CMAESOptimizer:541
	if (java.lang.Double.isInfinite(((boundaries[1][i]) - (boundaries[0][i])))) {
	    final double max = (java.lang.Double.MAX_VALUE) + (boundaries[0][i]);
	    final org.apache.commons.math3.exception.NumberIsTooLargeException e = new org.apache.commons.math3.exception.NumberIsTooLargeException(boundaries[1][i], max, true);
	    e.getContext().addMessage(LocalizedFormats.OVERFLOW);
	    e.getContext().addMessage(LocalizedFormats.INDEX, i);
	    throw e;
	}
, Insert Throw at org.apache.commons.math3.optimization.direct.CMAESOptimizer:550
	throw e
]]
Output: Insert If at org.apache.commons.math.analysis.solvers.BaseSecantSolver:189
	if (x == x1) {
	    throw new org.apache.commons.math.exception.ConvergenceException();
	}

ChangePatternInstance [actions=[Insert If at org.apache.commons.math.analysis.solvers.BaseSecantSolver:189
	if (x == x1) {
	    throw new org.apache.commons.math.exception.ConvergenceException();
	}
, Insert Throw at org.apache.commons.math.analysis.solvers.BaseSecantSolver:190
	throw new org.apache.commons.math.exception.ConvergenceException()
]]
Tests run: 33, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 21.797 sec
Running fr.inria.coming.spoon.patterns.PatternMatchingTest
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2a
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2a
EntityRelation [entity=PatternEntity [entityName=If, parent=null], action1=PatternAction [affectedEntity=PatternEntity [entityName=FieldRead, parent=ParentPatternEntity [parent=PatternEntity [entityName=If, parent=null], parentLevel=2]], action=INS], action2=PatternAction [affectedEntity=PatternEntity [entityName=If, parent=null], action=INS]]
all com [ChangePatternInstance [actions=[Insert FieldRead at org.apache.derby.jdbc.EmbedPooledConnection:119
	isActive
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}
]]]
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2a
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2a
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2a
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 1
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 3
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 4
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 5
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2a
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 1b
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2a
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2b false
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2a
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2a
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2a
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2a
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2 instances
[Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:114
	p to u
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:127
	if ((password) != null) {
	    password.toString();
	}
]
-->[Insert Invocation at org.apache.derby.jdbc.EmbedPooledConnection:128
	password.toString()
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}
]
-->[Insert Invocation at org.apache.derby.jdbc.EmbedPooledConnection:128
	password.toString()
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:127
	if ((password) != null) {
	    password.toString();
	}
]
final matching:
-fi->
 ChangePatternInstance [actions=[Insert Invocation at org.apache.derby.jdbc.EmbedPooledConnection:128
	password.toString()
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:127
	if ((password) != null) {
	    password.toString();
	}
]]
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2a
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2a
EntityRelation [entity=PatternEntity [entityName=If, parent=null], action1=PatternAction [affectedEntity=PatternEntity [entityName=FieldRead, parent=ParentPatternEntity [parent=PatternEntity [entityName=If, parent=null], parentLevel=2]], action=INS], action2=PatternAction [affectedEntity=PatternEntity [entityName=If, parent=null], action=INS]]
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2a
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2 instances
[Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:114
	p to u
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:127
	if ((password) != null) {
	    password.toString();
	}
]
-->[Insert Assignment at org.apache.derby.jdbc.EmbedPooledConnection:120
	dataSource = null
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}
]
-->[Insert Assignment at org.apache.derby.jdbc.EmbedPooledConnection:120
	dataSource = null
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:127
	if ((password) != null) {
	    password.toString();
	}
]
final matching:
-fi->
 ChangePatternInstance [actions=[Insert Assignment at org.apache.derby.jdbc.EmbedPooledConnection:120
	dataSource = null
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}
]]
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2a
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2a
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2 instances
[Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:114
	p to u
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:127
	if ((password) == null) {
	    password = null;
	}
]
-->[Insert FieldRead at org.apache.derby.jdbc.EmbedPooledConnection:119
	isActive
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}
]
-->[Insert FieldRead at org.apache.derby.jdbc.EmbedPooledConnection:127
	(password)
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}
]
-->[Insert FieldRead at org.apache.derby.jdbc.EmbedPooledConnection:119
	isActive
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:127
	if ((password) == null) {
	    password = null;
	}
]
-->[Insert FieldRead at org.apache.derby.jdbc.EmbedPooledConnection:127
	(password)
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:127
	if ((password) == null) {
	    password = null;
	}
]
final matching:
-fi->
 ChangePatternInstance [actions=[Insert FieldRead at org.apache.derby.jdbc.EmbedPooledConnection:119
	isActive
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}
]]
-fi->
 ChangePatternInstance [actions=[Insert FieldRead at org.apache.derby.jdbc.EmbedPooledConnection:127
	(password)
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:127
	if ((password) == null) {
	    password = null;
	}
]]
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2 instances
[Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:114
	p to u
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:127
	if ((password) == null) {
	    password = null;
	}
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}
]
-->[Insert Assignment at org.apache.derby.jdbc.EmbedPooledConnection:120
	dataSource = null
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}
]
-->[Insert Assignment at org.apache.derby.jdbc.EmbedPooledConnection:128
	password = null
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}
]
-->[Insert Assignment at org.apache.derby.jdbc.EmbedPooledConnection:120
	dataSource = null
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:127
	if ((password) == null) {
	    password = null;
	}
]
-->[Insert Assignment at org.apache.derby.jdbc.EmbedPooledConnection:128
	password = null
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:127
	if ((password) == null) {
	    password = null;
	}
]
final matching:
-fi->
 ChangePatternInstance [actions=[Insert Assignment at org.apache.derby.jdbc.EmbedPooledConnection:120
	dataSource = null
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}
]]
-fi->
 ChangePatternInstance [actions=[Insert Assignment at org.apache.derby.jdbc.EmbedPooledConnection:128
	password = null
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:127
	if ((password) == null) {
	    password = null;
	}
]]
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 1a
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2 instances
[Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:114
	p to u
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:127
	if ((password) != null) {
	    password.toString();
	}
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}
]
-->[Insert Assignment at org.apache.derby.jdbc.EmbedPooledConnection:120
	dataSource = null
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}
]
-->[Insert Assignment at org.apache.derby.jdbc.EmbedPooledConnection:120
	dataSource = null
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:127
	if ((password) != null) {
	    password.toString();
	}
]
final matching:
-fi->
 ChangePatternInstance [actions=[Insert Assignment at org.apache.derby.jdbc.EmbedPooledConnection:120
	dataSource = null
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}
]]
******Pattern 2*****
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2a
EntityRelation [entity=PatternEntity [entityName=If, parent=null], action1=PatternAction [affectedEntity=PatternEntity [entityName=FieldRead, parent=ParentPatternEntity [parent=PatternEntity [entityName=If, parent=null], parentLevel=2]], action=INS], action2=PatternAction [affectedEntity=PatternEntity [entityName=If, parent=null], action=INS]]
all com [ChangePatternInstance [actions=[Insert FieldRead at org.apache.derby.jdbc.EmbedPooledConnection:119
	isActive
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}
, Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:114
	p to u
]]]
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2a
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2a
EntityRelation [entity=PatternEntity [entityName=If, parent=null], action1=PatternAction [affectedEntity=PatternEntity [entityName=FieldRead, parent=ParentPatternEntity [parent=PatternEntity [entityName=If, parent=null], parentLevel=2]], action=INS], action2=PatternAction [affectedEntity=PatternEntity [entityName=If, parent=null], action=INS]]
all com [ChangePatternInstance [actions=[Insert FieldRead at org.apache.derby.jdbc.EmbedPooledConnection:119
	isActive
, Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}
]]]
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2a
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Case 2a
Output: Update VariableRead at org.apache.derby.jdbc.EmbedPooledConnection:113
	u to p

Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Output: Insert If at org.apache.commons.math3.util.MathArrays:822
	if (len == 1) {
	    return (a[0]) * (b[0]);
	}

Tests run: 36, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 21.486 sec
Running fr.inria.coming.spoon.patterns.InstanceMiningTest
Case 1 missing action
Case 2 missing entity
Tests run: 23, Failures: 0, Errors: 22, Skipped: 0, Time elapsed: 0.279 sec <<< FAILURE!
testXMLPattern2_INS_INV_FromFile(fr.inria.coming.spoon.patterns.InstanceMiningTest)  Time elapsed: 0.169 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.testXMLPattern2_INS_INV_FromFile(InstanceMiningTest.java:432)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testXMLPattern5_b_2_Actions_2Insert_with_value_wrongvalue(fr.inria.coming.spoon.patterns.InstanceMiningTest)  Time elapsed: 0.007 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.testXMLPattern5_b_2_Actions_2Insert_with_value_wrongvalue(InstanceMiningTest.java:645)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testMainPattern1BinaryRunner(fr.inria.coming.spoon.patterns.InstanceMiningTest)  Time elapsed: 0.003 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.runnerMainPatterngeneric(InstanceMiningTest.java:319)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.testMainPattern1BinaryRunner(InstanceMiningTest.java:228)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testXMLPattern5_2_Actions_2Insert(fr.inria.coming.spoon.patterns.InstanceMiningTest)  Time elapsed: 0.008 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.testXMLPattern5_2_Actions_2Insert(InstanceMiningTest.java:555)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testMain1(fr.inria.coming.spoon.patterns.InstanceMiningTest)  Time elapsed: 0.003 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.testMain1(InstanceMiningTest.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testMainPattern1ParentIfRunner(fr.inria.coming.spoon.patterns.InstanceMiningTest)  Time elapsed: 0.003 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.runnerMainPatterngeneric(InstanceMiningTest.java:319)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.testMainPattern1ParentIfRunner(InstanceMiningTest.java:282)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testXMLPattern1_INS_INV_FromFile(fr.inria.coming.spoon.patterns.InstanceMiningTest)  Time elapsed: 0.007 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.testXMLPattern1_INS_INV_FromFile(InstanceMiningTest.java:391)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testMainPattern1UpdateAssigRunner(fr.inria.coming.spoon.patterns.InstanceMiningTest)  Time elapsed: 0.003 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.runnerMainPatterngeneric(InstanceMiningTest.java:319)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.testMainPattern1UpdateAssigRunner(InstanceMiningTest.java:273)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testMainPattern1AnyRunner(fr.inria.coming.spoon.patterns.InstanceMiningTest)  Time elapsed: 0.006 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.runnerMainPatterngeneric(InstanceMiningTest.java:319)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.runnerMainPatterngeneric(InstanceMiningTest.java:296)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.testMainPattern1AnyRunner(InstanceMiningTest.java:210)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testXMLPattern5_b_2_Actions_2Insert_with_value(fr.inria.coming.spoon.patterns.InstanceMiningTest)  Time elapsed: 0.009 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.testXMLPattern5_b_2_Actions_2Insert_with_value(InstanceMiningTest.java:600)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testXMLPattern4_2_Actions_1move(fr.inria.coming.spoon.patterns.InstanceMiningTest)  Time elapsed: 0.008 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.testXMLPattern4_2_Actions_1move(InstanceMiningTest.java:512)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testMainModeArg(fr.inria.coming.spoon.patterns.InstanceMiningTest)  Time elapsed: 0.011 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.testMainModeArg(InstanceMiningTest.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testMainPattern1Any(fr.inria.coming.spoon.patterns.InstanceMiningTest)  Time elapsed: 0.003 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.testMainPattern1Any(InstanceMiningTest.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testMainInputArg(fr.inria.coming.spoon.patterns.InstanceMiningTest)  Time elapsed: 0.002 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.testMainInputArg(InstanceMiningTest.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testMainPattern1LiteralRunner(fr.inria.coming.spoon.patterns.InstanceMiningTest)  Time elapsed: 0.003 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.runnerMainPatterngeneric(InstanceMiningTest.java:319)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.testMainPattern1LiteralRunner(InstanceMiningTest.java:237)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testMainPattern1IfAddRunner(fr.inria.coming.spoon.patterns.InstanceMiningTest)  Time elapsed: 0.003 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.runnerMainPatterngeneric(InstanceMiningTest.java:319)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.testMainPattern1IfAddRunner(InstanceMiningTest.java:291)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testXMLPattern3_INS_INV_FromFile_twoparent(fr.inria.coming.spoon.patterns.InstanceMiningTest)  Time elapsed: 0.006 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.testXMLPattern3_INS_INV_FromFile_twoparent(InstanceMiningTest.java:471)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testMainPattern1AnyInvocationRunner(fr.inria.coming.spoon.patterns.InstanceMiningTest)  Time elapsed: 0.003 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.runnerMainPatterngeneric(InstanceMiningTest.java:319)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.runnerMainPatterngeneric(InstanceMiningTest.java:296)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.testMainPattern1AnyInvocationRunner(InstanceMiningTest.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testMainDiff(fr.inria.coming.spoon.patterns.InstanceMiningTest)  Time elapsed: 0.002 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.testMainDiff(InstanceMiningTest.java:143)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testMainPattern1ParentAssingRunner(fr.inria.coming.spoon.patterns.InstanceMiningTest)  Time elapsed: 0.003 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.runnerMainPatterngeneric(InstanceMiningTest.java:319)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.testMainPattern1ParentAssingRunner(InstanceMiningTest.java:246)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testMainPattern1InsertInvocationRunner(fr.inria.coming.spoon.patterns.InstanceMiningTest)  Time elapsed: 0.002 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.runnerMainPatterngeneric(InstanceMiningTest.java:319)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.runnerMainPatterngeneric(InstanceMiningTest.java:296)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.testMainPattern1InsertInvocationRunner(InstanceMiningTest.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testMainPattern1AssignementRunner(fr.inria.coming.spoon.patterns.InstanceMiningTest)  Time elapsed: 0.003 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.runnerMainPatterngeneric(InstanceMiningTest.java:319)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.runnerMainPatterngeneric(InstanceMiningTest.java:296)
	at fr.inria.coming.spoon.patterns.InstanceMiningTest.testMainPattern1AssignementRunner(InstanceMiningTest.java:219)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running fr.inria.coming.spoon.comparison.SpoonGranularitySingleChangePatternTest
[Delete VariableRead at X:-1
	b
, Insert BinaryOperator at X:-1
	b + d
, Insert Literal at X:-1
	1
]

[Delete Literal at X:-1
	1
, Delete BinaryOperator at X:-1
	b + c
, Insert VariableRead at X:-1
	b
]

[Delete UnaryOperator at X:-1
	-b
, Insert VariableRead at X:-1
	b
]

[Update BinaryOperator at X:-1
	(b * c) to (b / c)
]

[Update VariableRead at X:-1
	c to a
]

[Insert BinaryOperator at X:-1
	 + (((a + b) + d) + c)
, Move BinaryOperator from X:-1 to X:-1
	(a + (b / c)) + d
]

[Delete Literal at X:-1
	5
, Insert VariableRead at X:-1
	c
]

Tests run: 8, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 1.102 sec
Running fr.inria.coming.spoon.comparison.SpoonFileComparatorTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.255 sec
Running fr.inria.coming.spoon.core.MainComingTest
---
Actions available: 
INS
DEL
UPD
MOV
PER
ANY
---
---
Entities Type Available:
---
ConstructorCall
Invocation
NewClass
Catch
Method
Lambda
Do
For
ForEach
While
Try
TryWithResource
CatchVariableImpl
Annotation
Assignment
BinaryOperator
CodeSnippetExpression
Conditional
Assert
Literal
OperatorAssignment
NewArray
TargetedExpression
UnaryOperator
TypeAccess
ArrayAccess
FieldAccess
SuperAccess
ThisAccess
VariableRead
VariableWrite
FieldRead
FieldWrite
AnnotationFieldAccess
ArrayRead
ArrayWrite
EnumValue
Block
Case
Field
CFlowBreak
TypeMember
LabelledFlowBreak
Return
Constructor
Interface
JavaDoag
Type
Enum
Import
Comment
LocalVariable
Parameter
If
Synchronized
Throw
---
null
Tests run: 16, Failures: 0, Errors: 12, Skipped: 0, Time elapsed: 0.073 sec <<< FAILURE!
testFilter_2Filters(fr.inria.coming.spoon.core.MainComingTest)  Time elapsed: 0.005 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.core.MainComingTest.testFilter_2Filters(MainComingTest.java:308)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testLoadFilter(fr.inria.coming.spoon.core.MainComingTest)  Time elapsed: 0.006 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.core.MainComingTest.testLoadFilter(MainComingTest.java:355)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testLoadOutput(fr.inria.coming.spoon.core.MainComingTest)  Time elapsed: 0.004 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.core.MainComingTest.testLoadOutput(MainComingTest.java:402)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testLoadPasers(fr.inria.coming.spoon.core.MainComingTest)  Time elapsed: 0.003 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.core.MainComingTest.testLoadPasers(MainComingTest.java:386)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testFilter_hunks(fr.inria.coming.spoon.core.MainComingTest)  Time elapsed: 0.003 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.core.MainComingTest.testFilter_hunks(MainComingTest.java:214)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testFilter_keyword(fr.inria.coming.spoon.core.MainComingTest)  Time elapsed: 0.003 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.core.MainComingTest.testFilter_keyword(MainComingTest.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testLoadAnalyzers2Args(fr.inria.coming.spoon.core.MainComingTest)  Time elapsed: 0.005 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.core.MainComingTest.testLoadAnalyzers2Args(MainComingTest.java:429)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testHunkAnalysis(fr.inria.coming.spoon.core.MainComingTest)  Time elapsed: 0.002 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.core.MainComingTest.testHunkAnalysis(MainComingTest.java:114)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testFilter_maxfiles(fr.inria.coming.spoon.core.MainComingTest)  Time elapsed: 0.003 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.core.MainComingTest.testFilter_maxfiles(MainComingTest.java:267)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testFilter_bugfix(fr.inria.coming.spoon.core.MainComingTest)  Time elapsed: 0.012 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.core.MainComingTest.testFilter_bugfix(MainComingTest.java:150)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testLoadAnalyzers(fr.inria.coming.spoon.core.MainComingTest)  Time elapsed: 0.002 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.core.MainComingTest.testLoadAnalyzers(MainComingTest.java:415)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testDiffAnalysis(fr.inria.coming.spoon.core.MainComingTest)  Time elapsed: 0.004 sec  <<< ERROR!
java.lang.NullPointerException
	at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)
	at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)
	at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)
	at fr.inria.coming.core.engine.git.RepositoryPGit.loadCommits(RepositoryPGit.java:103)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:75)
	at fr.inria.coming.core.engine.git.RepositoryPGit.<init>(RepositoryPGit.java:45)
	at fr.inria.coming.core.engine.git.GITRepositoryInspector.loadDataset(GITRepositoryInspector.java:88)
	at fr.inria.coming.core.engine.RevisionNavigationExperiment.analyze(RevisionNavigationExperiment.java:68)
	at fr.inria.coming.main.ComingMain.run(ComingMain.java:172)
	at fr.inria.coming.spoon.core.MainComingTest.testDiffAnalysis(MainComingTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running fr.inria.coming.spoon.diffanalyzer.ContextJSONTest
Output: Insert If at org.apache.derby.jdbc.EmbedPooledConnection:119
	if (isActive) {
	    dataSource = null;
	}

Diff file filetest 1
out:
{"diffid":"filetest","info":[{"cntx":{"context":{"involve_GE_relation_operators":false,"involved_relation_bin_operators":[],"involve_USR_relation_operators":false,"VARS":[{"VAR_MODIF":["private"],"VAR_VISIB":"private","VAR_NAME":"connString","VAR_TYPE":"java.lang.String"},{"VAR_MODIF":["private"],"VAR_VISIB":"private","VAR_NAME":"eventListener","VAR_TYPE":"java.util.ArrayList"},{"VAR_MODIF":["private"],"VAR_VISIB":"private","VAR_NAME":"eventIterators","VAR_TYPE":"int"},{"VAR_MODIF":[],"VAR_VISIB":"","VAR_NAME":"realConnection","VAR_TYPE":"org.apache.derby.impl.jdbc.EmbedConnection"},{"VAR_MODIF":[],"VAR_VISIB":"","VAR_NAME":"defaultIsolationLevel","VAR_TYPE":"int"},{"VAR_MODIF":["private"],"VAR_VISIB":"private","VAR_NAME":"defaultReadOnly","VAR_TYPE":"boolean"},{"VAR_MODIF":[],"VAR_VISIB":"","VAR_NAME":"currentConnectionHandle","VAR_TYPE":"org.apache.derby.iapi.jdbc.BrokeredConnection"},{"VAR_MODIF":["final"],"VAR_VISIB":"","VAR_NAME":"dataSource","VAR_TYPE":"org.apache.derby.jdbc.ReferenceableDataSource"},{"VAR_MODIF":["private","final"],"VAR_VISIB":"private","VAR_NAME":"username","VAR_TYPE":"java.lang.String"},{"VAR_MODIF":["private","final"],"VAR_VISIB":"private","VAR_NAME":"password","VAR_TYPE":"java.lang.String"},{"VAR_MODIF":["private","final"],"VAR_VISIB":"private","VAR_NAME":"requestPassword","VAR_TYPE":"boolean"},{"VAR_MODIF":["protected"],"VAR_VISIB":"protected","VAR_NAME":"isActive","VAR_TYPE":"boolean"}],"SPOON_PATH":"#subPackage[name=org]#subPackage[name=apache]#subPackage[name=derby]#subPackage[name=jdbc]#containedType[name=EmbedPooledConnection]#typeMember[index=13]#body#statement[index=6]","involve_SR_relation_operators":false,"involve_SL_relation_operators":false,"involve_EQ_relation_operators":false,"NR_OBJECT_NOT_USED":0,"involve_LE_relation_operators":false,"involve_GT_relation_operators":false,"PATH_ELEMENTS":["#subPackage[name=org]","#subPackage[name=apache]","#subPackage[name=derby]","#subPackage[name=jdbc]","#containedType[name=EmbedPooledConnection]","#typeMember[index=13]","#body","#statement[index=6]"],"TYPE":"CtIfImpl","involve_BITOR_relation_operators":false,"FILE_LOCATION":"\/root\/workspace\/Spirals-Team\/coming\/438652192\/target\/classes\/patterns_examples\/case2\/1205753_EmbedPooledConnection_0_t.java","involve_COMPL_relation_operators":false,"involve_POS_relation_operators":false,"involve_LT_relation_operators":false,"PARENT_CLASS":"org.apache.derby.jdbc.EmbedPooledConnection","HAS_VAR_SIM_NAME":false,"involve_NE_relation_operators":false,"NR_OBJECT_USED":0,"involve_POSTDEC_relation_operators":false,"involved_relation_unary_operators":[],"HAS_VAR_IN_TRANSFORMATION":false,"LINE_LOCATION":119,"involve_MOD_relation_operators":false,"NR_OBJECT_ASSIGNED":0,"NUMBER_PRIMITIVE_VARS_IN_STMT":1,"involve_PREINC_relation_operators":false,"CODE_ELEMENT":"if (isActive) {\n    dataSource = null;\n}","involve_PLUS_relation_operators":false,"USES_ENUM":false,"involve_INSTANCEOF_relation_operators":false,"involve_POSTINC_relation_operators":false,"NR_OBJECT_NOT_ASSIGNED":1,"IS_METHOD_PARAM_TYPE_VAR":false,"involve_PREDEC_relation_operators":false,"NUMBER_TOTAL_VARS_IN_STMT":1,"involve_AND_relation_operators":false,"PARENTS_TYPE":["CtBlockImpl","CtConstructorImpl","CtClassImpl","CtPackageImpl","CtPackageImpl","CtPackageImpl","CtPackageImpl","CtRootPackage","CtUnnamedModule",""],"involve_NOT_relation_operators":false,"IS_METHOD_RETURN_TYPE_VAR":true,"involve_BITAND_relation_operators":false,"involve_OR_relation_operators":false,"VARS_IN_SCOPE":["private java.lang.String connString;","private java.util.ArrayList eventListener;","private int eventIterators;","org.apache.derby.impl.jdbc.EmbedConnection realConnection;","int defaultIsolationLevel;","private boolean defaultReadOnly;","org.apache.derby.iapi.jdbc.BrokeredConnection currentConnectionHandle;","final org.apache.derby.jdbc.ReferenceableDataSource dataSource;","private final java.lang.String username;","private final java.lang.String password;","private final boolean requestPassword;","protected boolean isActive;"],"USES_CONSTANT":true,"NUMBER_OBJECT_REFERENCE_VARS_IN_STMT":0,"involve_MUL_relation_operators":false,"involve_DIV_relation_operators":false,"involve_MINUS_relation_operators":false,"involve_BITXOR_relation_operators":false,"involve_NEG_relation_operators":false}},"ops":{"dst":"null","src":"CtIfImpl","srcparent":"CtIfImpl","operator":"INS","dstparent":"null"},"method":{"children":[{"children":[{"children":[],"label":"","type":"Modifiers"},{"children":[{"children":[],"label":"java.lang.String","type":"VARIABLE_TYPE"},{"children":[{"children":[],"label":"private","type":"Modifier"}],"label":"","type":"Modifiers"}],"label":"connString","type":"Field"},{"children":[{"children":[],"label":"java.util.ArrayList","type":"VARIABLE_TYPE"},{"children":[{"children":[],"label":"private","type":"Modifier"}],"label":"","type":"Modifiers"}],"label":"eventListener","type":"Field"},{"children":[{"children":[],"label":"int","type":"VARIABLE_TYPE"},{"children":[{"children":[],"label":"private","type":"Modifier"}],"label":"","type":"Modifiers"}],"label":"eventIterators","type":"Field"},{"children":[{"children":[],"label":"org.apache.derby.impl.jdbc.EmbedConnection","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"realConnection","type":"Field"},{"children":[{"children":[],"label":"int","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"defaultIsolationLevel","type":"Field"},{"children":[{"children":[],"label":"boolean","type":"VARIABLE_TYPE"},{"children":[{"children":[],"label":"private","type":"Modifier"}],"label":"","type":"Modifiers"}],"label":"defaultReadOnly","type":"Field"},{"children":[{"children":[],"label":"org.apache.derby.iapi.jdbc.BrokeredConnection","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"currentConnectionHandle","type":"Field"},{"children":[{"children":[],"label":"org.apache.derby.jdbc.ReferenceableDataSource","type":"VARIABLE_TYPE"},{"children":[{"children":[],"label":"final","type":"Modifier"}],"label":"","type":"Modifiers"}],"label":"dataSource","type":"Field"},{"children":[{"children":[],"label":"java.lang.String","type":"VARIABLE_TYPE"},{"children":[{"children":[],"label":"final","type":"Modifier"},{"children":[],"label":"private","type":"Modifier"}],"label":"","type":"Modifiers"}],"label":"username","type":"Field"},{"children":[{"children":[],"label":"java.lang.String","type":"VARIABLE_TYPE"},{"children":[{"children":[],"label":"final","type":"Modifier"},{"children":[],"label":"private","type":"Modifier"}],"label":"","type":"Modifiers"}],"label":"password","type":"Field"},{"children":[{"children":[],"label":"boolean","type":"VARIABLE_TYPE"},{"children":[{"children":[],"label":"final","type":"Modifier"},{"children":[],"label":"private","type":"Modifier"}],"label":"","type":"Modifiers"}],"label":"requestPassword","type":"Field"},{"children":[{"children":[],"label":"boolean","type":"VARIABLE_TYPE"},{"children":[{"children":[],"label":"protected","type":"Modifier"}],"label":"","type":"Modifiers"}],"label":"isActive","type":"Field"},{"children":[{"children":[],"label":"boolean","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"public","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"isActive","type":"FieldRead"}],"label":"return","type":"Return"}],"label":"isActive","type":"Method"},{"children":[{"children":[],"label":"","type":"Modifiers"},{"children":[{"children":[],"label":"org.apache.derby.jdbc.ReferenceableDataSource","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"ds","type":"Parameter"},{"children":[{"children":[],"label":"java.lang.String","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"u","type":"Parameter"},{"children":[{"children":[],"label":"java.lang.String","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"p","type":"Parameter"},{"children":[{"children":[],"label":"boolean","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"requestPassword","type":"Parameter"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"dataSource","type":"FieldWrite"},{"children":[],"label":"ds","type":"VariableRead"}],"label":"=","type":"Assignment"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"username","type":"FieldWrite"},{"children":[],"label":"u","type":"VariableRead"}],"label":"=","type":"Assignment"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"password","type":"FieldWrite"},{"children":[],"label":"p","type":"VariableRead"}],"label":"=","type":"Assignment"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"this","type":"ThisAccess"}],"label":"requestPassword","type":"FieldWrite"},{"children":[],"label":"requestPassword","type":"VariableRead"}],"label":"=","type":"Assignment"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"isActive","type":"FieldWrite"},{"children":[],"label":"true","type":"Literal"}],"label":"=","type":"Assignment"},{"op":"INS","children":[{"op":"INS","children":[{"op":"INS","children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"isActive","type":"FieldRead"},{"op":"INS","children":[{"op":"INS","children":[{"op":"INS","children":[{"op":"INS","children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"dataSource","type":"FieldWrite"},{"op":"INS","children":[],"label":"null","type":"Literal"}],"label":"=","type":"Assignment"}],"label":"THEN","type":"then"}],"label":"if","type":"If"},{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"org.apache.derby.jdbc.EmbedPooledConnection#openRealConnection()","type":"Invocation"}],"label":"<init>","type":"Constructor"},{"children":[{"children":[],"label":"java.lang.String","type":"RETURN_TYPE"},{"children":[],"label":"","type":"Modifiers"},{"children":[{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"username","type":"FieldRead"},{"children":[],"label":"null","type":"Literal"}],"label":"EQ","type":"BinaryOperator"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"username","type":"FieldRead"},{"children":[],"label":"\"\"","type":"Literal"}],"label":"java.lang.String#equals(java.lang.Object)","type":"Invocation"}],"label":"OR","type":"BinaryOperator"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.iapi.reference.Property","type":"TypeAccess"}],"label":"DEFAULT_USER_NAME","type":"FieldRead"}],"label":"return","type":"Return"}],"label":"THEN","type":"then"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"username","type":"FieldRead"}],"label":"return","type":"Return"}],"label":"ELSE","type":"else"}],"label":"if","type":"If"}],"label":"getUsername","type":"Method"},{"children":[{"children":[],"label":"java.lang.String","type":"RETURN_TYPE"},{"children":[],"label":"","type":"Modifiers"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"password","type":"FieldRead"},{"children":[],"label":"null","type":"Literal"}],"label":"EQ","type":"BinaryOperator"},{"children":[{"children":[{"children":[],"label":"\"\"","type":"Literal"}],"label":"return","type":"Return"}],"label":"THEN","type":"then"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"password","type":"FieldRead"}],"label":"return","type":"Return"}],"label":"ELSE","type":"else"}],"label":"if","type":"If"}],"label":"getPassword","type":"Method"},{"children":[{"children":[],"label":"java.sql.Connection","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"public","type":"Modifier"},{"children":[],"label":"synchronized","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"org.apache.derby.jdbc.EmbedPooledConnection#checkActive()","type":"Invocation"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"},{"children":[],"label":"null","type":"Literal"}],"label":"EQ","type":"BinaryOperator"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"org.apache.derby.jdbc.EmbedPooledConnection#openRealConnection()","type":"Invocation"}],"label":"THEN","type":"then"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"org.apache.derby.jdbc.EmbedPooledConnection#resetRealConnection()","type":"Invocation"}],"label":"ELSE","type":"else"}],"label":"if","type":"If"},{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"org.apache.derby.jdbc.EmbedPooledConnection#closeCurrentConnectionHandle()","type":"Invocation"},{"children":[{"children":[],"label":"java.sql.Connection","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"},{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"org.apache.derby.jdbc.EmbedPooledConnection#getNewCurrentConnectionHandle()","type":"Invocation"}],"label":"c","type":"LocalVariable"},{"children":[{"children":[],"label":"c","type":"VariableRead"}],"label":"return","type":"Return"}],"label":"getConnection","type":"Method"},{"children":[{"children":[],"label":"void","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"final","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[],"label":"java.sql.Connection","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"dataSource","type":"FieldRead"},{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"username","type":"FieldRead"},{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"password","type":"FieldRead"},{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"requestPassword","type":"FieldRead"}],"label":"org.apache.derby.jdbc.ReferenceableDataSource#getConnection(java.lang.String,java.lang.String,boolean)","type":"Invocation"}],"label":"rc","type":"LocalVariable"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"this","type":"ThisAccess"}],"label":"realConnection","type":"FieldWrite"},{"children":[],"label":"rc","type":"VariableRead"}],"label":"=","type":"Assignment"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"defaultIsolationLevel","type":"FieldWrite"},{"children":[{"children":[],"label":"rc","type":"VariableRead"}],"label":"java.sql.Connection#getTransactionIsolation()","type":"Invocation"}],"label":"=","type":"Assignment"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"defaultReadOnly","type":"FieldWrite"},{"children":[{"children":[],"label":"rc","type":"VariableRead"}],"label":"java.sql.Connection#isReadOnly()","type":"Invocation"}],"label":"=","type":"Assignment"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"currentConnectionHandle","type":"FieldRead"},{"children":[],"label":"null","type":"Literal"}],"label":"NE","type":"BinaryOperator"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"},{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"currentConnectionHandle","type":"FieldRead"}],"label":"org.apache.derby.impl.jdbc.EmbedConnection#setApplicationConnection(org.apache.derby.iapi.jdbc.BrokeredConnection)","type":"Invocation"}],"label":"THEN","type":"then"}],"label":"if","type":"If"}],"label":"openRealConnection","type":"Method"},{"children":[{"children":[],"label":"java.sql.Connection","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"final","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[],"label":"java.sql.Connection","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"currentConnectionHandle","type":"FieldWrite"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"}],"label":"org.apache.derby.impl.jdbc.EmbedConnection#getLocalDriver()","type":"Invocation"},{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"this","type":"ThisAccess"}],"label":"#newBrokeredConnection(org.apache.derby.jdbc.EmbedPooledConnection)","type":"Invocation"}],"label":"=","type":"Assignment"}],"label":"applicationConnection","type":"LocalVariable"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"},{"children":[],"label":"applicationConnection","type":"VariableRead"}],"label":"org.apache.derby.impl.jdbc.EmbedConnection#setApplicationConnection(java.sql.Connection)","type":"Invocation"},{"children":[{"children":[],"label":"applicationConnection","type":"VariableRead"}],"label":"return","type":"Return"}],"label":"getNewCurrentConnectionHandle","type":"Method"},{"children":[{"children":[],"label":"void","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"private","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"currentConnectionHandle","type":"FieldRead"},{"children":[],"label":"null","type":"Literal"}],"label":"NE","type":"BinaryOperator"},{"children":[{"children":[{"children":[],"label":"java.util.ArrayList","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"},{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"eventListener","type":"FieldRead"}],"label":"tmpEventListener","type":"LocalVariable"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"eventListener","type":"FieldWrite"},{"children":[],"label":"null","type":"Literal"}],"label":"=","type":"Assignment"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"currentConnectionHandle","type":"FieldRead"}],"label":"org.apache.derby.iapi.jdbc.BrokeredConnection#close()","type":"Invocation"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"eventListener","type":"FieldWrite"},{"children":[],"label":"tmpEventListener","type":"VariableRead"}],"label":"=","type":"Assignment"}],"label":"","type":"Try"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"currentConnectionHandle","type":"FieldWrite"},{"children":[],"label":"null","type":"Literal"}],"label":"=","type":"Assignment"}],"label":"THEN","type":"then"}],"label":"if","type":"If"}],"label":"closeCurrentConnectionHandle","type":"Method"},{"children":[{"children":[],"label":"void","type":"RETURN_TYPE"},{"children":[],"label":"","type":"Modifiers"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"}],"label":"org.apache.derby.impl.jdbc.EmbedConnection#rollback()","type":"Invocation"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"}],"label":"org.apache.derby.impl.jdbc.EmbedConnection#clearWarnings()","type":"Invocation"},{"children":[{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"}],"label":"org.apache.derby.impl.jdbc.EmbedConnection#getTransactionIsolation()","type":"Invocation"},{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"defaultIsolationLevel","type":"FieldRead"}],"label":"NE","type":"BinaryOperator"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"},{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"defaultIsolationLevel","type":"FieldRead"}],"label":"org.apache.derby.impl.jdbc.EmbedConnection#setTransactionIsolation(int)","type":"Invocation"}],"label":"THEN","type":"then"}],"label":"if","type":"If"},{"children":[{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"}],"label":"org.apache.derby.impl.jdbc.EmbedConnection#getAutoCommit()","type":"Invocation"}],"label":"NOT","type":"UnaryOperator"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"},{"children":[],"label":"true","type":"Literal"}],"label":"org.apache.derby.impl.jdbc.EmbedConnection#setAutoCommit(boolean)","type":"Invocation"}],"label":"THEN","type":"then"}],"label":"if","type":"If"},{"children":[{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"}],"label":"org.apache.derby.impl.jdbc.EmbedConnection#isReadOnly()","type":"Invocation"},{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"defaultReadOnly","type":"FieldRead"}],"label":"NE","type":"BinaryOperator"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"},{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"defaultReadOnly","type":"FieldRead"}],"label":"org.apache.derby.impl.jdbc.EmbedConnection#setReadOnly(boolean)","type":"Invocation"}],"label":"THEN","type":"then"}],"label":"if","type":"If"},{"children":[{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"}],"label":"org.apache.derby.impl.jdbc.EmbedConnection#getHoldability()","type":"Invocation"},{"children":[{"children":[],"label":"java.sql.ResultSet","type":"TypeAccess"}],"label":"HOLD_CURSORS_OVER_COMMIT","type":"FieldRead"}],"label":"NE","type":"BinaryOperator"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"},{"children":[{"children":[],"label":"java.sql.ResultSet","type":"TypeAccess"}],"label":"HOLD_CURSORS_OVER_COMMIT","type":"FieldRead"}],"label":"org.apache.derby.impl.jdbc.EmbedConnection#setHoldability(int)","type":"Invocation"}],"label":"THEN","type":"then"}],"label":"if","type":"If"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"}],"label":"org.apache.derby.impl.jdbc.EmbedConnection#resetFromPool()","type":"Invocation"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.iapi.services.sanity.SanityManager","type":"TypeAccess"}],"label":"DEBUG","type":"FieldRead"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.iapi.services.sanity.SanityManager","type":"TypeAccess"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"}],"label":"org.apache.derby.impl.jdbc.EmbedConnection#transactionIsIdle()","type":"Invocation"},{"children":[],"label":"\"real connection should have been idle at this point\"","type":"Literal"}],"label":"org.apache.derby.iapi.services.sanity.SanityManager#ASSERT(java.lang.String)","type":"Invocation"}],"label":"THEN","type":"then"}],"label":"if","type":"If"}],"label":"resetRealConnection","type":"Method"},{"children":[{"children":[],"label":"void","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"public","type":"Modifier"},{"children":[],"label":"synchronized","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"isActive","type":"FieldRead"}],"label":"NOT","type":"UnaryOperator"},{"children":[{"children":[],"label":"return","type":"Return"}],"label":"THEN","type":"then"}],"label":"if","type":"If"},{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"org.apache.derby.jdbc.EmbedPooledConnection#closeCurrentConnectionHandle()","type":"Invocation"},{"children":[{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"},{"children":[],"label":"null","type":"Literal"}],"label":"NE","type":"BinaryOperator"},{"children":[{"children":[{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"}],"label":"org.apache.derby.impl.jdbc.EmbedConnection#isClosed()","type":"Invocation"}],"label":"NOT","type":"UnaryOperator"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"}],"label":"org.apache.derby.impl.jdbc.EmbedConnection#close()","type":"Invocation"}],"label":"THEN","type":"then"}],"label":"if","type":"If"}],"label":"THEN","type":"then"}],"label":"if","type":"If"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldWrite"},{"children":[],"label":"null","type":"Literal"}],"label":"=","type":"Assignment"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"isActive","type":"FieldWrite"},{"children":[],"label":"false","type":"Literal"}],"label":"=","type":"Assignment"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"eventListener","type":"FieldWrite"},{"children":[],"label":"null","type":"Literal"}],"label":"=","type":"Assignment"}],"label":"","type":"Try"}],"label":"close","type":"Method"},{"children":[{"children":[],"label":"void","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"final","type":"Modifier"},{"children":[],"label":"public","type":"Modifier"},{"children":[],"label":"synchronized","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[],"label":"javax.sql.ConnectionEventListener","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"listener","type":"Parameter"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"isActive","type":"FieldRead"}],"label":"NOT","type":"UnaryOperator"},{"children":[{"children":[],"label":"return","type":"Return"}],"label":"THEN","type":"then"}],"label":"if","type":"If"},{"children":[{"children":[{"children":[],"label":"listener","type":"VariableRead"},{"children":[],"label":"null","type":"Literal"}],"label":"EQ","type":"BinaryOperator"},{"children":[{"children":[],"label":"return","type":"Return"}],"label":"THEN","type":"then"}],"label":"if","type":"If"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"eventListener","type":"FieldRead"},{"children":[],"label":"null","type":"Literal"}],"label":"EQ","type":"BinaryOperator"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"eventListener","type":"FieldWrite"},{"children":[],"label":"java.util.ArrayList()","type":"ConstructorCall"}],"label":"=","type":"Assignment"}],"label":"THEN","type":"then"},{"children":[{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"eventIterators","type":"FieldRead"},{"children":[],"label":"0","type":"Literal"}],"label":"GT","type":"BinaryOperator"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"eventListener","type":"FieldWrite"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"eventListener","type":"FieldRead"}],"label":"java.util.ArrayList#clone()","type":"Invocation"}],"label":"=","type":"Assignment"}],"label":"THEN","type":"then"}],"label":"if","type":"If"}],"label":"ELSE","type":"else"}],"label":"if","type":"If"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"eventListener","type":"FieldRead"},{"children":[],"label":"listener","type":"VariableRead"}],"label":"java.util.ArrayList#add(E)","type":"Invocation"}],"label":"addConnectionEventListener","type":"Method"},{"children":[{"children":[],"label":"void","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"final","type":"Modifier"},{"children":[],"label":"public","type":"Modifier"},{"children":[],"label":"synchronized","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[],"label":"javax.sql.ConnectionEventListener","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"listener","type":"Parameter"},{"children":[{"children":[{"children":[{"children":[],"label":"listener","type":"VariableRead"},{"children":[],"label":"null","type":"Literal"}],"label":"EQ","type":"BinaryOperator"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"eventListener","type":"FieldRead"},{"children":[],"label":"null","type":"Literal"}],"label":"EQ","type":"BinaryOperator"}],"label":"OR","type":"BinaryOperator"},{"children":[{"children":[],"label":"return","type":"Return"}],"label":"THEN","type":"then"}],"label":"if","type":"If"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"eventIterators","type":"FieldRead"},{"children":[],"label":"0","type":"Literal"}],"label":"GT","type":"BinaryOperator"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"eventListener","type":"FieldWrite"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"eventListener","type":"FieldRead"}],"label":"java.util.ArrayList#clone()","type":"Invocation"}],"label":"=","type":"Assignment"}],"label":"THEN","type":"then"}],"label":"if","type":"If"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"eventListener","type":"FieldRead"},{"children":[],"label":"listener","type":"VariableRead"}],"label":"java.util.ArrayList#remove(java.lang.Object)","type":"Invocation"}],"label":"removeConnectionEventListener","type":"Method"},{"children":[{"children":[],"label":"org.apache.derby.iapi.jdbc.EngineConnection","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"public","type":"Modifier"},{"children":[],"label":"synchronized","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"org.apache.derby.jdbc.EmbedPooledConnection#checkActive()","type":"Invocation"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"}],"label":"return","type":"Return"}],"label":"getRealConnection","type":"Method"},{"children":[{"children":[],"label":"org.apache.derby.iapi.sql.conn.LanguageConnectionContext","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"public","type":"Modifier"},{"children":[],"label":"synchronized","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"org.apache.derby.jdbc.EmbedPooledConnection#checkActive()","type":"Invocation"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"}],"label":"org.apache.derby.impl.jdbc.EmbedConnection#getLanguageConnection()","type":"Invocation"}],"label":"return","type":"Return"}],"label":"getLanguageConnection","type":"Method"},{"children":[{"children":[],"label":"void","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"public","type":"Modifier"},{"children":[],"label":"synchronized","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[],"label":"java.sql.SQLException","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"exception","type":"Parameter"},{"children":[{"children":[{"children":[{"children":[],"label":"exception","type":"VariableRead"}],"label":"java.sql.SQLException#getErrorCode()","type":"Invocation"},{"children":[{"children":[],"label":"org.apache.derby.iapi.error.ExceptionSeverity","type":"TypeAccess"}],"label":"SESSION_SEVERITY","type":"FieldRead"}],"label":"LT","type":"BinaryOperator"},{"children":[{"children":[],"label":"return","type":"Return"}],"label":"THEN","type":"then"}],"label":"if","type":"If"},{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"},{"children":[],"label":"exception","type":"VariableRead"}],"label":"org.apache.derby.jdbc.EmbedPooledConnection#fireConnectionEventListeners(java.sql.SQLException)","type":"Invocation"}],"label":"notifyError","type":"Method"},{"children":[{"children":[],"label":"void","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"private","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[],"label":"java.sql.SQLException","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"exception","type":"Parameter"},{"children":[{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"eventListener","type":"FieldRead"},{"children":[],"label":"null","type":"Literal"}],"label":"NE","type":"BinaryOperator"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"eventListener","type":"FieldRead"}],"label":"java.util.ArrayList#isEmpty()","type":"Invocation"}],"label":"NOT","type":"UnaryOperator"}],"label":"AND","type":"BinaryOperator"},{"children":[{"children":[{"children":[],"label":"javax.sql.ConnectionEvent","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"this","type":"ThisAccess"},{"children":[],"label":"exception","type":"VariableRead"}],"label":"javax.sql.ConnectionEvent(javax.sql.PooledConnection,java.sql.SQLException)","type":"ConstructorCall"}],"label":"event","type":"LocalVariable"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"eventIterators","type":"FieldWrite"}],"label":"POSTINC","type":"UnaryOperator"},{"children":[{"children":[{"children":[{"children":[],"label":"java.util.Iterator","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"eventListener","type":"FieldRead"}],"label":"java.util.ArrayList#iterator()","type":"Invocation"}],"label":"it","type":"LocalVariable"},{"children":[{"children":[],"label":"it","type":"VariableRead"}],"label":"java.util.Iterator#hasNext()","type":"Invocation"},{"children":[{"children":[],"label":"javax.sql.ConnectionEventListener","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"},{"children":[{"children":[],"label":"it","type":"VariableRead"}],"label":"java.util.Iterator#next()","type":"Invocation"}],"label":"l","type":"LocalVariable"},{"children":[{"children":[{"children":[],"label":"exception","type":"VariableRead"},{"children":[],"label":"null","type":"Literal"}],"label":"EQ","type":"BinaryOperator"},{"children":[{"children":[{"children":[],"label":"l","type":"VariableRead"},{"children":[],"label":"event","type":"VariableRead"}],"label":"javax.sql.ConnectionEventListener#connectionClosed(javax.sql.ConnectionEvent)","type":"Invocation"}],"label":"THEN","type":"then"},{"children":[{"children":[{"children":[],"label":"l","type":"VariableRead"},{"children":[],"label":"event","type":"VariableRead"}],"label":"javax.sql.ConnectionEventListener#connectionErrorOccurred(javax.sql.ConnectionEvent)","type":"Invocation"}],"label":"ELSE","type":"else"}],"label":"if","type":"If"}],"label":"","type":"For"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"eventIterators","type":"FieldWrite"}],"label":"POSTDEC","type":"UnaryOperator"}],"label":"","type":"Try"}],"label":"THEN","type":"then"}],"label":"if","type":"If"}],"label":"fireConnectionEventListeners","type":"Method"},{"children":[{"children":[],"label":"void","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"final","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"isActive","type":"FieldRead"}],"label":"NOT","type":"UnaryOperator"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.impl.jdbc.Util","type":"TypeAccess"}],"label":"org.apache.derby.impl.jdbc.Util#noCurrentConnection()","type":"Invocation"}],"label":"","type":"Throw"}],"label":"THEN","type":"then"}],"label":"if","type":"If"}],"label":"checkActive","type":"Method"},{"children":[{"children":[],"label":"boolean","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"public","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"},{"children":[],"label":"null","type":"Literal"}],"label":"NE","type":"BinaryOperator"},{"children":[{"children":[{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"}],"label":"org.apache.derby.impl.jdbc.EmbedConnection#getLanguageConnection()","type":"Invocation"}],"label":"#isIsolationLevelSetUsingSQLorJDBC()","type":"Invocation"}],"label":"return","type":"Return"}],"label":"THEN","type":"then"},{"children":[{"children":[{"children":[],"label":"false","type":"Literal"}],"label":"return","type":"Return"}],"label":"ELSE","type":"else"}],"label":"if","type":"If"}],"label":"isIsolationLevelSetUsingSQLorJDBC","type":"Method"},{"children":[{"children":[],"label":"void","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"public","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"}],"label":"org.apache.derby.impl.jdbc.EmbedConnection#getLanguageConnection()","type":"Invocation"}],"label":"#resetIsolationLevelFlagUsedForSQLandJDBC()","type":"Invocation"}],"label":"resetIsolationLevelFlag","type":"Method"},{"children":[{"children":[],"label":"boolean","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"public","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[],"label":"false","type":"Literal"}],"label":"return","type":"Return"}],"label":"isInGlobalTransaction","type":"Method"},{"children":[{"children":[],"label":"void","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"public","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[],"label":"java.sql.SQLException","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"sqle","type":"Parameter"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"this","type":"ThisAccess"},{"children":[],"label":"sqle","type":"VariableRead"}],"label":"org.apache.derby.jdbc.EmbedPooledConnection#notifyError(java.sql.SQLException)","type":"Invocation"}],"label":"notifyException","type":"Method"},{"children":[{"children":[],"label":"void","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"public","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[],"label":"boolean","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"autoCommit","type":"Parameter"}],"label":"checkAutoCommit","type":"Method"},{"children":[{"children":[],"label":"int","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"public","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[],"label":"int","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"holdability","type":"Parameter"},{"children":[{"children":[],"label":"boolean","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"downgrade","type":"Parameter"},{"children":[{"children":[],"label":"holdability","type":"VariableRead"}],"label":"return","type":"Return"}],"label":"checkHoldCursors","type":"Method"},{"children":[{"children":[],"label":"void","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"public","type":"Modifier"}],"label":"","type":"Modifiers"}],"label":"checkSavepoint","type":"Method"},{"children":[{"children":[],"label":"void","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"public","type":"Modifier"}],"label":"","type":"Modifiers"}],"label":"checkRollback","type":"Method"},{"children":[{"children":[],"label":"void","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"public","type":"Modifier"}],"label":"","type":"Modifiers"}],"label":"checkCommit","type":"Method"},{"children":[{"children":[],"label":"void","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"public","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"},{"children":[],"label":"null","type":"Literal"}],"label":"NE","type":"BinaryOperator"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"}],"label":"org.apache.derby.impl.jdbc.EmbedConnection#checkForTransactionInProgress()","type":"Invocation"}],"label":"THEN","type":"then"}],"label":"if","type":"If"}],"label":"checkClose","type":"Method"},{"children":[{"children":[],"label":"boolean","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"public","type":"Modifier"},{"children":[],"label":"synchronized","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"currentConnectionHandle","type":"FieldWrite"},{"children":[],"label":"null","type":"Literal"}],"label":"=","type":"Assignment"},{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"},{"children":[],"label":"null","type":"Literal"}],"label":"org.apache.derby.jdbc.EmbedPooledConnection#fireConnectionEventListeners(java.sql.SQLException)","type":"Invocation"},{"children":[{"children":[],"label":"false","type":"Literal"}],"label":"return","type":"Return"}],"label":"closingConnection","type":"Method"},{"children":[{"children":[],"label":"java.sql.Statement","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"public","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[],"label":"java.sql.Statement","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"s","type":"Parameter"},{"children":[{"children":[],"label":"s","type":"VariableRead"}],"label":"return","type":"Return"}],"label":"wrapStatement","type":"Method"},{"children":[{"children":[],"label":"java.sql.PreparedStatement","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"public","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[],"label":"java.sql.PreparedStatement","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"ps","type":"Parameter"},{"children":[{"children":[],"label":"java.lang.String","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"sql","type":"Parameter"},{"children":[{"children":[],"label":"java.lang.Object","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"generatedKeys","type":"Parameter"},{"children":[{"children":[],"label":"org.apache.derby.impl.jdbc.EmbedPreparedStatement","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"},{"children":[],"label":"ps","type":"VariableRead"}],"label":"ps_","type":"LocalVariable"},{"children":[{"children":[],"label":"ps_","type":"VariableRead"},{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"this","type":"ThisAccess"}],"label":"org.apache.derby.impl.jdbc.EmbedPreparedStatement#setBrokeredConnectionControl(org.apache.derby.jdbc.EmbedPooledConnection)","type":"Invocation"},{"children":[{"children":[],"label":"ps_","type":"VariableRead"}],"label":"return","type":"Return"}],"label":"wrapStatement","type":"Method"},{"children":[{"children":[],"label":"java.sql.CallableStatement","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"public","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[],"label":"java.sql.CallableStatement","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"cs","type":"Parameter"},{"children":[{"children":[],"label":"java.lang.String","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"sql","type":"Parameter"},{"children":[{"children":[],"label":"org.apache.derby.impl.jdbc.EmbedCallableStatement","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"},{"children":[],"label":"cs","type":"VariableRead"}],"label":"cs_","type":"LocalVariable"},{"children":[{"children":[],"label":"cs_","type":"VariableRead"},{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"this","type":"ThisAccess"}],"label":"org.apache.derby.impl.jdbc.EmbedCallableStatement#setBrokeredConnectionControl(org.apache.derby.jdbc.EmbedPooledConnection)","type":"Invocation"},{"children":[{"children":[],"label":"cs_","type":"VariableRead"}],"label":"return","type":"Return"}],"label":"wrapStatement","type":"Method"},{"children":[{"children":[],"label":"java.lang.String","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"public","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"connString","type":"FieldRead"},{"children":[],"label":"null","type":"Literal"}],"label":"EQ","type":"BinaryOperator"},{"children":[{"children":[{"children":[],"label":"java.lang.String","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"isActive","type":"FieldRead"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"realConnection","type":"FieldRead"}],"label":"org.apache.derby.impl.jdbc.EmbedConnection#toString()","type":"Invocation"},{"children":[],"label":"\"<none>\"","type":"Literal"}],"label":"","type":"Conditional"}],"label":"physicalConnString","type":"LocalVariable"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"connString","type":"FieldWrite"},{"children":[{"children":[{"children":[{"children":[{"children":[{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"this","type":"ThisAccess"}],"label":"java.lang.Object#getClass()","type":"Invocation"}],"label":"java.lang.Class#getName()","type":"Invocation"},{"children":[],"label":"\"@\"","type":"Literal"}],"label":"PLUS","type":"BinaryOperator"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"this","type":"ThisAccess"}],"label":"java.lang.Object#hashCode()","type":"Invocation"}],"label":"PLUS","type":"BinaryOperator"},{"children":[],"label":"\" \"","type":"Literal"}],"label":"PLUS","type":"BinaryOperator"},{"children":[],"label":"\"Physical Connection = \"","type":"Literal"}],"label":"PLUS","type":"BinaryOperator"},{"children":[],"label":"physicalConnString","type":"VariableRead"}],"label":"PLUS","type":"BinaryOperator"}],"label":"=","type":"Assignment"}],"label":"THEN","type":"then"}],"label":"if","type":"If"},{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"connString","type":"FieldRead"}],"label":"return","type":"Return"}],"label":"toString","type":"Method"},{"children":[{"children":[],"label":"void","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"public","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[],"label":"java.sql.PreparedStatement","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"statement","type":"Parameter"}],"label":"onStatementClose","type":"Method"},{"children":[{"children":[],"label":"void","type":"RETURN_TYPE"},{"children":[{"children":[],"label":"public","type":"Modifier"}],"label":"","type":"Modifiers"},{"children":[{"children":[],"label":"java.sql.PreparedStatement","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"statement","type":"Parameter"},{"children":[{"children":[],"label":"java.sql.SQLException","type":"VARIABLE_TYPE"},{"children":[],"label":"","type":"Modifiers"}],"label":"sqle","type":"Parameter"}],"label":"onStatementErrorOccurred","type":"Method"}],"label":"EmbedPooledConnection","type":"Class"}],"label":"","type":"root"},"ast_element":{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"isActive","type":"FieldRead"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"dataSource","type":"FieldWrite"},{"children":[],"label":"null","type":"Literal"}],"label":"=","type":"Assignment"}],"label":"THEN","type":"then"}],"label":"if","type":"If"},"key":"filetest"}]}
src: if (isActive) {
    dataSource = null;
}
trg: null
node: if (isActive) {
    dataSource = null;
}
Diff file filetest 1
out:
{"diffid":"filetest","info":[{"cntx":{"context":{"involve_GE_relation_operators":false,"involved_relation_bin_operators":[],"involve_USR_relation_operators":false,"VARS":[{"VAR_MODIF":["private"],"VAR_VISIB":"private","VAR_NAME":"connString","VAR_TYPE":"java.lang.String"},{"VAR_MODIF":["private"],"VAR_VISIB":"private","VAR_NAME":"eventListener","VAR_TYPE":"java.util.ArrayList"},{"VAR_MODIF":["private"],"VAR_VISIB":"private","VAR_NAME":"eventIterators","VAR_TYPE":"int"},{"VAR_MODIF":[],"VAR_VISIB":"","VAR_NAME":"realConnection","VAR_TYPE":"org.apache.derby.impl.jdbc.EmbedConnection"},{"VAR_MODIF":[],"VAR_VISIB":"","VAR_NAME":"defaultIsolationLevel","VAR_TYPE":"int"},{"VAR_MODIF":["private"],"VAR_VISIB":"private","VAR_NAME":"defaultReadOnly","VAR_TYPE":"boolean"},{"VAR_MODIF":[],"VAR_VISIB":"","VAR_NAME":"currentConnectionHandle","VAR_TYPE":"org.apache.derby.iapi.jdbc.BrokeredConnection"},{"VAR_MODIF":["final"],"VAR_VISIB":"","VAR_NAME":"dataSource","VAR_TYPE":"org.apache.derby.jdbc.ReferenceableDataSource"},{"VAR_MODIF":["private","final"],"VAR_VISIB":"private","VAR_NAME":"username","VAR_TYPE":"java.lang.String"},{"VAR_MODIF":["private","final"],"VAR_VISIB":"private","VAR_NAME":"password","VAR_TYPE":"java.lang.String"},{"VAR_MODIF":["private","final"],"VAR_VISIB":"private","VAR_NAME":"requestPassword","VAR_TYPE":"boolean"},{"VAR_MODIF":["protected"],"VAR_VISIB":"protected","VAR_NAME":"isActive","VAR_TYPE":"boolean"}],"SPOON_PATH":"#subPackage[name=org]#subPackage[name=apache]#subPackage[name=derby]#subPackage[name=jdbc]#containedType[name=EmbedPooledConnection]#typeMember[index=13]#body#statement[index=6]","involve_SR_relation_operators":false,"involve_SL_relation_operators":false,"involve_EQ_relation_operators":false,"NR_OBJECT_NOT_USED":0,"involve_LE_relation_operators":false,"involve_GT_relation_operators":false,"PATH_ELEMENTS":["#subPackage[name=org]","#subPackage[name=apache]","#subPackage[name=derby]","#subPackage[name=jdbc]","#containedType[name=EmbedPooledConnection]","#typeMember[index=13]","#body","#statement[index=6]"],"TYPE":"CtIfImpl","involve_BITOR_relation_operators":false,"FILE_LOCATION":"\/root\/workspace\/Spirals-Team\/coming\/438652192\/target\/classes\/patterns_examples\/case2\/1205753_EmbedPooledConnection_0_t.java","involve_COMPL_relation_operators":false,"involve_POS_relation_operators":false,"involve_LT_relation_operators":false,"PARENT_CLASS":"org.apache.derby.jdbc.EmbedPooledConnection","HAS_VAR_SIM_NAME":false,"involve_NE_relation_operators":false,"NR_OBJECT_USED":0,"involve_POSTDEC_relation_operators":false,"involved_relation_unary_operators":[],"HAS_VAR_IN_TRANSFORMATION":false,"LINE_LOCATION":119,"involve_MOD_relation_operators":false,"NR_OBJECT_ASSIGNED":0,"NUMBER_PRIMITIVE_VARS_IN_STMT":1,"involve_PREINC_relation_operators":false,"CODE_ELEMENT":"if (isActive) {\n    dataSource = null;\n}","involve_PLUS_relation_operators":false,"USES_ENUM":false,"involve_INSTANCEOF_relation_operators":false,"involve_POSTINC_relation_operators":false,"NR_OBJECT_NOT_ASSIGNED":1,"IS_METHOD_PARAM_TYPE_VAR":false,"involve_PREDEC_relation_operators":false,"NUMBER_TOTAL_VARS_IN_STMT":1,"involve_AND_relation_operators":false,"PARENTS_TYPE":["CtBlockImpl","CtConstructorImpl","CtClassImpl","CtPackageImpl","CtPackageImpl","CtPackageImpl","CtPackageImpl","CtRootPackage","CtUnnamedModule",""],"involve_NOT_relation_operators":false,"IS_METHOD_RETURN_TYPE_VAR":true,"involve_BITAND_relation_operators":false,"involve_OR_relation_operators":false,"VARS_IN_SCOPE":["private java.lang.String connString;","private java.util.ArrayList eventListener;","private int eventIterators;","org.apache.derby.impl.jdbc.EmbedConnection realConnection;","int defaultIsolationLevel;","private boolean defaultReadOnly;","org.apache.derby.iapi.jdbc.BrokeredConnection currentConnectionHandle;","final org.apache.derby.jdbc.ReferenceableDataSource dataSource;","private final java.lang.String username;","private final java.lang.String password;","private final boolean requestPassword;","protected boolean isActive;"],"USES_CONSTANT":true,"NUMBER_OBJECT_REFERENCE_VARS_IN_STMT":0,"involve_MUL_relation_operators":false,"involve_DIV_relation_operators":false,"involve_MINUS_relation_operators":false,"involve_BITXOR_relation_operators":false,"involve_NEG_relation_operators":false}},"ops":{"dst":"null","src":"CtIfImpl","srcparent":"CtIfImpl","operator":"DEL","dstparent":"null"},"ast_element":{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"isActive","type":"FieldRead"},{"children":[{"children":[{"children":[{"children":[],"label":"org.apache.derby.jdbc.EmbedPooledConnection","type":"TypeAccess"}],"label":"dataSource","type":"FieldWrite"},{"children":[],"label":"null","type":"Literal"}],"label":"=","type":"Assignment"}],"label":"THEN","type":"then"}],"label":"if","type":"If"},"key":"filetest"}]}
**src: if (isActive) {
    dataSource = null;
}
**trg: null
**node: if (isActive) {
    dataSource = null;
}
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.748 sec
Running fr.inria.coming.spoon.diffanalyzer.AstPathTest
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=104]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=46]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=47]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=172]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=226]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=228]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=67]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=178]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=311]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=166]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=134]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=177]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=306]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=49]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=70]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=15]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=13]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=113]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=190]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=158]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=94]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=123]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=131]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=118]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=161]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=60]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=120]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=121]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=90]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=54]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=45]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=174]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=308]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=121]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=81]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=46]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=126]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=314]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=6]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=43]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=30]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=51]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=175]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=71]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=150]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=67]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=283]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=298]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=299]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=63]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=40]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=68]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=88]
path #containedType[name=QuickNotepad]#typeMember[index=12]
path #containedType[name=QuickNotepad]#typeMember[index=12]#body#statement[index=0]
path #containedType[name=QuickNotepad]#typeMember[index=12]#body#statement[index=1]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=182]
path #containedType[name=QuickNotepad]#typeMember[index=17]
path #containedType[name=QuickNotepad]#typeMember[index=17]#body#statement[index=0]
path #containedType[name=QuickNotepad]#typeMember[index=17]#body#statement[index=1]
path #containedType[name=QuickNotepad]#typeMember[index=17]#body#statement[index=2]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=208]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=279]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=303]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=103]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=305]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=106]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=17]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=160]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=102]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=72]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=110]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=49]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=132]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=66]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=295]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=296]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=169]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=32]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=94]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=128]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=80]
path #containedType[name=QuickNotepad]#typeMember[index=15]
path #containedType[name=QuickNotepad]#typeMember[index=15]#body#statement[index=0]
path #containedType[name=QuickNotepad]#typeMember[index=15]#body#statement[index=1]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=138]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=139]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=140]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=141]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=142]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=301]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=168]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=80]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=40]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=148]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=149]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=82]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=315]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=316]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=318]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=16]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=117]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=90]
path #containedType[name=QuickNotepad]#typeMember[index=13]
path #containedType[name=QuickNotepad]#typeMember[index=13]#body#statement[index=0]
path #containedType[name=QuickNotepad]#typeMember[index=13]#body#statement[index=1]
path #containedType[name=QuickNotepad]#typeMember[index=13]#body#statement[index=2]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=127]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=100]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=64]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=145]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=52]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=80]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=106]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=12]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JPanel]#typeMember[index=7]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=167]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=143]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=144]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=302]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=7]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=71]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=59]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=133]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=134]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=89]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=58]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=18]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=124]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=73]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=175]
path #containedType[name=QuickNotepad]#typeMember[index=14]
path #containedType[name=QuickNotepad]#typeMember[index=14]#body#statement[index=0]
path #containedType[name=QuickNotepad]#typeMember[index=14]#body#statement[index=1]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=181]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JPanel]#typeMember[index=6]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=3]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=31]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=39]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=137]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=119]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=328]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=329]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=9]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=181]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=9]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=83]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=178]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=95]
path #containedType[name=QuickNotepad]#typeMember[index=8]
path #containedType[name=QuickNotepad]#typeMember[index=8]#body#statement[index=0]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=171]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=5]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=7]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=52]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=84]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=276]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=160]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=161]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=109]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=291]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=36]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=28]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=45]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=64]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=65]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=66]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=38]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=78]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=196]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=74]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=75]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=19]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=165]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=51]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=171]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=12]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=63]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=67]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=56]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=57]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=16]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=85]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=86]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=87]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=2]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=3]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=4]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=151]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=87]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=98]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=162]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=10]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=133]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=11]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=163]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=34]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=192]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=170]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=56]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=47]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=185]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=76]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=173]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=53]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=116]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=117]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=186]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=48]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=107]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=108]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=59]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=35]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=79]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=53]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=54]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=177]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=27]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=206]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=173]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=98]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=43]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=112]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=78]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=35]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=159]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=12]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=167]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=58]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=137]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JPanel]#typeMember[index=5]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=126]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=50]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=274]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=127]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=44]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=48]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=82]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=107]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=110]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=207]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=135]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=125]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=61]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=189]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=2]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=43]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=128]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=129]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=20]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=95]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=30]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=96]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=191]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=74]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=82]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=326]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=327]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=99]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=100]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=101]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=68]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=286]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=287]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=138]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=164]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=52]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=84]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=28]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=21]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=96]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=122]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=55]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=130]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=13]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=51]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=147]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=70]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=184]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=95]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=85]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=5]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=26]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=158]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=93]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=159]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JPanel]#typeMember[index=10]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=110]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=152]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=141]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=57]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=62]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=64]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=31]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=120]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=63]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=65]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=212]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=92]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=11]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=179]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=142]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=204]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=11]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=29]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=27]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=79]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=144]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=132]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=77]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=139]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=157]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=75]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=125]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=92]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=23]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=154]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=8]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=285]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=197]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=32]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=87]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=188]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=135]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=73]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=131]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=201]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=309]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=195]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=50]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=88]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=127]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=74]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=157]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=128]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=202]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=156]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=81]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=81]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=109]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=69]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=33]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=48]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=3]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=91]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=130]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=272]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=126]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=88]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=5]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=151]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=41]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=122]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=155]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=169]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=198]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=26]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=78]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=277]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=76]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=163]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=209]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=210]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=57]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=10]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=156]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=111]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=53]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=24]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=71]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=180]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=149]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=93]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=213]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=112]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=176]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=15]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=79]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=91]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=92]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=165]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=44]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=113]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=101]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=47]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=118]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=119]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=144]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=103]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=153]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=282]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=111]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=112]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=37]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=38]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=105]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=108]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=76]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=77]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=72]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=73]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=146]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=100]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=129]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=148]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=29]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=136]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=20]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=91]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=58]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=325]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=1]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=72]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=114]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=115]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=116]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=143]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=114]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=1]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=5]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=46]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=185]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=331]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=19]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=62]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=86]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=27]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=166]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=292]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=141]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=139]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=140]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=77]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=254]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=255]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=256]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=258]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=261]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=259]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=183]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=150]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=134]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=94]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=138]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=194]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=200]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=105]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=115]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=42]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=211]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=135]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=75]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=154]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=155]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=24]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=216]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=265]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=266]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=267]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=152]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=56]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=103]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=199]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=55]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=42]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=22]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=70]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=179]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=62]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=39]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=131]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=111]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=129]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=14]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=69]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=7]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=41]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=123]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=55]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=281]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=97]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=170]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=288]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=289]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=34]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=217]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=109]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=60]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=61]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=107]
path #containedType[name=QuickNotepad]#typeMember[index=11]
path #containedType[name=QuickNotepad]#typeMember[index=11]#body#statement[index=0]
path #containedType[name=QuickNotepad]#typeMember[index=11]#body#statement[index=1]
path #containedType[name=QuickNotepad]#typeMember[index=11]#body#statement[index=2]
path #containedType[name=QuickNotepad]#typeMember[index=11]#body#statement[index=3]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=99]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=68]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=8]
path #containedType[name=QuickNotepad]#typeMember[index=9]
path #containedType[name=QuickNotepad]#typeMember[index=9]#body#statement[index=0]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=102]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=1]
path #containedType[name=QuickNotepad]#typeMember[index=16]
path #containedType[name=QuickNotepad]#typeMember[index=16]#body#statement[index=0]
path #containedType[name=QuickNotepad]#typeMember[index=16]#body#statement[index=1]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=49]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=8]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=89]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=104]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=99]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=6]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=153]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=140]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=176]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=290]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=22]
path #containedType[name=QuickNotepad]#typeMember[index=10]
path #containedType[name=QuickNotepad]#typeMember[index=10]#body#statement[index=0]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=14]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=37]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=149]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=205]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=17]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JPanel]#typeMember[index=9]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=193]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=203]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=86]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=89]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=90]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=69]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=172]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=146]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=21]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=108]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=275]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=105]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=280]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=4]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=93]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=61]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=2]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=143]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=164]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=44]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=45]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=221]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=224]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=133]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=83]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=18]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=59]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=60]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JPanel]#typeMember[index=4]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=9]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=10]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=97]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=36]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=184]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=96]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=97]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=98]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=85]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=25]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=124]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=145]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=50]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=186]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=187]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=23]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=102]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=136]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=273]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=65]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=66]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=101]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=33]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=147]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JPanel]#typeMember[index=8]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=130]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=1]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=83]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=136]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=137]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=162]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=104]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=142]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=132]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=54]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=174]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=84]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=168]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=25]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=148]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=284]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=182]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=106]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=321]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=104]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=46]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=47]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=172]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=226]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=228]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=67]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=178]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=311]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=166]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=134]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=177]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=306]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=49]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=70]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=15]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=13]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=113]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=190]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=158]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=94]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=123]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=131]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=118]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=161]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=60]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=120]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=121]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=90]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=54]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=45]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=174]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=308]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=121]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=81]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=46]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=126]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=314]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=6]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=43]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=30]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=51]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=175]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=71]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=150]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=67]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=283]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=298]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=299]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=63]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=40]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=68]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=88]
path #containedType[name=QuickNotepad]#typeMember[index=12]
path #containedType[name=QuickNotepad]#typeMember[index=12]#body#statement[index=0]
path #containedType[name=QuickNotepad]#typeMember[index=12]#body#statement[index=1]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=182]
path #containedType[name=QuickNotepad]#typeMember[index=17]
path #containedType[name=QuickNotepad]#typeMember[index=17]#body#statement[index=0]
path #containedType[name=QuickNotepad]#typeMember[index=17]#body#statement[index=1]
path #containedType[name=QuickNotepad]#typeMember[index=17]#body#statement[index=2]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=208]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=279]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=303]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=103]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=305]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=106]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=17]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=160]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=102]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=72]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=110]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=49]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=132]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=66]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=295]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=296]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=169]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=32]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=94]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=128]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=80]
path #containedType[name=QuickNotepad]#typeMember[index=15]
path #containedType[name=QuickNotepad]#typeMember[index=15]#body#statement[index=0]
path #containedType[name=QuickNotepad]#typeMember[index=15]#body#statement[index=1]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=138]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=139]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=140]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=141]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=142]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=301]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=168]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=80]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=40]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=148]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=149]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=82]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=315]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=316]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=318]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=16]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=117]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=90]
path #containedType[name=QuickNotepad]#typeMember[index=13]
path #containedType[name=QuickNotepad]#typeMember[index=13]#body#statement[index=0]
path #containedType[name=QuickNotepad]#typeMember[index=13]#body#statement[index=1]
path #containedType[name=QuickNotepad]#typeMember[index=13]#body#statement[index=2]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=127]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=100]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=64]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=145]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=52]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=80]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=106]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=12]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JPanel]#typeMember[index=7]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=167]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=143]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=144]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=302]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=7]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=71]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=59]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=133]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=134]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=89]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=58]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=18]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=124]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=73]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=175]
path #containedType[name=QuickNotepad]#typeMember[index=14]
path #containedType[name=QuickNotepad]#typeMember[index=14]#body#statement[index=0]
path #containedType[name=QuickNotepad]#typeMember[index=14]#body#statement[index=1]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=181]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JPanel]#typeMember[index=6]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=3]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=31]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=39]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=137]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=119]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=328]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=329]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=9]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=181]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=9]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=83]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=178]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=95]
path #containedType[name=QuickNotepad]#typeMember[index=8]
path #containedType[name=QuickNotepad]#typeMember[index=8]#body#statement[index=0]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=171]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=5]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=7]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=52]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=84]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=276]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=160]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=161]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=109]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=291]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=36]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=28]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=45]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=64]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=65]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=66]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=38]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=78]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=196]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=74]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=75]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=19]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=165]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=51]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=171]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=12]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=63]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=67]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=56]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=57]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=16]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=85]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=86]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=87]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=2]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=3]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=4]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=151]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=87]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=98]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=162]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=10]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=133]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=11]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=163]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=34]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=192]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=170]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=56]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=47]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=185]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=76]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=173]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=53]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=116]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=117]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=186]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=48]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=107]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=108]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=59]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=35]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=79]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=53]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=54]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=177]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=27]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=206]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=173]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=98]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=43]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=112]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=78]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=35]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=159]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=12]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=167]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=58]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=137]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JPanel]#typeMember[index=5]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=126]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=50]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=274]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=127]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=44]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=48]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=82]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=107]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=110]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=207]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=135]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=125]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=61]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=189]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=2]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=43]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=128]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=129]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=20]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=95]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=30]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=96]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=191]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=74]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=82]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=326]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=327]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=99]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=100]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=101]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=68]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=286]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=287]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=138]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=164]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=52]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=84]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=28]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=21]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=96]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=122]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=55]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=130]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=13]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=51]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=147]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=70]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=184]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=95]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=85]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=5]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=26]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=158]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=93]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=159]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JPanel]#typeMember[index=10]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=110]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=152]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=141]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=57]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=62]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=64]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=31]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=120]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=63]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=65]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=212]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=92]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=11]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=179]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=142]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=204]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=11]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=29]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=27]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=79]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=144]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=132]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=77]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=139]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=157]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=75]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=125]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=92]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=23]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=154]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=8]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=285]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=197]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=32]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=87]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=188]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=135]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=73]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=131]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=201]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=309]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=195]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=50]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=88]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=127]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=74]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=157]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=128]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=202]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=156]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=81]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=81]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=109]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=69]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=33]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=48]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=3]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=91]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=130]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=272]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=126]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=88]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=5]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=151]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=41]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=122]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=155]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=169]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=198]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=26]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=78]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=277]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=76]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=163]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=209]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=210]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=57]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=10]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=156]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=111]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=53]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=24]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=71]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=180]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=149]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=93]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=213]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=112]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=176]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=15]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=79]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=91]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=92]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=165]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=44]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=113]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=101]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=47]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=118]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=119]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=144]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=103]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=153]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=282]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=111]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=112]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=37]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=38]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=105]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=108]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=76]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=77]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=72]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=73]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=146]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=100]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=129]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=148]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=29]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=136]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=20]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=91]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=58]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=325]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=1]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=72]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=114]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=115]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=116]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=143]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=114]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=1]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=5]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=46]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=185]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=331]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=19]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=62]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=86]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=27]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=166]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=292]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=256]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=141]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=139]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=140]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=77]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=254]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=255]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=258]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=259]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=261]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=183]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=150]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=134]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=94]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=138]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=194]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=200]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=105]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=115]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=42]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=211]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=135]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=75]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=154]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=155]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=24]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=216]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=265]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=266]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=267]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=152]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=56]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=103]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=199]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=55]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=42]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=22]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=70]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=179]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=62]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=39]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=131]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=111]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=129]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=14]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=69]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=7]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=41]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=123]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=55]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=281]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=97]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=170]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=288]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=289]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=34]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=217]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=109]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=60]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=61]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=107]
path #containedType[name=QuickNotepad]#typeMember[index=11]
path #containedType[name=QuickNotepad]#typeMember[index=11]#body#statement[index=0]
path #containedType[name=QuickNotepad]#typeMember[index=11]#body#statement[index=1]
path #containedType[name=QuickNotepad]#typeMember[index=11]#body#statement[index=2]
path #containedType[name=QuickNotepad]#typeMember[index=11]#body#statement[index=3]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=99]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=68]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=8]
path #containedType[name=QuickNotepad]#typeMember[index=9]
path #containedType[name=QuickNotepad]#typeMember[index=9]#body#statement[index=0]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=102]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=1]
path #containedType[name=QuickNotepad]#typeMember[index=16]
path #containedType[name=QuickNotepad]#typeMember[index=16]#body#statement[index=0]
path #containedType[name=QuickNotepad]#typeMember[index=16]#body#statement[index=1]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=49]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=8]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=89]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=104]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=99]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=6]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=153]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=140]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=176]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=290]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=22]
path #containedType[name=QuickNotepad]#typeMember[index=10]
path #containedType[name=QuickNotepad]#typeMember[index=10]#body#statement[index=0]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=14]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=37]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=149]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=205]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=17]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JPanel]#typeMember[index=9]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=193]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=203]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=86]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=89]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=90]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=69]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=172]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=146]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=21]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=108]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=275]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=105]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=280]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=4]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=93]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=61]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=2]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=143]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=164]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=44]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=45]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=221]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=224]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=133]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=83]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=18]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=59]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=60]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JPanel]#typeMember[index=4]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=9]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=10]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=97]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=36]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=184]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=96]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=97]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=98]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=85]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=25]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=124]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=145]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=50]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=186]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=187]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=23]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=102]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=136]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=273]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=65]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=66]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=101]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=33]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=147]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JPanel]#typeMember[index=8]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=130]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=1]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=83]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=136]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=137]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=162]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=104]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=142]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=132]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=54]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=174]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=84]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=168]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Container]#typeMember[index=25]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=148]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=284]
path #subPackage[name=javax]#subPackage[name=swing]#containedType[name=JComponent]#typeMember[index=182]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=106]
path #subPackage[name=java]#subPackage[name=awt]#containedType[name=Component]#typeMember[index=321]
End stmt check
Roots ops


-op->Insert If at QuickNotepad:113
	if (true) {
	    java.lang.System.out.println("test");
	}

left if (true) {
    java.lang.System.out.println("test");
}
left path #containedType[name=QuickNotepad]#typeMember[index=7]#body#statement[index=9]
right if (true) {
    java.lang.System.out.println("test");
}
right path #containedType[name=QuickNotepad]#typeMember[index=7]#body#statement[index=9]
All ops


-op->Insert If at QuickNotepad:113
	if (true) {
	    java.lang.System.out.println("test");
	}

left if (true) {
    java.lang.System.out.println("test");
}
left path #containedType[name=QuickNotepad]#typeMember[index=7]#body#statement[index=9]
right if (true) {
    java.lang.System.out.println("test");
}
right path #containedType[name=QuickNotepad]#typeMember[index=7]#body#statement[index=9]


-op->Insert Literal at QuickNotepad:113
	true

left true
left path #containedType[name=QuickNotepad]#typeMember[index=7]#body#statement[index=9]#condition
right true
right path #containedType[name=QuickNotepad]#typeMember[index=7]#body#statement[index=9]#condition


-op->Insert Block at QuickNotepad:113
	{
	    java.lang.System.out.println("test");
	}

left {
    java.lang.System.out.println("test");
}
left path #containedType[name=QuickNotepad]#typeMember[index=7]#body#statement[index=9]#then
right {
    java.lang.System.out.println("test");
}
right path #containedType[name=QuickNotepad]#typeMember[index=7]#body#statement[index=9]#then


-op->Insert Invocation at QuickNotepad:114
	java.lang.System.out.println("test")

left java.lang.System.out.println("test")
left path #containedType[name=QuickNotepad]#typeMember[index=7]#body#statement[index=9]#then#statement[index=0]
right java.lang.System.out.println("test")
right path #containedType[name=QuickNotepad]#typeMember[index=7]#body#statement[index=9]#then#statement[index=0]


-op->Insert FieldRead at QuickNotepad:114
	java.lang.System.out

left java.lang.System.out
left path #containedType[name=QuickNotepad]#typeMember[index=7]#body#statement[index=9]#then#statement[index=0]#target
right java.lang.System.out
right path #containedType[name=QuickNotepad]#typeMember[index=7]#body#statement[index=9]#then#statement[index=0]#target


-op->Insert Literal at QuickNotepad:114
	"test"

left "test"
left path #containedType[name=QuickNotepad]#typeMember[index=7]#body#statement[index=9]#then#statement[index=0]#argument[index=0]
right "test"
right path #containedType[name=QuickNotepad]#typeMember[index=7]#body#statement[index=9]#then#statement[index=0]#argument[index=0]


-op->Insert TypeAccess at QuickNotepad:114
	java.lang.System

left java.lang.System
left path #containedType[name=QuickNotepad]#typeMember[index=7]#body#statement[index=9]#then#statement[index=0]#target#target
right java.lang.System
right path #containedType[name=QuickNotepad]#typeMember[index=7]#body#statement[index=9]#then#statement[index=0]#target#target
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=67]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=67]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=71]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=71]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=71]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=71]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=71]#body#statement[index=3]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=144]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=144]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=144]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=144]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=144]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=144]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=144]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=144]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=144]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=144]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=144]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=73]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=73]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=73]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=73]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=73]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=102]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=102]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=102]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=149]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=149]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=150]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=150]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=150]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=150]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=150]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=96]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=96]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=96]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=96]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=96]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=96]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=96]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=96]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=96]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=96]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=142]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=142]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=142]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=142]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=142]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=142]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=142]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=142]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=142]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=142]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=142]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=142]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=142]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=142]#body#statement[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=88]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=88]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=80]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=80]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=65]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=65]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=81]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=81]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=81]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=81]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=81]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=81]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=81]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=90]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=90]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=90]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=90]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=90]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=90]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=90]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=90]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=90]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=131]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=131]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=131]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=131]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=131]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=131]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=131]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=131]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=131]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=131]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=131]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=113]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=113]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=113]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=113]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=86]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=86]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=86]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=86]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=82]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=82]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=82]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=82]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=82]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=82]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=82]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=82]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=82]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=82]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=13]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=14]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=15]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=16]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=17]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=18]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=19]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=20]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=21]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=22]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=23]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=24]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=25]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=89]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=89]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=89]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=89]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=89]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=89]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=89]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=132]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=132]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=83]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=83]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=83]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=83]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=83]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=83]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=83]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=83]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=92]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=92]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=127]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=127]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=127]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=127]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=13]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=14]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=15]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=16]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=17]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=18]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=19]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=20]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=21]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=13]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=14]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=15]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=16]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=17]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=18]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=120]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=120]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=78]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=78]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=78]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=78]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=78]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=78]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=78]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=78]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=78]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=78]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=78]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=118]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=118]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=118]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=13]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=14]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=15]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=16]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=17]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=18]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=19]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=20]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=21]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=22]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=23]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=24]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=25]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=26]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=27]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=28]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=29]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=30]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=31]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=32]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=33]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=34]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=35]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=36]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=37]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=38]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=39]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=40]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=41]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=42]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=43]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=44]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=45]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=46]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=47]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=48]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=49]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=50]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=51]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=52]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=53]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=54]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=55]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=56]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=57]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=58]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=59]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=60]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=61]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=62]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=63]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=64]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=65]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=66]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=67]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=68]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=69]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=70]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=71]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=72]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=73]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=74]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=75]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=76]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=77]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=78]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=79]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=80]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=81]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=82]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=83]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=146]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=146]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=13]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=14]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=15]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=16]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=17]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=18]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=19]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=20]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=21]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=22]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=23]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=24]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=25]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=26]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=74]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=74]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=106]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=106]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=106]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=106]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=106]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=106]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=106]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=106]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=106]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=106]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=106]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=106]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=107]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=107]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=107]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=107]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=108]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=108]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=108]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=108]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=108]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=85]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=85]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=85]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=119]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=119]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=119]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=141]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=141]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=141]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=141]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=141]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=141]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=141]#body#statement[index=5]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=2]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=3]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=69]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=69]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=69]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=69]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=69]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=69]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=69]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=69]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=69]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=147]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=147]#body#statement[index=0]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]#body#statement[index=5]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=95]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=95]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=84]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=84]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=84]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=140]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=140]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=140]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=140]#body#statement[index=2]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=103]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=103]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=103]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=145]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=145]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=145]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=145]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=145]#body#statement[index=3]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=115]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=115]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=115]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=13]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=14]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=15]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=16]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=17]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=18]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=19]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=20]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=21]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=13]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=13]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=70]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=70]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=70]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=70]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=70]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=70]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=70]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=70]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=91]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=91]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=91]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=91]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=91]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=91]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=91]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=91]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=91]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=91]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=75]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=75]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=75]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=75]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=75]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=75]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=75]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=75]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=75]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=75]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=75]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=75]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=75]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=75]#body#statement[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=75]#body#statement[index=13]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=94]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=94]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=94]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=94]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=94]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=93]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=93]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=93]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=93]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=93]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=93]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=93]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=93]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=93]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=114]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=114]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=114]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=114]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=114]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=114]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=148]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=148]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=87]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=87]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=87]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=87]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=101]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=101]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=101]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=101]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=72]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=72]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=72]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=72]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=72]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=99]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=99]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=99]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=99]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=99]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=99]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=99]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=99]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=99]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=99]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=99]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=99]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=66]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=66]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=66]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=66]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=13]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=130]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=130]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=130]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=130]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=130]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=68]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=68]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=68]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=68]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=104]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=104]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=104]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=104]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=104]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=105]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=105]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=105]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=105]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=105]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=105]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=79]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=79]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=79]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=79]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=79]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=79]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=79]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=79]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=79]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=79]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=79]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=79]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=129]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=129]#body#statement[index=0]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=1]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=6]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=9]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=68]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=68]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=72]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=72]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=72]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=72]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=72]#body#statement[index=3]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=145]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=145]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=145]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=145]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=145]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=145]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=145]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=145]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=145]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=145]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=145]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=74]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=74]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=74]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=74]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=74]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=103]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=103]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=103]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=150]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=150]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=151]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=151]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=151]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=151]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=151]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=97]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=143]#body#statement[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=89]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=89]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=81]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=81]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=66]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=66]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=82]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=82]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=82]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=82]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=82]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=82]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=82]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=91]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=91]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=91]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=91]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=91]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=91]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=91]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=91]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=91]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=132]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=132]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=132]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=132]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=132]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=132]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=132]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=132]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=132]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=132]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=132]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=114]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=114]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=114]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=114]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=87]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=87]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=87]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=87]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=83]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=83]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=83]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=83]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=83]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=83]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=83]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=83]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=83]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=83]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=13]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=14]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=15]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=16]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=17]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=18]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=19]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=20]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=21]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=22]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=23]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=24]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=122]#body#statement[index=25]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=90]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=90]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=90]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=90]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=90]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=90]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=90]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=133]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=133]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=84]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=84]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=84]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=84]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=84]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=84]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=84]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=84]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=93]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=93]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=13]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=14]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=15]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=16]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=17]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=18]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=19]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=20]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=98]#body#statement[index=21]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=118]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=118]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=118]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=118]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=118]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=118]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=118]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=118]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=118]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=118]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=118]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=13]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=14]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=15]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=16]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=17]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=111]#body#statement[index=18]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=121]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=79]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=79]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=79]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=79]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=79]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=79]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=79]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=79]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=79]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=79]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=79]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=113]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=113]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=113]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=113]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=113]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=119]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=119]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=119]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=13]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=14]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=15]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=16]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=17]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=18]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=19]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=20]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=21]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=22]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=23]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=24]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=25]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=26]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=27]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=28]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=29]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=30]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=31]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=32]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=33]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=34]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=35]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=36]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=37]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=38]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=39]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=40]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=41]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=42]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=43]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=44]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=45]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=46]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=47]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=48]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=49]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=50]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=51]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=52]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=53]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=54]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=55]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=56]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=57]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=58]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=59]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=60]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=61]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=62]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=63]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=64]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=65]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=66]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=67]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=68]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=69]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=70]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=71]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=72]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=73]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=74]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=75]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=76]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=77]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=78]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=79]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=80]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=81]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=82]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=112]#body#statement[index=83]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=147]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=147]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=99]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=99]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=99]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=99]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=13]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=14]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=15]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=16]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=17]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=18]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=19]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=20]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=21]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=22]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=24]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=25]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=26]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=126]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=127]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=127]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=127]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=127]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=127]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=127]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=127]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=127]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=127]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=127]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=127]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=127]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=127]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=75]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=75]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=107]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=107]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=107]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=107]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=107]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=107]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=107]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=107]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=107]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=107]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=107]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=107]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=108]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=108]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=108]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=108]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=109]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=86]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=86]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=86]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=120]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=120]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=120]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=142]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=142]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=142]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=142]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=142]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=142]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=142]#body#statement[index=5]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=2]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=3]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=70]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=70]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=70]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=70]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=70]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=70]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=70]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=70]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=70]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=148]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=148]#body#statement[index=0]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=129]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=129]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=129]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=129]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=129]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=129]#body#statement[index=4]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=96]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=96]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=85]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=85]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=85]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=78]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=78]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=78]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=78]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=78]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=78]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=78]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=78]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=78]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=78]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=78]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=141]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=141]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=141]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=141]#body#statement[index=2]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=104]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=104]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=104]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=146]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=146]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=146]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=146]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=146]#body#statement[index=3]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=144]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=144]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=144]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=144]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=144]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=144]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=144]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=144]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=144]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=144]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=13]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=14]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=15]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=16]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=17]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=18]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=19]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=20]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=110]#body#statement[index=21]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=123]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=124]#body#statement[index=13]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=125]#body#statement[index=13]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=71]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=71]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=71]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=71]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=71]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=71]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=71]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=71]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=92]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=92]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=92]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=92]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=92]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=92]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=92]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=92]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=92]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=92]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=76]#body#statement[index=13]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=95]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=95]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=95]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=95]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=95]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=94]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=94]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=94]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=94]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=94]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=94]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=94]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=94]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=94]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=115]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=115]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=115]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=115]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=115]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=115]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=101]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=101]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=101]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=101]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=101]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=101]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=101]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=101]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=101]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=101]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=101]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=101]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=149]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=149]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=88]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=88]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=88]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=88]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=102]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=102]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=102]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=102]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=73]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=73]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=73]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=73]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=73]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=100]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=67]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=67]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=67]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=67]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=77]#body#statement[index=13]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=131]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=131]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=131]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=131]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=131]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=69]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=69]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=69]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=69]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=105]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=105]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=105]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=105]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=105]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=106]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=106]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=106]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=106]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=106]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=106]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=80]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=80]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=80]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=80]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=80]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=80]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=80]#body#statement[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=80]#body#statement[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=80]#body#statement[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=80]#body#statement[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=80]#body#statement[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=80]#body#statement[index=10]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=130]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=130]#body#statement[index=0]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=1]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=6]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=9]
End stmt check
Roots ops


-op->Delete Invocation at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2803
	finalException.printStackTrace()

left finalException.printStackTrace()
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]#body#statement[index=4]
right finalException.printStackTrace()
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]#body#statement[index=4]


-op->Delete Literal at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2453
	150

left 150
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=23]#statement[index=6]#argument[index=2]
right 150
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=23]#statement[index=6]#argument[index=2]


-op->Delete Throw at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2804
	throw new java.lang.Exception(msg)

left throw new java.lang.Exception(msg)
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]#body#statement[index=5]
right throw new java.lang.Exception(msg)
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]#body#statement[index=5]


-op->Insert VariableRead at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2460
	((int) (iterations))

left ((int) (iterations))
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=9]#argument[index=2]
right ((int) (iterations))
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=9]#argument[index=2]


-op->Insert Field at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:133
	private static final long DEFAULT_SERVER_START_TIMEOUT = 75000;

left private static final long DEFAULT_SERVER_START_TIMEOUT = 75000;
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=54]
right private static final long DEFAULT_SERVER_START_TIMEOUT = 75000;
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=54]


-op->Insert LocalVariable at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2454
	java.lang.String userStartTimeout = getSystemProperty("derby.tests.networkServerStartTimeout")

left java.lang.String userStartTimeout = getSystemProperty("derby.tests.networkServerStartTimeout")
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=4]
right java.lang.String userStartTimeout = getSystemProperty("derby.tests.networkServerStartTimeout")
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=4]


-op->Insert LocalVariable at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2455
	long startTimeout = (userStartTimeout != null) ? java.lang.Long.parseLong(userStartTimeout) : org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.DEFAULT_SERVER_START_TIMEOUT

left long startTimeout = (userStartTimeout != null) ? java.lang.Long.parseLong(userStartTimeout) : org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.DEFAULT_SERVER_START_TIMEOUT
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]
right long startTimeout = (userStartTimeout != null) ? java.lang.Long.parseLong(userStartTimeout) : org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.DEFAULT_SERVER_START_TIMEOUT
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]


-op->Insert LocalVariable at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2457
	long iterations = startTimeout / (org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.PINGSERVER_SLEEP_TIME_MILLIS)

left long iterations = startTimeout / (org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.PINGSERVER_SLEEP_TIME_MILLIS)
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=6]
right long iterations = startTimeout / (org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.PINGSERVER_SLEEP_TIME_MILLIS)
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=6]


-op->Insert Throw at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2810
	throw finalException

left throw finalException
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=129]#body#statement[index=4]
right throw finalException
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=129]#body#statement[index=4]
All ops


-op->Insert Field at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:133
	private static final long DEFAULT_SERVER_START_TIMEOUT = 75000;

left private static final long DEFAULT_SERVER_START_TIMEOUT = 75000;
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=54]
right private static final long DEFAULT_SERVER_START_TIMEOUT = 75000;
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=54]


-op->Insert TypeReference at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:133
	long

left long
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=54]#type
right long
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=54]#type


-op->Insert Field at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:133
	private static final long DEFAULT_SERVER_START_TIMEOUT = 75000;

left private static final long DEFAULT_SERVER_START_TIMEOUT = 75000;
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=54]
right private static final long DEFAULT_SERVER_START_TIMEOUT = 75000;
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=54]


-op->Insert Literal at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:133
	75000

left 75000
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=54]#defaultExpression
right 75000
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=54]#defaultExpression


-op->Insert LocalVariable at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2454
	java.lang.String userStartTimeout = getSystemProperty("derby.tests.networkServerStartTimeout")

left java.lang.String userStartTimeout = getSystemProperty("derby.tests.networkServerStartTimeout")
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=4]
right java.lang.String userStartTimeout = getSystemProperty("derby.tests.networkServerStartTimeout")
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=4]


-op->Insert LocalVariable at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2455
	long startTimeout = (userStartTimeout != null) ? java.lang.Long.parseLong(userStartTimeout) : org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.DEFAULT_SERVER_START_TIMEOUT

left long startTimeout = (userStartTimeout != null) ? java.lang.Long.parseLong(userStartTimeout) : org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.DEFAULT_SERVER_START_TIMEOUT
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]
right long startTimeout = (userStartTimeout != null) ? java.lang.Long.parseLong(userStartTimeout) : org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.DEFAULT_SERVER_START_TIMEOUT
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]


-op->Insert LocalVariable at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2457
	long iterations = startTimeout / (org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.PINGSERVER_SLEEP_TIME_MILLIS)

left long iterations = startTimeout / (org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.PINGSERVER_SLEEP_TIME_MILLIS)
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=6]
right long iterations = startTimeout / (org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.PINGSERVER_SLEEP_TIME_MILLIS)
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=6]


-op->Insert Throw at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2810
	throw finalException

left throw finalException
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=129]#body#statement[index=4]
right throw finalException
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=129]#body#statement[index=4]


-op->Insert Field at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:133
	private static final long DEFAULT_SERVER_START_TIMEOUT = 75000;

left private static final long DEFAULT_SERVER_START_TIMEOUT = 75000;
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=54]
right private static final long DEFAULT_SERVER_START_TIMEOUT = 75000;
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=54]


-op->Insert Field at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:133
	private static final long DEFAULT_SERVER_START_TIMEOUT = 75000;

left private static final long DEFAULT_SERVER_START_TIMEOUT = 75000;
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=54]
right private static final long DEFAULT_SERVER_START_TIMEOUT = 75000;
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=54]


-op->Insert Field at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:133
	private static final long DEFAULT_SERVER_START_TIMEOUT = 75000;

left private static final long DEFAULT_SERVER_START_TIMEOUT = 75000;
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=54]
right private static final long DEFAULT_SERVER_START_TIMEOUT = 75000;
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=54]


-op->Insert TypeReference at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2454
	java.lang.String

left java.lang.String
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=4]#type
right java.lang.String
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=4]#type


-op->Insert LocalVariable at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2454
	java.lang.String userStartTimeout = getSystemProperty("derby.tests.networkServerStartTimeout")

left java.lang.String userStartTimeout = getSystemProperty("derby.tests.networkServerStartTimeout")
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=4]
right java.lang.String userStartTimeout = getSystemProperty("derby.tests.networkServerStartTimeout")
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=4]


-op->Insert Invocation at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2454
	getSystemProperty("derby.tests.networkServerStartTimeout")

left getSystemProperty("derby.tests.networkServerStartTimeout")
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=4]#defaultExpression
right getSystemProperty("derby.tests.networkServerStartTimeout")
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=4]#defaultExpression


-op->Insert TypeReference at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2455
	long

left long
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]#type
right long
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]#type


-op->Insert LocalVariable at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2455
	long startTimeout = (userStartTimeout != null) ? java.lang.Long.parseLong(userStartTimeout) : org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.DEFAULT_SERVER_START_TIMEOUT

left long startTimeout = (userStartTimeout != null) ? java.lang.Long.parseLong(userStartTimeout) : org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.DEFAULT_SERVER_START_TIMEOUT
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]
right long startTimeout = (userStartTimeout != null) ? java.lang.Long.parseLong(userStartTimeout) : org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.DEFAULT_SERVER_START_TIMEOUT
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]


-op->Insert Conditional at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2455
	(userStartTimeout != null) ? java.lang.Long.parseLong(userStartTimeout) : org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.DEFAULT_SERVER_START_TIMEOUT

left (userStartTimeout != null) ? java.lang.Long.parseLong(userStartTimeout) : org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.DEFAULT_SERVER_START_TIMEOUT
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]#defaultExpression
right (userStartTimeout != null) ? java.lang.Long.parseLong(userStartTimeout) : org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.DEFAULT_SERVER_START_TIMEOUT
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]#defaultExpression


-op->Insert TypeReference at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2457
	long

left long
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=6]#type
right long
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=6]#type


-op->Insert LocalVariable at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2457
	long iterations = startTimeout / (org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.PINGSERVER_SLEEP_TIME_MILLIS)

left long iterations = startTimeout / (org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.PINGSERVER_SLEEP_TIME_MILLIS)
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=6]
right long iterations = startTimeout / (org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.PINGSERVER_SLEEP_TIME_MILLIS)
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=6]


-op->Insert BinaryOperator at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2457
	startTimeout / (org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.PINGSERVER_SLEEP_TIME_MILLIS)

left startTimeout / (org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.PINGSERVER_SLEEP_TIME_MILLIS)
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=6]#defaultExpression
right startTimeout / (org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.PINGSERVER_SLEEP_TIME_MILLIS)
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=6]#defaultExpression


-op->Insert VariableRead at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2460
	((int) (iterations))

left ((int) (iterations))
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=9]#argument[index=2]
right ((int) (iterations))
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=9]#argument[index=2]


-op->Insert VariableRead at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2810
	finalException

left finalException
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=129]#body#statement[index=4]#expression
right finalException
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=129]#body#statement[index=4]#expression


-op->Insert TypeAccess at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun
	org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun

left org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=4]#defaultExpression#target#target
right org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=4]#defaultExpression#target#target


-op->Insert Literal at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2454
	"derby.tests.networkServerStartTimeout"

left "derby.tests.networkServerStartTimeout"
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=4]#defaultExpression#argument[index=0]
right "derby.tests.networkServerStartTimeout"
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=4]#defaultExpression#argument[index=0]


-op->Insert BinaryOperator at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2455
	userStartTimeout != null

left userStartTimeout != null
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]#defaultExpression#condition
right userStartTimeout != null
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]#defaultExpression#condition


-op->Insert Invocation at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2456
	java.lang.Long.parseLong(userStartTimeout)

left java.lang.Long.parseLong(userStartTimeout)
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]#defaultExpression#then
right java.lang.Long.parseLong(userStartTimeout)
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]#defaultExpression#then


-op->Insert FieldRead at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2456
	org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.DEFAULT_SERVER_START_TIMEOUT

left org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.DEFAULT_SERVER_START_TIMEOUT
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]#defaultExpression#else
right org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.DEFAULT_SERVER_START_TIMEOUT
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]#defaultExpression#else


-op->Insert VariableRead at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2457
	startTimeout

left startTimeout
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=6]#defaultExpression#leftOperand
right startTimeout
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=6]#defaultExpression#leftOperand


-op->Insert FieldRead at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2457
	(org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.PINGSERVER_SLEEP_TIME_MILLIS)

left (org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.PINGSERVER_SLEEP_TIME_MILLIS)
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=6]#defaultExpression#rightOperand
right (org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.PINGSERVER_SLEEP_TIME_MILLIS)
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=6]#defaultExpression#rightOperand


-op->Insert VariableRead at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2455
	userStartTimeout

left userStartTimeout
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]#defaultExpression#condition#leftOperand
right userStartTimeout
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]#defaultExpression#condition#leftOperand


-op->Insert Literal at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2455
	null

left null
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]#defaultExpression#condition#rightOperand
right null
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]#defaultExpression#condition#rightOperand


-op->Insert TypeAccess at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2456
	java.lang.Long

left java.lang.Long
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]#defaultExpression#then#target
right java.lang.Long
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]#defaultExpression#then#target


-op->Insert VariableRead at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2456
	userStartTimeout

left userStartTimeout
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]#defaultExpression#then#argument[index=0]
right userStartTimeout
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]#defaultExpression#then#argument[index=0]


-op->Insert TypeAccess at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun
	org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun

left org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]#defaultExpression#else#target
right org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=5]#defaultExpression#else#target


-op->Insert TypeAccess at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun
	org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun

left org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=6]#defaultExpression#rightOperand#target
right org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=117]#body#statement[index=23]#statement[index=6]#defaultExpression#rightOperand#target


-op->Delete Literal at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2453
	150

left 150
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=23]#statement[index=6]#argument[index=2]
right 150
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=116]#body#statement[index=23]#statement[index=6]#argument[index=2]


-op->Delete VariableRead at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2803
	finalException

left finalException
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]#body#statement[index=4]#target
right finalException
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]#body#statement[index=4]#target


-op->Delete Invocation at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2803
	finalException.printStackTrace()

left finalException.printStackTrace()
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]#body#statement[index=4]
right finalException.printStackTrace()
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]#body#statement[index=4]


-op->Delete VariableRead at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2804
	msg

left msg
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]#body#statement[index=5]#expression#argument[index=0]
right msg
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]#body#statement[index=5]#expression#argument[index=0]


-op->Delete ConstructorCall at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2804
	new java.lang.Exception(msg)

left new java.lang.Exception(msg)
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]#body#statement[index=5]#expression
right new java.lang.Exception(msg)
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]#body#statement[index=5]#expression


-op->Delete Throw at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2804
	throw new java.lang.Exception(msg)

left throw new java.lang.Exception(msg)
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]#body#statement[index=5]
right throw new java.lang.Exception(msg)
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=derbyTesting]#subPackage[name=functionTests]#subPackage[name=tests]#subPackage[name=replicationTests]#containedType[name=ReplicationRun]#typeMember[index=128]#body#statement[index=5]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=8]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=2]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=3]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=5]#body#statement[index=0]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=9]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=9]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=9]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=9]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=9]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=9]#body#statement[index=5]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=10]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=7]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=7]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=7]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=7]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=7]#body#statement[index=4]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=1]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=6]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=9]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=8]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=2]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=3]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=5]#body#statement[index=0]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]#body#statement[index=5]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=10]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=7]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=7]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=7]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=7]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=4]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=1]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=6]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=9]
End stmt check
Roots ops


-op->Update TypeReference at org.apache.lucene.search.WildcardQuery:69
	org.apache.lucene.search.Query to org.apache.lucene.search.FilteredTermEnum

left org.apache.lucene.search.Query
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#type
right org.apache.lucene.search.Query
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#type


-op->Update Method at org.apache.lucene.search.WildcardQuery:69
	@java.lang.Override
	public org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
	    if (termIsPrefix) {
	        org.apache.lucene.search.MultiTermQuery rewritten = ;
	        rewritten.setBoost(getBoost());
	        rewritten.setRewriteMethod(getRewriteMethod());
	        return rewritten;
	    }else {
	        return super.rewrite(reader);
	    }
	} to @java.lang.Override
	protected org.apache.lucene.search.FilteredTermEnum getEnum(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
	    if (termIsPrefix) {
	        return new org.apache.lucene.search.PrefixTermEnum(reader, term.createTerm(term.text().substring(0, term.text().indexOf('*'))));
	    }else
	        if (termContainsWildcard) {
	            return new org.apache.lucene.search.WildcardTermEnum(reader, getTerm());
	        }else {
	            return new org.apache.lucene.search.SingleTermEnum(reader, getTerm());
	        }
	
	}

left @java.lang.Override
public org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
    if (termIsPrefix) {
        org.apache.lucene.search.MultiTermQuery rewritten = new org.apache.lucene.search.PrefixQuery(term.createTerm(term.text().substring(0, term.text().indexOf('*'))));
        rewritten.setBoost(getBoost());
        rewritten.setRewriteMethod(getRewriteMethod());
        return rewritten;
    }else {
        return super.rewrite(reader);
    }
}
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]
right @java.lang.Override
public org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
    if (termIsPrefix) {
        org.apache.lucene.search.MultiTermQuery rewritten = new org.apache.lucene.search.PrefixQuery(term.createTerm(term.text().substring(0, term.text().indexOf('*'))));
        rewritten.setBoost(getBoost());
        rewritten.setRewriteMethod(getRewriteMethod());
        return rewritten;
    }else {
        return super.rewrite(reader);
    }
}
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]


-op->Delete VariableRead at org.apache.lucene.search.WildcardQuery:75
	rewritten

left rewritten
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=3]#expression
right rewritten
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=3]#expression


-op->Delete Invocation at org.apache.lucene.search.WildcardQuery:73
	rewritten.setBoost(getBoost())

left rewritten.setBoost(getBoost())
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=1]
right rewritten.setBoost(getBoost())
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=1]


-op->Delete Method at org.apache.lucene.search.WildcardQuery:54
	

left @java.lang.Override
protected org.apache.lucene.search.FilteredTermEnum getEnum(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
    if (termContainsWildcard)
        return new org.apache.lucene.search.WildcardTermEnum(reader, getTerm());
    else
        return new org.apache.lucene.search.SingleTermEnum(reader, getTerm());

}
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]
right @java.lang.Override
protected org.apache.lucene.search.FilteredTermEnum getEnum(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
    if (termContainsWildcard)
        return new org.apache.lucene.search.WildcardTermEnum(reader, getTerm());
    else
        return new org.apache.lucene.search.SingleTermEnum(reader, getTerm());

}
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]


-op->Delete Return at org.apache.lucene.search.WildcardQuery:77
	return super.rewrite(reader)

left return super.rewrite(reader)
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#else#statement[index=0]
right return super.rewrite(reader)
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#else#statement[index=0]


-op->Delete LocalVariable at org.apache.lucene.search.WildcardQuery:71
	org.apache.lucene.search.MultiTermQuery rewritten = 

left org.apache.lucene.search.MultiTermQuery rewritten = new org.apache.lucene.search.PrefixQuery(term.createTerm(term.text().substring(0, term.text().indexOf('*'))))
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=0]
right org.apache.lucene.search.MultiTermQuery rewritten = new org.apache.lucene.search.PrefixQuery(term.createTerm(term.text().substring(0, term.text().indexOf('*'))))
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=0]


-op->Delete Invocation at org.apache.lucene.search.WildcardQuery:74
	rewritten.setRewriteMethod(getRewriteMethod())

left rewritten.setRewriteMethod(getRewriteMethod())
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=2]
right rewritten.setRewriteMethod(getRewriteMethod())
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=2]


-op->Insert VariableRead at org.apache.lucene.search.WildcardQuery:56
	reader

left reader
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]#body#statement[index=0]#then#statement[index=0]#expression#argument[index=0]
right reader
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]#body#statement[index=0]#then#statement[index=0]#expression#argument[index=0]


-op->Move ConstructorCall from org.apache.lucene.search.WildcardQuery:71 to org.apache.lucene.search.WildcardQuery:56
	new org.apache.lucene.search.PrefixQuery(term.createTerm(term.text().substring(0, term.text().indexOf('*'))))

left new org.apache.lucene.search.PrefixQuery(term.createTerm(term.text().substring(0, term.text().indexOf('*'))))
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=0]#defaultExpression
right new org.apache.lucene.search.PrefixQuery(term.createTerm(term.text().substring(0, term.text().indexOf('*'))))
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=0]#defaultExpression


-op->Move Parameter from org.apache.lucene.search.WildcardQuery:54 to org.apache.lucene.search.WildcardQuery:54
	org.apache.lucene.index.IndexReader reader

left org.apache.lucene.index.IndexReader reader
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]#parameter[index=0]
right org.apache.lucene.index.IndexReader reader
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]#parameter[index=0]


-op->Move If from org.apache.lucene.search.WildcardQuery:55 to org.apache.lucene.search.WildcardQuery:58
	if (termContainsWildcard)
	    return new org.apache.lucene.search.WildcardTermEnum(reader, getTerm());
	else
	    return new org.apache.lucene.search.SingleTermEnum(reader, getTerm());

left if (termContainsWildcard)
    return new org.apache.lucene.search.WildcardTermEnum(reader, getTerm());
else
    return new org.apache.lucene.search.SingleTermEnum(reader, getTerm());

left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]#body#statement[index=0]
right if (termContainsWildcard)
    return new org.apache.lucene.search.WildcardTermEnum(reader, getTerm());
else
    return new org.apache.lucene.search.SingleTermEnum(reader, getTerm());

right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]#body#statement[index=0]


-op->Move Method from org.apache.lucene.search.WildcardQuery:64 to org.apache.lucene.search.WildcardQuery:68
	public org.apache.lucene.index.Term getTerm() {
	    return term;
	}

left public org.apache.lucene.index.Term getTerm() {
    return term;
}
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=5]
right public org.apache.lucene.index.Term getTerm() {
    return term;
}
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=5]


-op->Move Method from org.apache.lucene.search.WildcardQuery:54 to org.apache.lucene.search.WildcardQuery:54
	@java.lang.Override
	protected org.apache.lucene.search.FilteredTermEnum getEnum(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
	    if (termContainsWildcard)
	        return new org.apache.lucene.search.WildcardTermEnum(reader, getTerm());
	    else
	        return new org.apache.lucene.search.SingleTermEnum(reader, getTerm());
	
	}

left @java.lang.Override
protected org.apache.lucene.search.FilteredTermEnum getEnum(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
    if (termContainsWildcard)
        return new org.apache.lucene.search.WildcardTermEnum(reader, getTerm());
    else
        return new org.apache.lucene.search.SingleTermEnum(reader, getTerm());

}
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]
right @java.lang.Override
protected org.apache.lucene.search.FilteredTermEnum getEnum(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
    if (termContainsWildcard)
        return new org.apache.lucene.search.WildcardTermEnum(reader, getTerm());
    else
        return new org.apache.lucene.search.SingleTermEnum(reader, getTerm());

}
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]
All ops


-op->Move Method from org.apache.lucene.search.WildcardQuery:64 to org.apache.lucene.search.WildcardQuery:68
	public org.apache.lucene.index.Term getTerm() {
	    return term;
	}

left public org.apache.lucene.index.Term getTerm() {
    return term;
}
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=5]
right public org.apache.lucene.index.Term getTerm() {
    return term;
}
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=5]


-op->Update Method at org.apache.lucene.search.WildcardQuery:69
	@java.lang.Override
	public org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
	    if (termIsPrefix) {
	        org.apache.lucene.search.MultiTermQuery rewritten = ;
	        rewritten.setBoost(getBoost());
	        rewritten.setRewriteMethod(getRewriteMethod());
	        return rewritten;
	    }else {
	        return super.rewrite(reader);
	    }
	} to @java.lang.Override
	protected org.apache.lucene.search.FilteredTermEnum getEnum(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
	    if (termIsPrefix) {
	        return new org.apache.lucene.search.PrefixTermEnum(reader, term.createTerm(term.text().substring(0, term.text().indexOf('*'))));
	    }else
	        if (termContainsWildcard) {
	            return new org.apache.lucene.search.WildcardTermEnum(reader, getTerm());
	        }else {
	            return new org.apache.lucene.search.SingleTermEnum(reader, getTerm());
	        }
	
	}

left @java.lang.Override
public org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
    if (termIsPrefix) {
        org.apache.lucene.search.MultiTermQuery rewritten = new org.apache.lucene.search.PrefixQuery(term.createTerm(term.text().substring(0, term.text().indexOf('*'))));
        rewritten.setBoost(getBoost());
        rewritten.setRewriteMethod(getRewriteMethod());
        return rewritten;
    }else {
        return super.rewrite(reader);
    }
}
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]
right @java.lang.Override
public org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
    if (termIsPrefix) {
        org.apache.lucene.search.MultiTermQuery rewritten = new org.apache.lucene.search.PrefixQuery(term.createTerm(term.text().substring(0, term.text().indexOf('*'))));
        rewritten.setBoost(getBoost());
        rewritten.setRewriteMethod(getRewriteMethod());
        return rewritten;
    }else {
        return super.rewrite(reader);
    }
}
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]


-op->Update TypeReference at org.apache.lucene.search.WildcardQuery:69
	org.apache.lucene.search.Query to org.apache.lucene.search.FilteredTermEnum

left org.apache.lucene.search.Query
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#type
right org.apache.lucene.search.Query
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#type


-op->Move Method from org.apache.lucene.search.WildcardQuery:54 to org.apache.lucene.search.WildcardQuery:54
	@java.lang.Override
	protected org.apache.lucene.search.FilteredTermEnum getEnum(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
	    if (termContainsWildcard)
	        return new org.apache.lucene.search.WildcardTermEnum(reader, getTerm());
	    else
	        return new org.apache.lucene.search.SingleTermEnum(reader, getTerm());
	
	}

left @java.lang.Override
protected org.apache.lucene.search.FilteredTermEnum getEnum(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
    if (termContainsWildcard)
        return new org.apache.lucene.search.WildcardTermEnum(reader, getTerm());
    else
        return new org.apache.lucene.search.SingleTermEnum(reader, getTerm());

}
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]
right @java.lang.Override
protected org.apache.lucene.search.FilteredTermEnum getEnum(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
    if (termContainsWildcard)
        return new org.apache.lucene.search.WildcardTermEnum(reader, getTerm());
    else
        return new org.apache.lucene.search.SingleTermEnum(reader, getTerm());

}
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]


-op->Move Parameter from org.apache.lucene.search.WildcardQuery:54 to org.apache.lucene.search.WildcardQuery:54
	org.apache.lucene.index.IndexReader reader

left org.apache.lucene.index.IndexReader reader
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]#parameter[index=0]
right org.apache.lucene.index.IndexReader reader
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]#parameter[index=0]


-op->Move If from org.apache.lucene.search.WildcardQuery:55 to org.apache.lucene.search.WildcardQuery:58
	if (termContainsWildcard)
	    return new org.apache.lucene.search.WildcardTermEnum(reader, getTerm());
	else
	    return new org.apache.lucene.search.SingleTermEnum(reader, getTerm());

left if (termContainsWildcard)
    return new org.apache.lucene.search.WildcardTermEnum(reader, getTerm());
else
    return new org.apache.lucene.search.SingleTermEnum(reader, getTerm());

left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]#body#statement[index=0]
right if (termContainsWildcard)
    return new org.apache.lucene.search.WildcardTermEnum(reader, getTerm());
else
    return new org.apache.lucene.search.SingleTermEnum(reader, getTerm());

right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]#body#statement[index=0]


-op->Move ConstructorCall from org.apache.lucene.search.WildcardQuery:71 to org.apache.lucene.search.WildcardQuery:56
	new org.apache.lucene.search.PrefixQuery(term.createTerm(term.text().substring(0, term.text().indexOf('*'))))

left new org.apache.lucene.search.PrefixQuery(term.createTerm(term.text().substring(0, term.text().indexOf('*'))))
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=0]#defaultExpression
right new org.apache.lucene.search.PrefixQuery(term.createTerm(term.text().substring(0, term.text().indexOf('*'))))
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=0]#defaultExpression


-op->Insert VariableRead at org.apache.lucene.search.WildcardQuery:56
	reader

left reader
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]#body#statement[index=0]#then#statement[index=0]#expression#argument[index=0]
right reader
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]#body#statement[index=0]#then#statement[index=0]#expression#argument[index=0]


-op->Delete TypeReference at org.apache.lucene.search.WildcardQuery:54
	org.apache.lucene.search.FilteredTermEnum

left org.apache.lucene.search.FilteredTermEnum
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]#type
right org.apache.lucene.search.FilteredTermEnum
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]#type


-op->Delete Annotation at org.apache.lucene.search.WildcardQuery:53
	@java.lang.Override

left @java.lang.Override
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]#annotation[index=0]
right @java.lang.Override
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]#annotation[index=0]


-op->Delete Method at org.apache.lucene.search.WildcardQuery:54
	

left @java.lang.Override
protected org.apache.lucene.search.FilteredTermEnum getEnum(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
    if (termContainsWildcard)
        return new org.apache.lucene.search.WildcardTermEnum(reader, getTerm());
    else
        return new org.apache.lucene.search.SingleTermEnum(reader, getTerm());

}
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]
right @java.lang.Override
protected org.apache.lucene.search.FilteredTermEnum getEnum(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
    if (termContainsWildcard)
        return new org.apache.lucene.search.WildcardTermEnum(reader, getTerm());
    else
        return new org.apache.lucene.search.SingleTermEnum(reader, getTerm());

}
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]


-op->Delete Method at org.apache.lucene.search.WildcardQuery:69
	@java.lang.Override
	public org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
	    if (termIsPrefix) {
	        org.apache.lucene.search.MultiTermQuery rewritten = ;
	        rewritten.setBoost(getBoost());
	        rewritten.setRewriteMethod(getRewriteMethod());
	        return rewritten;
	    }else {
	        return super.rewrite(reader);
	    }
	}

left @java.lang.Override
public org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
    if (termIsPrefix) {
        org.apache.lucene.search.MultiTermQuery rewritten = new org.apache.lucene.search.PrefixQuery(term.createTerm(term.text().substring(0, term.text().indexOf('*'))));
        rewritten.setBoost(getBoost());
        rewritten.setRewriteMethod(getRewriteMethod());
        return rewritten;
    }else {
        return super.rewrite(reader);
    }
}
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]
right @java.lang.Override
public org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
    if (termIsPrefix) {
        org.apache.lucene.search.MultiTermQuery rewritten = new org.apache.lucene.search.PrefixQuery(term.createTerm(term.text().substring(0, term.text().indexOf('*'))));
        rewritten.setBoost(getBoost());
        rewritten.setRewriteMethod(getRewriteMethod());
        return rewritten;
    }else {
        return super.rewrite(reader);
    }
}
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]


-op->Delete Method at org.apache.lucene.search.WildcardQuery:69
	@java.lang.Override
	public org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
	    if (termIsPrefix) {
	        org.apache.lucene.search.MultiTermQuery rewritten = ;
	        rewritten.setBoost(getBoost());
	        rewritten.setRewriteMethod(getRewriteMethod());
	        return rewritten;
	    }else {
	        return super.rewrite(reader);
	    }
	}

left @java.lang.Override
public org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
    if (termIsPrefix) {
        org.apache.lucene.search.MultiTermQuery rewritten = new org.apache.lucene.search.PrefixQuery(term.createTerm(term.text().substring(0, term.text().indexOf('*'))));
        rewritten.setBoost(getBoost());
        rewritten.setRewriteMethod(getRewriteMethod());
        return rewritten;
    }else {
        return super.rewrite(reader);
    }
}
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]
right @java.lang.Override
public org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
    if (termIsPrefix) {
        org.apache.lucene.search.MultiTermQuery rewritten = new org.apache.lucene.search.PrefixQuery(term.createTerm(term.text().substring(0, term.text().indexOf('*'))));
        rewritten.setBoost(getBoost());
        rewritten.setRewriteMethod(getRewriteMethod());
        return rewritten;
    }else {
        return super.rewrite(reader);
    }
}
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]


-op->Delete TypeReference at org.apache.lucene.search.WildcardQuery:69
	org.apache.lucene.index.IndexReader

left org.apache.lucene.index.IndexReader
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#parameter[index=0]#type
right org.apache.lucene.index.IndexReader
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#parameter[index=0]#type


-op->Delete Parameter at org.apache.lucene.search.WildcardQuery:69
	org.apache.lucene.index.IndexReader reader

left org.apache.lucene.index.IndexReader reader
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#parameter[index=0]
right org.apache.lucene.index.IndexReader reader
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#parameter[index=0]


-op->Delete Parameter at org.apache.lucene.search.WildcardQuery:69
	org.apache.lucene.index.IndexReader reader

left org.apache.lucene.index.IndexReader reader
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#parameter[index=0]
right org.apache.lucene.index.IndexReader reader
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#parameter[index=0]


-op->Delete TypeReference at org.apache.lucene.search.WildcardQuery:71
	org.apache.lucene.search.MultiTermQuery

left org.apache.lucene.search.MultiTermQuery
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=0]#type
right org.apache.lucene.search.MultiTermQuery
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=0]#type


-op->Delete LocalVariable at org.apache.lucene.search.WildcardQuery:71
	org.apache.lucene.search.MultiTermQuery rewritten = 

left org.apache.lucene.search.MultiTermQuery rewritten = new org.apache.lucene.search.PrefixQuery(term.createTerm(term.text().substring(0, term.text().indexOf('*'))))
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=0]
right org.apache.lucene.search.MultiTermQuery rewritten = new org.apache.lucene.search.PrefixQuery(term.createTerm(term.text().substring(0, term.text().indexOf('*'))))
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=0]


-op->Delete LocalVariable at org.apache.lucene.search.WildcardQuery:71
	org.apache.lucene.search.MultiTermQuery rewritten = 

left org.apache.lucene.search.MultiTermQuery rewritten = new org.apache.lucene.search.PrefixQuery(term.createTerm(term.text().substring(0, term.text().indexOf('*'))))
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=0]
right org.apache.lucene.search.MultiTermQuery rewritten = new org.apache.lucene.search.PrefixQuery(term.createTerm(term.text().substring(0, term.text().indexOf('*'))))
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=0]


-op->Delete VariableRead at org.apache.lucene.search.WildcardQuery:73
	rewritten

left rewritten
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=1]#target
right rewritten
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=1]#target


-op->Delete TypeAccess at org.apache.lucene.search.WildcardQuery
	org.apache.lucene.search.WildcardQuery

left org.apache.lucene.search.WildcardQuery
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=1]#argument[index=0]#target#target
right org.apache.lucene.search.WildcardQuery
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=1]#argument[index=0]#target#target


-op->Delete Invocation at org.apache.lucene.search.WildcardQuery:73
	getBoost()

left getBoost()
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=1]#argument[index=0]
right getBoost()
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=1]#argument[index=0]


-op->Delete Invocation at org.apache.lucene.search.WildcardQuery:73
	rewritten.setBoost(getBoost())

left rewritten.setBoost(getBoost())
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=1]
right rewritten.setBoost(getBoost())
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=1]


-op->Delete VariableRead at org.apache.lucene.search.WildcardQuery:74
	rewritten

left rewritten
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=2]#target
right rewritten
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=2]#target


-op->Delete TypeAccess at org.apache.lucene.search.WildcardQuery
	org.apache.lucene.search.WildcardQuery

left org.apache.lucene.search.WildcardQuery
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=2]#argument[index=0]#target#target
right org.apache.lucene.search.WildcardQuery
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=2]#argument[index=0]#target#target


-op->Delete Invocation at org.apache.lucene.search.WildcardQuery:74
	getRewriteMethod()

left getRewriteMethod()
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=2]#argument[index=0]
right getRewriteMethod()
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=2]#argument[index=0]


-op->Delete Invocation at org.apache.lucene.search.WildcardQuery:74
	rewritten.setRewriteMethod(getRewriteMethod())

left rewritten.setRewriteMethod(getRewriteMethod())
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=2]
right rewritten.setRewriteMethod(getRewriteMethod())
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=2]


-op->Delete VariableRead at org.apache.lucene.search.WildcardQuery:75
	rewritten

left rewritten
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=3]#expression
right rewritten
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#then#statement[index=3]#expression


-op->Delete SuperAccess at org.apache.lucene.search.WildcardQuery:77
	super

left super
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#else#statement[index=0]#expression#target
right super
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#else#statement[index=0]#expression#target


-op->Delete VariableRead at org.apache.lucene.search.WildcardQuery:77
	reader

left reader
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#else#statement[index=0]#expression#argument[index=0]
right reader
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#else#statement[index=0]#expression#argument[index=0]


-op->Delete Invocation at org.apache.lucene.search.WildcardQuery:77
	super.rewrite(reader)

left super.rewrite(reader)
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#else#statement[index=0]#expression
right super.rewrite(reader)
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#else#statement[index=0]#expression


-op->Delete Return at org.apache.lucene.search.WildcardQuery:77
	return super.rewrite(reader)

left return super.rewrite(reader)
left path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#else#statement[index=0]
right return super.rewrite(reader)
right path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]#else#statement[index=0]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=8]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=2]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=3]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=5]#body#statement[index=0]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=9]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=9]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=9]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=9]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=9]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=9]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=9]#body#statement[index=5]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=10]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=7]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=7]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=7]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=7]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=7]#body#statement[index=4]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=1]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=6]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=9]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=8]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=2]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=3]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=4]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=5]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=5]#body#statement[index=0]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=12]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]#body#statement[index=4]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=8]#body#statement[index=5]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=10]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=11]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=7]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=7]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=7]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=7]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=7]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=0]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=1]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=2]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=3]
path #subPackage[name=org]#subPackage[name=apache]#subPackage[name=lucene]#subPackage[name=search]#containedType[name=WildcardQuery]#typeMember[index=6]#body#statement[index=4]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=1]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=6]
path #subPackage[name=java]#subPackage[name=lang]#containedType[name=Object]#typeMember[index=9]
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 7.22 sec
Running fr.inria.coming.spoon.diffanalyzer.BugFixRunnerTest
Output: Insert Field at org.apache.derby.jdbc.EmbedPooledConnection:83
	private int eventIterators;

Output: Update Invocation at org.apache.cassandra.db.migration.AddColumnFamily:75
	org.apache.cassandra.db.migration.Sytem.exit() to org.apache.cassandra.db.Table.open(cfm.tableName)
Delete Method at org.apache.cassandra.db.migration.AddColumnFamily:74
	public void applyModels() throws java.io.IOException {
	    org.apache.cassandra.db.migration.Sytem.exit();
	}
Delete Method at org.apache.cassandra.db.migration.AddColumnFamily:70
	
Insert If at org.apache.cassandra.db.migration.AddColumnFamily:88
	if (!(clientMode))
	    org.apache.cassandra.db.commitlog.CommitLog.instance().forceNewSegment();
Insert Invocation at org.apache.cassandra.db.migration.AddColumnFamily:84
	org.apache.cassandra.config.CFMetaData.fixMaxId()
Insert If at org.apache.cassandra.db.migration.AddColumnFamily:85
	if (!(clientMode))
	    org.apache.cassandra.db.Table.open(ksm.name).initCf(cfm.cfId, cfm.cfName);
Insert Invocation at org.apache.cassandra.db.migration.AddColumnFamily:83
	org.apache.cassandra.config.DatabaseDescriptor.setTableDefinition(ksm, newVersion)
Insert Try at org.apache.cassandra.db.migration.AddColumnFamily:74
	try {
	    org.apache.cassandra.config.CFMetaData.map(cfm);
	} catch (org.apache.cassandra.config.ConfigurationException ex) {
	    throw new java.io.IOException(ex);
	}
Insert LocalVariable at org.apache.cassandra.db.migration.AddColumnFamily:72
	org.apache.cassandra.config.KSMetaData ksm = org.apache.cassandra.config.DatabaseDescriptor.getTableDefinition(cfm.tableName)
Insert Assignment at org.apache.cassandra.db.migration.AddColumnFamily:73
	ksm = makeNewKeyspaceDefinition(ksm)
Move Method from org.apache.cassandra.db.migration.AddColumnFamily:70 to org.apache.cassandra.db.migration.AddColumnFamily:70
	public void applyModels2() throws java.io.IOException {
	}

Output: Insert Invocation at org.apache.cassandra.db.migration.AddColumnFamily:84
	org.apache.cassandra.config.CFMetaData.fixMaxId()

Output: Insert Literal at org.apache.derby.jdbc.EmbedPooledConnection:90
	null

Output: Update Literal at org.apache.derby.jdbc.EmbedPooledConnection:114
	true to false

Output: Insert Literal at org.apache.derby.jdbc.EmbedPooledConnection:74
	null

Output: Update BinaryOperator at org.apache.derby.jdbc.EmbedPooledConnection:149
	(realConnection) == null to (realConnection) != null
Insert Literal at org.apache.derby.jdbc.EmbedPooledConnection:74
	null

Output: Update BinaryOperator at org.apache.derby.jdbc.EmbedPooledConnection:149
	(realConnection) == null to (realConnection) != null
Insert Literal at org.apache.derby.jdbc.EmbedPooledConnection:74
	null

Output Root: (9): [Delete Invocation at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2803
	finalException.printStackTrace()
, Delete Throw at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2804
	throw new java.lang.Exception(msg)
, Delete Literal at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2453
	150
, Insert Field at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:133
	private static final long DEFAULT_SERVER_START_TIMEOUT = 75000;
, Insert LocalVariable at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2454
	java.lang.String userStartTimeout = getSystemProperty("derby.tests.networkServerStartTimeout")
, Insert Throw at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2810
	throw finalException
, Insert VariableRead at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2460
	((int) (iterations))
, Insert LocalVariable at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2457
	long iterations = startTimeout / (org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.PINGSERVER_SLEEP_TIME_MILLIS)
, Insert LocalVariable at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2455
	long startTimeout = (userStartTimeout != null) ? java.lang.Long.parseLong(userStartTimeout) : org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.DEFAULT_SERVER_START_TIMEOUT
]
Output: Update Literal at org.apache.lucene.ant.IndexTaskTest:76
	"contents" to "test"
Update Invocation at org.apache.lucene.ant.IndexTaskTest:76
	org.apache.lucene.queryParser.QueryParser.parse("test", "contents", ) to new org.apache.lucene.queryParser.QueryParser("contents", analyzer).parse("test")

Output Root: (9): [Delete Invocation at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2803
	finalException.printStackTrace()
, Delete Literal at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2453
	150
, Delete Throw at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2804
	throw new java.lang.Exception(msg)
, Insert LocalVariable at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2457
	long iterations = startTimeout / (org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.PINGSERVER_SLEEP_TIME_MILLIS)
, Insert LocalVariable at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2455
	long startTimeout = (userStartTimeout != null) ? java.lang.Long.parseLong(userStartTimeout) : org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.DEFAULT_SERVER_START_TIMEOUT
, Insert Throw at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2810
	throw finalException
, Insert Field at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:133
	private static final long DEFAULT_SERVER_START_TIMEOUT = 75000;
, Insert VariableRead at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2460
	((int) (iterations))
, Insert LocalVariable at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun:2454
	java.lang.String userStartTimeout = getSystemProperty("derby.tests.networkServerStartTimeout")
]
Output Root:  [Update Method at org.apache.lucene.search.WildcardQuery:69
	@java.lang.Override
	public org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
	    if (termIsPrefix) {
	        org.apache.lucene.search.MultiTermQuery rewritten = ;
	        rewritten.setBoost(getBoost());
	        rewritten.setRewriteMethod(getRewriteMethod());
	        return rewritten;
	    }else {
	        return super.rewrite(reader);
	    }
	} to @java.lang.Override
	protected org.apache.lucene.search.FilteredTermEnum getEnum(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
	    if (termIsPrefix) {
	        return new org.apache.lucene.search.PrefixTermEnum(reader, term.createTerm(term.text().substring(0, term.text().indexOf('*'))));
	    }else
	        if (termContainsWildcard) {
	            return new org.apache.lucene.search.WildcardTermEnum(reader, getTerm());
	        }else {
	            return new org.apache.lucene.search.SingleTermEnum(reader, getTerm());
	        }
	
	}
, Update TypeReference at org.apache.lucene.search.WildcardQuery:69
	org.apache.lucene.search.Query to org.apache.lucene.search.FilteredTermEnum
, Delete Method at org.apache.lucene.search.WildcardQuery:54
	
, Delete VariableRead at org.apache.lucene.search.WildcardQuery:75
	rewritten
, Delete Return at org.apache.lucene.search.WildcardQuery:77
	return super.rewrite(reader)
, Delete LocalVariable at org.apache.lucene.search.WildcardQuery:71
	org.apache.lucene.search.MultiTermQuery rewritten = 
, Delete Invocation at org.apache.lucene.search.WildcardQuery:73
	rewritten.setBoost(getBoost())
, Delete Invocation at org.apache.lucene.search.WildcardQuery:74
	rewritten.setRewriteMethod(getRewriteMethod())
, Insert VariableRead at org.apache.lucene.search.WildcardQuery:56
	reader
, Move Method from org.apache.lucene.search.WildcardQuery:64 to org.apache.lucene.search.WildcardQuery:68
	public org.apache.lucene.index.Term getTerm() {
	    return term;
	}
, Move Method from org.apache.lucene.search.WildcardQuery:54 to org.apache.lucene.search.WildcardQuery:54
	@java.lang.Override
	protected org.apache.lucene.search.FilteredTermEnum getEnum(org.apache.lucene.index.IndexReader reader) throws java.io.IOException {
	    if (termContainsWildcard)
	        return new org.apache.lucene.search.WildcardTermEnum(reader, getTerm());
	    else
	        return new org.apache.lucene.search.SingleTermEnum(reader, getTerm());
	
	}
, Move If from org.apache.lucene.search.WildcardQuery:55 to org.apache.lucene.search.WildcardQuery:58
	if (termContainsWildcard)
	    return new org.apache.lucene.search.WildcardTermEnum(reader, getTerm());
	else
	    return new org.apache.lucene.search.SingleTermEnum(reader, getTerm());
, Move Parameter from org.apache.lucene.search.WildcardQuery:54 to org.apache.lucene.search.WildcardQuery:54
	org.apache.lucene.index.IndexReader reader
, Move ConstructorCall from org.apache.lucene.search.WildcardQuery:71 to org.apache.lucene.search.WildcardQuery:56
	new org.apache.lucene.search.PrefixQuery(term.createTerm(term.text().substring(0, term.text().indexOf('*'))))
]
Output: Delete Literal at org.apache.derby.jdbc.EmbedPooledConnection:88
	null

Tests run: 15, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 5.153 sec
Running fr.inria.coming.spoon.diffanalyzer.DiffICSE2015Test
Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0 sec

Results :

Tests in error: 
  testXMLPattern2_INS_INV_FromFile(fr.inria.coming.spoon.patterns.InstanceMiningTest)
  testXMLPattern5_b_2_Actions_2Insert_with_value_wrongvalue(fr.inria.coming.spoon.patterns.InstanceMiningTest)
  testMainPattern1BinaryRunner(fr.inria.coming.spoon.patterns.InstanceMiningTest)
  testXMLPattern5_2_Actions_2Insert(fr.inria.coming.spoon.patterns.InstanceMiningTest)
  testMain1(fr.inria.coming.spoon.patterns.InstanceMiningTest)
  testMainPattern1ParentIfRunner(fr.inria.coming.spoon.patterns.InstanceMiningTest)
  testXMLPattern1_INS_INV_FromFile(fr.inria.coming.spoon.patterns.InstanceMiningTest)
  testMainPattern1UpdateAssigRunner(fr.inria.coming.spoon.patterns.InstanceMiningTest)
  testMainPattern1AnyRunner(fr.inria.coming.spoon.patterns.InstanceMiningTest)
  testXMLPattern5_b_2_Actions_2Insert_with_value(fr.inria.coming.spoon.patterns.InstanceMiningTest)
  testXMLPattern4_2_Actions_1move(fr.inria.coming.spoon.patterns.InstanceMiningTest)
  testMainModeArg(fr.inria.coming.spoon.patterns.InstanceMiningTest)
  testMainPattern1Any(fr.inria.coming.spoon.patterns.InstanceMiningTest)
  testMainInputArg(fr.inria.coming.spoon.patterns.InstanceMiningTest)
  testMainPattern1LiteralRunner(fr.inria.coming.spoon.patterns.InstanceMiningTest)
  testMainPattern1IfAddRunner(fr.inria.coming.spoon.patterns.InstanceMiningTest)
  testXMLPattern3_INS_INV_FromFile_twoparent(fr.inria.coming.spoon.patterns.InstanceMiningTest)
  testMainPattern1AnyInvocationRunner(fr.inria.coming.spoon.patterns.InstanceMiningTest)
  testMainDiff(fr.inria.coming.spoon.patterns.InstanceMiningTest)
  testMainPattern1ParentAssingRunner(fr.inria.coming.spoon.patterns.InstanceMiningTest)
  testMainPattern1InsertInvocationRunner(fr.inria.coming.spoon.patterns.InstanceMiningTest)
  testMainPattern1AssignementRunner(fr.inria.coming.spoon.patterns.InstanceMiningTest)
  testFilter_2Filters(fr.inria.coming.spoon.core.MainComingTest)
  testLoadFilter(fr.inria.coming.spoon.core.MainComingTest)
  testLoadOutput(fr.inria.coming.spoon.core.MainComingTest)
  testLoadPasers(fr.inria.coming.spoon.core.MainComingTest)
  testFilter_hunks(fr.inria.coming.spoon.core.MainComingTest)
  testFilter_keyword(fr.inria.coming.spoon.core.MainComingTest)
  testLoadAnalyzers2Args(fr.inria.coming.spoon.core.MainComingTest)
  testHunkAnalysis(fr.inria.coming.spoon.core.MainComingTest)
  testFilter_maxfiles(fr.inria.coming.spoon.core.MainComingTest)
  testFilter_bugfix(fr.inria.coming.spoon.core.MainComingTest)
  testLoadAnalyzers(fr.inria.coming.spoon.core.MainComingTest)
  testDiffAnalysis(fr.inria.coming.spoon.core.MainComingTest)

Tests run: 143, Failures: 0, Errors: 34, Skipped: 6

[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 01:01 min
[INFO] Finished at: 2018-10-08T16:38:56+02:00
[INFO] Final Memory: 15M/425M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.12.4:test (default-test) on project coming: There are test failures.
[ERROR] 
[ERROR] Please refer to /root/workspace/Spirals-Team/coming/438652192/target/surefire-reports for the individual test results.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
