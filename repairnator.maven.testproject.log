[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Casa Fácil Imóveis 0.0.1-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:resources (default-resources) @ casafacilimoveis ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 2 resources
[INFO] Copying 3 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ casafacilimoveis ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:testResources (default-testResources) @ casafacilimoveis ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/WenderGalan/casa-facil-imoveis/438142499/Back-end/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ casafacilimoveis ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.21.0:test (default-test) @ casafacilimoveis ---
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.21.0/surefire-junit4-2.21.0.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.21.0/surefire-junit4-2.21.0.pom (4 KB at 5.5 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.21.0/surefire-providers-2.21.0.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.21.0/surefire-providers-2.21.0.pom (3 KB at 70.1 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.21.0/surefire-junit4-2.21.0.jar
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.21.0/surefire-junit4-2.21.0.jar (83 KB at 1117.0 KB/sec)
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running com.casafacilimoveis.service.AnuncioServiceTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.0.4.RELEASE)

2018-10-07 02:08:35.134  INFO 159 --- [           main] c.c.service.AnuncioServiceTest           : Starting AnuncioServiceTest on cyclone1 with PID 159 (started by root in /root/workspace/WenderGalan/casa-facil-imoveis/438142499/Back-end)
2018-10-07 02:08:35.140  INFO 159 --- [           main] c.c.service.AnuncioServiceTest           : No active profile set, falling back to default profiles: default
2018-10-07 02:08:35.569  INFO 159 --- [           main] o.s.w.c.s.GenericWebApplicationContext   : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@15d49048: startup date [Sun Oct 07 02:08:35 CEST 2018]; root of context hierarchy
2018-10-07 02:08:38.339  INFO 159 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d17df014] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-07 02:08:38.514  INFO 159 --- [           main] o.s.j.d.DriverManagerDataSource          : Loaded JDBC driver: org.postgresql.Driver
2018-10-07 02:08:38.576  INFO 159 --- [           main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2018-10-07 02:08:38.603  INFO 159 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-10-07 02:08:38.693  INFO 159 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate Core {5.2.17.Final}
2018-10-07 02:08:38.695  INFO 159 --- [           main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2018-10-07 02:08:38.739  INFO 159 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-10-07 02:08:38.882  INFO 159 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL82Dialect
2018-10-07 02:08:38.903  INFO 159 --- [           main] o.h.e.j.e.i.LobCreatorBuilderImpl        : HHH000422: Disabling contextual LOB creation as connection was null
2018-10-07 02:08:38.905  INFO 159 --- [           main] org.hibernate.type.BasicTypeRegistry     : HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6435fa1c
2018-10-07 02:08:39.637  INFO 159 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-10-07 02:08:41.423  INFO 159 --- [           main] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2018-10-07 02:08:42.486  WARN 159 --- [           main] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-10-07 02:08:42.575  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1/search],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.buscarTodosPorParametros(java.lang.String,java.lang.Integer,java.lang.Integer)
2018-10-07 02:08:42.577  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1/autocomplete],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.buscaTodosAutoComplete(java.lang.String)
2018-10-07 02:08:42.578  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1],methods=[PUT]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.alterar(com.casafacilimoveis.model.entities.Anuncio,org.springframework.validation.BindingResult)
2018-10-07 02:08:42.579  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1/{id}],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.excluirPorId(java.lang.Integer)
2018-10-07 02:08:42.580  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1/{id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.buscarPorId(java.lang.Integer)
2018-10-07 02:08:42.581  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1/{id}],methods=[POST]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.salvar(com.casafacilimoveis.model.entities.Anuncio,java.lang.Integer,org.springframework.validation.BindingResult)
2018-10-07 02:08:42.582  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.buscarTodos(java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-10-07 02:08:42.583  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/relatorio/venda/{idUsuario}],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.listagemVendaAluguel(java.lang.Integer,com.casafacilimoveis.model.enums.TipoNegocio,javax.servlet.http.HttpServletResponse)
2018-10-07 02:08:42.586  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/email/v1/email-enviar-codigo],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.EmailController.sendEmailConfirmacao(java.lang.String,java.lang.String)
2018-10-07 02:08:42.587  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/email/v1/email-enviar-contato/{id}],methods=[POST]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.EmailController.sendEmailContato(com.casafacilimoveis.model.entities.ContatoAnunciante,java.lang.Integer)
2018-10-07 02:08:42.589  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/file/v1/enviar-imagens-anuncio/{id}],methods=[POST]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.ImagemController.salvarImagensAnuncio(java.util.List<org.springframework.web.multipart.MultipartFile>,java.lang.Integer)
2018-10-07 02:08:42.590  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/file/v1/enviar-imagem-user/{id}],methods=[POST]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.ImagemController.salvarImagemUser(org.springframework.web.multipart.MultipartFile,java.lang.Integer)
2018-10-07 02:08:42.592  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/file/v1/deletar-imagem-anuncio/{id}],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.ImagemController.deletarImagemAnuncio(java.lang.String)
2018-10-07 02:08:42.596  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1/login],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.logarUsuario(java.lang.String,java.lang.String)
2018-10-07 02:08:42.597  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1],methods=[PUT]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.alterar(com.casafacilimoveis.model.entities.Usuario,org.springframework.validation.BindingResult)
2018-10-07 02:08:42.598  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1/{id}],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.excluirPorId(java.lang.Integer)
2018-10-07 02:08:42.601  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1/{id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.buscarPorId(java.lang.Integer)
2018-10-07 02:08:42.602  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1],methods=[POST]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.salvar(com.casafacilimoveis.model.entities.Usuario,org.springframework.validation.BindingResult)
2018-10-07 02:08:42.604  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.buscarTodos(java.lang.String)
2018-10-07 02:08:42.608  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-10-07 02:08:42.610  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-10-07 02:08:42.611  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-10-07 02:08:42.619  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-07 02:08:42.621  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-07 02:08:42.935  INFO 159 --- [           main] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2018-10-07 02:08:43.379  INFO 159 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-07 02:08:44.026  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@15d49048: startup date [Sun Oct 07 02:08:35 CEST 2018]; root of context hierarchy
2018-10-07 02:08:44.111  INFO 159 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-07 02:08:44.112  INFO 159 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-07 02:08:45.953  INFO 159 --- [           main] .s.s.UserDetailsServiceAutoConfiguration : 

Using generated security password: 8d0c002a-ee5e-47cb-84a3-d7d05876ae04

2018-10-07 02:08:46.155  INFO 159 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5909285b, org.springframework.security.web.context.SecurityContextPersistenceFilter@4a47bc9c, org.springframework.security.web.header.HeaderWriterFilter@c1f0c7b, org.springframework.security.web.authentication.logout.LogoutFilter@5f5923ef, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@12404f9d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1c0680b0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2059f785, org.springframework.security.web.session.SessionManagementFilter@515940af, org.springframework.security.web.access.ExceptionTranslationFilter@7337bd2e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@50734cea]
2018-10-07 02:08:46.322  INFO 159 --- [           main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2018-10-07 02:08:46.323  INFO 159 --- [           main] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2018-10-07 02:08:46.365  INFO 159 --- [           main] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2018-10-07 02:08:46.451  INFO 159 --- [           main] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2018-10-07 02:08:46.875  INFO 159 --- [           main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: alterarUsingPUT_1
2018-10-07 02:08:46.881  INFO 159 --- [           main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: buscarPorIdUsingGET_1
2018-10-07 02:08:46.889  INFO 159 --- [           main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: buscarTodosUsingGET_1
2018-10-07 02:08:46.893  INFO 159 --- [           main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: excluirPorIdUsingDELETE_1
2018-10-07 02:08:46.901  INFO 159 --- [           main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: salvarUsingPOST_1
2018-10-07 02:08:46.941  INFO 159 --- [           main] c.c.service.AnuncioServiceTest           : Started AnuncioServiceTest in 12.255 seconds (JVM running for 13.263)
Hibernate: 
    select
        distinct upper((endereco0_.cidade||' - '||endereco0_.estado)) as col_0_0_ 
    from
        public.endereco endereco0_ 
    where
        ? is null 
        or (
            ? is not null
        ) 
        and (
            lower(endereco0_.cidade) like ('%'||lower(?)||'%')
        ) limit ?
Hibernate: 
    select
        distinct upper((endereco0_.bairro||' - '||endereco0_.cidade||' - '||endereco0_.estado)) as col_0_0_ 
    from
        public.endereco endereco0_ 
    where
        ? is null 
        or (
            ? is not null
        ) 
        and (
            lower(endereco0_.bairro) like ('%'||lower(?)||'%')
        ) limit ?
Hibernate: 
    select
        distinct upper((endereco0_.endereco||' - '||endereco0_.bairro||' - '||endereco0_.cidade)) as col_0_0_ 
    from
        public.endereco endereco0_ 
    where
        ? is null 
        or (
            ? is not null
        ) 
        and (
            lower(endereco0_.endereco) like ('%'||lower(?)||'%')
        ) limit ?
Hibernate: 
    select
        anuncio0_.id as id1_0_,
        anuncio0_.id_anunciante as id_anunc7_0_,
        anuncio0_.descricao as descrica2_0_,
        anuncio0_.id_endereco as id_ender8_0_,
        anuncio0_.tipo_imovel as tipo_imo3_0_,
        anuncio0_.tipo_negocio as tipo_neg4_0_,
        anuncio0_.titulo as titulo5_0_,
        anuncio0_.valor as valor6_0_ 
    from
        public.anuncios anuncio0_ cross 
    join
        public.endereco endereco1_ 
    where
        anuncio0_.id_endereco=endereco1_.id 
        and (
            ? is null 
            or (
                ? is not null
            ) 
            and (
                lower(endereco1_.endereco) like ('%'||lower(?)||'%')
            ) 
            or ? is null 
            or (
                ? is not null
            ) 
            and (
                lower(endereco1_.bairro) like ('%'||lower(?)||'%')
            ) 
            or ? is null 
            or (
                ? is not null
            ) 
            and (
                lower(endereco1_.cidade) like ('%'||lower(?)||'%')
            )
        ) limit ?
Hibernate: 
    select
        usuario0_.id as id1_3_0_,
        usuario0_.email as email2_3_0_,
        usuario0_.nome as nome3_3_0_,
        usuario0_.numero as numero4_3_0_,
        usuario0_.senha as senha5_3_0_,
        usuario0_.tipo_usuario as tipo_usu6_3_0_,
        usuario0_.url_imagem as url_imag7_3_0_ 
    from
        public.usuarios usuario0_ 
    where
        usuario0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        usuario0_.id as id1_3_0_,
        usuario0_.email as email2_3_0_,
        usuario0_.nome as nome3_3_0_,
        usuario0_.numero as numero4_3_0_,
        usuario0_.senha as senha5_3_0_,
        usuario0_.tipo_usuario as tipo_usu6_3_0_,
        usuario0_.url_imagem as url_imag7_3_0_ 
    from
        public.usuarios usuario0_ 
    where
        usuario0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        usuario0_.id as id1_3_0_,
        usuario0_.email as email2_3_0_,
        usuario0_.nome as nome3_3_0_,
        usuario0_.numero as numero4_3_0_,
        usuario0_.senha as senha5_3_0_,
        usuario0_.tipo_usuario as tipo_usu6_3_0_,
        usuario0_.url_imagem as url_imag7_3_0_ 
    from
        public.usuarios usuario0_ 
    where
        usuario0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        count(anuncio0_.id) as col_0_0_ 
    from
        public.anuncios anuncio0_ cross 
    join
        public.endereco endereco1_ 
    where
        anuncio0_.id_endereco=endereco1_.id 
        and (
            ? is null 
            or (
                ? is not null
            ) 
            and (
                lower(endereco1_.endereco) like ('%'||lower(?)||'%')
            ) 
            or ? is null 
            or (
                ? is not null
            ) 
            and (
                lower(endereco1_.bairro) like ('%'||lower(?)||'%')
            ) 
            or ? is null 
            or (
                ? is not null
            ) 
            and (
                lower(endereco1_.cidade) like ('%'||lower(?)||'%')
            )
        )
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 18.181 s - in com.casafacilimoveis.service.AnuncioServiceTest
[INFO] Running com.casafacilimoveis.service.UsuarioServiceTest
2018-10-07 02:08:52.197  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.casafacilimoveis.service.UsuarioServiceTest], using SpringBootContextLoader
2018-10-07 02:08:52.199  INFO 159 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.casafacilimoveis.service.UsuarioServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2018-10-07 02:08:52.199  INFO 159 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.casafacilimoveis.service.UsuarioServiceTest]: UsuarioServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2018-10-07 02:08:52.204  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.casafacilimoveis.CasaFacilImoveisApplication for test class com.casafacilimoveis.service.UsuarioServiceTest
2018-10-07 02:08:52.207  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2018-10-07 02:08:52.208  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1f4cb17b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@280099a0, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7aca299e, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1bf52f10, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6148827c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4da9da6c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@66048c9e, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@543ba2e1, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@71458178, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@723c5f86, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@301e5d23, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@393bcd6b]
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.casafacilimoveis.service.UsuarioServiceTest
[INFO] Running com.casafacilimoveis.service.EnderecoServiceTest
2018-10-07 02:08:52.219  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.casafacilimoveis.service.EnderecoServiceTest], using SpringBootContextLoader
2018-10-07 02:08:52.220  INFO 159 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.casafacilimoveis.service.EnderecoServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2018-10-07 02:08:52.221  INFO 159 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.casafacilimoveis.service.EnderecoServiceTest]: EnderecoServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2018-10-07 02:08:52.224  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.casafacilimoveis.CasaFacilImoveisApplication for test class com.casafacilimoveis.service.EnderecoServiceTest
2018-10-07 02:08:52.227  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2018-10-07 02:08:52.228  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@64a8d575, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@74787609, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@36cdcae0, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@51fa09c7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@73db7df0, org.springframework.test.context.transaction.TransactionalTestExecutionListener@44a485bc, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1c66cd02, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1d535b78, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@35cf91df, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@55a66bbf, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7f02b2d4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@780dbed7]
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.casafacilimoveis.service.EnderecoServiceTest
[INFO] Running com.casafacilimoveis.service.GoogleDriveServiceTest
2018-10-07 02:08:52.238  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.casafacilimoveis.service.GoogleDriveServiceTest], using SpringBootContextLoader
2018-10-07 02:08:52.239  INFO 159 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.casafacilimoveis.service.GoogleDriveServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2018-10-07 02:08:52.240  INFO 159 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.casafacilimoveis.service.GoogleDriveServiceTest]: GoogleDriveServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2018-10-07 02:08:52.242  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.casafacilimoveis.CasaFacilImoveisApplication for test class com.casafacilimoveis.service.GoogleDriveServiceTest
2018-10-07 02:08:52.245  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2018-10-07 02:08:52.246  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@31859960, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5718e77c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3d667b59, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@28888124, org.springframework.test.context.support.DirtiesContextTestExecutionListener@355b53cc, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2568611c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2bda7a5b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@47374fa5, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@289da1bc, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4e1b5532, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@366bf608, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4b5cdd07]
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.casafacilimoveis.service.GoogleDriveServiceTest
[INFO] Running com.casafacilimoveis.CasaFacilImoveisApplicationTests
2018-10-07 02:08:52.257  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.casafacilimoveis.CasaFacilImoveisApplicationTests], using SpringBootContextLoader
2018-10-07 02:08:52.258  INFO 159 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.casafacilimoveis.CasaFacilImoveisApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2018-10-07 02:08:52.259  INFO 159 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.casafacilimoveis.CasaFacilImoveisApplicationTests]: CasaFacilImoveisApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2018-10-07 02:08:52.268  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.casafacilimoveis.CasaFacilImoveisApplication for test class com.casafacilimoveis.CasaFacilImoveisApplicationTests
2018-10-07 02:08:52.271  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2018-10-07 02:08:52.272  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@62581ef6, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1e36baca, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3dfa2f64, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@60484429, org.springframework.test.context.support.DirtiesContextTestExecutionListener@42c55978, org.springframework.test.context.transaction.TransactionalTestExecutionListener@690e4b00, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5e3d84a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2728add3, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4fce3ed7, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@54033a65, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4fb99927, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2d9df336]
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.casafacilimoveis.CasaFacilImoveisApplicationTests
[INFO] Running com.casafacilimoveis.controller.UsuarioControllerTest
2018-10-07 02:08:52.286  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.casafacilimoveis.controller.UsuarioControllerTest], using SpringBootContextLoader
2018-10-07 02:08:52.287  INFO 159 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.casafacilimoveis.controller.UsuarioControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2018-10-07 02:08:52.288  INFO 159 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.casafacilimoveis.controller.UsuarioControllerTest]: UsuarioControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2018-10-07 02:08:52.312  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.casafacilimoveis.CasaFacilImoveisApplication for test class com.casafacilimoveis.controller.UsuarioControllerTest
2018-10-07 02:08:52.315  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2018-10-07 02:08:52.316  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3117ac8d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@760c777d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7ea039b4, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1aef7428, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1610c03c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@332fa1c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7c200e57, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1d0f7bcf, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@d0e4972, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1978b0d5, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6556471b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3e1897d]
2018-10-07 02:08:52.346  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1/login],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.logarUsuario(java.lang.String,java.lang.String)
2018-10-07 02:08:52.347  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1],methods=[PUT]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.alterar(com.casafacilimoveis.model.entities.Usuario,org.springframework.validation.BindingResult)
2018-10-07 02:08:52.348  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1/{id}],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.excluirPorId(java.lang.Integer)
2018-10-07 02:08:52.348  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1/{id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.buscarPorId(java.lang.Integer)
2018-10-07 02:08:52.349  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1],methods=[POST]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.salvar(com.casafacilimoveis.model.entities.Usuario,org.springframework.validation.BindingResult)
2018-10-07 02:08:52.350  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.buscarTodos(java.lang.String)
2018-10-07 02:08:52.368  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@70d7a49b
2018-10-07 02:08:52.380  INFO 159 --- [           main] o.s.mock.web.MockServletContext          : Initializing Spring FrameworkServlet ''
2018-10-07 02:08:52.381  INFO 159 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization started
2018-10-07 02:08:52.382  INFO 159 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization completed in 0 ms
2018-10-07 02:08:52.463  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1/login],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.logarUsuario(java.lang.String,java.lang.String)
2018-10-07 02:08:52.463  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1],methods=[PUT]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.alterar(com.casafacilimoveis.model.entities.Usuario,org.springframework.validation.BindingResult)
2018-10-07 02:08:52.464  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1/{id}],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.excluirPorId(java.lang.Integer)
2018-10-07 02:08:52.465  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1/{id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.buscarPorId(java.lang.Integer)
2018-10-07 02:08:52.465  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1],methods=[POST]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.salvar(com.casafacilimoveis.model.entities.Usuario,org.springframework.validation.BindingResult)
2018-10-07 02:08:52.466  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.buscarTodos(java.lang.String)
2018-10-07 02:08:52.476  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@176e839e
2018-10-07 02:08:52.479  INFO 159 --- [           main] o.s.mock.web.MockServletContext          : Initializing Spring FrameworkServlet ''
2018-10-07 02:08:52.480  INFO 159 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization started
2018-10-07 02:08:52.480  INFO 159 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization completed in 0 ms
Hibernate: 
    select
        usuario0_.id as id1_3_,
        usuario0_.email as email2_3_,
        usuario0_.nome as nome3_3_,
        usuario0_.numero as numero4_3_,
        usuario0_.senha as senha5_3_,
        usuario0_.tipo_usuario as tipo_usu6_3_,
        usuario0_.url_imagem as url_imag7_3_ 
    from
        public.usuarios usuario0_ 
    where
        usuario0_.id=?
2018-10-07 02:08:53.271  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1/login],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.logarUsuario(java.lang.String,java.lang.String)
2018-10-07 02:08:53.271  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1],methods=[PUT]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.alterar(com.casafacilimoveis.model.entities.Usuario,org.springframework.validation.BindingResult)
2018-10-07 02:08:53.272  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1/{id}],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.excluirPorId(java.lang.Integer)
2018-10-07 02:08:53.272  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1/{id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.buscarPorId(java.lang.Integer)
2018-10-07 02:08:53.273  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1],methods=[POST]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.salvar(com.casafacilimoveis.model.entities.Usuario,org.springframework.validation.BindingResult)
2018-10-07 02:08:53.274  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.buscarTodos(java.lang.String)
2018-10-07 02:08:53.285  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@69abeb14
2018-10-07 02:08:53.288  INFO 159 --- [           main] o.s.mock.web.MockServletContext          : Initializing Spring FrameworkServlet ''
2018-10-07 02:08:53.288  INFO 159 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization started
2018-10-07 02:08:53.289  INFO 159 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization completed in 0 ms
Hibernate: 
    select
        usuario0_.id as id1_3_,
        usuario0_.email as email2_3_,
        usuario0_.nome as nome3_3_,
        usuario0_.numero as numero4_3_,
        usuario0_.senha as senha5_3_,
        usuario0_.tipo_usuario as tipo_usu6_3_,
        usuario0_.url_imagem as url_imag7_3_ 
    from
        public.usuarios usuario0_
2018-10-07 02:08:54.379  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1/login],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.logarUsuario(java.lang.String,java.lang.String)
2018-10-07 02:08:54.380  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1],methods=[PUT]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.alterar(com.casafacilimoveis.model.entities.Usuario,org.springframework.validation.BindingResult)
2018-10-07 02:08:54.380  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1/{id}],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.excluirPorId(java.lang.Integer)
2018-10-07 02:08:54.381  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1/{id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.buscarPorId(java.lang.Integer)
2018-10-07 02:08:54.382  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1],methods=[POST]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.salvar(com.casafacilimoveis.model.entities.Usuario,org.springframework.validation.BindingResult)
2018-10-07 02:08:54.382  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/usuarios/v1],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.UsuarioController.buscarTodos(java.lang.String)
2018-10-07 02:08:54.395  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@59043741
2018-10-07 02:08:54.398  INFO 159 --- [           main] o.s.mock.web.MockServletContext          : Initializing Spring FrameworkServlet ''
2018-10-07 02:08:54.399  INFO 159 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization started
2018-10-07 02:08:54.399  INFO 159 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization completed in 0 ms
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.096 s - in com.casafacilimoveis.controller.UsuarioControllerTest
[INFO] Running com.casafacilimoveis.controller.AnuncioControllerTest
2018-10-07 02:08:54.404  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.casafacilimoveis.controller.AnuncioControllerTest], using SpringBootContextLoader
2018-10-07 02:08:54.405  INFO 159 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.casafacilimoveis.controller.AnuncioControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2018-10-07 02:08:54.405  INFO 159 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.casafacilimoveis.controller.AnuncioControllerTest]: AnuncioControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2018-10-07 02:08:54.408  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.casafacilimoveis.CasaFacilImoveisApplication for test class com.casafacilimoveis.controller.AnuncioControllerTest
2018-10-07 02:08:54.410  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2018-10-07 02:08:54.411  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@57617a75, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3794b7b1, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3225d950, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1be427b4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@470a446f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@55315a00, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4942e6af, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@73a1a1b4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@669daa93, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@39a30d1a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@670ae31f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1958524b]
2018-10-07 02:08:54.422  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1/search],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.buscarTodosPorParametros(java.lang.String,java.lang.Integer,java.lang.Integer)
2018-10-07 02:08:54.422  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1/autocomplete],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.buscaTodosAutoComplete(java.lang.String)
2018-10-07 02:08:54.423  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1],methods=[PUT]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.alterar(com.casafacilimoveis.model.entities.Anuncio,org.springframework.validation.BindingResult)
2018-10-07 02:08:54.423  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1/{id}],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.excluirPorId(java.lang.Integer)
2018-10-07 02:08:54.424  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1/{id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.buscarPorId(java.lang.Integer)
2018-10-07 02:08:54.425  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1/{id}],methods=[POST]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.salvar(com.casafacilimoveis.model.entities.Anuncio,java.lang.Integer,org.springframework.validation.BindingResult)
2018-10-07 02:08:54.425  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.buscarTodos(java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-10-07 02:08:54.426  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/relatorio/venda/{idUsuario}],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.listagemVendaAluguel(java.lang.Integer,com.casafacilimoveis.model.enums.TipoNegocio,javax.servlet.http.HttpServletResponse)
2018-10-07 02:08:54.437  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@3370be55
2018-10-07 02:08:54.440  INFO 159 --- [           main] o.s.mock.web.MockServletContext          : Initializing Spring FrameworkServlet ''
2018-10-07 02:08:54.440  INFO 159 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization started
2018-10-07 02:08:54.441  INFO 159 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization completed in 0 ms
2018-10-07 02:08:54.447  WARN 159 --- [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "184954165454"
2018-10-07 02:08:54.455  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1/search],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.buscarTodosPorParametros(java.lang.String,java.lang.Integer,java.lang.Integer)
2018-10-07 02:08:54.456  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1/autocomplete],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.buscaTodosAutoComplete(java.lang.String)
2018-10-07 02:08:54.457  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1],methods=[PUT]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.alterar(com.casafacilimoveis.model.entities.Anuncio,org.springframework.validation.BindingResult)
2018-10-07 02:08:54.457  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1/{id}],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.excluirPorId(java.lang.Integer)
2018-10-07 02:08:54.457  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1/{id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.buscarPorId(java.lang.Integer)
2018-10-07 02:08:54.458  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1/{id}],methods=[POST]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.salvar(com.casafacilimoveis.model.entities.Anuncio,java.lang.Integer,org.springframework.validation.BindingResult)
2018-10-07 02:08:54.458  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.buscarTodos(java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-10-07 02:08:54.459  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/relatorio/venda/{idUsuario}],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.listagemVendaAluguel(java.lang.Integer,com.casafacilimoveis.model.enums.TipoNegocio,javax.servlet.http.HttpServletResponse)
2018-10-07 02:08:54.469  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@5862dda4
2018-10-07 02:08:54.472  INFO 159 --- [           main] o.s.mock.web.MockServletContext          : Initializing Spring FrameworkServlet ''
2018-10-07 02:08:54.472  INFO 159 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization started
2018-10-07 02:08:54.472  INFO 159 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization completed in 0 ms
Hibernate: 
    select
        anuncio0_.id as id1_0_,
        anuncio0_.id_anunciante as id_anunc7_0_,
        anuncio0_.descricao as descrica2_0_,
        anuncio0_.id_endereco as id_ender8_0_,
        anuncio0_.tipo_imovel as tipo_imo3_0_,
        anuncio0_.tipo_negocio as tipo_neg4_0_,
        anuncio0_.titulo as titulo5_0_,
        anuncio0_.valor as valor6_0_ 
    from
        public.anuncios anuncio0_ 
    where
        anuncio0_.id=?
2018-10-07 02:08:55.224  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1/search],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.buscarTodosPorParametros(java.lang.String,java.lang.Integer,java.lang.Integer)
2018-10-07 02:08:55.225  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1/autocomplete],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.buscaTodosAutoComplete(java.lang.String)
2018-10-07 02:08:55.226  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1],methods=[PUT]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.alterar(com.casafacilimoveis.model.entities.Anuncio,org.springframework.validation.BindingResult)
2018-10-07 02:08:55.226  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1/{id}],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.excluirPorId(java.lang.Integer)
2018-10-07 02:08:55.227  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1/{id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.buscarPorId(java.lang.Integer)
2018-10-07 02:08:55.227  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1/{id}],methods=[POST]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.salvar(com.casafacilimoveis.model.entities.Anuncio,java.lang.Integer,org.springframework.validation.BindingResult)
2018-10-07 02:08:55.228  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/v1],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.buscarTodos(java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-10-07 02:08:55.228  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/anuncios/relatorio/venda/{idUsuario}],methods=[GET]}" onto public org.springframework.http.ResponseEntity com.casafacilimoveis.controller.AnuncioController.listagemVendaAluguel(java.lang.Integer,com.casafacilimoveis.model.enums.TipoNegocio,javax.servlet.http.HttpServletResponse)
2018-10-07 02:08:55.240  INFO 159 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@9a37591
2018-10-07 02:08:55.243  INFO 159 --- [           main] o.s.mock.web.MockServletContext          : Initializing Spring FrameworkServlet ''
2018-10-07 02:08:55.244  INFO 159 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization started
2018-10-07 02:08:55.244  INFO 159 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization completed in 0 ms
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.84 s - in com.casafacilimoveis.controller.AnuncioControllerTest
[INFO] Running com.casafacilimoveis.util.UtilTest
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 2.596 s <<< FAILURE! - in com.casafacilimoveis.util.UtilTest
[ERROR] gerarRelatorioTest(com.casafacilimoveis.util.UtilTest)  Time elapsed: 2.596 s  <<< ERROR!
net.sf.jasperreports.engine.util.JRFontNotFoundException: Font 'Arial' is not available to the JVM. See the Javadoc for more details.
	at com.casafacilimoveis.util.UtilTest.gerarRelatorioTest(UtilTest.java:71)

[ERROR] gerarRelatorioTest(com.casafacilimoveis.util.UtilTest)  Time elapsed: 2.596 s  <<< ERROR!
java.lang.NullPointerException
	at com.casafacilimoveis.util.UtilTest.tearDown(UtilTest.java:80)

[INFO] Running com.casafacilimoveis.util.SenhaUtilTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.439 s - in com.casafacilimoveis.util.SenhaUtilTest
[INFO] Running com.casafacilimoveis.repository.AnuncioRepositoryTest
2018-10-07 02:08:58.292  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.casafacilimoveis.repository.AnuncioRepositoryTest], using SpringBootContextLoader
2018-10-07 02:08:58.294  INFO 159 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.casafacilimoveis.repository.AnuncioRepositoryTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2018-10-07 02:08:58.294  INFO 159 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.casafacilimoveis.repository.AnuncioRepositoryTest]: AnuncioRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2018-10-07 02:08:58.303  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.casafacilimoveis.CasaFacilImoveisApplication for test class com.casafacilimoveis.repository.AnuncioRepositoryTest
2018-10-07 02:08:58.306  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2018-10-07 02:08:58.306  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2ba4b32b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@532e00bd, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@47ab3688, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@47fbf95e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@49482761, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6ac0fd1d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@744199bb, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6ce8bf64, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6413eeb7, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@956cf3d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@712213ed, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@58189132]
Hibernate: 
    select
        nextval ('public.anuncio_id_seq')
Hibernate: 
    select
        nextval ('public.usuarios_id_seq')
Hibernate: 
    select
        nextval ('public.endereco_id_seq')
Hibernate: 
    insert 
    into
        public.usuarios
        (email, nome, numero, senha, tipo_usuario, url_imagem, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        public.endereco
        (bairro, cep, cidade, complemento, endereco, estado, latitude, longitude, numero, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        public.anuncios
        (id_anunciante, descricao, id_endereco, tipo_imovel, tipo_negocio, titulo, valor, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        anuncio0_.id as id1_0_,
        anuncio0_.id_anunciante as id_anunc7_0_,
        anuncio0_.descricao as descrica2_0_,
        anuncio0_.id_endereco as id_ender8_0_,
        anuncio0_.tipo_imovel as tipo_imo3_0_,
        anuncio0_.tipo_negocio as tipo_neg4_0_,
        anuncio0_.titulo as titulo5_0_,
        anuncio0_.valor as valor6_0_ 
    from
        public.anuncios anuncio0_
Hibernate: 
    select
        usuario0_.id as id1_3_0_,
        usuario0_.email as email2_3_0_,
        usuario0_.nome as nome3_3_0_,
        usuario0_.numero as numero4_3_0_,
        usuario0_.senha as senha5_3_0_,
        usuario0_.tipo_usuario as tipo_usu6_3_0_,
        usuario0_.url_imagem as url_imag7_3_0_ 
    from
        public.usuarios usuario0_ 
    where
        usuario0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        usuario0_.id as id1_3_0_,
        usuario0_.email as email2_3_0_,
        usuario0_.nome as nome3_3_0_,
        usuario0_.numero as numero4_3_0_,
        usuario0_.senha as senha5_3_0_,
        usuario0_.tipo_usuario as tipo_usu6_3_0_,
        usuario0_.url_imagem as url_imag7_3_0_ 
    from
        public.usuarios usuario0_ 
    where
        usuario0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        usuario0_.id as id1_3_0_,
        usuario0_.email as email2_3_0_,
        usuario0_.nome as nome3_3_0_,
        usuario0_.numero as numero4_3_0_,
        usuario0_.senha as senha5_3_0_,
        usuario0_.tipo_usuario as tipo_usu6_3_0_,
        usuario0_.url_imagem as url_imag7_3_0_ 
    from
        public.usuarios usuario0_ 
    where
        usuario0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        usuario0_.id as id1_3_0_,
        usuario0_.email as email2_3_0_,
        usuario0_.nome as nome3_3_0_,
        usuario0_.numero as numero4_3_0_,
        usuario0_.senha as senha5_3_0_,
        usuario0_.tipo_usuario as tipo_usu6_3_0_,
        usuario0_.url_imagem as url_imag7_3_0_ 
    from
        public.usuarios usuario0_ 
    where
        usuario0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        anuncio0_.id as id1_0_2_,
        anuncio0_.id_anunciante as id_anunc7_0_2_,
        anuncio0_.descricao as descrica2_0_2_,
        anuncio0_.id_endereco as id_ender8_0_2_,
        anuncio0_.tipo_imovel as tipo_imo3_0_2_,
        anuncio0_.tipo_negocio as tipo_neg4_0_2_,
        anuncio0_.titulo as titulo5_0_2_,
        anuncio0_.valor as valor6_0_2_,
        usuario1_.id as id1_3_0_,
        usuario1_.email as email2_3_0_,
        usuario1_.nome as nome3_3_0_,
        usuario1_.numero as numero4_3_0_,
        usuario1_.senha as senha5_3_0_,
        usuario1_.tipo_usuario as tipo_usu6_3_0_,
        usuario1_.url_imagem as url_imag7_3_0_,
        endereco2_.id as id1_1_1_,
        endereco2_.bairro as bairro2_1_1_,
        endereco2_.cep as cep3_1_1_,
        endereco2_.cidade as cidade4_1_1_,
        endereco2_.complemento as compleme5_1_1_,
        endereco2_.endereco as endereco6_1_1_,
        endereco2_.estado as estado7_1_1_,
        endereco2_.latitude as latitude8_1_1_,
        endereco2_.longitude as longitud9_1_1_,
        endereco2_.numero as numero10_1_1_ 
    from
        public.anuncios anuncio0_ 
    left outer join
        public.usuarios usuario1_ 
            on anuncio0_.id_anunciante=usuario1_.id 
    left outer join
        public.endereco endereco2_ 
            on anuncio0_.id_endereco=endereco2_.id 
    where
        anuncio0_.id=?
Hibernate: 
    delete 
    from
        public.anuncios 
    where
        id=?
Hibernate: 
    delete 
    from
        public.endereco 
    where
        id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        nextval ('public.endereco_id_seq')
Hibernate: 
    insert 
    into
        public.endereco
        (bairro, cep, cidade, complemento, endereco, estado, latitude, longitude, numero, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    delete 
    from
        public.endereco 
    where
        id=?
Hibernate: 
    select
        usuario0_.id as id1_3_0_,
        usuario0_.email as email2_3_0_,
        usuario0_.nome as nome3_3_0_,
        usuario0_.numero as numero4_3_0_,
        usuario0_.senha as senha5_3_0_,
        usuario0_.tipo_usuario as tipo_usu6_3_0_,
        usuario0_.url_imagem as url_imag7_3_0_ 
    from
        public.usuarios usuario0_ 
    where
        usuario0_.id=?
Hibernate: 
    delete 
    from
        public.usuarios 
    where
        id=?
Hibernate: 
    select
        nextval ('public.anuncio_id_seq')
Hibernate: 
    select
        nextval ('public.usuarios_id_seq')
Hibernate: 
    select
        nextval ('public.endereco_id_seq')
Hibernate: 
    insert 
    into
        public.usuarios
        (email, nome, numero, senha, tipo_usuario, url_imagem, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        public.endereco
        (bairro, cep, cidade, complemento, endereco, estado, latitude, longitude, numero, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        public.anuncios
        (id_anunciante, descricao, id_endereco, tipo_imovel, tipo_negocio, titulo, valor, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        anuncio0_.id as id1_0_2_,
        anuncio0_.id_anunciante as id_anunc7_0_2_,
        anuncio0_.descricao as descrica2_0_2_,
        anuncio0_.id_endereco as id_ender8_0_2_,
        anuncio0_.tipo_imovel as tipo_imo3_0_2_,
        anuncio0_.tipo_negocio as tipo_neg4_0_2_,
        anuncio0_.titulo as titulo5_0_2_,
        anuncio0_.valor as valor6_0_2_,
        usuario1_.id as id1_3_0_,
        usuario1_.email as email2_3_0_,
        usuario1_.nome as nome3_3_0_,
        usuario1_.numero as numero4_3_0_,
        usuario1_.senha as senha5_3_0_,
        usuario1_.tipo_usuario as tipo_usu6_3_0_,
        usuario1_.url_imagem as url_imag7_3_0_,
        endereco2_.id as id1_1_1_,
        endereco2_.bairro as bairro2_1_1_,
        endereco2_.cep as cep3_1_1_,
        endereco2_.cidade as cidade4_1_1_,
        endereco2_.complemento as compleme5_1_1_,
        endereco2_.endereco as endereco6_1_1_,
        endereco2_.estado as estado7_1_1_,
        endereco2_.latitude as latitude8_1_1_,
        endereco2_.longitude as longitud9_1_1_,
        endereco2_.numero as numero10_1_1_ 
    from
        public.anuncios anuncio0_ 
    left outer join
        public.usuarios usuario1_ 
            on anuncio0_.id_anunciante=usuario1_.id 
    left outer join
        public.endereco endereco2_ 
            on anuncio0_.id_endereco=endereco2_.id 
    where
        anuncio0_.id=?
Hibernate: 
    delete 
    from
        public.anuncios 
    where
        id=?
Hibernate: 
    delete 
    from
        public.endereco 
    where
        id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        nextval ('public.endereco_id_seq')
Hibernate: 
    insert 
    into
        public.endereco
        (bairro, cep, cidade, complemento, endereco, estado, latitude, longitude, numero, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    delete 
    from
        public.endereco 
    where
        id=?
Hibernate: 
    select
        usuario0_.id as id1_3_0_,
        usuario0_.email as email2_3_0_,
        usuario0_.nome as nome3_3_0_,
        usuario0_.numero as numero4_3_0_,
        usuario0_.senha as senha5_3_0_,
        usuario0_.tipo_usuario as tipo_usu6_3_0_,
        usuario0_.url_imagem as url_imag7_3_0_ 
    from
        public.usuarios usuario0_ 
    where
        usuario0_.id=?
Hibernate: 
    delete 
    from
        public.usuarios 
    where
        id=?
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 11.603 s - in com.casafacilimoveis.repository.AnuncioRepositoryTest
[INFO] Running com.casafacilimoveis.repository.ImagemRepositoryTest
2018-10-07 02:09:09.899  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.casafacilimoveis.repository.ImagemRepositoryTest], using SpringBootContextLoader
2018-10-07 02:09:09.900  INFO 159 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.casafacilimoveis.repository.ImagemRepositoryTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2018-10-07 02:09:09.901  INFO 159 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.casafacilimoveis.repository.ImagemRepositoryTest]: ImagemRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2018-10-07 02:09:09.904  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.casafacilimoveis.CasaFacilImoveisApplication for test class com.casafacilimoveis.repository.ImagemRepositoryTest
2018-10-07 02:09:09.906  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2018-10-07 02:09:09.906  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1529d534, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1a22325d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3c5cb013, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5f69462f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@432b883, org.springframework.test.context.transaction.TransactionalTestExecutionListener@f09c282, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@560c3758, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@43414b88, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@52a605c3, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@13fad0c7, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@24fb8317, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6d2f910b]
Hibernate: 
    select
        nextval ('public.anuncio_id_seq')
Hibernate: 
    select
        nextval ('public.usuarios_id_seq')
Hibernate: 
    select
        nextval ('public.endereco_id_seq')
Hibernate: 
    insert 
    into
        public.usuarios
        (email, nome, numero, senha, tipo_usuario, url_imagem, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        public.endereco
        (bairro, cep, cidade, complemento, endereco, estado, latitude, longitude, numero, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        public.anuncios
        (id_anunciante, descricao, id_endereco, tipo_imovel, tipo_negocio, titulo, valor, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        imagem0_.id as id1_2_0_,
        imagem0_.id_anuncio as id_anunc3_2_0_,
        imagem0_.imagem_url as imagem_u2_2_0_ 
    from
        public.imagens imagem0_ 
    where
        imagem0_.id=?
Hibernate: 
    insert 
    into
        public.imagens
        (id_anuncio, imagem_url, id) 
    values
        (?, ?, ?)
Hibernate: 
    select
        imagem0_.id as id1_2_,
        imagem0_.id_anuncio as id_anunc3_2_,
        imagem0_.imagem_url as imagem_u2_2_ 
    from
        public.imagens imagem0_
Hibernate: 
    select
        imagem0_.id as id1_2_0_,
        imagem0_.id_anuncio as id_anunc3_2_0_,
        imagem0_.imagem_url as imagem_u2_2_0_ 
    from
        public.imagens imagem0_ 
    where
        imagem0_.id=?
Hibernate: 
    delete 
    from
        public.imagens 
    where
        id=?
Hibernate: 
    select
        anuncio0_.id as id1_0_2_,
        anuncio0_.id_anunciante as id_anunc7_0_2_,
        anuncio0_.descricao as descrica2_0_2_,
        anuncio0_.id_endereco as id_ender8_0_2_,
        anuncio0_.tipo_imovel as tipo_imo3_0_2_,
        anuncio0_.tipo_negocio as tipo_neg4_0_2_,
        anuncio0_.titulo as titulo5_0_2_,
        anuncio0_.valor as valor6_0_2_,
        usuario1_.id as id1_3_0_,
        usuario1_.email as email2_3_0_,
        usuario1_.nome as nome3_3_0_,
        usuario1_.numero as numero4_3_0_,
        usuario1_.senha as senha5_3_0_,
        usuario1_.tipo_usuario as tipo_usu6_3_0_,
        usuario1_.url_imagem as url_imag7_3_0_,
        endereco2_.id as id1_1_1_,
        endereco2_.bairro as bairro2_1_1_,
        endereco2_.cep as cep3_1_1_,
        endereco2_.cidade as cidade4_1_1_,
        endereco2_.complemento as compleme5_1_1_,
        endereco2_.endereco as endereco6_1_1_,
        endereco2_.estado as estado7_1_1_,
        endereco2_.latitude as latitude8_1_1_,
        endereco2_.longitude as longitud9_1_1_,
        endereco2_.numero as numero10_1_1_ 
    from
        public.anuncios anuncio0_ 
    left outer join
        public.usuarios usuario1_ 
            on anuncio0_.id_anunciante=usuario1_.id 
    left outer join
        public.endereco endereco2_ 
            on anuncio0_.id_endereco=endereco2_.id 
    where
        anuncio0_.id=?
Hibernate: 
    delete 
    from
        public.anuncios 
    where
        id=?
Hibernate: 
    delete 
    from
        public.endereco 
    where
        id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        nextval ('public.endereco_id_seq')
Hibernate: 
    insert 
    into
        public.endereco
        (bairro, cep, cidade, complemento, endereco, estado, latitude, longitude, numero, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    delete 
    from
        public.endereco 
    where
        id=?
Hibernate: 
    select
        usuario0_.id as id1_3_0_,
        usuario0_.email as email2_3_0_,
        usuario0_.nome as nome3_3_0_,
        usuario0_.numero as numero4_3_0_,
        usuario0_.senha as senha5_3_0_,
        usuario0_.tipo_usuario as tipo_usu6_3_0_,
        usuario0_.url_imagem as url_imag7_3_0_ 
    from
        public.usuarios usuario0_ 
    where
        usuario0_.id=?
Hibernate: 
    delete 
    from
        public.usuarios 
    where
        id=?
Hibernate: 
    select
        nextval ('public.anuncio_id_seq')
Hibernate: 
    select
        nextval ('public.usuarios_id_seq')
Hibernate: 
    select
        nextval ('public.endereco_id_seq')
Hibernate: 
    insert 
    into
        public.usuarios
        (email, nome, numero, senha, tipo_usuario, url_imagem, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        public.endereco
        (bairro, cep, cidade, complemento, endereco, estado, latitude, longitude, numero, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        public.anuncios
        (id_anunciante, descricao, id_endereco, tipo_imovel, tipo_negocio, titulo, valor, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        imagem0_.id as id1_2_0_,
        imagem0_.id_anuncio as id_anunc3_2_0_,
        imagem0_.imagem_url as imagem_u2_2_0_ 
    from
        public.imagens imagem0_ 
    where
        imagem0_.id=?
Hibernate: 
    insert 
    into
        public.imagens
        (id_anuncio, imagem_url, id) 
    values
        (?, ?, ?)
Hibernate: 
    select
        imagem0_.id as id1_2_0_,
        imagem0_.id_anuncio as id_anunc3_2_0_,
        imagem0_.imagem_url as imagem_u2_2_0_ 
    from
        public.imagens imagem0_ 
    where
        imagem0_.id=?
Hibernate: 
    delete 
    from
        public.imagens 
    where
        id=?
Hibernate: 
    select
        anuncio0_.id as id1_0_2_,
        anuncio0_.id_anunciante as id_anunc7_0_2_,
        anuncio0_.descricao as descrica2_0_2_,
        anuncio0_.id_endereco as id_ender8_0_2_,
        anuncio0_.tipo_imovel as tipo_imo3_0_2_,
        anuncio0_.tipo_negocio as tipo_neg4_0_2_,
        anuncio0_.titulo as titulo5_0_2_,
        anuncio0_.valor as valor6_0_2_,
        usuario1_.id as id1_3_0_,
        usuario1_.email as email2_3_0_,
        usuario1_.nome as nome3_3_0_,
        usuario1_.numero as numero4_3_0_,
        usuario1_.senha as senha5_3_0_,
        usuario1_.tipo_usuario as tipo_usu6_3_0_,
        usuario1_.url_imagem as url_imag7_3_0_,
        endereco2_.id as id1_1_1_,
        endereco2_.bairro as bairro2_1_1_,
        endereco2_.cep as cep3_1_1_,
        endereco2_.cidade as cidade4_1_1_,
        endereco2_.complemento as compleme5_1_1_,
        endereco2_.endereco as endereco6_1_1_,
        endereco2_.estado as estado7_1_1_,
        endereco2_.latitude as latitude8_1_1_,
        endereco2_.longitude as longitud9_1_1_,
        endereco2_.numero as numero10_1_1_ 
    from
        public.anuncios anuncio0_ 
    left outer join
        public.usuarios usuario1_ 
            on anuncio0_.id_anunciante=usuario1_.id 
    left outer join
        public.endereco endereco2_ 
            on anuncio0_.id_endereco=endereco2_.id 
    where
        anuncio0_.id=?
Hibernate: 
    delete 
    from
        public.anuncios 
    where
        id=?
Hibernate: 
    delete 
    from
        public.endereco 
    where
        id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    select
        nextval ('public.endereco_id_seq')
Hibernate: 
    insert 
    into
        public.endereco
        (bairro, cep, cidade, complemento, endereco, estado, latitude, longitude, numero, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    delete 
    from
        public.endereco 
    where
        id=?
Hibernate: 
    select
        usuario0_.id as id1_3_0_,
        usuario0_.email as email2_3_0_,
        usuario0_.nome as nome3_3_0_,
        usuario0_.numero as numero4_3_0_,
        usuario0_.senha as senha5_3_0_,
        usuario0_.tipo_usuario as tipo_usu6_3_0_,
        usuario0_.url_imagem as url_imag7_3_0_ 
    from
        public.usuarios usuario0_ 
    where
        usuario0_.id=?
Hibernate: 
    delete 
    from
        public.usuarios 
    where
        id=?
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 13.505 s - in com.casafacilimoveis.repository.ImagemRepositoryTest
[INFO] Running com.casafacilimoveis.repository.EnderecoRepositoryTest
2018-10-07 02:09:23.410  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.casafacilimoveis.repository.EnderecoRepositoryTest], using SpringBootContextLoader
2018-10-07 02:09:23.412  INFO 159 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.casafacilimoveis.repository.EnderecoRepositoryTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2018-10-07 02:09:23.412  INFO 159 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.casafacilimoveis.repository.EnderecoRepositoryTest]: EnderecoRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2018-10-07 02:09:23.414  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.casafacilimoveis.CasaFacilImoveisApplication for test class com.casafacilimoveis.repository.EnderecoRepositoryTest
2018-10-07 02:09:23.415  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2018-10-07 02:09:23.415  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@325a781c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@113e6e06, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6ae5e1cf, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@f9979cf, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6e627ab8, org.springframework.test.context.transaction.TransactionalTestExecutionListener@cce672c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@496004e3, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@df34b01, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@703947bd, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@f31b991, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@46bff388, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5183131d]
Hibernate: 
    select
        nextval ('public.endereco_id_seq')
Hibernate: 
    insert 
    into
        public.endereco
        (bairro, cep, cidade, complemento, endereco, estado, latitude, longitude, numero, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    update
        public.endereco 
    set
        bairro=?,
        cep=?,
        cidade=?,
        complemento=?,
        endereco=?,
        estado=?,
        latitude=?,
        longitude=?,
        numero=? 
    where
        id=?
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    delete 
    from
        public.endereco 
    where
        id=?
Hibernate: 
    select
        nextval ('public.endereco_id_seq')
Hibernate: 
    insert 
    into
        public.endereco
        (bairro, cep, cidade, complemento, endereco, estado, latitude, longitude, numero, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        endereco0_.id as id1_1_,
        endereco0_.bairro as bairro2_1_,
        endereco0_.cep as cep3_1_,
        endereco0_.cidade as cidade4_1_,
        endereco0_.complemento as compleme5_1_,
        endereco0_.endereco as endereco6_1_,
        endereco0_.estado as estado7_1_,
        endereco0_.latitude as latitude8_1_,
        endereco0_.longitude as longitud9_1_,
        endereco0_.numero as numero10_1_ 
    from
        public.endereco endereco0_
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    delete 
    from
        public.endereco 
    where
        id=?
Hibernate: 
    select
        nextval ('public.endereco_id_seq')
Hibernate: 
    insert 
    into
        public.endereco
        (bairro, cep, cidade, complemento, endereco, estado, latitude, longitude, numero, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        endereco0_.id as id1_1_0_,
        endereco0_.bairro as bairro2_1_0_,
        endereco0_.cep as cep3_1_0_,
        endereco0_.cidade as cidade4_1_0_,
        endereco0_.complemento as compleme5_1_0_,
        endereco0_.endereco as endereco6_1_0_,
        endereco0_.estado as estado7_1_0_,
        endereco0_.latitude as latitude8_1_0_,
        endereco0_.longitude as longitud9_1_0_,
        endereco0_.numero as numero10_1_0_ 
    from
        public.endereco endereco0_ 
    where
        endereco0_.id=?
Hibernate: 
    delete 
    from
        public.endereco 
    where
        id=?
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 7.392 s - in com.casafacilimoveis.repository.EnderecoRepositoryTest
[INFO] Running com.casafacilimoveis.repository.UsuarioRepositoryTest
2018-10-07 02:09:30.804  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.casafacilimoveis.repository.UsuarioRepositoryTest], using SpringBootContextLoader
2018-10-07 02:09:30.805  INFO 159 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.casafacilimoveis.repository.UsuarioRepositoryTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2018-10-07 02:09:30.806  INFO 159 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.casafacilimoveis.repository.UsuarioRepositoryTest]: UsuarioRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2018-10-07 02:09:30.807  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.casafacilimoveis.CasaFacilImoveisApplication for test class com.casafacilimoveis.repository.UsuarioRepositoryTest
2018-10-07 02:09:30.809  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2018-10-07 02:09:30.810  INFO 159 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@294ebdae, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@e280006, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@54e3cba2, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4f1aa2bc, org.springframework.test.context.support.DirtiesContextTestExecutionListener@13e5c53c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5d03df76, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@17f7a1af, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@d62feaf, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3093161a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@73a88711, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5978ba12, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@43f5b014]
Hibernate: 
    select
        nextval ('public.usuarios_id_seq')
Hibernate: 
    insert 
    into
        public.usuarios
        (email, nome, numero, senha, tipo_usuario, url_imagem, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usuario0_.id as id1_3_,
        usuario0_.email as email2_3_,
        usuario0_.nome as nome3_3_,
        usuario0_.numero as numero4_3_,
        usuario0_.senha as senha5_3_,
        usuario0_.tipo_usuario as tipo_usu6_3_,
        usuario0_.url_imagem as url_imag7_3_ 
    from
        public.usuarios usuario0_ 
    where
        usuario0_.email=?
Hibernate: 
    select
        usuario0_.id as id1_3_0_,
        usuario0_.email as email2_3_0_,
        usuario0_.nome as nome3_3_0_,
        usuario0_.numero as numero4_3_0_,
        usuario0_.senha as senha5_3_0_,
        usuario0_.tipo_usuario as tipo_usu6_3_0_,
        usuario0_.url_imagem as url_imag7_3_0_ 
    from
        public.usuarios usuario0_ 
    where
        usuario0_.id=?
Hibernate: 
    delete 
    from
        public.usuarios 
    where
        id=?
Hibernate: 
    select
        nextval ('public.usuarios_id_seq')
Hibernate: 
    insert 
    into
        public.usuarios
        (email, nome, numero, senha, tipo_usuario, url_imagem, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usuario0_.id as id1_3_0_,
        usuario0_.email as email2_3_0_,
        usuario0_.nome as nome3_3_0_,
        usuario0_.numero as numero4_3_0_,
        usuario0_.senha as senha5_3_0_,
        usuario0_.tipo_usuario as tipo_usu6_3_0_,
        usuario0_.url_imagem as url_imag7_3_0_ 
    from
        public.usuarios usuario0_ 
    where
        usuario0_.id=?
Hibernate: 
    update
        public.usuarios 
    set
        email=?,
        nome=?,
        numero=?,
        senha=?,
        tipo_usuario=?,
        url_imagem=? 
    where
        id=?
Hibernate: 
    select
        usuario0_.id as id1_3_0_,
        usuario0_.email as email2_3_0_,
        usuario0_.nome as nome3_3_0_,
        usuario0_.numero as numero4_3_0_,
        usuario0_.senha as senha5_3_0_,
        usuario0_.tipo_usuario as tipo_usu6_3_0_,
        usuario0_.url_imagem as url_imag7_3_0_ 
    from
        public.usuarios usuario0_ 
    where
        usuario0_.id=?
Hibernate: 
    delete 
    from
        public.usuarios 
    where
        id=?
Hibernate: 
    select
        nextval ('public.usuarios_id_seq')
Hibernate: 
    insert 
    into
        public.usuarios
        (email, nome, numero, senha, tipo_usuario, url_imagem, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usuario0_.id as id1_3_,
        usuario0_.email as email2_3_,
        usuario0_.nome as nome3_3_,
        usuario0_.numero as numero4_3_,
        usuario0_.senha as senha5_3_,
        usuario0_.tipo_usuario as tipo_usu6_3_,
        usuario0_.url_imagem as url_imag7_3_ 
    from
        public.usuarios usuario0_ 
    where
        usuario0_.id=?
Hibernate: 
    select
        usuario0_.id as id1_3_0_,
        usuario0_.email as email2_3_0_,
        usuario0_.nome as nome3_3_0_,
        usuario0_.numero as numero4_3_0_,
        usuario0_.senha as senha5_3_0_,
        usuario0_.tipo_usuario as tipo_usu6_3_0_,
        usuario0_.url_imagem as url_imag7_3_0_ 
    from
        public.usuarios usuario0_ 
    where
        usuario0_.id=?
Hibernate: 
    delete 
    from
        public.usuarios 
    where
        id=?
Hibernate: 
    select
        nextval ('public.usuarios_id_seq')
Hibernate: 
    insert 
    into
        public.usuarios
        (email, nome, numero, senha, tipo_usuario, url_imagem, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usuario0_.id as id1_3_,
        usuario0_.email as email2_3_,
        usuario0_.nome as nome3_3_,
        usuario0_.numero as numero4_3_,
        usuario0_.senha as senha5_3_,
        usuario0_.tipo_usuario as tipo_usu6_3_,
        usuario0_.url_imagem as url_imag7_3_ 
    from
        public.usuarios usuario0_
Hibernate: 
    select
        usuario0_.id as id1_3_0_,
        usuario0_.email as email2_3_0_,
        usuario0_.nome as nome3_3_0_,
        usuario0_.numero as numero4_3_0_,
        usuario0_.senha as senha5_3_0_,
        usuario0_.tipo_usuario as tipo_usu6_3_0_,
        usuario0_.url_imagem as url_imag7_3_0_ 
    from
        public.usuarios usuario0_ 
    where
        usuario0_.id=?
Hibernate: 
    delete 
    from
        public.usuarios 
    where
        id=?
Hibernate: 
    select
        nextval ('public.usuarios_id_seq')
Hibernate: 
    insert 
    into
        public.usuarios
        (email, nome, numero, senha, tipo_usuario, url_imagem, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usuario0_.id as id1_3_0_,
        usuario0_.email as email2_3_0_,
        usuario0_.nome as nome3_3_0_,
        usuario0_.numero as numero4_3_0_,
        usuario0_.senha as senha5_3_0_,
        usuario0_.tipo_usuario as tipo_usu6_3_0_,
        usuario0_.url_imagem as url_imag7_3_0_ 
    from
        public.usuarios usuario0_ 
    where
        usuario0_.id=?
Hibernate: 
    delete 
    from
        public.usuarios 
    where
        id=?
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 13.037 s - in com.casafacilimoveis.repository.UsuarioRepositoryTest
[INFO] Running com.casafacilimoveis.model.enums.TipoUsuarioTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.casafacilimoveis.model.enums.TipoUsuarioTest
[INFO] Running com.casafacilimoveis.model.enums.TipoImovelTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.casafacilimoveis.model.enums.TipoImovelTest
[INFO] 
[INFO] Results:
[INFO] 
[ERROR] Errors: 
[ERROR] com.casafacilimoveis.util.UtilTest.gerarRelatorioTest(com.casafacilimoveis.util.UtilTest)
[ERROR]   Run 1: UtilTest.gerarRelatorioTest:71 » JRFontNotFound Font 'Arial' is not available ...
[ERROR]   Run 2: UtilTest.tearDown:80 NullPointer
[INFO] 
[INFO] 
[ERROR] Tests run: 32, Failures: 0, Errors: 1, Skipped: 0
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 01:14 min
[INFO] Finished at: 2018-10-07T02:09:44+02:00
[INFO] Final Memory: 26M/317M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.21.0:test (default-test) on project casafacilimoveis: There are test failures.
[ERROR] 
[ERROR] Please refer to /root/workspace/WenderGalan/casa-facil-imoveis/438142499/Back-end/target/surefire-reports for the individual test results.
[ERROR] Please refer to dump files (if any exist) [date]-jvmRun[N].dump, [date].dumpstream and [date]-jvmRun[N].dumpstream.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
