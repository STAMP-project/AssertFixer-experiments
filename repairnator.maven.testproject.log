[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building jFachwert 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.2:prepare-agent (default-prepare-agent) @ jfachwert ---
[INFO] argLine set to -javaagent:/root/./workspace/oboehm/jfachwert/424791599/.m2/org/jacoco/org.jacoco.agent/0.8.2/org.jacoco.agent-0.8.2-runtime.jar=destfile=/root/workspace/oboehm/jfachwert/424791599/target/jacoco.exec
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ jfachwert ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 4 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.6.1:compile (default-compile) @ jfachwert ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 75 source files to /root/workspace/oboehm/jfachwert/424791599/target/classes
[INFO] /root/workspace/oboehm/jfachwert/424791599/src/main/java/de/jfachwert/AbstractFachwert.java: Some input files use unchecked or unsafe operations.
[INFO] /root/workspace/oboehm/jfachwert/424791599/src/main/java/de/jfachwert/AbstractFachwert.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ jfachwert ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 3 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.6.1:testCompile (default-testCompile) @ jfachwert ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.22.0:test (default-test) @ jfachwert ---
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng/2.22.0/surefire-testng-2.22.0.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng/2.22.0/surefire-testng-2.22.0.pom (3 KB at 5.2 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.22.0/surefire-providers-2.22.0.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.22.0/surefire-providers-2.22.0.pom (3 KB at 40.5 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/common-java5/2.22.0/common-java5-2.22.0.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/common-java5/2.22.0/common-java5-2.22.0.pom (3 KB at 118.8 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng-utils/2.22.0/surefire-testng-utils-2.22.0.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng-utils/2.22.0/surefire-testng-utils-2.22.0.pom (4 KB at 97.5 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-grouper/2.22.0/surefire-grouper-2.22.0.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-grouper/2.22.0/surefire-grouper-2.22.0.pom (3 KB at 95.3 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/common-java5/2.22.0/common-java5-2.22.0.jar
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-grouper/2.22.0/surefire-grouper-2.22.0.jar
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng-utils/2.22.0/surefire-testng-utils-2.22.0.jar
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng/2.22.0/surefire-testng-2.22.0.jar
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng/2.22.0/surefire-testng-2.22.0.jar (43 KB at 382.6 KB/sec)
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-testng-utils/2.22.0/surefire-testng-utils-2.22.0.jar (27 KB at 224.7 KB/sec)
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/common-java5/2.22.0/common-java5-2.22.0.jar (50 KB at 381.6 KB/sec)
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-grouper/2.22.0/surefire-grouper-2.22.0.jar (40 KB at 295.8 KB/sec)
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running TestSuite
Usage: <main class> [options] The XML suite files to run
  Options:
    -configfailurepolicy               Configuration failure policy (skip or
                                       continue)
    -d                                 Output directory
    -dataproviderthreadcount           Number of threads to use when running
                                       data providers
    -excludegroups                     Comma-separated list of group names to 
                                       exclude
    -groups                            Comma-separated list of group names to be
                                       run
    -junit                             JUnit mode
                                       Default: false
    -listener                          List of .class files or list of class
                                       names implementing ITestListener or
                                       ISuiteListener
    -methods                           Comma separated of test methods
                                       Default: []
    -methodselectors                   List of .class files or list of class
                                       names implementing IMethodSelector
    -mixed                             Mixed mode - autodetect the type of
                                       current test and run it with appropriate runner
                                       Default: false
    -objectfactory                     List of .class files or list of class
                                       names implementing ITestRunnerFactory
    -parallel                          Parallel mode (methods, tests or classes)
    -port                              The port
    -reporter                          Extended configuration for custom report
                                       listener
    -suitename                         Default name of test suite, if not
                                       specified in suite definition file or source code
    -suitethreadpoolsize               Size of the thread pool to use to run
                                       suites
                                       Default: 1
    -testclass                         The list of test classes
    -testjar                           A jar file containing the tests
    -testname                          Default name of test, if not specified in
                                       suitedefinition file or source code
    -testnames                         The list of test names to run
    -testrunfactory, -testRunFactory   The factory used to create tests
    -threadcount                       Number of threads to use when running
                                       tests in parallel
    -usedefaultlisteners               Whether to use the default listeners
                                       Default: true
    -log, -verbose                     Level of verbosity
    -xmlpathinjar                      The full path to the xml file inside the
                                       jar file (only valid if -testjar was
                                       specified)
                                       Default: testng.xml

15:25:04.939 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.rechnung.Rechnungsnummer seems to be ok
15:25:05.209 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.net.Telefonnummer seems to be ok
15:25:05.244 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.net.Telefonnummer seems to be ok
15:25:05.256 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.net.Telefonnummer seems to be ok
15:25:05.341 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.post.Adresse seems to be ok
15:25:05.373 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.steuer.SteuerIdNr seems to be ok
15:25:05.390 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.bank.BIC seems to be ok
15:25:06.580 [main] INFO  patterntesting.runtime.junit.ComparableTester - compareTo implementation of class de.jfachwert.bank.Geldbetrag seems to be ok
15:25:06.580 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.bank.Geldbetrag seems to be ok
15:25:06.676 [main] INFO  patterntesting.runtime.junit.ComparableTester - compareTo implementation of class de.jfachwert.bank.Geldbetrag seems to be ok
15:25:06.677 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.bank.Geldbetrag seems to be ok
15:25:06.714 [main] INFO  patterntesting.runtime.junit.ComparableTester - compareTo implementation of class de.jfachwert.bank.Geldbetrag seems to be ok
15:25:06.738 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.bank.BLZ seems to be ok
15:25:06.756 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.rechnung.Kundennummer seems to be ok
15:25:06.819 [main] INFO  patterntesting.runtime.junit.ComparableTester - compareTo implementation of class de.jfachwert.math.PackedDecimal seems to be ok
15:25:06.820 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.math.PackedDecimal seems to be ok
15:25:06.821 [main] INFO  patterntesting.runtime.junit.ComparableTester - compareTo implementation of class de.jfachwert.math.PackedDecimal seems to be ok
15:25:06.832 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.rechnung.Referenznummer seems to be ok
15:25:06.866 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.bank.IBAN seems to be ok
15:25:07.046 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.rechnung.Rechnungsmonat seems to be ok
15:25:07.070 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.bank.Kontonummer seems to be ok
15:25:07.365 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.rechnung.Bestellnummer seems to be ok
15:25:07.391 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.steuer.UStIdNr seems to be ok
15:25:07.453 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.net.ChatAccount seems to be ok
15:25:07.465 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.post.Ort seems to be ok
15:25:07.480 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.math.Primzahl seems to be ok
15:25:07.525 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.math.Nummer seems to be ok
15:25:07.552 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.steuer.Steuernummer seems to be ok
15:25:07.598 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.post.Anschrift seems to be ok
15:25:07.605 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.bank.Bankverbindung seems to be ok
15:25:07.620 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.bank.Bankverbindung seems to be ok
15:25:07.741 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.util.TinyUUID seems to be ok
15:25:07.750 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.rechnung.Artikelnummer seems to be ok
15:25:07.787 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.post.Postfach seems to be ok
15:25:07.797 [main] INFO  patterntesting.runtime.junit.ComparableTester - compareTo implementation of class de.jfachwert.bank.Waehrung seems to be ok
15:25:07.797 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.bank.Waehrung seems to be ok
15:25:07.847 [main] INFO  patterntesting.runtime.junit.ComparableTester - compareTo implementation of class de.jfachwert.bank.Waehrung seems to be ok
15:25:07.848 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.bank.Waehrung seems to be ok
15:25:07.850 [main] INFO  patterntesting.runtime.junit.ComparableTester - compareTo implementation of class de.jfachwert.bank.Waehrung seems to be ok
15:25:07.859 [main] INFO  patterntesting.runtime.junit.ComparableTester - compareTo implementation of class de.jfachwert.math.Bruch seems to be ok
15:25:07.860 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.math.Bruch seems to be ok
15:25:07.870 [main] INFO  patterntesting.runtime.junit.ComparableTester - compareTo implementation of class de.jfachwert.math.Bruch seems to be ok
15:25:07.870 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.math.Bruch seems to be ok
15:25:07.873 [main] INFO  patterntesting.runtime.junit.ComparableTester - compareTo implementation of class de.jfachwert.math.Bruch seems to be ok
15:25:07.886 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.post.PLZ seems to be ok
15:25:07.893 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.net.EMailAdresse seems to be ok
15:25:07.901 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.net.Domainname seems to be ok
15:25:07.942 [main] INFO  patterntesting.runtime.junit.ObjectTester - equals/hashCode implementation of class de.jfachwert.Text seems to be ok
[ERROR] Tests run: 471, Failures: 11, Errors: 0, Skipped: 0, Time elapsed: 6.79 s <<< FAILURE! - in TestSuite
[ERROR] testValidate on testValidate(de.jfachwert.pruefung.AbstractPruefzifferVerfahrenTest)(de.jfachwert.pruefung.AbstractPruefzifferVerfahrenTest)  Time elapsed: 0.035 s  <<< FAILURE!
java.lang.InstantiationException

[ERROR] isValid on isValid(de.jfachwert.pruefung.AbstractPruefzifferVerfahrenTest)(de.jfachwert.pruefung.AbstractPruefzifferVerfahrenTest)  Time elapsed: 0 s  <<< FAILURE!
java.lang.InstantiationException

[ERROR] testToStringLocalized on testToStringLocalized(de.jfachwert.bank.GeldbetragTest)(de.jfachwert.bank.GeldbetragTest)  Time elapsed: 0.005 s  <<< FAILURE!
java.lang.AssertionError: 

Expected: a string starting with "100"
     but: was "¤100.00 EUR"
	at de.jfachwert.bank.GeldbetragTest.testToStringLocalized(GeldbetragTest.java:494)

[ERROR] testJsonSerialization on testJsonSerialization(de.jfachwert.bank.GeldbetragTest)(de.jfachwert.bank.GeldbetragTest)  Time elapsed: 0.019 s  <<< FAILURE!
java.lang.IllegalArgumentException: could not unmarshall '"¤1.00 EUR"' to class de.jfachwert.bank.Geldbetrag
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: 
Cannot construct instance of `de.jfachwert.bank.Geldbetrag`, problem: invalid value for number: "¤1.00"
 at [Source: (String)""¤1.00 EUR""; line: 1, column: 1]
Caused by: de.jfachwert.pruefung.exception.InvalidValueException: invalid value for number: "¤1.00"

[ERROR] testImmutable on testImmutable(de.jfachwert.AbstractFachwertTest)(de.jfachwert.AbstractFachwertTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.InstantiationException

[ERROR] testNotFinal on testNotFinal(de.jfachwert.AbstractFachwertTest)(de.jfachwert.AbstractFachwertTest)  Time elapsed: 0 s  <<< FAILURE!
java.lang.InstantiationException

[ERROR] testJsonSerialization on testJsonSerialization(de.jfachwert.AbstractFachwertTest)(de.jfachwert.AbstractFachwertTest)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.InstantiationException

[ERROR] testToString on testToString(de.jfachwert.AbstractFachwertTest)(de.jfachwert.AbstractFachwertTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.InstantiationException

[ERROR] testEquals on testEquals(de.jfachwert.AbstractFachwertTest)(de.jfachwert.AbstractFachwertTest)  Time elapsed: 0 s  <<< FAILURE!
java.lang.InstantiationException

[ERROR] testSerializable on testSerializable(de.jfachwert.AbstractFachwertTest)(de.jfachwert.AbstractFachwertTest)  Time elapsed: 0.001 s  <<< FAILURE!
java.lang.InstantiationException

[ERROR] testValidateAll on testValidateAll(de.jfachwert.FachwertFactoryTest)(de.jfachwert.FachwertFactoryTest)  Time elapsed: 0.217 s  <<< FAILURE!
java.lang.AssertionError: 
class de.jfachwert.math.Bruch throws inusfficient exeption
Expected: a string containing "TEST"
     but: was null
	at de.jfachwert.FachwertFactoryTest.testValidateAll(FachwertFactoryTest.java:131)

[INFO] 
[INFO] Results:
[INFO] 
[ERROR] Failures: 
[ERROR]   AbstractFachwertTest.testEquals » Instantiation
[ERROR]   AbstractFachwertTest.testImmutable » Instantiation
[ERROR]   AbstractFachwertTest.testJsonSerialization » Instantiation
[ERROR]   AbstractFachwertTest.testNotFinal » Instantiation
[ERROR]   AbstractFachwertTest.testSerializable » Instantiation
[ERROR]   AbstractFachwertTest.testToString » Instantiation
[ERROR]   FachwertFactoryTest.testValidateAll:131 class de.jfachwert.math.Bruch throws inusfficient exeption
Expected: a string containing "TEST"
     but: was null
[ERROR]   GeldbetragTest>AbstractFachwertTest.testJsonSerialization:126->AbstractFachwertTest.unmarshal:160 » IllegalArgument
[ERROR]   GeldbetragTest.testToStringLocalized:494 
Expected: a string starting with "100"
     but: was "¤100.00 EUR"
[ERROR]   AbstractPruefzifferVerfahrenTest.isValid » Instantiation
[ERROR]   AbstractPruefzifferVerfahrenTest.testValidate » Instantiation
[INFO] 
[ERROR] Tests run: 471, Failures: 11, Errors: 0, Skipped: 0
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 16.167 s
[INFO] Finished at: 2018-09-05T15:25:09+02:00
[INFO] Final Memory: 23M/304M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.22.0:test (default-test) on project jfachwert: There are test failures.
[ERROR] 
[ERROR] Please refer to /root/workspace/oboehm/jfachwert/424791599/target/surefire-reports for the individual test results.
[ERROR] Please refer to dump files (if any exist) [date]-jvmRun[N].dump, [date].dumpstream and [date]-jvmRun[N].dumpstream.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
