[INFO] Scanning for projects...
[INFO] Inspecting build with total of 9 modules...
[INFO] Installing Nexus Staging features:
[INFO]   ... total of 9 executions of maven-deploy-plugin replaced with nexus-staging-maven-plugin
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO] 
[INFO] Blueprint Parent
[INFO] Blueprint - Common components
[INFO] Blueprint - Server components
[INFO] Blueprint - Angular UI
[INFO] Blueprint - Main application
[INFO] Blueprint - Plugins parent
[INFO] Blueprint - Plugin layout factory
[INFO] Blueprint - Plugin: Postgres
[INFO] Blueprint - Plugin: Google Cloud
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Blueprint Parent 0.1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Blueprint - Common components 0.1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- kotlin-maven-plugin:1.2.61:kapt (kapt) @ blueprint-common ---
[INFO] Applied plugin: 'spring'
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:resources (default-resources) @ blueprint-common ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/bolcom/blueprint/419156997/blueprint-common/src/main/resources
[INFO] skip non existing resourceDirectory /root/workspace/bolcom/blueprint/419156997/blueprint-common/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ blueprint-common ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- kotlin-maven-plugin:1.2.61:compile (compile) @ blueprint-common ---
[INFO] Applied plugin: 'spring'
[INFO] 
[INFO] --- kotlin-maven-plugin:1.2.61:test-kapt (test-kapt) @ blueprint-common ---
[WARNING] No sources found skipping Kotlin compile
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:testResources (default-testResources) @ blueprint-common ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/bolcom/blueprint/419156997/blueprint-common/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ blueprint-common ---
[INFO] No sources to compile
[INFO] 
[INFO] --- kotlin-maven-plugin:1.2.61:test-compile (test-compile) @ blueprint-common ---
[WARNING] No sources found skipping Kotlin compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.21.0:test (default-test) @ blueprint-common ---
[INFO] No tests to run.
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Blueprint - Server components 0.1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- kotlin-maven-plugin:1.2.61:kapt (kapt) @ blueprint-server ---
[INFO] Applied plugin: 'spring'
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:resources (default-resources) @ blueprint-server ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 0 resource
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ blueprint-server ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- kotlin-maven-plugin:1.2.61:compile (compile) @ blueprint-server ---
[INFO] Applied plugin: 'spring'
[INFO] 
[INFO] --- kotlin-maven-plugin:1.2.61:test-kapt (test-kapt) @ blueprint-server ---
[INFO] Applied plugin: 'spring'
[INFO] 
[INFO] --- maven-resources-plugin:3.0.2:testResources (default-testResources) @ blueprint-server ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 2 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ blueprint-server ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- kotlin-maven-plugin:1.2.61:test-compile (test-compile) @ blueprint-server ---
[INFO] Applied plugin: 'spring'
[INFO] 
[INFO] --- maven-surefire-plugin:2.21.0:test (default-test) @ blueprint-server ---
[INFO] Downloading: https://jcenter.bintray.com/org/apache/maven/surefire/surefire-junit4/2.21.0/surefire-junit4-2.21.0.pom
[INFO] Downloaded: https://jcenter.bintray.com/org/apache/maven/surefire/surefire-junit4/2.21.0/surefire-junit4-2.21.0.pom (4 KB at 7.9 KB/sec)
[INFO] Downloading: https://jcenter.bintray.com/org/apache/maven/surefire/surefire-providers/2.21.0/surefire-providers-2.21.0.pom
[INFO] Downloaded: https://jcenter.bintray.com/org/apache/maven/surefire/surefire-providers/2.21.0/surefire-providers-2.21.0.pom (3 KB at 29.2 KB/sec)
[INFO] Downloading: https://jcenter.bintray.com/org/apache/maven/surefire/surefire-junit4/2.21.0/surefire-junit4-2.21.0.jar
[INFO] Downloaded: https://jcenter.bintray.com/org/apache/maven/surefire/surefire-junit4/2.21.0/surefire-junit4-2.21.0.jar (83 KB at 84.8 KB/sec)
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running com.bol.blueprint.api.v1.ArtifactResourceTest
2018-08-22 14:56:29.582  INFO 343 --- [           main] c.b.b.api.v1.ArtifactResourceTest        : Starting ArtifactResourceTest on cyclone1 with PID 343 (started by root in /root/workspace/bolcom/blueprint/419156997/blueprint-server)
2018-08-22 14:56:29.588 DEBUG 343 --- [           main] c.b.b.api.v1.ArtifactResourceTest        : Running with Spring Boot v2.0.4.RELEASE, Spring v5.0.8.RELEASE
2018-08-22 14:56:29.591  INFO 343 --- [           main] c.b.b.api.v1.ArtifactResourceTest        : No active profile set, falling back to default profiles: default
2018-08-22 14:56:32.280  INFO 343 --- [           main] c.b.b.api.v1.ArtifactResourceTest        : Started ArtifactResourceTest in 3.159 seconds (JVM running for 4.404)
2018-08-22 14:56:32.424 DEBUG 343 --- [in @coroutine#1] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.421Z), key=NamespaceKey(namespace=ns1))
2018-08-22 14:56:32.424 DEBUG 343 --- [in @coroutine#1] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.424Z), key=NamespaceKey(namespace=ns2))
2018-08-22 14:56:32.426 DEBUG 343 --- [in @coroutine#1] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.426Z), key=SchemaKey(namespace=ns1, schema=schema1), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:32.426 DEBUG 343 --- [in @coroutine#1] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.426Z), key=SchemaKey(namespace=ns1, schema=schema2), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:32.427 DEBUG 343 --- [in @coroutine#1] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.427Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.0))
2018-08-22 14:56:32.428 DEBUG 343 --- [in @coroutine#1] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.428Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.1))
2018-08-22 14:56:32.430 DEBUG 343 --- [in @coroutine#1] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.430Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact1.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact1.json, data=[1, 2, 3])
2018-08-22 14:56:32.431 DEBUG 343 --- [in @coroutine#1] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.431Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact2.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact2.json, data=[1, 2, 3])
2018-08-22 14:56:32.734 DEBUG 343 --- [in @coroutine#2] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.734Z), key=NamespaceKey(namespace=ns1))
2018-08-22 14:56:32.735 DEBUG 343 --- [in @coroutine#2] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.735Z), key=NamespaceKey(namespace=ns2))
2018-08-22 14:56:32.735 DEBUG 343 --- [in @coroutine#2] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.735Z), key=SchemaKey(namespace=ns1, schema=schema1), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:32.735 DEBUG 343 --- [in @coroutine#2] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.735Z), key=SchemaKey(namespace=ns1, schema=schema2), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:32.736 DEBUG 343 --- [in @coroutine#2] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.736Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.0))
2018-08-22 14:56:32.736 DEBUG 343 --- [in @coroutine#2] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.736Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.1))
2018-08-22 14:56:32.736 DEBUG 343 --- [in @coroutine#2] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.736Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact1.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact1.json, data=[1, 2, 3])
2018-08-22 14:56:32.737 DEBUG 343 --- [in @coroutine#2] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.736Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact2.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact2.json, data=[1, 2, 3])
2018-08-22 14:56:32.769 DEBUG 343 --- [in @coroutine#4] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.769Z), key=NamespaceKey(namespace=ns1))
2018-08-22 14:56:32.770 DEBUG 343 --- [in @coroutine#4] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.770Z), key=NamespaceKey(namespace=ns2))
2018-08-22 14:56:32.770 DEBUG 343 --- [in @coroutine#4] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.770Z), key=SchemaKey(namespace=ns1, schema=schema1), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:32.770 DEBUG 343 --- [in @coroutine#4] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.770Z), key=SchemaKey(namespace=ns1, schema=schema2), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:32.771 DEBUG 343 --- [in @coroutine#4] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.771Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.0))
2018-08-22 14:56:32.771 DEBUG 343 --- [in @coroutine#4] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.771Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.1))
2018-08-22 14:56:32.771 DEBUG 343 --- [in @coroutine#4] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.771Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact1.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact1.json, data=[1, 2, 3])
2018-08-22 14:56:32.771 DEBUG 343 --- [in @coroutine#4] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.771Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact2.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact2.json, data=[1, 2, 3])
2018-08-22 14:56:32.781 DEBUG 343 --- [in @coroutine#5] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.781Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=uploaded.json), mediaType=JSON, path=ns1/schema1/1.0.0/uploaded.json, data=[5, 6, 7])
2018-08-22 14:56:32.794 DEBUG 343 --- [in @coroutine#7] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.794Z), key=NamespaceKey(namespace=ns1))
2018-08-22 14:56:32.794 DEBUG 343 --- [in @coroutine#7] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.794Z), key=NamespaceKey(namespace=ns2))
2018-08-22 14:56:32.794 DEBUG 343 --- [in @coroutine#7] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.794Z), key=SchemaKey(namespace=ns1, schema=schema1), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:32.794 DEBUG 343 --- [in @coroutine#7] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.794Z), key=SchemaKey(namespace=ns1, schema=schema2), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:32.794 DEBUG 343 --- [in @coroutine#7] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.794Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.0))
2018-08-22 14:56:32.795 DEBUG 343 --- [in @coroutine#7] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.795Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.1))
2018-08-22 14:56:32.795 DEBUG 343 --- [in @coroutine#7] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.795Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact1.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact1.json, data=[1, 2, 3])
2018-08-22 14:56:32.795 DEBUG 343 --- [in @coroutine#7] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.795Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact2.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact2.json, data=[1, 2, 3])
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.592 s - in com.bol.blueprint.api.v1.ArtifactResourceTest
[INFO] Running com.bol.blueprint.api.v1.NamespaceResourceTest
2018-08-22 14:56:32.821 DEBUG 343 --- [in @coroutine#9] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.821Z), key=NamespaceKey(namespace=ns1))
2018-08-22 14:56:32.822 DEBUG 343 --- [in @coroutine#9] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.822Z), key=NamespaceKey(namespace=ns2))
2018-08-22 14:56:32.822 DEBUG 343 --- [in @coroutine#9] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.822Z), key=SchemaKey(namespace=ns1, schema=schema1), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:32.822 DEBUG 343 --- [in @coroutine#9] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.822Z), key=SchemaKey(namespace=ns1, schema=schema2), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:32.822 DEBUG 343 --- [in @coroutine#9] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.822Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.0))
2018-08-22 14:56:32.823 DEBUG 343 --- [in @coroutine#9] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.823Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.1))
2018-08-22 14:56:32.823 DEBUG 343 --- [in @coroutine#9] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.823Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact1.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact1.json, data=[1, 2, 3])
2018-08-22 14:56:32.823 DEBUG 343 --- [in @coroutine#9] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.823Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact2.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact2.json, data=[1, 2, 3])
2018-08-22 14:56:32.948 DEBUG 343 --- [n @coroutine#10] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.947Z), key=NamespaceKey(namespace=foo))
2018-08-22 14:56:32.978 DEBUG 343 --- [n @coroutine#11] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.978Z), key=NamespaceKey(namespace=ns1))
2018-08-22 14:56:32.978 DEBUG 343 --- [n @coroutine#11] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.978Z), key=NamespaceKey(namespace=ns2))
2018-08-22 14:56:32.978 DEBUG 343 --- [n @coroutine#11] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.978Z), key=SchemaKey(namespace=ns1, schema=schema1), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:32.978 DEBUG 343 --- [n @coroutine#11] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.978Z), key=SchemaKey(namespace=ns1, schema=schema2), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:32.978 DEBUG 343 --- [n @coroutine#11] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.978Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.0))
2018-08-22 14:56:32.979 DEBUG 343 --- [n @coroutine#11] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.979Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.1))
2018-08-22 14:56:32.979 DEBUG 343 --- [n @coroutine#11] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.979Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact1.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact1.json, data=[1, 2, 3])
2018-08-22 14:56:32.979 DEBUG 343 --- [n @coroutine#11] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.979Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact2.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact2.json, data=[1, 2, 3])
2018-08-22 14:56:32.986 DEBUG 343 --- [n @coroutine#12] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.986Z), key=NamespaceKey(namespace=ns1))
2018-08-22 14:56:32.986 DEBUG 343 --- [n @coroutine#12] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.986Z), key=NamespaceKey(namespace=ns2))
2018-08-22 14:56:32.986 DEBUG 343 --- [n @coroutine#12] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.986Z), key=SchemaKey(namespace=ns1, schema=schema1), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:32.987 DEBUG 343 --- [n @coroutine#12] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.987Z), key=SchemaKey(namespace=ns1, schema=schema2), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:32.987 DEBUG 343 --- [n @coroutine#12] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.987Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.0))
2018-08-22 14:56:32.987 DEBUG 343 --- [n @coroutine#12] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.987Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.1))
2018-08-22 14:56:32.987 DEBUG 343 --- [n @coroutine#12] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.987Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact1.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact1.json, data=[1, 2, 3])
2018-08-22 14:56:32.987 DEBUG 343 --- [n @coroutine#12] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:32.987Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact2.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact2.json, data=[1, 2, 3])

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/namespaces/ns1/schemas/schema1/versions/1.0.0/artifacts
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.ArtifactResource
           Method = public com.bol.blueprint.api.v1.ArtifactResource$Responses$Multiple com.bol.blueprint.api.v1.ArtifactResource.get(java.lang.String,java.lang.String,java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"artifacts":[{"filename":"artifact1.json"},{"filename":"artifact2.json"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/namespaces/ns1/schemas/schema1/versions/1.0.0/artifacts/artifact1.json
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.ArtifactResource
           Method = public org.springframework.core.io.Resource com.bol.blueprint.api.v1.ArtifactResource.getOne(java.lang.String,java.lang.String,java.lang.String,java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Accept-Ranges=[bytes], Content-Type=[application/json], Content-Length=[3]}
     Content type = application/json
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/v1/namespaces/ns1/schemas/schema1/versions/1.0.0/artifacts
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.ArtifactResource
           Method = public void com.bol.blueprint.api.v1.ArtifactResource.upload(java.lang.String,java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/namespaces/ns1/schemas/schema1/versions/1.0.0/artifacts/uploaded.json
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.ArtifactResource
           Method = public org.springframework.core.io.Resource com.bol.blueprint.api.v1.ArtifactResource.getOne(java.lang.String,java.lang.String,java.lang.String,java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Accept-Ranges=[bytes], Content-Type=[application/json], Content-Length=[3]}
     Content type = application/json
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/namespaces/ns1/schemas/schema1/versions/1.0.0/artifacts/unknown
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.ArtifactResource
           Method = public org.springframework.core.io.Resource com.bol.blueprint.api.v1.ArtifactResource.getOne(java.lang.String,java.lang.String,java.lang.String,java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.bol.blueprint.api.v1.ResourceNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/v1/namespaces
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"name":"foo"}
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.NamespaceResource
           Method = public org.springframework.http.ResponseEntity<java.lang.Void> com.bol.blueprint.api.v1.NamespaceResource.create(com.bol.blueprint.api.v1.NamespaceResource$Requests$NewNamespace)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/namespaces/foo
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.NamespaceResource
           Method = public com.bol.blueprint.api.v1.NamespaceResource$Responses$Detail com.bol.blueprint.api.v1.NamespaceResource.getOne(java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"name":"foo"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/namespaces/ns1
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.NamespaceResource
           Method = public com.bol.blueprint.api.v1.NamespaceResource$Responses$Detail com.bol.blueprint.api.v1.NamespaceResource.getOne(java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"name":"ns1"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/namespaces
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.NamespaceResource
           Method = public com.bol.blueprint.api.v1.NamespaceResource$Responses$Multiple com.bol.blueprint.api.v1.NamespaceResource.get()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"namespaces":[{"name":"ns1"},{"name":"ns2"},{"name":"foo"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2018-08-22 14:56:33.035 DEBUG 343 --- [n @coroutine#13] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.035Z), key=NamespaceKey(namespace=ns1))
2018-08-22 14:56:33.036 DEBUG 343 --- [n @coroutine#13] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.035Z), key=NamespaceKey(namespace=ns2))
2018-08-22 14:56:33.036 DEBUG 343 --- [n @coroutine#13] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.036Z), key=SchemaKey(namespace=ns1, schema=schema1), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.036 DEBUG 343 --- [n @coroutine#13] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.036Z), key=SchemaKey(namespace=ns1, schema=schema2), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.036 DEBUG 343 --- [n @coroutine#13] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.036Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.0))
2018-08-22 14:56:33.037 DEBUG 343 --- [n @coroutine#13] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.037Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.1))
2018-08-22 14:56:33.037 DEBUG 343 --- [n @coroutine#13] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.037Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact1.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact1.json, data=[1, 2, 3])
2018-08-22 14:56:33.037 DEBUG 343 --- [n @coroutine#13] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.037Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact2.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact2.json, data=[1, 2, 3])
[ERROR] Tests run: 4, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.165 s <<< FAILURE! - in com.bol.blueprint.api.v1.NamespaceResourceTest
[ERROR] Can get namespaces(com.bol.blueprint.api.v1.NamespaceResourceTest)  Time elapsed: 0.049 s  <<< FAILURE!
java.lang.AssertionError: 

Expecting:
  <[Single(name=ns1), Single(name=ns2), Single(name=foo)]>
to contain exactly (and in same order):
  <[Single(name=ns1), Single(name=ns2)]>
but some elements were not expected:
  <[Single(name=foo)]>

	at com.bol.blueprint.api.v1.NamespaceResourceTest.Can get namespaces(NamespaceResourceTest.kt:41)

[INFO] Running com.bol.blueprint.api.v1.SchemaResourceTest
2018-08-22 14:56:33.061 DEBUG 343 --- [n @coroutine#14] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.061Z), key=NamespaceKey(namespace=ns1))
2018-08-22 14:56:33.061 DEBUG 343 --- [n @coroutine#14] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.061Z), key=NamespaceKey(namespace=ns2))
2018-08-22 14:56:33.061 DEBUG 343 --- [n @coroutine#14] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.061Z), key=SchemaKey(namespace=ns1, schema=schema1), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.061 DEBUG 343 --- [n @coroutine#14] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.061Z), key=SchemaKey(namespace=ns1, schema=schema2), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.061 DEBUG 343 --- [n @coroutine#14] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.061Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.0))
2018-08-22 14:56:33.062 DEBUG 343 --- [n @coroutine#14] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.062Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.1))
2018-08-22 14:56:33.062 DEBUG 343 --- [n @coroutine#14] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.062Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact1.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact1.json, data=[1, 2, 3])
2018-08-22 14:56:33.062 DEBUG 343 --- [n @coroutine#14] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.062Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact2.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact2.json, data=[1, 2, 3])
2018-08-22 14:56:33.082 DEBUG 343 --- [n @coroutine#15] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.081Z), key=NamespaceKey(namespace=ns1))
2018-08-22 14:56:33.082 DEBUG 343 --- [n @coroutine#15] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.082Z), key=NamespaceKey(namespace=ns2))
2018-08-22 14:56:33.082 DEBUG 343 --- [n @coroutine#15] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.082Z), key=SchemaKey(namespace=ns1, schema=schema1), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.082 DEBUG 343 --- [n @coroutine#15] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.082Z), key=SchemaKey(namespace=ns1, schema=schema2), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.082 DEBUG 343 --- [n @coroutine#15] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.082Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.0))
2018-08-22 14:56:33.083 DEBUG 343 --- [n @coroutine#15] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.083Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.1))
2018-08-22 14:56:33.083 DEBUG 343 --- [n @coroutine#15] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.083Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact1.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact1.json, data=[1, 2, 3])
2018-08-22 14:56:33.083 DEBUG 343 --- [n @coroutine#15] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.083Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact2.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact2.json, data=[1, 2, 3])
2018-08-22 14:56:33.094 DEBUG 343 --- [n @coroutine#16] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.094Z), key=SchemaKey(namespace=ns1, schema=foo), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.101 DEBUG 343 --- [n @coroutine#17] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.101Z), key=NamespaceKey(namespace=ns1))
2018-08-22 14:56:33.102 DEBUG 343 --- [n @coroutine#17] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.102Z), key=NamespaceKey(namespace=ns2))
2018-08-22 14:56:33.102 DEBUG 343 --- [n @coroutine#17] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.102Z), key=SchemaKey(namespace=ns1, schema=schema1), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.102 DEBUG 343 --- [n @coroutine#17] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.102Z), key=SchemaKey(namespace=ns1, schema=schema2), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.102 DEBUG 343 --- [n @coroutine#17] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.102Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.0))
2018-08-22 14:56:33.102 DEBUG 343 --- [n @coroutine#17] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.102Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.1))
2018-08-22 14:56:33.103 DEBUG 343 --- [n @coroutine#17] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.103Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact1.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact1.json, data=[1, 2, 3])
2018-08-22 14:56:33.103 DEBUG 343 --- [n @coroutine#17] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.103Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact2.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact2.json, data=[1, 2, 3])
2018-08-22 14:56:33.108 DEBUG 343 --- [n @coroutine#18] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.108Z), key=NamespaceKey(namespace=ns1))
2018-08-22 14:56:33.109 DEBUG 343 --- [n @coroutine#18] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.109Z), key=NamespaceKey(namespace=ns2))
2018-08-22 14:56:33.110 DEBUG 343 --- [n @coroutine#18] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.110Z), key=SchemaKey(namespace=ns1, schema=schema1), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.111 DEBUG 343 --- [n @coroutine#18] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.110Z), key=SchemaKey(namespace=ns1, schema=schema2), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.111 DEBUG 343 --- [n @coroutine#18] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.111Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.0))
2018-08-22 14:56:33.111 DEBUG 343 --- [n @coroutine#18] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.111Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.1))
2018-08-22 14:56:33.111 DEBUG 343 --- [n @coroutine#18] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.111Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact1.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact1.json, data=[1, 2, 3])
2018-08-22 14:56:33.112 DEBUG 343 --- [n @coroutine#18] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.112Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact2.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact2.json, data=[1, 2, 3])

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/namespaces/ns1/schemas/schema1/versions/1.0.0/artifacts
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.ArtifactResource
           Method = public com.bol.blueprint.api.v1.ArtifactResource$Responses$Multiple com.bol.blueprint.api.v1.ArtifactResource.get(java.lang.String,java.lang.String,java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"artifacts":[{"filename":"artifact1.json"},{"filename":"artifact2.json"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/namespaces/ns1/schemas/schema1/versions/1.0.0/artifacts/artifact1.json
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.ArtifactResource
           Method = public org.springframework.core.io.Resource com.bol.blueprint.api.v1.ArtifactResource.getOne(java.lang.String,java.lang.String,java.lang.String,java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Accept-Ranges=[bytes], Content-Type=[application/json], Content-Length=[3]}
     Content type = application/json
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/v1/namespaces/ns1/schemas/schema1/versions/1.0.0/artifacts
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.ArtifactResource
           Method = public void com.bol.blueprint.api.v1.ArtifactResource.upload(java.lang.String,java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/namespaces/ns1/schemas/schema1/versions/1.0.0/artifacts/uploaded.json
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.ArtifactResource
           Method = public org.springframework.core.io.Resource com.bol.blueprint.api.v1.ArtifactResource.getOne(java.lang.String,java.lang.String,java.lang.String,java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Accept-Ranges=[bytes], Content-Type=[application/json], Content-Length=[3]}
     Content type = application/json
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/namespaces/ns1/schemas/schema1/versions/1.0.0/artifacts/unknown
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.ArtifactResource
           Method = public org.springframework.core.io.Resource com.bol.blueprint.api.v1.ArtifactResource.getOne(java.lang.String,java.lang.String,java.lang.String,java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.bol.blueprint.api.v1.ResourceNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/v1/namespaces
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"name":"foo"}
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.NamespaceResource
           Method = public org.springframework.http.ResponseEntity<java.lang.Void> com.bol.blueprint.api.v1.NamespaceResource.create(com.bol.blueprint.api.v1.NamespaceResource$Requests$NewNamespace)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/namespaces/foo
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.NamespaceResource
           Method = public com.bol.blueprint.api.v1.NamespaceResource$Responses$Detail com.bol.blueprint.api.v1.NamespaceResource.getOne(java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"name":"foo"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/namespaces/ns1
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.NamespaceResource
           Method = public com.bol.blueprint.api.v1.NamespaceResource$Responses$Detail com.bol.blueprint.api.v1.NamespaceResource.getOne(java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"name":"ns1"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/namespaces
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.NamespaceResource
           Method = public com.bol.blueprint.api.v1.NamespaceResource$Responses$Multiple com.bol.blueprint.api.v1.NamespaceResource.get()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"namespaces":[{"name":"ns1"},{"name":"ns2"},{"name":"foo"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/namespaces/unknown
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.NamespaceResource
           Method = public com.bol.blueprint.api.v1.NamespaceResource$Responses$Detail com.bol.blueprint.api.v1.NamespaceResource.getOne(java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.bol.blueprint.api.v1.ResourceNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/namespaces/ns1/schemas/schema1
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.SchemaResource
           Method = public com.bol.blueprint.api.v1.SchemaResource$Responses$Detail com.bol.blueprint.api.v1.SchemaResource.getOne(java.lang.String,java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"name":"schema1"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/v1/namespaces/ns1/schemas
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"name":"foo"}
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.SchemaResource
           Method = public org.springframework.http.ResponseEntity<java.lang.Void> com.bol.blueprint.api.v1.SchemaResource.create(java.lang.String,com.bol.blueprint.api.v1.SchemaResource$Requests$NewSchema)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/namespaces/ns1/schemas/foo
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.SchemaResource
           Method = public com.bol.blueprint.api.v1.SchemaResource$Responses$Detail com.bol.blueprint.api.v1.SchemaResource.getOne(java.lang.String,java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"name":"foo"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/namespaces/ns1/schemas/unknown
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.SchemaResource
           Method = public com.bol.blueprint.api.v1.SchemaResource$Responses$Detail com.bol.blueprint.api.v1.SchemaResource.getOne(java.lang.String,java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.bol.blueprint.api.v1.ResourceNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/namespaces/ns1/schemas
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.bol.blueprint.api.v1.SchemaResource
           Method = public com.bol.blueprint.api.v1.SchemaResource$Responses$Multiple com.bol.blueprint.api.v1.SchemaResource.get(java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"schemas":[{"name":"schema1"},{"name":"schema2"},{"name":"foo"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
[ERROR] Tests run: 4, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.114 s <<< FAILURE! - in com.bol.blueprint.api.v1.SchemaResourceTest
[ERROR] Can get schemas(com.bol.blueprint.api.v1.SchemaResourceTest)  Time elapsed: 0.063 s  <<< FAILURE!
java.lang.AssertionError: 

Expecting:
  <[Single(name=schema1), Single(name=schema2), Single(name=foo)]>
to contain exactly (and in same order):
  <[Single(name=schema1), Single(name=schema2)]>
but some elements were not expected:
  <[Single(name=foo)]>

	at com.bol.blueprint.api.v1.SchemaResourceTest.Can get schemas(SchemaResourceTest.kt:41)

[INFO] Running com.bol.blueprint.api.v1.VersionResourceTest
2018-08-22 14:56:33.158 DEBUG 343 --- [n @coroutine#19] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.158Z), key=NamespaceKey(namespace=ns1))
2018-08-22 14:56:33.158 DEBUG 343 --- [n @coroutine#19] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.158Z), key=NamespaceKey(namespace=ns2))
2018-08-22 14:56:33.158 DEBUG 343 --- [n @coroutine#19] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.158Z), key=SchemaKey(namespace=ns1, schema=schema1), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.159 DEBUG 343 --- [n @coroutine#19] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.159Z), key=SchemaKey(namespace=ns1, schema=schema2), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.159 DEBUG 343 --- [n @coroutine#19] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.159Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.0))
2018-08-22 14:56:33.159 DEBUG 343 --- [n @coroutine#19] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.159Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.1))
2018-08-22 14:56:33.159 DEBUG 343 --- [n @coroutine#19] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.159Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact1.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact1.json, data=[1, 2, 3])
2018-08-22 14:56:33.159 DEBUG 343 --- [n @coroutine#19] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.159Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact2.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact2.json, data=[1, 2, 3])
2018-08-22 14:56:33.204 DEBUG 343 --- [n @coroutine#20] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.204Z), key=NamespaceKey(namespace=ns1))
2018-08-22 14:56:33.205 DEBUG 343 --- [n @coroutine#20] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.205Z), key=NamespaceKey(namespace=ns2))
2018-08-22 14:56:33.205 DEBUG 343 --- [n @coroutine#20] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.205Z), key=SchemaKey(namespace=ns1, schema=schema1), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.205 DEBUG 343 --- [n @coroutine#20] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.205Z), key=SchemaKey(namespace=ns1, schema=schema2), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.205 DEBUG 343 --- [n @coroutine#20] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.205Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.0))
2018-08-22 14:56:33.205 DEBUG 343 --- [n @coroutine#20] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.205Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.1))
2018-08-22 14:56:33.206 DEBUG 343 --- [n @coroutine#20] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.206Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact1.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact1.json, data=[1, 2, 3])
2018-08-22 14:56:33.206 DEBUG 343 --- [n @coroutine#20] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.206Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact2.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact2.json, data=[1, 2, 3])
2018-08-22 14:56:33.230 DEBUG 343 --- [n @coroutine#21] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.230Z), key=NamespaceKey(namespace=ns1))
2018-08-22 14:56:33.230 DEBUG 343 --- [n @coroutine#21] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.230Z), key=NamespaceKey(namespace=ns2))
2018-08-22 14:56:33.230 DEBUG 343 --- [n @coroutine#21] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.230Z), key=SchemaKey(namespace=ns1, schema=schema1), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.231 DEBUG 343 --- [n @coroutine#21] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.231Z), key=SchemaKey(namespace=ns1, schema=schema2), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.231 DEBUG 343 --- [n @coroutine#21] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.231Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.0))
2018-08-22 14:56:33.231 DEBUG 343 --- [n @coroutine#21] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.231Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.1))
2018-08-22 14:56:33.231 DEBUG 343 --- [n @coroutine#21] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.231Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact1.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact1.json, data=[1, 2, 3])
2018-08-22 14:56:33.231 DEBUG 343 --- [n @coroutine#21] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.231Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact2.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact2.json, data=[1, 2, 3])
2018-08-22 14:56:33.245 DEBUG 343 --- [n @coroutine#22] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.245Z), key=VersionKey(namespace=ns1, schema=schema1, version=0.1.2))
2018-08-22 14:56:33.255 DEBUG 343 --- [n @coroutine#23] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.255Z), key=NamespaceKey(namespace=ns1))
2018-08-22 14:56:33.255 DEBUG 343 --- [n @coroutine#23] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.255Z), key=NamespaceKey(namespace=ns2))
2018-08-22 14:56:33.255 DEBUG 343 --- [n @coroutine#23] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.255Z), key=SchemaKey(namespace=ns1, schema=schema1), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.256 DEBUG 343 --- [n @coroutine#23] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.256Z), key=SchemaKey(namespace=ns1, schema=schema2), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.256 DEBUG 343 --- [n @coroutine#23] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.256Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.0))
2018-08-22 14:56:33.256 DEBUG 343 --- [n @coroutine#23] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.256Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.1))
2018-08-22 14:56:33.256 DEBUG 343 --- [n @coroutine#23] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.256Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact1.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact1.json, data=[1, 2, 3])
2018-08-22 14:56:33.257 DEBUG 343 --- [n @coroutine#23] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.257Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact2.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact2.json, data=[1, 2, 3])
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.085 s - in com.bol.blueprint.api.v1.VersionResourceTest
[INFO] Running com.bol.blueprint.store.InMemoryBlobStoreTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.bol.blueprint.store.InMemoryBlobStoreTest
[INFO] Running com.bol.blueprint.store.InMemoryEventStoreTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.bol.blueprint.store.InMemoryEventStoreTest
[INFO] Running com.bol.blueprint.domain.DomainTest
2018-08-22 14:56:33.278 DEBUG 343 --- [n @coroutine#27] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.278Z), key=NamespaceKey(namespace=ns1))
2018-08-22 14:56:33.278 DEBUG 343 --- [n @coroutine#27] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.278Z), key=NamespaceKey(namespace=ns2))
2018-08-22 14:56:33.278 DEBUG 343 --- [n @coroutine#27] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.278Z), key=SchemaKey(namespace=ns1, schema=schema1), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.278 DEBUG 343 --- [n @coroutine#27] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.278Z), key=SchemaKey(namespace=ns1, schema=schema2), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.278 DEBUG 343 --- [n @coroutine#27] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.278Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.0))
2018-08-22 14:56:33.279 DEBUG 343 --- [n @coroutine#27] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.278Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.1))
2018-08-22 14:56:33.279 DEBUG 343 --- [n @coroutine#27] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.279Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact1.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact1.json, data=[1, 2, 3])
2018-08-22 14:56:33.279 DEBUG 343 --- [n @coroutine#27] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.279Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact2.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact2.json, data=[1, 2, 3])
2018-08-22 14:56:33.281 DEBUG 343 --- [n @coroutine#29] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.281Z), key=NamespaceKey(namespace=ns1))
2018-08-22 14:56:33.281 DEBUG 343 --- [n @coroutine#29] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.281Z), key=NamespaceKey(namespace=ns2))
2018-08-22 14:56:33.281 DEBUG 343 --- [n @coroutine#29] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.281Z), key=SchemaKey(namespace=ns1, schema=schema1), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.281 DEBUG 343 --- [n @coroutine#29] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.281Z), key=SchemaKey(namespace=ns1, schema=schema2), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.282 DEBUG 343 --- [n @coroutine#29] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.282Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.0))
2018-08-22 14:56:33.282 DEBUG 343 --- [n @coroutine#29] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.282Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.1))
2018-08-22 14:56:33.282 DEBUG 343 --- [n @coroutine#29] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.282Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact1.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact1.json, data=[1, 2, 3])
2018-08-22 14:56:33.282 DEBUG 343 --- [n @coroutine#29] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.282Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact2.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact2.json, data=[1, 2, 3])
2018-08-22 14:56:33.283 DEBUG 343 --- [n @coroutine#30] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.283Z), key=NamespaceKey(namespace=ns1))
2018-08-22 14:56:33.283 DEBUG 343 --- [n @coroutine#30] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.283Z), key=NamespaceKey(namespace=ns2))
2018-08-22 14:56:33.283 DEBUG 343 --- [n @coroutine#30] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.283Z), key=SchemaKey(namespace=ns1, schema=schema1), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.284 DEBUG 343 --- [n @coroutine#30] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.283Z), key=SchemaKey(namespace=ns1, schema=schema2), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.284 DEBUG 343 --- [n @coroutine#30] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.284Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.0))
2018-08-22 14:56:33.284 DEBUG 343 --- [n @coroutine#30] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.284Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.1))
2018-08-22 14:56:33.284 DEBUG 343 --- [n @coroutine#30] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.284Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact1.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact1.json, data=[1, 2, 3])
2018-08-22 14:56:33.284 DEBUG 343 --- [n @coroutine#30] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.284Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact2.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact2.json, data=[1, 2, 3])
2018-08-22 14:56:33.285 DEBUG 343 --- [n @coroutine#31] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.285Z), key=NamespaceKey(namespace=ns1))
2018-08-22 14:56:33.285 DEBUG 343 --- [n @coroutine#31] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.285Z), key=NamespaceKey(namespace=ns2))
2018-08-22 14:56:33.286 DEBUG 343 --- [n @coroutine#31] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.286Z), key=SchemaKey(namespace=ns1, schema=schema1), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.286 DEBUG 343 --- [n @coroutine#31] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.286Z), key=SchemaKey(namespace=ns1, schema=schema2), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.286 DEBUG 343 --- [n @coroutine#31] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.286Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.0))
2018-08-22 14:56:33.286 DEBUG 343 --- [n @coroutine#31] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.286Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.1))
2018-08-22 14:56:33.286 DEBUG 343 --- [n @coroutine#31] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.286Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact1.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact1.json, data=[1, 2, 3])
2018-08-22 14:56:33.286 DEBUG 343 --- [n @coroutine#31] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.286Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact2.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact2.json, data=[1, 2, 3])
2018-08-22 14:56:33.288 DEBUG 343 --- [n @coroutine#32] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.285Z), key=NamespaceKey(namespace=ns1))
2018-08-22 14:56:33.289 DEBUG 343 --- [n @coroutine#32] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.285Z), key=NamespaceKey(namespace=ns2))
2018-08-22 14:56:33.289 DEBUG 343 --- [n @coroutine#32] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.286Z), key=SchemaKey(namespace=ns1, schema=schema1), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.289 DEBUG 343 --- [n @coroutine#32] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.286Z), key=SchemaKey(namespace=ns1, schema=schema2), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.289 DEBUG 343 --- [n @coroutine#32] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.286Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.0))
2018-08-22 14:56:33.289 DEBUG 343 --- [n @coroutine#32] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.286Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.1))
2018-08-22 14:56:33.289 DEBUG 343 --- [n @coroutine#32] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.286Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact1.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact1.json, data=[1, 2, 3])
2018-08-22 14:56:33.289 DEBUG 343 --- [n @coroutine#32] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.286Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact2.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact2.json, data=[1, 2, 3])
2018-08-22 14:56:33.290 DEBUG 343 --- [n @coroutine#33] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.290Z), key=NamespaceKey(namespace=ns1))
2018-08-22 14:56:33.291 DEBUG 343 --- [n @coroutine#33] com.bol.blueprint.queries.Query          : Received: NamespaceCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.290Z), key=NamespaceKey(namespace=ns2))
2018-08-22 14:56:33.291 DEBUG 343 --- [n @coroutine#33] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.291Z), key=SchemaKey(namespace=ns1, schema=schema1), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.291 DEBUG 343 --- [n @coroutine#33] com.bol.blueprint.queries.Query          : Received: SchemaCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.291Z), key=SchemaKey(namespace=ns1, schema=schema2), schemaType=SchemaType(versioningScheme=Semantic))
2018-08-22 14:56:33.291 DEBUG 343 --- [n @coroutine#33] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.291Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.0))
2018-08-22 14:56:33.291 DEBUG 343 --- [n @coroutine#33] com.bol.blueprint.queries.Query          : Received: VersionCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.291Z), key=VersionKey(namespace=ns1, schema=schema1, version=1.0.1))
2018-08-22 14:56:33.291 DEBUG 343 --- [n @coroutine#33] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.291Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact1.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact1.json, data=[1, 2, 3])
2018-08-22 14:56:33.291 DEBUG 343 --- [n @coroutine#33] com.bol.blueprint.queries.Query          : Received: ArtifactCreatedEvent(metadata=Metadata(timestamp=2018-08-22T12:56:33.291Z), key=ArtifactKey(namespace=ns1, schema=schema1, version=1.0.0, filename=artifact2.json), mediaType=JSON, path=ns1/schema1/1.0.0/artifact2.json, data=[1, 2, 3])
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 s - in com.bol.blueprint.domain.DomainTest
[INFO] 
[INFO] Results:
[INFO] 
[ERROR] Failures: 
[ERROR]   NamespaceResourceTest.Can get namespaces:41 
Expecting:
  <[Single(name=ns1), Single(name=ns2), Single(name=foo)]>
to contain exactly (and in same order):
  <[Single(name=ns1), Single(name=ns2)]>
but some elements were not expected:
  <[Single(name=foo)]>

[ERROR]   SchemaResourceTest.Can get schemas:41 
Expecting:
  <[Single(name=schema1), Single(name=schema2), Single(name=foo)]>
to contain exactly (and in same order):
  <[Single(name=schema1), Single(name=schema2)]>
but some elements were not expected:
  <[Single(name=foo)]>

[INFO] 
[ERROR] Tests run: 24, Failures: 2, Errors: 0, Skipped: 0
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] Blueprint Parent ................................... SUCCESS [  0.003 s]
[INFO] Blueprint - Common components ...................... SUCCESS [  8.653 s]
[INFO] Blueprint - Server components ...................... FAILURE [ 18.691 s]
[INFO] Blueprint - Angular UI ............................. SKIPPED
[INFO] Blueprint - Main application ....................... SKIPPED
[INFO] Blueprint - Plugins parent ......................... SKIPPED
[INFO] Blueprint - Plugin layout factory .................. SKIPPED
[INFO] Blueprint - Plugin: Postgres ....................... SKIPPED
[INFO] Blueprint - Plugin: Google Cloud ................... SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 29.130 s
[INFO] Finished at: 2018-08-22T14:56:33+02:00
[INFO] Final Memory: 103M/994M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.21.0:test (default-test) on project blueprint-server: There are test failures.
[ERROR] 
[ERROR] Please refer to /root/workspace/bolcom/blueprint/419156997/blueprint-server/target/surefire-reports for the individual test results.
[ERROR] Please refer to dump files (if any exist) [date]-jvmRun[N].dump, [date].dumpstream and [date]-jvmRun[N].dumpstream.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <goals> -rf :blueprint-server
