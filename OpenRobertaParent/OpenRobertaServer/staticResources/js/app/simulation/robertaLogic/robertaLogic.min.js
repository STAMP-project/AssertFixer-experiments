function Timer(){this.startTime=0,this.currentTime=0,this.time=0}function Motor(){this.power=0,this.stopped=!1,this.startRotations=0,this.currentRotations=0,this.rotations=0}function createConstant(a,b){var c={};return c[EXPR]=a,c[VALUE]=b,c}function createBinaryExpr(a,b,c){var d={};return d[EXPR]=BINARY,d[OP]=a,d[LEFT]=b,d[RIGHT]=c,d}function createVarReference(a,b){var c={};return c[EXPR]=VAR,c[TYPE]=a,c[NAME]=b,c}function createVarDeclaration(a,b,c){var d={};return d[STMT]=VAR_DECLARATION,d[TYPE]=a,d[NAME]=b,d[VALUE]=c,d}function createAssignStmt(a,b){var c={};return c[STMT]=ASSIGN_STMT,c[NAME]=a,c[EXPR]=b,c}function createRepeatStmt(a,b,c){if(!Array.isArray(c))throw"Expression List is not List!";var d={};return d[MODE]=a,d[STMT]=REPEAT_STMT,d[EXPR]=b,d[STMT_LIST]=c,d}function createDriveAction(a,b,c){var d={};return d[STMT]=DRIVE_ACTION,d[SPEED]=a,d[DRIVE_DIRECTION]=b,d[DISTANCE]=c,d}function createMotorOnAction(a,b,c){var d={};return d[STMT]=MOTOR_ON_ACTION,d[SPEED]=a,d[MOTOR_SIDE]=b,d[MOTOR_DURATION]=c,d}function createDuration(a,b){var c={};return c[MOTOR_MOVE_MODE]=a,c[MOTOR_DURATION_VALUE]=b,c}function createTurnAction(a,b,c){var d={};return d[STMT]=TURN_ACTION,d[SPEED]=a,d[TURN_DIRECTION]=b,d[ANGLE]=c,d}function createTurnLight(a,b){var c={};return c[STMT]=TURN_LIGHT,c[COLOR]=a,c[MODE]=b,c}function createResetLight(){var a={};return a[STMT]=RESET_LIGHT,a}function createStopDrive(){var a={};return a[STMT]=STOP_DRIVE,a}function createStopMotorAction(a){var b={};return b[STMT]=MOTOR_STOP,b[MOTOR_SIDE]=a,b}function createGetSample(a,b){var c={};return c[EXPR]=GET_SAMPLE,c[SENSOR_TYPE]=a,c[SENSOR_MODE]=b,c}function createIfStmt(a,b,c){if(!Array.isArray(a))throw"Expression List is not List!";if(!Array.isArray(b))throw"Then List is not List!";return result={},result[STMT]=IF_STMT,result[EXPR_LIST]=a,result[THEN_LIST]=b,result[ELSE_STMTS]=c,result}function createWaitStmt(a){if(!Array.isArray(a))throw"Statement List is not a List!";var b={};return b[STMT]=WAIT_STMT,b[STATEMENTS]=a,b}function createWaitTimeStmt(a){var b={};return b[STMT]=WAIT_TIME_STMT,b[TIME]=a,b}function initProgram(a){MEM.clear(),PROGRAM_SIMULATION.setNextStatement(!0),PROGRAM_SIMULATION.setWait(!1),PROGRAM_SIMULATION.set(a),LIGHT.setMode(OFF),ACTORS.resetMotorsSpeed()}function setSensorActorValues(a){SENSORS.setTouchSensor(a.touch),SENSORS.setColor(a.color),SENSORS.setLight(a.light),SENSORS.setUltrasonicSensor(a.ultrasonic),ACTORS.getLeftMotor().setCurrentRotations(a.tacho[0]),ACTORS.getRightMotor().setCurrentRotations(a.tacho[1]),PROGRAM_SIMULATION.getTimer().setCurrentTime(a.time)}function step(a){if(setSensorActorValues(a),PROGRAM_SIMULATION.isNextStatement()){var b=PROGRAM_SIMULATION.getRemove();switch(b.stmt){case ASSIGN_STMT:var c=evalExpr(b.expr);MEM.assign(b.name,c);break;case VAR_DECLARATION:var c=evalExpr(b.value);MEM.decl(b.name,c);break;case IF_STMT:evalIf(b),step(a);break;case REPEAT_STMT:evalRepeat(b),step(a);break;case DRIVE_ACTION:evalDriveAction(a,b);break;case TURN_ACTION:evalTurnAction(a,b);break;case MOTOR_ON_ACTION:evalMotorOnAction(a,b);break;case WAIT_STMT:evalWaitStmt(b);break;case WAIT_TIME_STMT:evalWaitTime(a,b);break;case TURN_LIGHT:LIGHT.setColor(b.color),LIGHT.setMode(b.mode);break;case STOP_DRIVE:ACTORS.setSpeed(0);break;case MOTOR_STOP:evalMotorStopAction(b);break;case RESET_LIGHT:LIGHT.setColor(GREEN),LIGHT.setMode(OFF);break;default:throw"Invalid Statement "+b.stmt+"!"}}ACTORS.calculateCoveredDistance(),PROGRAM_SIMULATION.handleWaitTimer()}function evalWaitTime(a,b){PROGRAM_SIMULATION.setIsRunningTimer(!0),PROGRAM_SIMULATION.resetTimer(a.time),PROGRAM_SIMULATION.setTimer(evalExpr(b.time))}function evalTurnAction(a,b){ACTORS.resetTachoMotors(a.tacho[0],a.tacho[1]),ACTORS.setAngleSpeed(evalExpr(b.speed),b[TURN_DIRECTION]),setAngleToTurn(b)}function evalDriveAction(a,b){ACTORS.resetTachoMotors(a.tacho[0],a.tacho[1]),ACTORS.setSpeed(evalExpr(b.speed),b[DRIVE_DIRECTION]),setDistanceToDrive(b)}function evalMotorOnAction(a,b){b[MOTOR_SIDE]==MOTOR_LEFT?(ACTORS.resetLeftTachoMotor(a.tacho[0]),ACTORS.setLeftMotorSpeed(evalExpr(b.speed))):(ACTORS.resetRightTachoMotor(a.tacho[1]),ACTORS.setRightMotorSpeed(evalExpr(b.speed))),setDurationToCover(b)}function evalMotorStopAction(a){a[MOTOR_SIDE]==MOTOR_LEFT?ACTORS.setLeftMotorSpeed(0):ACTORS.setRightMotorSpeed(0)}function setAngleToTurn(a){void 0!=a.angle&&ACTORS.clculateAngleToCover(evalExpr(a.angle))}function setDistanceToDrive(a){void 0!=a.distance&&ACTORS.setDistanceToCover(evalExpr(a.distance))}function setDurationToCover(a){void 0!=a[MOTOR_DURATION]&&ACTORS.setMotorDuration(a[MOTOR_DURATION].motorMoveMode,evalExpr(a[MOTOR_DURATION].motorDurationValue),a[MOTOR_SIDE])}function evalRepeat(a){switch(a.mode){case TIMES:for(var b=0;b<evalExpr(a.expr);b++)PROGRAM_SIMULATION.prepend(a.stmtList);break;default:var c=evalExpr(a.expr);c&&(PROGRAM_SIMULATION.prepend([a]),PROGRAM_SIMULATION.prepend(a.stmtList))}}function evalIf(a){for(var b,c,d=0;d<a.exprList.length;d++)if(c=evalExpr(a.exprList[d])){b=a.thenList[d],PROGRAM_SIMULATION.isWait()&&(PROGRAM_SIMULATION.getRemove(),PROGRAM_SIMULATION.setWait(!1));break;}return void 0!=b&&b!=[]||PROGRAM_SIMULATION.isWait()||(b=a.elseStmts),PROGRAM_SIMULATION.prepend(b),c}function evalWaitStmt(a){PROGRAM_SIMULATION.setWait(!0),PROGRAM_SIMULATION.prepend([a]);for(var b=0;b<a.statements.length;b++){var c=evalIf(a.statements[b]);if(c)break;}}function evalExpr(a){switch(a.expr){case NUM_CONST:case BOOL_CONST:case COLOR_CONST:return a.value;case VAR:return MEM.get(a.name);case BINARY:return evalBinary(a.op,a.left,a.right);case GET_SAMPLE:return evalSensor(a[SENSOR_TYPE],a[SENSOR_MODE]);default:throw"Invalid Expression Type!"}}function evalSensor(a,b){switch(a){case TOUCH:return SENSORS.isPressed();case ULTRASONIC:return SENSORS.getUltrasonicSensor();case RED:return SENSORS.getLight();case COLOUR:return SENSORS.getColor();default:throw"Invalid Sensor!"}}function evalBinary(a,b,c){var f,d=evalExpr(b),e=evalExpr(c);switch(a){case ADD:f=d+e;break;case MINUS:f=d-e;break;case MULTIPLY:f=d*e;break;case DIVIDE:f=d/e;break;case POWER:f=Math.pow(d,e);break;case LT:f=e>d;break;case GT:f=d>e;break;case EQ:f=d==e;break;case NEQ:f=d!=e;break;case GTE:f=d>=e;break;case LTE:f=e>=d;break;case OR:f=d||e;break;case AND:f=d&&e;break;default:throw"Invalid Binary Operator"}return f}const EXPR="expr",VALUE="value",OP="op",LEFT="left",RIGHT="right",BINARY="Binary",VAR="Var",TYPE="type",NAME="name",STMT="stmt",VAR_DECLARATION="VarDeclaration",ASSIGN_STMT="AssignStmt",REPEAT_STMT="RepeatStmt",IF_STMT="IfStatement",WAIT_STMT="WaitStmt",WAIT_TIME_STMT="WaitTimeSTMT",TIME="time",STMT_LIST="stmtList",DRIVE_ACTION="DriveAction",TURN_LIGHT="turnLight",TURN_ACTION="TurnAction",STOP_DRIVE="stopDrive",DRIVE_DIRECTION="driveDirection",TURN_DIRECTION="turnDirection",SPEED="speed",DISTANCE="distance",GET_SAMPLE="GetSample",SENSOR_TYPE="sensorType",SENSOR_MODE="sensorMode",THEN_LIST="thenList",ELSE_STMTS="elseStmts",EXPR_LIST="exprList",STATEMENTS="statements",TOUCH="TOUCH",ULTRASONIC="ULTRASONIC",NUM_CONST="NumConst",BOOL_CONST="BoolConst",NUMERIC="Numeric",ADD="ADD",MINUS="MINUS",POWER="POWER",DIVIDE="DIVIDE",MULTIPLY="MULTIPLY",LT="LT",GT="GT",EQ="EQ",NEQ="NEQ",GTE="GTE",LTE="LTE",OR="OR",AND="AND",FOREWARD="FOREWARD",BACKWARD="BACKWARD",WHILE="WHILE",FOREVER="FOREVER",ANGLE="angle",COLOR="color",COLOUR="COLOUR",MODE="mode",GREEN="GREEN",RED="RED",ORANGE="ORANGE",ON="ON",OFF="OFF",FLASH="FLASH",DOUBLE_FLASH="DOUBLE_FLASH",RESET_LIGHT="resetLight",TIMES="TIMES",COLOR_CONST="COLOR_CONST",PILOT="pilot",MOTOR_LEFT="C",MOTOR_RIGHT="B",MOTOR_SIDE="motorSide",MOTOR_ON_ACTION="motorOnAction",MOTOR_STOP="motorStop",MOTOR_MOVE_MODE="motorMoveMode",MOTOR_DURATION="motorDuration",MOTOR_DURATION_VALUE="motorDurationValue",ROTATIONS="ROTATIONS",DEGREE="DEGREE",COLOR_ENUM={NONE:0,BLACK:1,BLUE:2,GREEN:3,YELLOW:4,RED:5,WHITE:6,BROWN:7},TRACKWIDTH=40,TURN_RATIO=TRACKWIDTH/3/2.8,WHEEL_DIAMETER=5.6,MAXDIAG=2500,MAXPOWER=.35*3,ENC=360/(3*Math.PI*WHEEL_DIAMETER),MAX_WIDTH=2e3,MAX_HEIGHT=1e3,WAVE_LENGTH=60;Timer.prototype.setStartTime=function(a){this.startTime=a},Timer.prototype.getStartTime=function(){return this.startTime},Timer.prototype.setCurrentTime=function(a){this.currentTime=Math.abs(a-this.startTime)},Timer.prototype.getCurrentTime=function(){return this.currentTime},Timer.prototype.setTime=function(a){this.time=a},Timer.prototype.getTime=function(){return this.time},Motor.prototype.getPower=function(){return this.power},Motor.prototype.setPower=function(a){this.power=a},Motor.prototype.isStopped=function(){return this.stopped},Motor.prototype.setStopped=function(a){this.stopped=a},Motor.prototype.getCurrentRotations=function(){return this.currentRotations},Motor.prototype.setCurrentRotations=function(a){this.currentRotations=Math.abs(a/360-this.startRotations)},Motor.prototype.getRotations=function(){return this.rotations},Motor.prototype.setRotations=function(a){this.rotations=a};var SENSORS=function(){function e(){return a}function f(b){a=b}function g(){return b}function h(a){b=a}function i(a){c=a}function j(){return c}function k(a){d=a}function l(){return d}var a=!1,b=0,c=void 0,d=0;return{isPressed:e,setTouchSensor:f,getUltrasonicSensor:g,setUltrasonicSensor:h,setColor:i,getColor:j,setLight:k,getLight:l}}(),ACTORS=function(){function e(){return c}function f(){return d}function g(a,b){b!=FOREWARD&&(a=-a),c.setPower(a),d.setPower(a)}function h(a,b){b==LEFT?(c.setPower(-a),d.setPower(a)):(c.setPower(a),d.setPower(-a))}function i(a){c.startRotations=a/360,c.currentRotations=0}function j(a){d.startRotations=a/360,d.currentRotations=0}function k(a,b){i(a),j(b)}function l(){var b=e().getCurrentRotations()>e().getRotations(),c=f().getCurrentRotations()>f().getRotations();if(a)switch(driveMode){case PILOT:b&&c&&(e().setPower(0),f().setPower(0),a=!1,PROGRAM_SIMULATION.setNextStatement(!0));break;case MOTOR_LEFT:b&&(e().setPower(0),a=!1,PROGRAM_SIMULATION.setNextStatement(!0));break;case MOTOR_RIGHT:c&&(f().setPower(0),a=!1,PROGRAM_SIMULATION.setNextStatement(!0))}}function m(b){extraRotation=TURN_RATIO*(b/720),e().setRotations(extraRotation),f().setRotations(extraRotation),a=!0,driveMode=PILOT,PROGRAM_SIMULATION.setNextStatement(!1)}function n(b){var e=b/17.584;c.setRotations(e),d.setRotations(e),a=!0,driveMode=PILOT,PROGRAM_SIMULATION.setNextStatement(!1)}function o(a){c.setPower(a)}function p(a){d.setPower(a)}function q(b,e,f){var g=e;b==DEGREE&&(g=e/360),f==MOTOR_LEFT?(c.setRotations(g),driveMode=MOTOR_LEFT):(d.setRotations(g),driveMode=MOTOR_RIGHT),a=!0,PROGRAM_SIMULATION.setNextStatement(!1)}function r(){c.setPower(0),d.setPower(0)}function s(){return JSON.stringify([a,c,d])}var a=!1,c=new Motor,d=new Motor;return{getLeftMotor:e,getRightMotor:f,setSpeed:g,setAngleSpeed:h,resetLeftTachoMotor:i,resetRightTachoMotor:j,resetTachoMotors:k,calculateCoveredDistance:l,clculateAngleToCover:m,setDistanceToCover:n,setLeftMotorSpeed:o,setRightMotorSpeed:p,setMotorDuration:q,resetMotorsSpeed:r,toString:s}}(),MEM=function(){function b(b,c){if(void 0!=a[b])throw"Variable "+b+" is defined!";if(void 0==c)throw"Variable "+b+" not initialized!";a[b]=c}function c(b,c){if(void 0==a[b])throw"Variable "+b+" is undefined!";if(void 0==c)throw"Variable "+b+" not assigned!";a[b]=c}function d(b){if(void 0==a[b])throw"Variable "+b+" is undefined!";return a[b]}function e(){a={}}function f(){return JSON.stringify(a)}var a={};return{decl:b,assign:c,get:d,clear:e,toString:f}}(),PROGRAM_SIMULATION=function(){function f(b){a=b}function g(){return 0===a.length&&m()}function h(){if(0===a.length)throw"Program is empty!";return a[0]}function i(){if(0===a.length)throw"Program is empty!";var b=a[0];return a=a.slice(1,a.length),b}function j(b){void 0!=b&&(a=b.concat(a))}function k(){return c}function l(a){c=a}function m(){return b}function n(a){d.setStartTime(a),d.currentTime=0}function o(a){PROGRAM_SIMULATION.setNextStatement(!1),p().setTime(a/1e3)}function p(){return d}function q(){e&&p().getCurrentTime()>p().getTime()&&(e=!1,PROGRAM_SIMULATION.setNextStatement(!0))}function r(a){b=a}function s(){return e}function t(a){e=a}function u(){return JSON.stringify([a,d])}var a=[],b=!0,c=!1,d=new Timer,e=!1;return{set:f,isTerminated:g,get:h,getRemove:i,prepend:j,isWait:k,setWait:l,isNextStatement:m,setNextStatement:r,isRunningTimer:s,setIsRunningTimer:t,resetTimer:n,getTimer:p,setTimer:o,handleWaitTimer:q,toString:u}}(),LIGHT=function(){function c(b){a=b}function d(a){b=a}function e(){return a}function f(){return b}function g(){return JSON.stringify([a,b])}var a="",b=OFF;return{setColor:c,setMode:d,getColor:e,getMode:f,toString:g}}();