<?xml version="1.0" encoding="UTF-8"?>

<!--
   Copyright 2014-2017 Linagora, Université Joseph Fourier, Floralis

   The present code is developed in the scope of the joint LINAGORA -
   Université Joseph Fourier - Floralis research program and is designated
   as a "Result" pursuant to the terms and conditions of the LINAGORA
   - Université Joseph Fourier - Floralis research program. Each copyright
   holder of Results enumerated here above fully & independently holds complete
   ownership of the complete Intellectual Property rights applicable to the whole
   of said Results, and may freely exploit it in any manner which does not infringe
   the moral rights of the other copyright holders.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>net.roboconf</groupId>
		<artifactId>roboconf-platform-parent</artifactId>
		<version>0.10-SNAPSHOT</version>
		<relativePath>../../pom.xml</relativePath>
	</parent>

    <groupId>net.roboconf</groupId>
	<artifactId>roboconf-karaf-dist-dm</artifactId>
	<name>Roboconf :: Karaf Distribution for the DM</name>
	<packaging>karaf-assembly</packaging>

	<dependencies>
		
		<!-- scope:compile => installed -->
		<dependency>
			<groupId>org.apache.karaf.features</groupId>
			<artifactId>framework</artifactId>
			<version>${karaf.version}</version>
			<type>kar</type>
		</dependency>
		
		<!-- scope:runtime => referenced and ready to be installed -->
		<dependency>
			<groupId>net.roboconf</groupId>
			<artifactId>roboconf-karaf-feature-dm</artifactId>
			<version>${project.version}</version>
			<classifier>features</classifier>
			<type>xml</type>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
			<groupId>org.apache.karaf.features</groupId>
			<artifactId>standard</artifactId>
			<version>${karaf.version}</version>
			<classifier>features</classifier>
			<type>xml</type>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
			<groupId>org.ops4j.pax.jdbc</groupId>
			<artifactId>pax-jdbc-features</artifactId>
			<version>${pax.jdbc.version}</version>
			<classifier>features</classifier>
			<type>xml</type>
			<scope>runtime</scope>
		</dependency>
		
		<!-- 
			Test dependencies => Neither installed, nor referenced by Karaf.
		 	To generate the configuration file for the preferences.
		-->
		<dependency>
			<groupId>net.roboconf</groupId>
			<artifactId>roboconf-karaf-prepare</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>net.roboconf</groupId>
			<artifactId>roboconf-core</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>net.roboconf</groupId>
			<artifactId>roboconf-dm</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		
		<!-- 
			Deal with Bouncy Castle as a security provider.
			See Karaf's documentation about security providers (they must be put apart).
			Required to authenticate SSH clients in Karaf.
		 -->
		
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcpkix-jdk15on</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15on</artifactId>
			<scope>test</scope>
		</dependency>
		
	</dependencies>

	<build>
		<sourceDirectory>src/build/java</sourceDirectory>
	
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*</include>
					<include>**/*.properties</include>
				</includes>
				<excludes>
					<exclude>etc/branding.properties</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>etc/branding.properties</include>
				</includes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.karaf.tooling</groupId>
				<artifactId>karaf-maven-plugin</artifactId>
				<configuration>
					<bootFeatures>
						<feature>shell-compat</feature>
						<feature>feature</feature>
						<feature>instance</feature>
						<feature>log</feature>
						<feature>aries-blueprint</feature>
						<feature>ssh</feature>
						<feature>bundle</feature>
						<feature>config</feature>
						<feature>war</feature>
						<feature>wrap</feature>
						<feature>ipojo-all</feature>
						<feature>jersey-1.x</feature>
						<feature>ssh4j-for-roboconf</feature>
						<feature>roboconf-dm</feature>
						<feature>webconsole</feature>
						<feature>ipojo-webconsole</feature>
						<feature>pax-jdbc-config</feature>
						<feature>pax-jdbc-h2</feature>
					</bootFeatures>
				</configuration>
			</plugin>
			
			<!-- Disable Coveralls for the Karaf distributions -->
			<plugin>
				<groupId>org.eluder.coveralls</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<configuration>
					<coveralls.skip>true</coveralls.skip>
				</configuration>
			</plugin>

			<!-- Disable Checkstyle on Karaf distribution resources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<configuration>
					<includeResources>false</includeResources>
				</configuration>
			</plugin>

			<!-- ANT stuff -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
				
					<!-- Generate the content of the "net.roboconf.dm.preferences" file -->
					<execution>
						<id>generate-roboconf-preferences</id>
						<phase>compile</phase>
						<configuration>
							<failOnError>true</failOnError>
							<target>
							
								<!-- Create the class path for the execution -->
								<path id="maven_classpath">
									<pathelement path="${net.roboconf:roboconf-core:jar}" />
									<pathelement path="${net.roboconf:roboconf-dm:jar}" />
									<pathelement path="${net.roboconf:roboconf-karaf-prepare:jar}" />
								</path>
								
								<!-- Covert the class path as a property -->
								<pathconvert property="classpath_prop" refid="maven_classpath" />

								<!-- Prepare and start the execution -->								
								<property name="project_location" value="${project.build.directory}" />
								<java classname="net.roboconf.karaf.prepare.GeneratePreferencesFile" classpath="${classpath_prop}" failonerror="true">
									<arg value="${project_location}/assembly/etc/net.roboconf.dm.preferences.cfg" />
								</java>
							</target>	
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>

					<!-- Register Bouncy Castle as a security provider (for the embedded target and other SSH use cases) -->
					<execution>
						<id>register-security-providers</id>
						<phase>compile</phase>
						<configuration>
							<failOnError>true</failOnError>
							<target>			
								<property name="project_location" value="${project.build.directory}" />
								
								<!-- Keep this formatting (!!!) -->
								<echo append="true" file="${project_location}/assembly/etc/config.properties">
${line.separator}#
# Register a security provider
#
org.apache.karaf.security.providers = org.bouncycastle.jce.provider.BouncyCastleProvider${line.separator}
</echo>
								
								<!-- Keep this formatting (!!!) -->
								<replace file="${project_location}/assembly/etc/config.properties">
									<replacetoken><![CDATA[    org.apache.karaf.jaas.boot, \
    org.apache.karaf.jaas.boot.principal]]></replacetoken>
									<replacevalue><![CDATA[    org.apache.karaf.jaas.boot, \
    org.apache.karaf.jaas.boot.principal, \
    org.bouncycastle.*]]></replacevalue>
								</replace>

							</target>	
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					
				</executions>
			</plugin>
			
			<!-- Copy Bouncy Castle in the distribution -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<phase>compile</phase>
						<configuration>
							<includeGroupIds>org.bouncycastle</includeGroupIds>
							<outputDirectory>${project.build.directory}/assembly/lib/ext</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!-- To solve issues with dependency convergence -->	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			
			<dependency>
				<groupId>jline</groupId>
				<artifactId>jline</artifactId>
				<version>2.14.1</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

</project>
