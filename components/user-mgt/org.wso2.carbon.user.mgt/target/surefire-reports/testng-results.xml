<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="31" passed="31">
  <reporter-output>
  </reporter-output>
  <suite name="identity-base-test-suite" duration-ms="2981" started-at="2018-06-04T12:29:31Z" finished-at="2018-06-04T12:29:34Z">
    <groups>
    </groups>
    <test name="identity-base-test-all" duration-ms="2981" started-at="2018-06-04T12:29:31Z" finished-at="2018-06-04T12:29:34Z">
      <class name="org.wso2.carbon.user.mgt.bulkImport.JsonConverterTest">
        <test-method status="PASS" signature="init()[pri:0, instance:org.wso2.carbon.user.mgt.bulkImport.JsonConverterTest@d2291de]" name="init" is-config="true" duration-ms="18" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testConvertCSVToJSON()[pri:0, instance:org.wso2.carbon.user.mgt.bulkImport.JsonConverterTest@d2291de]" name="testConvertCSVToJSON" duration-ms="76" started-at="2018-06-04T14:29:34Z" description="Test the conversion of CSV format to JSON." finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertCSVToJSON -->
        <test-method status="PASS" signature="testConvertXLSToJSON()[pri:0, instance:org.wso2.carbon.user.mgt.bulkImport.JsonConverterTest@d2291de]" name="testConvertXLSToJSON" duration-ms="634" started-at="2018-06-04T14:29:34Z" description="Test the conversion of XLS to JSON." finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertXLSToJSON -->
      </class> <!-- org.wso2.carbon.user.mgt.bulkImport.JsonConverterTest -->
      <class name="org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest">
        <test-method status="PASS" signature="init()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="init" is-config="true" duration-ms="0" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="initMethod()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="initMethod" is-config="true" duration-ms="98" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMethod -->
        <test-method status="PASS" signature="listenerDisabledTestCase()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="listenerDisabledTestCase" duration-ms="27" started-at="2018-06-04T14:29:34Z" description="This method tests the behaviour of the audit logger, when it is disabled" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listenerDisabledTestCase -->
        <test-method status="PASS" signature="initMethod()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="initMethod" is-config="true" duration-ms="1" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testOnAddRoleFailure()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="testOnAddRoleFailure" duration-ms="7" started-at="2018-06-04T14:29:34Z" description="This method tests whether relevant audit log message is getting printed correctly when there is an add role failure" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnAddRoleFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="initMethod()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="initMethod" is-config="true" duration-ms="1" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMethod -->
        <test-method status="PASS" signature="testOnAddUserFailure()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="testOnAddUserFailure" duration-ms="1" started-at="2018-06-04T14:29:34Z" description="This method tests whether relevant audit log message is getting printed correctly when there is failure while adding user" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnAddUserFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="initMethod()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="initMethod" is-config="true" duration-ms="1" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMethod -->
        <test-method status="PASS" signature="testOnDeleteRoleFailure()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="testOnDeleteRoleFailure" duration-ms="1" started-at="2018-06-04T14:29:34Z" description="This method tests whether relevant audit message is getting printed correctly when there is failure while deleting role" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnDeleteRoleFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="initMethod()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="initMethod" is-config="true" duration-ms="1" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMethod -->
        <test-method status="PASS" signature="testOnDeleteUserClaimValueFailure()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="testOnDeleteUserClaimValueFailure" duration-ms="1" started-at="2018-06-04T14:29:34Z" description="This method tests whether relevant audit message is getting printed correctly when there is failure while deleting user claim value" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnDeleteUserClaimValueFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="initMethod()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="initMethod" is-config="true" duration-ms="1" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMethod -->
        <test-method status="PASS" signature="testOnDeleteUserClaimValuesFailure()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="testOnDeleteUserClaimValuesFailure" duration-ms="2" started-at="2018-06-04T14:29:34Z" description="This method tests whether relevant audit message is getting printed correctly when there is failure while deleting user claim values" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnDeleteUserClaimValuesFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="initMethod()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="initMethod" is-config="true" duration-ms="1" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMethod -->
        <test-method status="PASS" signature="testOnDeleteUserFailure()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="testOnDeleteUserFailure" duration-ms="2" started-at="2018-06-04T14:29:34Z" description="This method tests whether relevant audit log message is getting printed correctly when there is a failure while deleting a user" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnDeleteUserFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="initMethod()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="initMethod" is-config="true" duration-ms="1" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMethod -->
        <test-method status="PASS" signature="testOnGetUserClaimValueFailure()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="testOnGetUserClaimValueFailure" duration-ms="1" started-at="2018-06-04T14:29:34Z" description="This method tests whether relevant audit message is getting printed correctly when there is failure while getting claim value of a user." finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnGetUserClaimValueFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="initMethod()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="initMethod" is-config="true" duration-ms="1" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMethod -->
        <test-method status="PASS" signature="testOnGetUserClaimValuesFailure()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="testOnGetUserClaimValuesFailure" duration-ms="1" started-at="2018-06-04T14:29:34Z" description="This method tests whether relevant audit message is getting printed correctly when there is failure while getting claim values of a user." finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnGetUserClaimValuesFailure -->
        <test-method status="PASS" signature="initMethod()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="initMethod" is-config="true" duration-ms="1" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testOnGetUserListFailure()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="testOnGetUserListFailure" duration-ms="1" started-at="2018-06-04T14:29:34Z" description="This method tests whether relevant audit message is getting printed correctly when there is failure while getting user list." finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnGetUserListFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="initMethod()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="initMethod" is-config="true" duration-ms="0" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMethod -->
        <test-method status="PASS" signature="testOnSetUserClaimValueFailure()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="testOnSetUserClaimValueFailure" duration-ms="1" started-at="2018-06-04T14:29:34Z" description="This method tests whether relevant audit message is getting printed correctly when there is failure while setting user claim value." finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnSetUserClaimValueFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="initMethod()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="initMethod" is-config="true" duration-ms="1" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMethod -->
        <test-method status="PASS" signature="testOnSetUserClaimValuesFailure()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="testOnSetUserClaimValuesFailure" duration-ms="0" started-at="2018-06-04T14:29:34Z" description="This method tests whether relevant audit message is getting printed correctly when there is failure while setting claim values for a user." finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnSetUserClaimValuesFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="initMethod()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="initMethod" is-config="true" duration-ms="0" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMethod -->
        <test-method status="PASS" signature="testOnUpdateCredentialByAdminFailure()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="testOnUpdateCredentialByAdminFailure" duration-ms="1" started-at="2018-06-04T14:29:34Z" description="This method tests whether relevant audit log message is getting printed correctly when there is a failure while updating credential by admin" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnUpdateCredentialByAdminFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="initMethod()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="initMethod" is-config="true" duration-ms="1" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMethod -->
        <test-method status="PASS" signature="testOnUpdateCredentialFailure()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="testOnUpdateCredentialFailure" duration-ms="1" started-at="2018-06-04T14:29:34Z" description="This method tests whether relevant audit log message is getting printed correctly when there is a failure while updating credential" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnUpdateCredentialFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="initMethod()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="initMethod" is-config="true" duration-ms="1" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMethod -->
        <test-method status="PASS" signature="testOnUpdateRoleListOfUserFailure()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="testOnUpdateRoleListOfUserFailure" duration-ms="0" started-at="2018-06-04T14:29:34Z" description="This method tests whether relevant audit message is getting printed correctly when there is failure while updating role list of user." finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnUpdateRoleListOfUserFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="initMethod()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="initMethod" is-config="true" duration-ms="1" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMethod -->
        <test-method status="PASS" signature="testOnUpdateRoleNameFailure()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="testOnUpdateRoleNameFailure" duration-ms="2" started-at="2018-06-04T14:29:34Z" description="This method tests whether relevant audit log message is getting printed correctly" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnUpdateRoleNameFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="initMethod()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="initMethod" is-config="true" duration-ms="1" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMethod -->
        <test-method status="PASS" signature="testOnUpdateUserListOfRoleFailure()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="testOnUpdateUserListOfRoleFailure" duration-ms="1" started-at="2018-06-04T14:29:34Z" description="This method tests whether relevant audit message is getting printed correctly when there is failure while updating user list of role." finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnUpdateUserListOfRoleFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest@51c8f62c]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLoggerTest -->
      <class name="org.wso2.carbon.user.mgt.UserRealmProxyTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.wso2.carbon.user.mgt.UserRealmProxyTest@78a515e4]" name="setUp" is-config="true" duration-ms="1705" started-at="2018-06-04T14:29:31Z" finished-at="2018-06-04T14:29:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddUser()[pri:0, instance:org.wso2.carbon.user.mgt.UserRealmProxyTest@78a515e4]" name="testAddUser" duration-ms="165" started-at="2018-06-04T14:29:33Z" finished-at="2018-06-04T14:29:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUser -->
        <test-method status="PASS" signature="testChangePassword()[pri:0, instance:org.wso2.carbon.user.mgt.UserRealmProxyTest@78a515e4]" name="testChangePassword" duration-ms="2" started-at="2018-06-04T14:29:33Z" finished-at="2018-06-04T14:29:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChangePassword -->
        <test-method status="PASS" signature="testChangePasswordSameUserNoOldPasword()[pri:0, instance:org.wso2.carbon.user.mgt.UserRealmProxyTest@78a515e4]" name="testChangePasswordSameUserNoOldPasword" duration-ms="7" started-at="2018-06-04T14:29:33Z" finished-at="2018-06-04T14:29:33Z">
          <exception class="org.wso2.carbon.user.core.UserStoreException">
            <message>
              <![CDATA[org.wso2.carbon.user.mgt.common.UserAdminException: An attempt to change password with out providing old password]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.wso2.carbon.user.core.UserStoreException: org.wso2.carbon.user.mgt.common.UserAdminException: An attempt to change password with out providing old password
	at org.wso2.carbon.user.mgt.UserRealmProxyTest.testChangePasswordSameUserNoOldPasword(UserRealmProxyTest.java:186)
Caused by: org.wso2.carbon.user.mgt.common.UserAdminException: An attempt to change password with out providing old password
	at org.wso2.carbon.user.mgt.UserRealmProxy.changePassword(UserRealmProxy.java:832)
	at org.wso2.carbon.user.mgt.UserRealmProxyTest.testChangePasswordSameUserNoOldPasword(UserRealmProxyTest.java:183)
Caused by: org.wso2.carbon.user.core.UserStoreException: An attempt to change password with out providing old password
	at org.wso2.carbon.user.mgt.UserRealmProxy.changePassword(UserRealmProxy.java:796)
	... 1 more
]]>
            </full-stacktrace>
          </exception> <!-- org.wso2.carbon.user.core.UserStoreException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChangePasswordSameUserNoOldPasword -->
        <test-method status="PASS" signature="testDeleteUser()[pri:0, instance:org.wso2.carbon.user.mgt.UserRealmProxyTest@78a515e4]" name="testDeleteUser" duration-ms="27" started-at="2018-06-04T14:29:33Z" finished-at="2018-06-04T14:29:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteUser -->
        <test-method status="PASS" signature="testGetAllRolesNames()[pri:0, instance:org.wso2.carbon.user.mgt.UserRealmProxyTest@78a515e4]" name="testGetAllRolesNames" duration-ms="53" started-at="2018-06-04T14:29:33Z" finished-at="2018-06-04T14:29:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllRolesNames -->
        <test-method status="PASS" signature="testGetAllSharedRoleNames()[pri:0, instance:org.wso2.carbon.user.mgt.UserRealmProxyTest@78a515e4]" name="testGetAllSharedRoleNames" duration-ms="3" started-at="2018-06-04T14:29:33Z" finished-at="2018-06-04T14:29:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllSharedRoleNames -->
        <test-method status="PASS" signature="testGetRolesOfUser(int, int)[pri:0, instance:org.wso2.carbon.user.mgt.UserRealmProxyTest@78a515e4]" name="testGetRolesOfUser" duration-ms="3" started-at="2018-06-04T14:29:33Z" data-provider="userListCount" finished-at="2018-06-04T14:29:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRolesOfUser -->
        <test-method status="PASS" signature="testGetRolesOfUser(int, int)[pri:0, instance:org.wso2.carbon.user.mgt.UserRealmProxyTest@78a515e4]" name="testGetRolesOfUser" duration-ms="2" started-at="2018-06-04T14:29:33Z" data-provider="userListCount" finished-at="2018-06-04T14:29:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRolesOfUser -->
        <test-method status="PASS" signature="testGetUserRealmInfo()[pri:0, instance:org.wso2.carbon.user.mgt.UserRealmProxyTest@78a515e4]" name="testGetUserRealmInfo" duration-ms="38" started-at="2018-06-04T14:29:33Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUserRealmInfo -->
        <test-method status="PASS" signature="testListUsers()[pri:0, instance:org.wso2.carbon.user.mgt.UserRealmProxyTest@78a515e4]" name="testListUsers" duration-ms="1" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListUsers -->
        <test-method status="PASS" signature="testListUsers1()[pri:0, instance:org.wso2.carbon.user.mgt.UserRealmProxyTest@78a515e4]" name="testListUsers1" duration-ms="2" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListUsers1 -->
        <test-method status="PASS" signature="testUpdateUsersOfRole()[pri:0, instance:org.wso2.carbon.user.mgt.UserRealmProxyTest@78a515e4]" name="testUpdateUsersOfRole" duration-ms="3" started-at="2018-06-04T14:29:34Z" finished-at="2018-06-04T14:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateUsersOfRole -->
      </class> <!-- org.wso2.carbon.user.mgt.UserRealmProxyTest -->
    </test> <!-- identity-base-test-all -->
  </suite> <!-- identity-base-test-suite -->
</testng-results>
