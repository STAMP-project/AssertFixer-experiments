<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="43" passed="43">
  <reporter-output>
  </reporter-output>
  <suite name="identity-base-test-suite" duration-ms="4096" started-at="2018-06-04T12:27:08Z" finished-at="2018-06-04T12:27:12Z">
    <groups>
    </groups>
    <test name="identity-base-test-all" duration-ms="4096" started-at="2018-06-04T12:27:08Z" finished-at="2018-06-04T12:27:12Z">
      <class name="org.wso2.carbon.identity.base.IdentityBaseUtilTest">
        <test-method status="PASS" signature="testGetDefaultRampartConfig()[pri:0, instance:org.wso2.carbon.identity.base.IdentityBaseUtilTest_$$_jvste67_0@65f5cae3]" name="testGetDefaultRampartConfig" duration-ms="2499" started-at="2018-06-04T14:27:09Z" finished-at="2018-06-04T14:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDefaultRampartConfig -->
      </class> <!-- org.wso2.carbon.identity.base.IdentityBaseUtilTest -->
      <class name="org.wso2.carbon.identity.base.SignInPolicyTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.wso2.carbon.identity.base.SignInPolicyTest@fe08eaf]" name="setup" is-config="true" duration-ms="37" started-at="2018-06-04T14:27:11Z" finished-at="2018-06-04T14:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGetSignOnlyPolicy()[pri:0, instance:org.wso2.carbon.identity.base.SignInPolicyTest@fe08eaf]" name="testGetSignOnlyPolicy" duration-ms="495" started-at="2018-06-04T14:27:11Z" finished-at="2018-06-04T14:27:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSignOnlyPolicy -->
        <test-method status="PASS" signature="testGetSignOnlyPolicyInvalidPolicyString()[pri:0, instance:org.wso2.carbon.identity.base.SignInPolicyTest@fe08eaf]" name="testGetSignOnlyPolicyInvalidPolicyString" duration-ms="4" started-at="2018-06-04T14:27:12Z" finished-at="2018-06-04T14:27:12Z">
          <exception class="org.wso2.carbon.identity.base.IdentityException">
            <message>
              <![CDATA[error building policy from Some Invalid Text]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.wso2.carbon.identity.base.IdentityException: error building policy from Some Invalid Text
	at org.wso2.carbon.identity.base.IdentityException.error(IdentityException.java:60)
	at org.wso2.carbon.identity.base.IdentityBaseUtil.getSignOnlyPolicy(IdentityBaseUtil.java:145)
	at org.wso2.carbon.identity.base.SignInPolicyTest.testGetSignOnlyPolicyInvalidPolicyString(SignInPolicyTest.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.apache.axiom.om.OMException: com.ctc.wstx.exc.WstxUnexpectedCharException: Unexpected character 'S' (code 83) in prolog; expected '<'
 at [row,col {unknown-source}]: [1,1]
	at org.apache.axiom.om.impl.builder.StAXOMBuilder.next(StAXOMBuilder.java:296)
	at org.apache.axiom.om.impl.llom.OMDocumentImpl.getOMDocumentElement(OMDocumentImpl.java:109)
	at org.apache.axiom.om.impl.builder.StAXOMBuilder.getDocumentElement(StAXOMBuilder.java:570)
	at org.apache.axiom.om.impl.builder.StAXOMBuilder.getDocumentElement(StAXOMBuilder.java:566)
	at org.apache.axiom.om.util.AXIOMUtil.stringToOM(AXIOMUtil.java:54)
	at org.apache.axiom.om.util.AXIOMUtil.stringToOM(AXIOMUtil.java:39)
	at org.wso2.carbon.identity.base.IdentityBaseUtil.getSignOnlyPolicy(IdentityBaseUtil.java:139)
	... 28 more
Caused by: com.ctc.wstx.exc.WstxUnexpectedCharException: Unexpected character 'S' (code 83) in prolog; expected '<'
 at [row,col {unknown-source}]: [1,1]
	at com.ctc.wstx.sr.StreamScanner.throwUnexpectedChar(StreamScanner.java:639)
	at com.ctc.wstx.sr.BasicStreamReader.nextFromProlog(BasicStreamReader.java:2052)
	at com.ctc.wstx.sr.BasicStreamReader.next(BasicStreamReader.java:1134)
	at org.apache.axiom.om.impl.builder.StAXOMBuilder.parserNext(StAXOMBuilder.java:681)
	at org.apache.axiom.om.impl.builder.StAXOMBuilder.next(StAXOMBuilder.java:214)
	... 34 more
]]>
            </full-stacktrace>
          </exception> <!-- org.wso2.carbon.identity.base.IdentityException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSignOnlyPolicyInvalidPolicyString -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.wso2.carbon.identity.base.SignInPolicyTest@fe08eaf]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-06-04T14:27:12Z" finished-at="2018-06-04T14:27:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.wso2.carbon.identity.base.SignInPolicyTest -->
      <class name="org.wso2.carbon.identity.base.InMemoryPasswordCallbackHandlerTest">
        <test-method status="PASS" signature="testHandle()[pri:0, instance:org.wso2.carbon.identity.base.InMemoryPasswordCallbackHandlerTest@6fd9dbe6]" name="testHandle" duration-ms="3" started-at="2018-06-04T14:27:12Z" finished-at="2018-06-04T14:27:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHandle -->
        <test-method status="PASS" signature="testHandleInvalidUser()[pri:0, instance:org.wso2.carbon.identity.base.InMemoryPasswordCallbackHandlerTest@6fd9dbe6]" name="testHandleInvalidUser" duration-ms="3" started-at="2018-06-04T14:27:12Z" finished-at="2018-06-04T14:27:12Z">
          <exception class="javax.security.auth.callback.UnsupportedCallbackException">
            <message>
              <![CDATA[no password found for NonExisting]]>
            </message>
            <full-stacktrace>
              <![CDATA[javax.security.auth.callback.UnsupportedCallbackException: no password found for NonExisting
	at org.wso2.carbon.identity.base.InMemoryPasswordCallbackHandler.handle(InMemoryPasswordCallbackHandler.java:48)
	at org.wso2.carbon.identity.base.InMemoryPasswordCallbackHandlerTest.testHandleInvalidUser(InMemoryPasswordCallbackHandlerTest.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- javax.security.auth.callback.UnsupportedCallbackException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHandleInvalidUser -->
      </class> <!-- org.wso2.carbon.identity.base.InMemoryPasswordCallbackHandlerTest -->
      <class name="org.wso2.carbon.identity.base.IdentityValidationUtilTest">
        <test-method status="PASS" signature="testAddPattern()[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testAddPattern" duration-ms="19" started-at="2018-06-04T14:27:11Z" finished-at="2018-06-04T14:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPattern -->
        <test-method status="PASS" signature="testAddPatternNegative(java.lang.String, java.lang.String)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testAddPatternNegative" duration-ms="1" started-at="2018-06-04T14:27:11Z" data-provider="getAddPatternNegativeTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[^[a-zA-Z]+$]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Pattern identification key cannot be empty.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Pattern identification key cannot be empty.
	at org.wso2.carbon.identity.base.IdentityValidatorConfig.addPattern(IdentityValidatorConfig.java:49)
	at org.wso2.carbon.identity.base.IdentityValidationUtil.addPattern(IdentityValidationUtil.java:231)
	at org.wso2.carbon.identity.base.IdentityValidationUtilTest.testAddPatternNegative(IdentityValidationUtilTest.java:188)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPatternNegative -->
        <test-method status="PASS" signature="testAddPatternNegative(java.lang.String, java.lang.String)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testAddPatternNegative" duration-ms="2" started-at="2018-06-04T14:27:11Z" data-provider="getAddPatternNegativeTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[EMPTY]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Pattern cannot be empty.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Pattern cannot be empty.
	at org.wso2.carbon.identity.base.IdentityValidatorConfig.addPattern(IdentityValidatorConfig.java:53)
	at org.wso2.carbon.identity.base.IdentityValidationUtil.addPattern(IdentityValidationUtil.java:231)
	at org.wso2.carbon.identity.base.IdentityValidationUtilTest.testAddPatternNegative(IdentityValidationUtilTest.java:188)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPatternNegative -->
        <test-method status="PASS" signature="testAddPatternNegative(java.lang.String, java.lang.String)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testAddPatternNegative" duration-ms="1" started-at="2018-06-04T14:27:11Z" data-provider="getAddPatternNegativeTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[DIGITS_ONLY]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Already Contains]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[A pattern already exists for key DIGITS_ONLY]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: A pattern already exists for key DIGITS_ONLY
	at org.wso2.carbon.identity.base.IdentityValidatorConfig.addPattern(IdentityValidatorConfig.java:58)
	at org.wso2.carbon.identity.base.IdentityValidationUtil.addPattern(IdentityValidationUtil.java:231)
	at org.wso2.carbon.identity.base.IdentityValidationUtilTest.testAddPatternNegative(IdentityValidationUtilTest.java:188)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPatternNegative -->
        <test-method status="PASS" signature="testAddPatternNegative(java.lang.String, java.lang.String)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testAddPatternNegative" duration-ms="1" started-at="2018-06-04T14:27:11Z" data-provider="getAddPatternNegativeTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[INVALID_PATTERN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{)!\]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Failed to parse given pattern {)!\]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Failed to parse given pattern {)!\
	at org.wso2.carbon.identity.base.IdentityValidatorConfig.addPattern(IdentityValidatorConfig.java:62)
	at org.wso2.carbon.identity.base.IdentityValidationUtil.addPattern(IdentityValidationUtil.java:231)
	at org.wso2.carbon.identity.base.IdentityValidationUtilTest.testAddPatternNegative(IdentityValidationUtilTest.java:188)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: java.util.regex.PatternSyntaxException: Illegal repetition
{)!\
	at java.util.regex.Pattern.error(Pattern.java:1955)
	at java.util.regex.Pattern.closure(Pattern.java:3157)
	at java.util.regex.Pattern.sequence(Pattern.java:2134)
	at java.util.regex.Pattern.expr(Pattern.java:1996)
	at java.util.regex.Pattern.compile(Pattern.java:1696)
	at java.util.regex.Pattern.<init>(Pattern.java:1351)
	at java.util.regex.Pattern.compile(Pattern.java:1028)
	at org.wso2.carbon.identity.base.IdentityValidatorConfig.addPattern(IdentityValidatorConfig.java:60)
	... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPatternNegative -->
        <test-method status="PASS" signature="testGetValidInputOverWhiteListPatternsInvalidInput()[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testGetValidInputOverWhiteListPatternsInvalidInput" duration-ms="14" started-at="2018-06-04T14:27:11Z" finished-at="2018-06-04T14:27:11Z">
          <exception class="org.wso2.carbon.identity.base.IdentityValidationException">
            <message>
              <![CDATA[The provided input does not match any of the white list patterns [ ^\s*?(.+)@(.+?)\s*$ ]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.wso2.carbon.identity.base.IdentityValidationException: The provided input does not match any of the white list patterns [ ^\s*?(.+)@(.+?)\s*$ ]
	at org.wso2.carbon.identity.base.IdentityValidationUtil.getValidInputOverWhiteListPatterns(IdentityValidationUtil.java:173)
	at org.wso2.carbon.identity.base.IdentityValidationUtilTest.testGetValidInputOverWhiteListPatternsInvalidInput(IdentityValidationUtilTest.java:143)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.wso2.carbon.identity.base.IdentityValidationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetValidInputOverWhiteListPatternsInvalidInput -->
        <test-method status="PASS" signature="testIsValidOverBlackListPatternsInvalidPatterns()[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValidOverBlackListPatternsInvalidPatterns" duration-ms="1" started-at="2018-06-04T14:27:11Z" finished-at="2018-06-04T14:27:11Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Should provide at least one black list pattern]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Should provide at least one black list pattern
	at org.wso2.carbon.identity.base.IdentityValidationUtil.isValidOverBlackListPatterns(IdentityValidationUtil.java:116)
	at org.wso2.carbon.identity.base.IdentityValidationUtilTest.testIsValidOverBlackListPatternsInvalidPatterns(IdentityValidationUtilTest.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidOverBlackListPatternsInvalidPatterns -->
        <test-method status="PASS" signature="testIsValidOverWhiteListPatternsInvalidPatterns()[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValidOverWhiteListPatternsInvalidPatterns" duration-ms="2" started-at="2018-06-04T14:27:11Z" finished-at="2018-06-04T14:27:11Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[No regex pattern registered for the provided key : FOO_PATTERN]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: No regex pattern registered for the provided key : FOO_PATTERN
	at org.wso2.carbon.identity.base.IdentityValidationUtil.validatePatternKeys(IdentityValidationUtil.java:273)
	at org.wso2.carbon.identity.base.IdentityValidationUtil.isValidOverWhiteListPatterns(IdentityValidationUtil.java:94)
	at org.wso2.carbon.identity.base.IdentityValidationUtilTest.testIsValidOverWhiteListPatternsInvalidPatterns(IdentityValidationUtilTest.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidOverWhiteListPatternsInvalidPatterns -->
        <test-method status="PASS" signature="testIsValidWithInvalidWhiteListPatterns(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValidWithInvalidWhiteListPatterns" duration-ms="0" started-at="2018-06-04T14:27:11Z" data-provider="getValidationNegativeTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12354]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@27c2f134]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@64bed8b2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Should provide at least one white list pattern and black list pattern]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Should provide at least one white list pattern and black list pattern
	at org.wso2.carbon.identity.base.IdentityValidationUtil.isValid(IdentityValidationUtil.java:148)
	at org.wso2.carbon.identity.base.IdentityValidationUtilTest.testIsValidWithInvalidWhiteListPatterns(IdentityValidationUtilTest.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidWithInvalidWhiteListPatterns -->
        <test-method status="PASS" signature="testIsValidWithInvalidWhiteListPatterns(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValidWithInvalidWhiteListPatterns" duration-ms="1" started-at="2018-06-04T14:27:11Z" data-provider="getValidationNegativeTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12354]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@793f2b41]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@49442e03]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Should provide at least one white list pattern and black list pattern]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Should provide at least one white list pattern and black list pattern
	at org.wso2.carbon.identity.base.IdentityValidationUtil.isValid(IdentityValidationUtil.java:148)
	at org.wso2.carbon.identity.base.IdentityValidationUtilTest.testIsValidWithInvalidWhiteListPatterns(IdentityValidationUtilTest.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidWithInvalidWhiteListPatterns -->
        <test-method status="PASS" signature="testIsValidWithInvalidWhiteListPatterns(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValidWithInvalidWhiteListPatterns" duration-ms="1" started-at="2018-06-04T14:27:11Z" data-provider="getValidationNegativeTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12354]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@730c4dfd]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@736905fe]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Should provide at least one white list pattern and black list pattern]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Should provide at least one white list pattern and black list pattern
	at org.wso2.carbon.identity.base.IdentityValidationUtil.isValid(IdentityValidationUtil.java:148)
	at org.wso2.carbon.identity.base.IdentityValidationUtilTest.testIsValidWithInvalidWhiteListPatterns(IdentityValidationUtilTest.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidWithInvalidWhiteListPatterns -->
        <test-method status="PASS" signature="testIsValidWithInvalidWhiteListPatterns(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValidWithInvalidWhiteListPatterns" duration-ms="1" started-at="2018-06-04T14:27:11Z" data-provider="getValidationNegativeTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12354]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@280d1d8d]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Should provide at least one white list pattern and black list pattern]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Should provide at least one white list pattern and black list pattern
	at org.wso2.carbon.identity.base.IdentityValidationUtil.isValid(IdentityValidationUtil.java:148)
	at org.wso2.carbon.identity.base.IdentityValidationUtilTest.testIsValidWithInvalidWhiteListPatterns(IdentityValidationUtilTest.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidWithInvalidWhiteListPatterns -->
        <test-method status="PASS" signature="testIsValidWithInvalidWhiteListPatterns(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValidWithInvalidWhiteListPatterns" duration-ms="0" started-at="2018-06-04T14:27:11Z" data-provider="getValidationNegativeTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12354]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Should provide at least one white list pattern and black list pattern]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Should provide at least one white list pattern and black list pattern
	at org.wso2.carbon.identity.base.IdentityValidationUtil.isValid(IdentityValidationUtil.java:148)
	at org.wso2.carbon.identity.base.IdentityValidationUtilTest.testIsValidWithInvalidWhiteListPatterns(IdentityValidationUtilTest.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidWithInvalidWhiteListPatterns -->
        <test-method status="PASS" signature="testPatternExists()[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testPatternExists" duration-ms="0" started-at="2018-06-04T14:27:11Z" finished-at="2018-06-04T14:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPatternExists -->
        <test-method status="PASS" signature="testGetValidInput()[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testGetValidInput" duration-ms="0" started-at="2018-06-04T14:27:11Z" finished-at="2018-06-04T14:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetValidInput -->
        <test-method status="PASS" signature="testGetValidInputForInvalidInput()[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testGetValidInputForInvalidInput" duration-ms="0" started-at="2018-06-04T14:27:11Z" finished-at="2018-06-04T14:27:11Z">
          <exception class="org.wso2.carbon.identity.base.IdentityValidationException">
            <message>
              <![CDATA[The provided input does not match any of the white list patterns [ ^\s*?(.+)@(.+?)\s*$ ] or contains illegal characters matching one of the black list patterns [ ^[0-9]+$ ]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.wso2.carbon.identity.base.IdentityValidationException: The provided input does not match any of the white list patterns [ ^\s*?(.+)@(.+?)\s*$ ] or contains illegal characters matching one of the black list patterns [ ^[0-9]+$ ]
	at org.wso2.carbon.identity.base.IdentityValidationUtil.getValidInput(IdentityValidationUtil.java:220)
	at org.wso2.carbon.identity.base.IdentityValidationUtilTest.testGetValidInputForInvalidInput(IdentityValidationUtilTest.java:167)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.wso2.carbon.identity.base.IdentityValidationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetValidInputForInvalidInput -->
        <test-method status="PASS" signature="testGetValidInputOverBlackListPatterns()[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testGetValidInputOverBlackListPatterns" duration-ms="1" started-at="2018-06-04T14:27:11Z" finished-at="2018-06-04T14:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetValidInputOverBlackListPatterns -->
        <test-method status="PASS" signature="testGetValidInputOverBlackListPatternsInvalidInput()[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testGetValidInputOverBlackListPatternsInvalidInput" duration-ms="1" started-at="2018-06-04T14:27:11Z" finished-at="2018-06-04T14:27:11Z">
          <exception class="org.wso2.carbon.identity.base.IdentityValidationException">
            <message>
              <![CDATA[The provided input contains illegal characters matching one of the black list patterns [ ^[0-9]+$, ^\s*?(.+)@(.+?)\s*$ ]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.wso2.carbon.identity.base.IdentityValidationException: The provided input contains illegal characters matching one of the black list patterns [ ^[0-9]+$, ^\s*?(.+)@(.+?)\s*$ ]
	at org.wso2.carbon.identity.base.IdentityValidationUtil.getValidInputOverBlackListPatterns(IdentityValidationUtil.java:193)
	at org.wso2.carbon.identity.base.IdentityValidationUtilTest.testGetValidInputOverBlackListPatternsInvalidInput(IdentityValidationUtilTest.java:154)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.wso2.carbon.identity.base.IdentityValidationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetValidInputOverBlackListPatternsInvalidInput -->
        <test-method status="PASS" signature="testGetValidInputOverWhiteListPatterns()[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testGetValidInputOverWhiteListPatterns" duration-ms="0" started-at="2018-06-04T14:27:11Z" finished-at="2018-06-04T14:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetValidInputOverWhiteListPatterns -->
        <test-method status="PASS" signature="testIsValid(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, boolean)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValid" duration-ms="1" started-at="2018-06-04T14:27:11Z" data-provider="getValidationTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@52a1d6f]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@38bb297]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValid -->
        <test-method status="PASS" signature="testIsValid(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, boolean)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValid" duration-ms="2" started-at="2018-06-04T14:27:11Z" data-provider="getValidationTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12354]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6c96e1d5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@58e9375b]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValid -->
        <test-method status="PASS" signature="testIsValid(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, boolean)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValid" duration-ms="1" started-at="2018-06-04T14:27:11Z" data-provider="getValidationTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12354]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@d7d984c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@53bc8c7e]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValid -->
        <test-method status="PASS" signature="testIsValid(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, boolean)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValid" duration-ms="0" started-at="2018-06-04T14:27:11Z" data-provider="getValidationTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[123dqw54]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@8ff4795]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@19bdfa3e]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValid -->
        <test-method status="PASS" signature="testIsValid(java.lang.String, [Ljava.lang.String;, [Ljava.lang.String;, boolean)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValid" duration-ms="0" started-at="2018-06-04T14:27:11Z" data-provider="getValidationTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://example.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@78e3bebd]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.String;@4f0b02a3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValid -->
        <test-method status="PASS" signature="testIsValidOverBlackListPatterns(java.lang.String, [Ljava.lang.String;, boolean)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValidOverBlackListPatterns" duration-ms="1" started-at="2018-06-04T14:27:11Z" data-provider="getBlackListTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3d3a3738]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidOverBlackListPatterns -->
        <test-method status="PASS" signature="testIsValidOverBlackListPatterns(java.lang.String, [Ljava.lang.String;, boolean)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValidOverBlackListPatterns" duration-ms="1" started-at="2018-06-04T14:27:11Z" data-provider="getBlackListTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1241234]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4ba056ab]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidOverBlackListPatterns -->
        <test-method status="PASS" signature="testIsValidOverBlackListPatterns(java.lang.String, [Ljava.lang.String;, boolean)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValidOverBlackListPatterns" duration-ms="2" started-at="2018-06-04T14:27:11Z" data-provider="getBlackListTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12fqwe34]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2e530f34]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidOverBlackListPatterns -->
        <test-method status="PASS" signature="testIsValidOverBlackListPatterns(java.lang.String, [Ljava.lang.String;, boolean)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValidOverBlackListPatterns" duration-ms="1" started-at="2018-06-04T14:27:11Z" data-provider="getBlackListTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12fqwe34]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@39da0e47]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidOverBlackListPatterns -->
        <test-method status="PASS" signature="testIsValidOverBlackListPatterns(java.lang.String, [Ljava.lang.String;, boolean)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValidOverBlackListPatterns" duration-ms="1" started-at="2018-06-04T14:27:11Z" data-provider="getBlackListTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[test@foo.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@55b56db3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidOverBlackListPatterns -->
        <test-method status="PASS" signature="testIsValidOverBlackListPatterns(java.lang.String, [Ljava.lang.String;, boolean)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValidOverBlackListPatterns" duration-ms="1" started-at="2018-06-04T14:27:11Z" data-provider="getBlackListTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[test@]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1c697ca0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidOverBlackListPatterns -->
        <test-method status="PASS" signature="testIsValidOverWhiteListPatterns(java.lang.String, [Ljava.lang.String;, boolean)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValidOverWhiteListPatterns" duration-ms="1" started-at="2018-06-04T14:27:11Z" data-provider="getWhileListTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@43347199]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidOverWhiteListPatterns -->
        <test-method status="PASS" signature="testIsValidOverWhiteListPatterns(java.lang.String, [Ljava.lang.String;, boolean)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValidOverWhiteListPatterns" duration-ms="0" started-at="2018-06-04T14:27:11Z" data-provider="getWhileListTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1241234]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3d1254b9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidOverWhiteListPatterns -->
        <test-method status="PASS" signature="testIsValidOverWhiteListPatterns(java.lang.String, [Ljava.lang.String;, boolean)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValidOverWhiteListPatterns" duration-ms="1" started-at="2018-06-04T14:27:11Z" data-provider="getWhileListTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12fqwe34]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6a49b3c7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidOverWhiteListPatterns -->
        <test-method status="PASS" signature="testIsValidOverWhiteListPatterns(java.lang.String, [Ljava.lang.String;, boolean)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValidOverWhiteListPatterns" duration-ms="0" started-at="2018-06-04T14:27:11Z" data-provider="getWhileListTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12fqwe34]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6f6c4462]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidOverWhiteListPatterns -->
        <test-method status="PASS" signature="testIsValidOverWhiteListPatterns(java.lang.String, [Ljava.lang.String;, boolean)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValidOverWhiteListPatterns" duration-ms="0" started-at="2018-06-04T14:27:11Z" data-provider="getWhileListTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12fqwe34@foo.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@f3458af]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidOverWhiteListPatterns -->
        <test-method status="PASS" signature="testIsValidOverWhiteListPatterns(java.lang.String, [Ljava.lang.String;, boolean)[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValidOverWhiteListPatterns" duration-ms="0" started-at="2018-06-04T14:27:11Z" data-provider="getWhileListTestData" finished-at="2018-06-04T14:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[test@]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@20ac726c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidOverWhiteListPatterns -->
        <test-method status="PASS" signature="testIsValidOverWhiteListPatternsNoPatterns()[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testIsValidOverWhiteListPatternsNoPatterns" duration-ms="1" started-at="2018-06-04T14:27:11Z" finished-at="2018-06-04T14:27:11Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Should provide at least one white list pattern]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Should provide at least one white list pattern
	at org.wso2.carbon.identity.base.IdentityValidationUtil.isValidOverWhiteListPatterns(IdentityValidationUtil.java:87)
	at org.wso2.carbon.identity.base.IdentityValidationUtilTest.testIsValidOverWhiteListPatternsNoPatterns(IdentityValidationUtilTest.java:64)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidOverWhiteListPatternsNoPatterns -->
        <test-method status="PASS" signature="testRemovePattern()[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="testRemovePattern" duration-ms="1" started-at="2018-06-04T14:27:11Z" depends-on-methods="org.wso2.carbon.identity.base.IdentityValidationUtilTest.testAddPattern, org.wso2.carbon.identity.base.IdentityValidationUtilTest.testPatternExists" finished-at="2018-06-04T14:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemovePattern -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.wso2.carbon.identity.base.IdentityValidationUtilTest@6630dd28]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-06-04T14:27:11Z" finished-at="2018-06-04T14:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.wso2.carbon.identity.base.IdentityValidationUtilTest -->
    </test> <!-- identity-base-test-all -->
  </suite> <!-- identity-base-test-suite -->
</testng-results>
