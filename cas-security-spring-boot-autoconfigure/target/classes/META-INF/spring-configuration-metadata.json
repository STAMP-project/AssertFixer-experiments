{
  "hints": [],
  "groups": [
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties",
      "name": "security.cas",
      "type": "com.kakawait.spring.boot.security.cas.CasSecurityProperties"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties",
      "name": "security.cas.authorization",
      "sourceMethod": "getAuthorization()",
      "type": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$Authorization"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties",
      "name": "security.cas.proxy-validation",
      "sourceMethod": "getProxyValidation()",
      "type": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$ProxyValidation"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties",
      "name": "security.cas.server",
      "sourceMethod": "getServer()",
      "type": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$Server"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$Server",
      "name": "security.cas.server.paths",
      "sourceMethod": "getPaths()",
      "type": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$Server$Paths"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties",
      "name": "security.cas.service",
      "sourceMethod": "getService()",
      "type": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$Service"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$Service",
      "name": "security.cas.service.paths",
      "sourceMethod": "getPaths()",
      "type": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$Service$Paths"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties",
      "name": "security.cas.user",
      "sourceMethod": "getUser()",
      "type": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$User"
    }
  ],
  "properties": [
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$Authorization",
      "name": "security.cas.authorization.mode",
      "type": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$SecurityAuthorizeMode"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$Authorization",
      "defaultValue": [
        "USER"
      ],
      "name": "security.cas.authorization.roles",
      "type": "java.lang.String[]"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$Authorization",
      "defaultValue": [
        "USER"
      ],
      "name": "security.cas.authorization.roles",
      "type": "java.lang.String[]"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties",
      "deprecated": true,
      "name": "security.cas.authorize-mode",
      "description": "Security authorize mode to apply.",
      "type": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$SecurityAuthorizeMode",
      "deprecation": {
        "replacement": "security.cas.authorization.mode"
      }
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties",
      "name": "security.cas.authorize-mode",
      "description": "Security authorize mode to apply.",
      "type": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$SecurityAuthorizeMode"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties",
      "defaultValue": true,
      "name": "security.cas.enabled",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties",
      "name": "security.cas.key",
      "description": "@see org.springframework.security.cas.authentication.CasAuthenticationProvider#key",
      "type": "java.lang.String"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties",
      "defaultValue": [
        "\/**"
      ],
      "name": "security.cas.paths",
      "description": "Comma-separated list of paths to secure.",
      "type": "java.lang.String[]"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$ProxyValidation",
      "name": "security.cas.proxy-validation.chains",
      "type": "java.util.List<java.util.List<java.lang.String>>"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$ProxyValidation",
      "defaultValue": true,
      "name": "security.cas.proxy-validation.enabled",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$Server",
      "name": "security.cas.server.base-url",
      "description": "CAS Server base url, example https:\/\/my-cas.server.com\/",
      "type": "java.net.URI"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$Server$Paths",
      "defaultValue": "\/login",
      "name": "security.cas.server.paths.login",
      "description": "CAS Server login path that will be append to {@link Server#baseUrl}\n\n @see org.springframework.security.cas.web.CasAuthenticationEntryPoint#loginUrl",
      "type": "java.lang.String"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$Server$Paths",
      "defaultValue": "\/logout",
      "name": "security.cas.server.paths.logout",
      "description": "CAS Server logout path that will be append to {@link Server#baseUrl}",
      "type": "java.lang.String"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$Server",
      "defaultValue": 3,
      "name": "security.cas.server.protocol-version",
      "description": "CAS Server protocol version used to define which {@link org.jasig.cas.client.validation.TicketValidator} to\n use.\n\n By default {@code ProxyTicketValidator} is selected rather than {@code ServiceTicketValidator}.\n\n @see org.jasig.cas.client.validation.Cas30ProxyTicketValidator\n @see org.jasig.cas.client.validation.Cas20ProxyTicketValidator\n @see org.jasig.cas.client.validation.Cas10TicketValidationFilter",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$Server",
      "name": "security.cas.server.validation-base-url",
      "description": "CAS Server validation base url, example https:\/\/my-cas.server.internal\/\n\n If defined it will be used to compute complete <i>validation base url<\/i> (for ticket validation)\n instead of using {@link Server#baseUrl}.\n\n <i>Validation url<\/i> request is executed by the <i>java CAS client<\/i> when intercepting a\n <i>service ticket<\/i> or <i>proxy ticket<\/i>. Thus it can be useful to be different than\n {@link Server#baseUrl} when CAS server can't share the same network as your browser (for example).\n\n For example when using containers (<i>Docker<\/i> or others) or VM, you can't use {@code localhost} hostname\n in your <i>validation url<\/i> since your CAS service inside a container or VM doesn't have the same\n {@code localhost} as you host machine.\n\n @see Server#baseUrl\n @see Paths#validationBaseUrl\n @see Service#callbackBaseUrl",
      "type": "java.net.URI"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$Service",
      "name": "security.cas.service.base-url",
      "description": "CAS Service base url (your application base url)",
      "type": "java.net.URI"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$Service",
      "name": "security.cas.service.callback-base-url",
      "description": "CAS Service callback base url, example https:\/\/my.service.com\/\n\n If defined it will be used to compute complete <i>proxy callback url<\/i> instead of using\n {@link Service#baseUrl}.\n It will also be use even if {@link #baseUrl} is not defined and you're using {@link Service#resolutionMode}\n is equals to {@link ServiceResolutionMode#DYNAMIC}.\n\n <i>Proxy callback<\/i> request is a fully new request executed from CAS server (using its own http client)\n to your service. Thus it can be useful to be different than {@link Service#baseUrl} when CAS server\n can't share the same network as your browser (for example).\n\n For example when using containers (<i>Docker<\/i> or others) or VM, you can't use {@code localhost} hostname\n in your <i>proxy callback url<\/i> since CAS server inside a container or VM doesn't have the same\n {@code localhost} as your host machine.\n\n @see Service#baseUrl\n @see Paths#proxyCallback\n @see Server#validationBaseUrl",
      "type": "java.net.URI"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$Service$Paths",
      "defaultValue": "\/login",
      "name": "security.cas.service.paths.login",
      "description": "CAS Service login path that will be append to {@link Service#baseUrl}",
      "type": "java.lang.String"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$Service$Paths",
      "defaultValue": "\/logout",
      "name": "security.cas.service.paths.logout",
      "description": "CAS Service logout path that will be append to {@link Service#baseUrl}\n\n @see org.springframework.security.web.authentication.logout.LogoutFilter#logoutRequestMatcher",
      "type": "java.lang.String"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$Service$Paths",
      "name": "security.cas.service.paths.proxy-callback",
      "description": "CAS Service proxy callback path that will be append to {@link Service#callbackBaseUrl} if defined else\n fallback to {@link Service#baseUrl}\n\n @see Service#callbackBaseUrl\n @see org.jasig.cas.client.validation.Cas20ServiceTicketValidator#proxyCallbackUrl",
      "type": "java.lang.String"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$Service",
      "name": "security.cas.service.resolution-mode",
      "type": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$ServiceResolutionMode"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$User",
      "defaultValue": [],
      "name": "security.cas.user.default-roles",
      "description": "Default roles are roles that will be automatically appends to other roles definitions\n For example if you defined: {@code security.cas.user.roles = USER}\n and {@code security.cas.user.defaultRoles = MEMBER}. At the end the user will have both {@code USER} and\n {@code MEMBER} role.\n <p>\n Same thing if you're using {@link #rolesAttributes}, {@code defaultRoles} will be append to the list of\n roles retrieve from {@code CAS Attributes}.",
      "type": "java.lang.String[]"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$User",
      "defaultValue": [],
      "name": "security.cas.user.default-roles",
      "description": "Default roles are roles that will be automatically appends to other roles definitions\n For example if you defined: {@code security.cas.user.roles = USER}\n and {@code security.cas.user.defaultRoles = MEMBER}. At the end the user will have both {@code USER} and\n {@code MEMBER} role.\n <p>\n Same thing if you're using {@link #rolesAttributes}, {@code defaultRoles} will be append to the list of\n roles retrieve from {@code CAS Attributes}.",
      "type": "java.lang.String[]"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$User",
      "defaultValue": [],
      "name": "security.cas.user.roles-attributes",
      "type": "java.lang.String[]"
    },
    {
      "sourceType": "com.kakawait.spring.boot.security.cas.CasSecurityProperties$User",
      "defaultValue": [],
      "name": "security.cas.user.roles-attributes",
      "type": "java.lang.String[]"
    }
  ]
}