<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="org.roaringbitmap.TestRunContainer" time="21.763" tests="214" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.121-b13"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/root/workspace/RoaringBitmap/RoaringBitmap/388075634"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="skip.gulp" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="findbugs.skip" value="true"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/root/workspace/RoaringBitmap/RoaringBitmap/388075634"/>
    <property name="checkstyle.skip" value="true"/>
    <property name="java.runtime.version" value="1.8.0_121-8u121-b13-1~bpo8+1-b13"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="skip.npm" value="true"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="gpg.skip" value="true"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="cobertura.skip" value="true"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="license.skip" value="true"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="skip.bower" value="true"/>
    <property name="maven.repo.local" value="/root/./workspace/RoaringBitmap/RoaringBitmap/388075634/.m2"/>
    <property name="os.version" value="3.10.0-862.3.2.el7.x86_64"/>
    <property name="user.home" value="/root"/>
    <property name="user.timezone" value="Europe/Paris"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="root"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.5.2.jar"/>
    <property name="skipITs" value="true"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher -B -D enforcer.skip=true -D dependency-check.skip=true -D skipITs=true -D cobertura.skip=true -D maven.repo.local=/root/./workspace/RoaringBitmap/RoaringBitmap/388075634/.m2 -D rat.skip=true -D findbugs.skip=true -D skip.bower=true -D gpg.skip=true -D checkstyle.skip=true -D skip.gulp=true -D license.skip=true -D skip.npm=true test"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="dependency-check.skip" value="true"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_121"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="enforcer.skip" value="true"/>
    <property name="rat.skip" value="true"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="testContainsBitmapContainer_IncludeSelf" classname="org.roaringbitmap.TestRunContainer" time="0.054"/>
  <testcase name="testEqualsArrayContainer_NotEqual_ArraySmaller" classname="org.roaringbitmap.TestRunContainer" time="0.013"/>
  <testcase name="testNextSetBitBetweenRuns" classname="org.roaringbitmap.TestRunContainer" time="0.003"/>
  <testcase name="addRangeWithinSetBounds" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iaddRange" classname="org.roaringbitmap.TestRunContainer" time="2.368"/>
  <testcase name="testRoaringWithoutOptimize" classname="org.roaringbitmap.TestRunContainer" time="0.026"/>
  <testcase name="longsimpleIterator" classname="org.roaringbitmap.TestRunContainer" time="0.014"/>
  <testcase name="constructor1" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testSimpleCardinality" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="intersects1" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="intersects2" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="intersects3" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="simpleIterator" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testContainsRunContainer_ExcludeDisJointSet" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="addRangeAndFuseWithPreviousValueLength" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testRangeCardinality2" classname="org.roaringbitmap.TestRunContainer" time="0.008"/>
  <testcase name="testRangeCardinality3" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="testRangeCardinality4" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="testContainsRange3" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testContainsArrayContainer_IncludeProperSubset" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="basictri" classname="org.roaringbitmap.TestRunContainer" time="0.198"/>
  <testcase name="longbacksimpleIterator" classname="org.roaringbitmap.TestRunContainer" time="0.013"/>
  <testcase name="RunContainerFromBitmap" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="andNot" classname="org.roaringbitmap.TestRunContainer" time="0.026"/>
  <testcase name="xor_array_smallcase" classname="org.roaringbitmap.TestRunContainer" time="0.01"/>
  <testcase name="basic2" classname="org.roaringbitmap.TestRunContainer" time="0.034"/>
  <testcase name="testFirst_Empty" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="andNotTest1" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="andNotTest2" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="orFullToRunContainer2" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="orFullToRunContainer3" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="testContainsArrayContainer_IncludeProperSubsetDifferentStart" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iremove10" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iremove11" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iremove12" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iremove13" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iremove14" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iremove15" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iremove16" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iremove17" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iremove18" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iremove19" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iremove20" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="addRange" classname="org.roaringbitmap.TestRunContainer" time="2.757"/>
  <testcase name="longcsimpleIterator" classname="org.roaringbitmap.TestRunContainer" time="0.017"/>
  <testcase name="inot10" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="inot11" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="inot12" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="inot13" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="inot14" classname="org.roaringbitmap.TestRunContainer" time="6.056"/>
  <testcase name="inot15" classname="org.roaringbitmap.TestRunContainer" time="0.003"/>
  <testcase name="iremoveInvalidRange1" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iremoveInvalidRange2" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testContainsRunContainer_IncludeProperSubsetDifferentStart" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="addRangeAndFuseWithNextValueLength" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testContainsFull" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iaddRange10" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iaddRange11" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iaddRange12" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="lazyOR" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testToString" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="RunContainerFromBitmap1" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="RunContainerFromBitmap2" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="RunContainerFromBitmap3" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="xor_array" classname="org.roaringbitmap.TestRunContainer" time="0.02"/>
  <testcase name="not12A" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testContainsArrayContainer_EmptyContainsEmpty" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="addOutOfOrder" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="remove" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testContainsArrayContainer_ExcludeShiftedSet" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iaddInvalidRange1" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="iaddInvalidRange2" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="safeor" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="select" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="andNot1" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="andNot2" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testContainsBitmapContainer_ExcludeShiftedSet" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="union2" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="randomFun" classname="org.roaringbitmap.TestRunContainer" time="0.076"/>
  <testcase name="iremove1" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iremove2" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iremove3" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="iremove4" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iremove5" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iremove6" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iremove7" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iremove8" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iremove9" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="testFirstUnsigned" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testLazyORFull2" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testLazyORFull3" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testFullConstructor" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testContainsArrayContainer_ExcludeSuperSet" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testIntersectsWithRangeUnsigned" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iaddRangeWithinSetBounds" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testRangeCardinality" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="RunContainerArg_ArrayAND" classname="org.roaringbitmap.TestRunContainer" time="0.133"/>
  <testcase name="RunContainerArg_ArrayXOR" classname="org.roaringbitmap.TestRunContainer" time="0.117"/>
  <testcase name="testRoaringWithOptimize" classname="org.roaringbitmap.TestRunContainer" time="0.004"/>
  <testcase name="FullRunContainerArg_ArrayANDNOT2" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testIntersectsWithRangeManyRuns" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testEqualsArrayContainer_NotEqual_ArrayDiscontiguous" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testContainsArrayContainer_ExcludeDisJointSet" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="fillLeastSignificantBits" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="shortRangeRank" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testContainsRange" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="lazyIOR" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testContainsBitmapContainer_IncludeProperSubset" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="ior" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="xor" classname="org.roaringbitmap.TestRunContainer" time="0.013"/>
  <testcase name="flip" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="ior2" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="not1" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="not2" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="not3" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="not4" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="not5" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="not6" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="not7" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="not8" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="not9" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="rank" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="xor1" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="xor2" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="xor3" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="xor4" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="xor5" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iaddRangeAndFuseWithPreviousValueLength" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="safeSerialization" classname="org.roaringbitmap.TestRunContainer" time="0.092"/>
  <testcase name="testRangeConstructor2" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testRangeConstructor3" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testRangeConstructor4" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="basic" classname="org.roaringbitmap.TestRunContainer" time="0.109"/>
  <testcase name="clear" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="inot1" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="inot2" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="inot3" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="inot4" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="inot5" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="inot6" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="inot7" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="inot8" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="inot9" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="limit" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="not10" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="not11" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="not12" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="not13" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="not14" classname="org.roaringbitmap.TestRunContainer" time="5.92"/>
  <testcase name="not15" classname="org.roaringbitmap.TestRunContainer" time="0.002"/>
  <testcase name="union" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="xor1a" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="xor2a" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="xor3a" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="xor_array_largecase_runcontainer_best" classname="org.roaringbitmap.TestRunContainer" time="0.002"/>
  <testcase name="testContainsRunContainer_ExcludeSuperSet" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="addRangeOnNonEmptyContainerAndFuse" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iremoveEmptyRange" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="equalTest1" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="equalTest2" classname="org.roaringbitmap.TestRunContainer" time="0.002"/>
  <testcase name="iremoveRange" classname="org.roaringbitmap.TestRunContainer" time="2.401"/>
  <testcase name="orFullToRunContainer" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testLazyORFull" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testEqualsArrayContainer_NotEqual_ArrayLarger" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testContainsRunContainer_IncludeProperSubset" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="xor_array_mediumcase" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="RunContainerArg_ArrayANDNOT" classname="org.roaringbitmap.TestRunContainer" time="0.159"/>
  <testcase name="RunContainerVSRunContainerANDNOT" classname="org.roaringbitmap.TestRunContainer" time="0.119"/>
  <testcase name="iaddRange1" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iaddRange2" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="iaddRange3" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iaddRange4" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iaddRange5" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iaddRange6" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="iaddRange7" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="iaddRange8" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testFirstLast" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="addRangeOnNonEmptyContainer" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="intersectionTest1" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="intersectionTest2" classname="org.roaringbitmap.TestRunContainer" time="0.002"/>
  <testcase name="intersectionTest3" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="intersectionTest4" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="addRangeWithinSetBoundsAndFuse" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="RunContainerVSRunContainerAND" classname="org.roaringbitmap.TestRunContainer" time="0.102"/>
  <testcase name="RunContainerVSRunContainerXOR" classname="org.roaringbitmap.TestRunContainer" time="0.11"/>
  <testcase name="iaddRangeOnNonEmptyContainerAndFuse" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testContainsBitmapContainer_EmptyContainsEmpty" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testRunOpti" classname="org.roaringbitmap.TestRunContainer" time="0.141"/>
  <testcase name="iterator" classname="org.roaringbitmap.TestRunContainer" time="0.002"/>
  <testcase name="testAndNot" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testContainsBitmapContainer_IncludeProperSubsetDifferentStart" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testContainsRunContainer_IncludeSelf" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testContainsBitmapContainer_ExcludeSuperSet" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="addAndCompress" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testRangeConstructor" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testEqualsArrayContainer_Equal" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testLast_Empty" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testContainsRunContainer_EmptyContainsEmpty" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="toBitmapOrArrayContainer" classname="org.roaringbitmap.TestRunContainer" time="0.001"/>
  <testcase name="ensureCapacity" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="RunContainerArg_ArrayOR" classname="org.roaringbitmap.TestRunContainer" time="0.148"/>
  <testcase name="testIntersectsWithRange" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testContainsArrayContainer_IncludeSelf" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="RunContainerArg_ArrayANDNOT2" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="RunContainerArg_ArrayANDNOT3" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="addRangeOnEmptyContainer" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testNextValue" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testContainsRunContainer_ExcludeShiftedSet" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testContainsBitmapContainer_ExcludeDisJointSet" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="inot12A" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="RunContainerVSRunContainerOR" classname="org.roaringbitmap.TestRunContainer" time="0.172"/>
  <testcase name="select2" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testEquals_FullRunContainerWithArrayContainer" classname="org.roaringbitmap.TestRunContainer" time="0"/>
  <testcase name="testEqualsArrayContainer_NotEqual_ArrayShifted" classname="org.roaringbitmap.TestRunContainer" time="0"/>
</testsuite>