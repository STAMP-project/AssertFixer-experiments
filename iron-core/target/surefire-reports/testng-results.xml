<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="94" passed="94">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="40696" started-at="2018-06-11T09:47:01Z" finished-at="2018-06-11T09:47:42Z">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="40696" started-at="2018-06-11T09:47:01Z" finished-at="2018-06-11T09:47:42Z">
      <class name="io.axway.iron.core.internal.StoreManagerBuilderConfiguratorTest">
        <test-method status="PASS" signature="test(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:io.axway.iron.core.internal.StoreManagerBuilderConfiguratorTest@ff5b51f]" name="test" duration-ms="4" started-at="2018-06-11T09:47:42Z" data-provider="getPropertyDataProvider" finished-at="2018-06-11T09:47:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[no variable]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[myProperty=myValue]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[myProperty]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[myValue]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:io.axway.iron.core.internal.StoreManagerBuilderConfiguratorTest@ff5b51f]" name="test" duration-ms="0" started-at="2018-06-11T09:47:42Z" data-provider="getPropertyDataProvider" finished-at="2018-06-11T09:47:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[a single variable]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[myProperty=${otherProperty}
otherProperty=myOtherPropertyValue]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[myProperty]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[myOtherPropertyValue]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:io.axway.iron.core.internal.StoreManagerBuilderConfiguratorTest@ff5b51f]" name="test" duration-ms="1" started-at="2018-06-11T09:47:42Z" data-provider="getPropertyDataProvider" finished-at="2018-06-11T09:47:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[a single var env]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[myProperty=${env:MY_VAR_ENV}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[myProperty]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[myVarEnvValue]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:io.axway.iron.core.internal.StoreManagerBuilderConfiguratorTest@ff5b51f]" name="test" duration-ms="0" started-at="2018-06-11T09:47:42Z" data-provider="getPropertyDataProvider" finished-at="2018-06-11T09:47:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[a single system property]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[myProperty=${sys:mySysProperty}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[myProperty]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mySysValue]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:io.axway.iron.core.internal.StoreManagerBuilderConfiguratorTest@ff5b51f]" name="test" duration-ms="0" started-at="2018-06-11T09:47:42Z" data-provider="getPropertyDataProvider" finished-at="2018-06-11T09:47:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[a variable + rest]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[myProperty=${otherProperty}/rest
otherProperty=myOtherPropertyValue]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[myProperty]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[myOtherPropertyValue/rest]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:io.axway.iron.core.internal.StoreManagerBuilderConfiguratorTest@ff5b51f]" name="test" duration-ms="0" started-at="2018-06-11T09:47:42Z" data-provider="getPropertyDataProvider" finished-at="2018-06-11T09:47:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[a var env + rest]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[myProperty=${env:MY_VAR_ENV}/rest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[myProperty]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[myVarEnvValue/rest]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:io.axway.iron.core.internal.StoreManagerBuilderConfiguratorTest@ff5b51f]" name="test" duration-ms="0" started-at="2018-06-11T09:47:42Z" data-provider="getPropertyDataProvider" finished-at="2018-06-11T09:47:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[full complex example]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[myProperty=prefix/${sys:mySysProperty}/sysToEnv/${env:MY_VAR_ENV}/envToProp/${otherProperty}/rest
otherProperty=myOtherPropertyValue]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[myProperty]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[prefix/mySysValue/sysToEnv/myVarEnvValue/envToProp/myOtherPropertyValue/rest]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:io.axway.iron.core.internal.StoreManagerBuilderConfiguratorTest@ff5b51f]" name="test" duration-ms="0" started-at="2018-06-11T09:47:42Z" data-provider="getPropertyDataProvider" finished-at="2018-06-11T09:47:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[a system property + rest]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[myProperty=${sys:mySysProperty}/rest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[myProperty]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mySysValue/rest]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:io.axway.iron.core.internal.StoreManagerBuilderConfiguratorTest@ff5b51f]" name="test" duration-ms="0" started-at="2018-06-11T09:47:42Z" data-provider="getPropertyDataProvider" finished-at="2018-06-11T09:47:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[full complex example]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[myProperty=prefix/${SYS:mySysProperty}/sysToEnv/${ENV:MY_VAR_ENV}/envToProp/${otherProperty}/rest
otherProperty=myOtherPropertyValue]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[myProperty]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[prefix/mySysValue/sysToEnv/myVarEnvValue/envToProp/myOtherPropertyValue/rest]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- io.axway.iron.core.internal.StoreManagerBuilderConfiguratorTest -->
      <class name="io.axway.iron.core.bugs.SnapshotStoreTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.bugs.SnapshotStoreTest@cb644e]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:27Z" finished-at="2018-06-11T09:47:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldAllowSnapshotCreationOnNewEmptyStore()[pri:0, instance:io.axway.iron.core.bugs.SnapshotStoreTest@cb644e]" name="shouldAllowSnapshotCreationOnNewEmptyStore" duration-ms="1013" started-at="2018-06-11T09:47:27Z" finished-at="2018-06-11T09:47:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldAllowSnapshotCreationOnNewEmptyStore -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:io.axway.iron.core.bugs.SnapshotStoreTest@cb644e]" name="tearDown" is-config="true" duration-ms="6" started-at="2018-06-11T09:47:28Z" finished-at="2018-06-11T09:47:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.bugs.SnapshotStoreTest@cb644e]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:28Z" finished-at="2018-06-11T09:47:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldBeAbleToCallTwoConsecutiveTakeSnapshot()[pri:0, instance:io.axway.iron.core.bugs.SnapshotStoreTest@cb644e]" name="shouldBeAbleToCallTwoConsecutiveTakeSnapshot" duration-ms="1022" started-at="2018-06-11T09:47:28Z" finished-at="2018-06-11T09:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldBeAbleToCallTwoConsecutiveTakeSnapshot -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:io.axway.iron.core.bugs.SnapshotStoreTest@cb644e]" name="tearDown" is-config="true" duration-ms="2" started-at="2018-06-11T09:47:29Z" finished-at="2018-06-11T09:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.bugs.SnapshotStoreTest@cb644e]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:29Z" finished-at="2018-06-11T09:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldInitializeInitialTransactionIdAfterOpeningSnapshot()[pri:0, instance:io.axway.iron.core.bugs.SnapshotStoreTest@cb644e]" name="shouldInitializeInitialTransactionIdAfterOpeningSnapshot" duration-ms="2033" started-at="2018-06-11T09:47:29Z" finished-at="2018-06-11T09:47:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldInitializeInitialTransactionIdAfterOpeningSnapshot -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:io.axway.iron.core.bugs.SnapshotStoreTest@cb644e]" name="tearDown" is-config="true" duration-ms="2" started-at="2018-06-11T09:47:31Z" finished-at="2018-06-11T09:47:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- io.axway.iron.core.bugs.SnapshotStoreTest -->
      <class name="io.axway.iron.core.bugs.CommandWithLongParameterTest">
        <test-method status="PASS" signature="ensureLongParameterInCommandWorks(java.lang.Long)[pri:0, instance:io.axway.iron.core.bugs.CommandWithLongParameterTest@56ef9176]" name="ensureLongParameterInCommandWorks" duration-ms="1011" started-at="2018-06-11T09:47:32Z" data-provider="longs" finished-at="2018-06-11T09:47:33Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ensureLongParameterInCommandWorks -->
        <test-method status="PASS" signature="ensureLongParameterInCommandWorks(java.lang.Long)[pri:0, instance:io.axway.iron.core.bugs.CommandWithLongParameterTest@56ef9176]" name="ensureLongParameterInCommandWorks" duration-ms="1007" started-at="2018-06-11T09:47:33Z" data-provider="longs" finished-at="2018-06-11T09:47:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[42]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ensureLongParameterInCommandWorks -->
      </class> <!-- io.axway.iron.core.bugs.CommandWithLongParameterTest -->
      <class name="io.axway.iron.core.bugs.UncompletableCommandFutureTest">
        <test-method status="PASS" signature="ensureCommandFutureComplete()[pri:0, instance:io.axway.iron.core.bugs.UncompletableCommandFutureTest@13805618]" name="ensureCommandFutureComplete" duration-ms="1092" started-at="2018-06-11T09:47:31Z" finished-at="2018-06-11T09:47:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ensureCommandFutureComplete -->
      </class> <!-- io.axway.iron.core.bugs.UncompletableCommandFutureTest -->
      <class name="io.axway.iron.core.store.datatype.DataTypeTests">
        <test-method status="PASS" signature="succeedingStoreTests(io.axway.iron.core.store.SucceedingStoreTest)[pri:0, instance:io.axway.iron.core.store.datatype.DataTypeTests@6e06451e]" name="succeedingStoreTests" duration-ms="4194" started-at="2018-06-11T09:47:03Z" data-provider="succeedingStoreTests" finished-at="2018-06-11T09:47:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.axway.iron.core.store.datatype.PrimitiveTypeInsertTest@5c1a8622]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- succeedingStoreTests -->
      </class> <!-- io.axway.iron.core.store.datatype.DataTypeTests -->
      <class name="io.axway.iron.core.bugs.CommandWithLongCollectionParameterTest">
        <test-method status="PASS" signature="ensureLongCollectionParameterInCommandWorks(java.util.Collection, java.lang.Long)[pri:0, instance:io.axway.iron.core.bugs.CommandWithLongCollectionParameterTest@5cb9f472]" name="ensureLongCollectionParameterInCommandWorks" duration-ms="1018" started-at="2018-06-11T09:47:20Z" data-provider="longs" finished-at="2018-06-11T09:47:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ensureLongCollectionParameterInCommandWorks -->
        <test-method status="PASS" signature="ensureLongCollectionParameterInCommandWorks(java.util.Collection, java.lang.Long)[pri:0, instance:io.axway.iron.core.bugs.CommandWithLongCollectionParameterTest@5cb9f472]" name="ensureLongCollectionParameterInCommandWorks" duration-ms="1007" started-at="2018-06-11T09:47:21Z" data-provider="longs" finished-at="2018-06-11T09:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[null]]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ensureLongCollectionParameterInCommandWorks -->
        <test-method status="PASS" signature="ensureLongCollectionParameterInCommandWorks(java.util.Collection, java.lang.Long)[pri:0, instance:io.axway.iron.core.bugs.CommandWithLongCollectionParameterTest@5cb9f472]" name="ensureLongCollectionParameterInCommandWorks" duration-ms="1007" started-at="2018-06-11T09:47:22Z" data-provider="longs" finished-at="2018-06-11T09:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[42]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[42]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ensureLongCollectionParameterInCommandWorks -->
        <test-method status="PASS" signature="ensureLongCollectionParameterInCommandWorks(java.util.Collection, java.lang.Long)[pri:0, instance:io.axway.iron.core.bugs.CommandWithLongCollectionParameterTest@5cb9f472]" name="ensureLongCollectionParameterInCommandWorks" duration-ms="1007" started-at="2018-06-11T09:47:23Z" data-provider="longs" finished-at="2018-06-11T09:47:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[null, null]]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ensureLongCollectionParameterInCommandWorks -->
        <test-method status="PASS" signature="ensureLongCollectionParameterInCommandWorks(java.util.Collection, java.lang.Long)[pri:0, instance:io.axway.iron.core.bugs.CommandWithLongCollectionParameterTest@5cb9f472]" name="ensureLongCollectionParameterInCommandWorks" duration-ms="1007" started-at="2018-06-11T09:47:24Z" data-provider="longs" finished-at="2018-06-11T09:47:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[null, 15, null]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ensureLongCollectionParameterInCommandWorks -->
        <test-method status="PASS" signature="ensureLongCollectionParameterInCommandWorks(java.util.Collection, java.lang.Long)[pri:0, instance:io.axway.iron.core.bugs.CommandWithLongCollectionParameterTest@5cb9f472]" name="ensureLongCollectionParameterInCommandWorks" duration-ms="1007" started-at="2018-06-11T09:47:25Z" data-provider="longs" finished-at="2018-06-11T09:47:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[1, 15, 10]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[26]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ensureLongCollectionParameterInCommandWorks -->
      </class> <!-- io.axway.iron.core.bugs.CommandWithLongCollectionParameterTest -->
      <class name="io.axway.iron.core.ModelDefinitionValidationTest">
        <test-method status="PASS" signature="shouldFailOnInvalidCommand(java.lang.Class)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidCommand" duration-ms="2" started-at="2018-06-11T09:47:40Z" data-provider="invalidCommands" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class io.axway.iron.core.model.validation.command.InvalidNonInterfaceCommand]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Command class is not an interface {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidNonInterfaceCommand"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Command class is not an interface {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidNonInterfaceCommand"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:39)
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder.analyzeCommandClass(CommandDefinitionBuilder.java:36)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.lambda$buildCommandDefinitions$2(StoreManagerBuilderImpl.java:107)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.buildCommandDefinitions(StoreManagerBuilderImpl.java:107)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:96)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidCommand(ModelDefinitionValidationTest.java:180)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidCommand -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidCommand(java.lang.Class)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidCommand" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidCommands" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface io.axway.iron.core.model.validation.command.InvalidNonPublicCommand]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Command interface is not public {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidNonPublicCommand"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Command interface is not public {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidNonPublicCommand"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:43)
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder.analyzeCommandClass(CommandDefinitionBuilder.java:36)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.lambda$buildCommandDefinitions$2(StoreManagerBuilderImpl.java:107)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.buildCommandDefinitions(StoreManagerBuilderImpl.java:107)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:96)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidCommand(ModelDefinitionValidationTest.java:180)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidCommand -->
        <test-method status="PASS" signature="shouldFailOnInvalidCommand(java.lang.Class)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidCommand" duration-ms="0" started-at="2018-06-11T09:47:40Z" data-provider="invalidCommands" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface io.axway.iron.core.model.validation.command.InvalidNonExtendingCommandCommand]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Command class doesn't extends from Command interface {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidNonExtendingCommandCommand"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Command class doesn't extends from Command interface {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidNonExtendingCommandCommand"}}
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder$1.visitInterface(CommandDefinitionBuilder.java:41)
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:46)
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder.analyzeCommandClass(CommandDefinitionBuilder.java:36)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.lambda$buildCommandDefinitions$2(StoreManagerBuilderImpl.java:107)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.buildCommandDefinitions(StoreManagerBuilderImpl.java:107)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:96)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidCommand(ModelDefinitionValidationTest.java:180)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidCommand -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidCommand(java.lang.Class)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidCommand" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidCommands" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface io.axway.iron.core.model.validation.command.InvalidInheritanceCommand]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Command extends others interface, which is not supported {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidInheritanceCommand"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Command extends others interface, which is not supported {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidInheritanceCommand"}}
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder$1.visitInterface(CommandDefinitionBuilder.java:51)
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:46)
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder.analyzeCommandClass(CommandDefinitionBuilder.java:36)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.lambda$buildCommandDefinitions$2(StoreManagerBuilderImpl.java:107)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.buildCommandDefinitions(StoreManagerBuilderImpl.java:107)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:96)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidCommand(ModelDefinitionValidationTest.java:180)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidCommand -->
        <test-method status="PASS" signature="shouldFailOnInvalidCommand(java.lang.Class)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidCommand" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidCommands" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface io.axway.iron.core.model.validation.command.InvalidMissingExecuteMethodCommand]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Command doesn't implements method execute(ReadWriteTransaction) {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidMissingExecuteMethodCommand"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Command doesn't implements method execute(ReadWriteTransaction) {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidMissingExecuteMethodCommand"}}
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder$1.visitInterface(CommandDefinitionBuilder.java:63)
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:46)
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder.analyzeCommandClass(CommandDefinitionBuilder.java:36)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.lambda$buildCommandDefinitions$2(StoreManagerBuilderImpl.java:107)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.buildCommandDefinitions(StoreManagerBuilderImpl.java:107)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:96)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidCommand(ModelDefinitionValidationTest.java:180)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidCommand -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidCommand(java.lang.Class)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidCommand" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidCommands" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface io.axway.iron.core.model.validation.command.InvalidMissingExecuteMethodImplementationCommand]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Command doesn't provides a default implementation of method execute(ReadWriteTransaction) {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidMissingExecuteMethodImplementationCommand"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Command doesn't provides a default implementation of method execute(ReadWriteTransaction) {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidMissingExecuteMethodImplementationCommand"}}
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder$1.visitInterface(CommandDefinitionBuilder.java:68)
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:46)
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder.analyzeCommandClass(CommandDefinitionBuilder.java:36)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.lambda$buildCommandDefinitions$2(StoreManagerBuilderImpl.java:107)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.buildCommandDefinitions(StoreManagerBuilderImpl.java:107)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:96)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidCommand(ModelDefinitionValidationTest.java:180)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidCommand -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidCommand(java.lang.Class)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidCommand" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidCommands" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface io.axway.iron.core.model.validation.command.InvalidMethodReservedNameCommand]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Command interface contains a forbidden method name {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidMethodReservedNameCommand", "methodName": "hashCode"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Command interface contains a forbidden method name {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidMethodReservedNameCommand", "methodName": "hashCode"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:56)
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder.analyzeCommandClass(CommandDefinitionBuilder.java:36)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.lambda$buildCommandDefinitions$2(StoreManagerBuilderImpl.java:107)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.buildCommandDefinitions(StoreManagerBuilderImpl.java:107)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:96)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidCommand(ModelDefinitionValidationTest.java:180)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidCommand -->
        <test-method status="PASS" signature="shouldFailOnInvalidCommand(java.lang.Class)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidCommand" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidCommands" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface io.axway.iron.core.model.validation.command.InvalidMethodReservedPrefixCommand]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Command interface contains a forbidden method name {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidMethodReservedPrefixCommand", "methodName": "__value"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Command interface contains a forbidden method name {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidMethodReservedPrefixCommand", "methodName": "__value"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:56)
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder.analyzeCommandClass(CommandDefinitionBuilder.java:36)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.lambda$buildCommandDefinitions$2(StoreManagerBuilderImpl.java:107)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.buildCommandDefinitions(StoreManagerBuilderImpl.java:107)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:96)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidCommand(ModelDefinitionValidationTest.java:180)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidCommand -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidCommand(java.lang.Class)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidCommand" duration-ms="3" started-at="2018-06-11T09:47:40Z" data-provider="invalidCommands" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface io.axway.iron.core.model.validation.command.InvalidNonnullAndNullableMethodCommand]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Command method cannot be both @Nonnull and @Nullable {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidNonnullAndNullableMethodCommand", "methodName": "value"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Command method cannot be both @Nonnull and @Nullable {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidNonnullAndNullableMethodCommand", "methodName": "value"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:98)
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder.analyzeCommandClass(CommandDefinitionBuilder.java:36)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.lambda$buildCommandDefinitions$2(StoreManagerBuilderImpl.java:107)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.buildCommandDefinitions(StoreManagerBuilderImpl.java:107)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:96)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidCommand(ModelDefinitionValidationTest.java:180)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidCommand -->
        <test-method status="PASS" signature="shouldFailOnInvalidCommand(java.lang.Class)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidCommand" duration-ms="2" started-at="2018-06-11T09:47:40Z" data-provider="invalidCommands" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface io.axway.iron.core.model.validation.command.InvalidNonnullPrimitiveWrapperCommand]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Command attribute is not @Nullable but has a primitive wrapper datatype, primitive datatype must be used instead {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidNonnullPrimitiveWrapperCommand", "methodName": "value", "dataType": "java.lang.Integer", "primitiveDataType": "int"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Command attribute is not @Nullable but has a primitive wrapper datatype, primitive datatype must be used instead {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidNonnullPrimitiveWrapperCommand", "methodName": "value", "dataType": "java.lang.Integer", "primitiveDataType": "int"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:121)
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder.analyzeCommandClass(CommandDefinitionBuilder.java:36)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.lambda$buildCommandDefinitions$2(StoreManagerBuilderImpl.java:107)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.buildCommandDefinitions(StoreManagerBuilderImpl.java:107)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:96)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidCommand(ModelDefinitionValidationTest.java:180)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidCommand -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidCommand(java.lang.Class)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidCommand" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidCommands" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface io.axway.iron.core.model.validation.command.InvalidNullablePrimitiveCommand]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Command attribute is @Nullable but has a primitive datatype that cannot be null {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidNullablePrimitiveCommand", "methodName": "value", "dataType": "int"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Command attribute is @Nullable but has a primitive datatype that cannot be null {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidNullablePrimitiveCommand", "methodName": "value", "dataType": "int"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:114)
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder.analyzeCommandClass(CommandDefinitionBuilder.java:36)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.lambda$buildCommandDefinitions$2(StoreManagerBuilderImpl.java:107)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.buildCommandDefinitions(StoreManagerBuilderImpl.java:107)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:96)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidCommand(ModelDefinitionValidationTest.java:180)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidCommand -->
        <test-method status="PASS" signature="shouldFailOnInvalidCommand(java.lang.Class)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidCommand" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidCommands" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface io.axway.iron.core.model.validation.command.InvalidNullableCollectionCommand]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Command relation is a multiple relation that cannot be @Nullable {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidNullableCollectionCommand", "methodName": "ids"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Command relation is a multiple relation that cannot be @Nullable {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidNullableCollectionCommand", "methodName": "ids"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:105)
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder.analyzeCommandClass(CommandDefinitionBuilder.java:36)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.lambda$buildCommandDefinitions$2(StoreManagerBuilderImpl.java:107)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.buildCommandDefinitions(StoreManagerBuilderImpl.java:107)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:96)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidCommand(ModelDefinitionValidationTest.java:180)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidCommand -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidCommand(java.lang.Class)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidCommand" duration-ms="3" started-at="2018-06-11T09:47:40Z" data-provider="invalidCommands" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface io.axway.iron.core.model.validation.command.InvalidTransientNonImplementedMethodCommand]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Command method is @Transient but has no default implementation {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidTransientNonImplementedMethodCommand", "methodName": "value2"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Command method is @Transient but has no default implementation {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidTransientNonImplementedMethodCommand", "methodName": "value2"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:75)
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder.analyzeCommandClass(CommandDefinitionBuilder.java:36)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.lambda$buildCommandDefinitions$2(StoreManagerBuilderImpl.java:107)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.buildCommandDefinitions(StoreManagerBuilderImpl.java:107)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:96)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidCommand(ModelDefinitionValidationTest.java:180)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidCommand -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidCommand(java.lang.Class)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidCommand" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidCommands" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface io.axway.iron.core.model.validation.command.InvalidMethodWithArgsCommand]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Command method has parameters, only no parameters methods are supported {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidMethodWithArgsCommand", "methodName": "value"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Command method has parameters, only no parameters methods are supported {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidMethodWithArgsCommand", "methodName": "value"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:81)
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder.analyzeCommandClass(CommandDefinitionBuilder.java:36)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.lambda$buildCommandDefinitions$2(StoreManagerBuilderImpl.java:107)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.buildCommandDefinitions(StoreManagerBuilderImpl.java:107)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:96)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidCommand(ModelDefinitionValidationTest.java:180)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidCommand -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidCommand(java.lang.Class)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidCommand" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidCommands" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface io.axway.iron.core.model.validation.command.InvalidMethodWithExceptionsCommand]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Command method must not declare exceptions {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidMethodWithExceptionsCommand", "methodName": "value"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Command method must not declare exceptions {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidMethodWithExceptionsCommand", "methodName": "value"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:85)
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder.analyzeCommandClass(CommandDefinitionBuilder.java:36)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.lambda$buildCommandDefinitions$2(StoreManagerBuilderImpl.java:107)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.buildCommandDefinitions(StoreManagerBuilderImpl.java:107)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:96)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidCommand(ModelDefinitionValidationTest.java:180)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidCommand -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidCommand(java.lang.Class)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidCommand" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidCommands" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface io.axway.iron.core.model.validation.command.InvalidMethodVoidCommand]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Command method is a void method, only non void methods are supported {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidMethodVoidCommand", "methodName": "value"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Command method is a void method, only non void methods are supported {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidMethodVoidCommand", "methodName": "value"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:91)
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder.analyzeCommandClass(CommandDefinitionBuilder.java:36)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.lambda$buildCommandDefinitions$2(StoreManagerBuilderImpl.java:107)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.buildCommandDefinitions(StoreManagerBuilderImpl.java:107)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:96)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidCommand(ModelDefinitionValidationTest.java:180)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidCommand -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidCommand(java.lang.Class)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidCommand" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidCommands" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface io.axway.iron.core.model.validation.command.InvalidMethodIdCommand]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Command method cannot be annotated with @Id {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidMethodIdCommand", "methodName": "value"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Command method cannot be annotated with @Id {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidMethodIdCommand", "methodName": "value"}}
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder$1.visitMethod(CommandDefinitionBuilder.java:99)
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:133)
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder.analyzeCommandClass(CommandDefinitionBuilder.java:36)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.lambda$buildCommandDefinitions$2(StoreManagerBuilderImpl.java:107)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.buildCommandDefinitions(StoreManagerBuilderImpl.java:107)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:96)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidCommand(ModelDefinitionValidationTest.java:180)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidCommand -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidCommand(java.lang.Class)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidCommand" duration-ms="0" started-at="2018-06-11T09:47:40Z" data-provider="invalidCommands" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface io.axway.iron.core.model.validation.command.InvalidMethodUniqueCommand]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Command method cannot be annotated with @Unique {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidMethodUniqueCommand", "methodName": "value"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Command method cannot be annotated with @Unique {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidMethodUniqueCommand", "methodName": "value"}}
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder$1.visitMethod(CommandDefinitionBuilder.java:93)
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:133)
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder.analyzeCommandClass(CommandDefinitionBuilder.java:36)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.lambda$buildCommandDefinitions$2(StoreManagerBuilderImpl.java:107)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.buildCommandDefinitions(StoreManagerBuilderImpl.java:107)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:96)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidCommand(ModelDefinitionValidationTest.java:180)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidCommand -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidCommand(java.lang.Class)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidCommand" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidCommands" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface io.axway.iron.core.model.validation.command.InvalidEntityAnnotationCommand]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Command must not be annotated with @Entity {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidEntityAnnotationCommand"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Command must not be annotated with @Entity {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidEntityAnnotationCommand"}}
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder$1.visitInterface(CommandDefinitionBuilder.java:47)
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:46)
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder.analyzeCommandClass(CommandDefinitionBuilder.java:36)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.lambda$buildCommandDefinitions$2(StoreManagerBuilderImpl.java:107)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.buildCommandDefinitions(StoreManagerBuilderImpl.java:107)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:96)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidCommand(ModelDefinitionValidationTest.java:180)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidCommand -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidCommand(java.lang.Class)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidCommand" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidCommands" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface io.axway.iron.core.model.validation.command.InvalidMethodTypeCommand]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Command method data type is not supported {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidMethodTypeCommand", "methodName": "value", "dataTypeName": "java.lang.reflect.Method"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Command method data type is not supported {"args": {"commandClassName": "io.axway.iron.core.model.validation.command.InvalidMethodTypeCommand", "methodName": "value", "dataTypeName": "java.lang.reflect.Method"}}
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder$1.visitMethod(CommandDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:133)
at io.axway.iron.core.internal.definition.command.CommandDefinitionBuilder.analyzeCommandClass(CommandDefinitionBuilder.java:36)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.lambda$buildCommandDefinitions$2(StoreManagerBuilderImpl.java:107)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.buildCommandDefinitions(StoreManagerBuilderImpl.java:107)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:96)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidCommand(ModelDefinitionValidationTest.java:180)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidCommand -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="0" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[class io.axway.iron.core.model.validation.InvalidNonInterfaceEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity class is not an interface {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidNonInterfaceEntity"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity class is not an interface {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidNonInterfaceEntity"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:39)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidNonPublicEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity interface is not public {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidNonPublicEntity"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity interface is not public {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidNonPublicEntity"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:43)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="0" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidMissingEntityAnnotationEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity interface is not annotated with @Entity {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidMissingEntityAnnotationEntity"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity interface is not annotated with @Entity {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidMissingEntityAnnotationEntity"}}
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder$1.visitInterface(EntityDefinitionBuilder.java:90)
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:46)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidExtendsEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity interface extends others interface, which is not supported {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidExtendsEntity"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity interface extends others interface, which is not supported {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidExtendsEntity"}}
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder$1.visitInterface(EntityDefinitionBuilder.java:95)
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:46)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidEmptyEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity interface doesn't declare any methods {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidEmptyEntity"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity interface doesn't declare any methods {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidEmptyEntity"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:49)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="0" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidMethodReservedPrefixEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity interface contains a forbidden method name {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidMethodReservedPrefixEntity", "methodName": "__value"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity interface contains a forbidden method name {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidMethodReservedPrefixEntity", "methodName": "__value"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:56)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="0" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidMethodReservedNameEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity interface contains a forbidden method name {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidMethodReservedNameEntity", "methodName": "hashCode"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity interface contains a forbidden method name {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidMethodReservedNameEntity", "methodName": "hashCode"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:56)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="0" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidTransientNonImplementedMethodEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity method is @Transient but has no default implementation {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidTransientNonImplementedMethodEntity", "methodName": "value2"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity method is @Transient but has no default implementation {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidTransientNonImplementedMethodEntity", "methodName": "value2"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="0" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidMethodWithArgsEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity method has parameters, only no parameters methods are supported {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidMethodWithArgsEntity", "methodName": "value"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity method has parameters, only no parameters methods are supported {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidMethodWithArgsEntity", "methodName": "value"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:81)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="0" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidMethodWithExceptionsEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity method must not declare exceptions {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidMethodWithExceptionsEntity", "methodName": "value"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity method must not declare exceptions {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidMethodWithExceptionsEntity", "methodName": "value"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidMethodVoidEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity method is a void method, only non void methods are supported {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidMethodVoidEntity", "methodName": "value"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity method is a void method, only non void methods are supported {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidMethodVoidEntity", "methodName": "value"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:91)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="0" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidNonnullAndNullableMethodEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity method cannot be both @Nonnull and @Nullable {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidNonnullAndNullableMethodEntity", "methodName": "value"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity method cannot be both @Nonnull and @Nullable {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidNonnullAndNullableMethodEntity", "methodName": "value"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:98)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidUniqueRelationEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity relation cannot be annotated with @Unique. Not implemented yet. {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidUniqueRelationEntity", "relationMethodName": "relation"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity relation cannot be annotated with @Unique. Not implemented yet. {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidUniqueRelationEntity", "relationMethodName": "relation"}}
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder$1.visitMethod(EntityDefinitionBuilder.java:128)
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:133)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidIdDefaultEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity attribute must not have a default implementation {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidIdDefaultEntity", "attributeMethodName": "id"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity attribute must not have a default implementation {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidIdDefaultEntity", "attributeMethodName": "id"}}
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder$1.visitMethod(EntityDefinitionBuilder.java:161)
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:133)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidIdMultipleEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity has multiple @Id annotation {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidIdMultipleEntity"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity has multiple @Id annotation {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidIdMultipleEntity"}}
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:203)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidIdNonLongEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity attribute is annotated with @Id but is not returning long {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidIdNonLongEntity", "attributeMethodName": "id"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity attribute is annotated with @Id but is not returning long {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidIdNonLongEntity", "attributeMethodName": "id"}}
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder$1.visitMethod(EntityDefinitionBuilder.java:176)
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:133)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidIdRelationEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity relation cannot be annotated with @Id {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidIdRelationEntity", "relationMethodName": "id"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity relation cannot be annotated with @Id {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidIdRelationEntity", "relationMethodName": "id"}}
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder$1.visitMethod(EntityDefinitionBuilder.java:123)
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:133)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="0" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidIdUniqueEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity attribute must not be annotated by both @Id and @Unique {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidIdUniqueEntity", "attributeMethodName": "id"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity attribute must not be annotated by both @Id and @Unique {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidIdUniqueEntity", "attributeMethodName": "id"}}
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder$1.visitMethod(EntityDefinitionBuilder.java:166)
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:133)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidNullableMultipleRelationEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity relation is a multiple relation that cannot be @Nullable {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidNullableMultipleRelationEntity", "methodName": "relations"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity relation is a multiple relation that cannot be @Nullable {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidNullableMultipleRelationEntity", "methodName": "relations"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:105)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidMethodWithDefaultImplementationEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity attribute must not have a default implementation {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidMethodWithDefaultImplementationEntity", "attributeMethodName": "value"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity attribute must not have a default implementation {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidMethodWithDefaultImplementationEntity", "attributeMethodName": "value"}}
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder$1.visitMethod(EntityDefinitionBuilder.java:161)
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:133)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="0" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidNullablePrimitiveEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity attribute is @Nullable but has a primitive datatype that cannot be null {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidNullablePrimitiveEntity", "methodName": "value", "dataType": "int"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity attribute is @Nullable but has a primitive datatype that cannot be null {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidNullablePrimitiveEntity", "methodName": "value", "dataType": "int"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:114)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidNonnullPrimitiveWrapperEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity attribute is not @Nullable but has a primitive wrapper datatype, primitive datatype must be used instead {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidNonnullPrimitiveWrapperEntity", "methodName": "value", "dataType": "java.lang.Integer", "primitiveDataType": "int"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity attribute is not @Nullable but has a primitive wrapper datatype, primitive datatype must be used instead {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidNonnullPrimitiveWrapperEntity", "methodName": "value", "dataType": "java.lang.Integer", "primitiveDataType": "int"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:121)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidDatatypeEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity method is not supported {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidDatatypeEntity", "methodName": "value"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity method is not supported {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidDatatypeEntity", "methodName": "value"}}
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder$1.visitMethod(EntityDefinitionBuilder.java:195)
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:133)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidReverseRelationNonMultipleEntity, interface io.axway.iron.core.model.validation.InvalidReverseRelationNonMultipleTargetEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity reverse relation must be multiple and return Collection<TailEntity> {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidReverseRelationNonMultipleTargetEntity", "reverseRelationMethodName": "reverse"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity reverse relation must be multiple and return Collection<TailEntity> {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidReverseRelationNonMultipleTargetEntity", "reverseRelationMethodName": "reverse"}}
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder$1.visitMethod(EntityDefinitionBuilder.java:135)
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:133)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="1" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidReverseRelationNullableEntity, interface io.axway.iron.core.model.validation.InvalidReverseRelationNullableTargetEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Entity relation is a multiple relation that cannot be @Nullable {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidReverseRelationNullableTargetEntity", "methodName": "reverse"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Entity relation is a multiple relation that cannot be @Nullable {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidReverseRelationNullableTargetEntity", "methodName": "reverse"}}
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:105)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="2" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidReverseRelationMissingDSLCallEntity, interface io.axway.iron.core.model.validation.InvalidReverseRelationMissingDSLCallTargetEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Reverse relation method miss call to the appropriate DSL method {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidReverseRelationMissingDSLCallTargetEntity", "reverseRelationMethodName": "reverse"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Reverse relation method miss call to the appropriate DSL method {"args": {"entityClassName": "io.axway.iron.core.model.validation.InvalidReverseRelationMissingDSLCallTargetEntity", "reverseRelationMethodName": "reverse"}}
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeReverseRelation(EntityDefinitionBuilder.java:231)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.access$100(EntityDefinitionBuilder.java:25)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder$1.visitMethod(EntityDefinitionBuilder.java:140)
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:131)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="2" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidReverseRelationTailEntityMismatchEntity, interface io.axway.iron.core.model.validation.InvalidReverseRelationTailEntityMismatchTargetEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Tail entity class mismatch between signature and DSL {"args": {"signatureTailEntityClassName": "io.axway.iron.core.model.validation.InvalidReverseRelationTailEntityMismatchEntity", "dslTailEntityClassName": "io.axway.iron.core.model.validation.InvalidReverseRelationMissingDSLCallEntity"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Tail entity class mismatch between signature and DSL {"args": {"signatureTailEntityClassName": "io.axway.iron.core.model.validation.InvalidReverseRelationTailEntityMismatchEntity", "dslTailEntityClassName": "io.axway.iron.core.model.validation.InvalidReverseRelationMissingDSLCallEntity"}}
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeReverseRelation(EntityDefinitionBuilder.java:238)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.access$100(EntityDefinitionBuilder.java:25)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder$1.visitMethod(EntityDefinitionBuilder.java:140)
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:131)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="4" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidReverseRelationHeadEntityMismatchEntity, interface io.axway.iron.core.model.validation.InvalidReverseRelationHeadEntityMismatchTargetEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Head entity class mismatch between signature and DSL {"args": {"signatureTailEntityClassName": "io.axway.iron.core.model.validation.InvalidReverseRelationHeadEntityMismatchTargetEntity", "dslTailEntityClassName": "io.axway.iron.core.model.validation.TargetEntity"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Head entity class mismatch between signature and DSL {"args": {"signatureTailEntityClassName": "io.axway.iron.core.model.validation.InvalidReverseRelationHeadEntityMismatchTargetEntity", "dslTailEntityClassName": "io.axway.iron.core.model.validation.TargetEntity"}}
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeReverseRelation(EntityDefinitionBuilder.java:259)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.access$100(EntityDefinitionBuilder.java:25)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder$1.visitMethod(EntityDefinitionBuilder.java:140)
at io.axway.iron.core.internal.definition.InterfaceValidator.validate(InterfaceValidator.java:131)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntityClass(EntityDefinitionBuilder.java:85)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.lambda$analyzeEntities$0(EntityDefinitionBuilder.java:46)
at java.lang.Iterable.forEach(Iterable.java:75)
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:45)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFailOnInvalidModel(java.util.Collection)[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldFailOnInvalidModel" duration-ms="5" started-at="2018-06-11T09:47:40Z" data-provider="invalidModels" finished-at="2018-06-11T09:47:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[interface io.axway.iron.core.model.validation.InvalidReverseRelationRedundantEntity, interface io.axway.iron.core.model.validation.InvalidReverseRelationRedundantTargetEntity]]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.iron.error.InvalidModelException">
            <message>
              <![CDATA[Relation has already a reverse relation defined so reverse relation cannot be added {"args": {"entityName": "io.axway.iron.core.model.validation.InvalidReverseRelationRedundantEntity", "relationName": "relation", "reverseRelationName": "reverse2"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.iron.error.InvalidModelException: Relation has already a reverse relation defined so reverse relation cannot be added {"args": {"entityName": "io.axway.iron.core.model.validation.InvalidReverseRelationRedundantEntity", "relationName": "relation", "reverseRelationName": "reverse2"}}
at io.axway.iron.core.internal.definition.entity.EntityDefinitionBuilder.analyzeEntities(EntityDefinitionBuilder.java:65)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:97)
at io.axway.iron.core.ModelDefinitionValidationTest.shouldFailOnInvalidModel(ModelDefinitionValidationTest.java:161)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.iron.error.InvalidModelException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFailOnInvalidModel -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldSuccessOnValidCommand()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldSuccessOnValidCommand" duration-ms="1004" started-at="2018-06-11T09:47:40Z" finished-at="2018-06-11T09:47:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldSuccessOnValidCommand -->
        <test-method status="PASS" signature="shouldSuccessOnValidModel()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="shouldSuccessOnValidModel" duration-ms="1009" started-at="2018-06-11T09:47:41Z" finished-at="2018-06-11T09:47:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldSuccessOnValidModel -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:io.axway.iron.core.ModelDefinitionValidationTest@1ed4004b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-11T09:47:41Z" finished-at="2018-06-11T09:47:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- io.axway.iron.core.ModelDefinitionValidationTest -->
      <class name="io.axway.iron.core.StoreManagerTest">
        <test-method status="PASS" signature="shouldBuilderNotAcceptDuplicateCalls(java.lang.Runnable)[pri:0, instance:io.axway.iron.core.StoreManagerTest@4566e5bd]" name="shouldBuilderNotAcceptDuplicateCalls" duration-ms="0" started-at="2018-06-11T09:47:34Z" data-provider="duplicates" finished-at="2018-06-11T09:47:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.axway.iron.core.StoreManagerTest$$Lambda$236/1361289747@3ec300f1]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.alf.exception.IllegalStateFormattedException">
            <message>
              <![CDATA[Snapshot serializer has been already set]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.alf.exception.IllegalStateFormattedException: Snapshot serializer has been already set
at io.axway.alf.assertion.Assertion.checkState(Assertion.java:26)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.withSnapshotSerializer(StoreManagerBuilderImpl.java:69)
at io.axway.iron.core.StoreManagerTest.lambda$providesDuplicates$0(StoreManagerTest.java:30)
at io.axway.iron.core.StoreManagerTest.shouldBuilderNotAcceptDuplicateCalls(StoreManagerTest.java:42)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.alf.exception.IllegalStateFormattedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldBuilderNotAcceptDuplicateCalls -->
        <test-method status="PASS" signature="shouldBuilderNotAcceptDuplicateCalls(java.lang.Runnable)[pri:0, instance:io.axway.iron.core.StoreManagerTest@4566e5bd]" name="shouldBuilderNotAcceptDuplicateCalls" duration-ms="0" started-at="2018-06-11T09:47:34Z" data-provider="duplicates" finished-at="2018-06-11T09:47:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.axway.iron.core.StoreManagerTest$$Lambda$237/999609945@5b0abc94]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.alf.exception.IllegalStateFormattedException">
            <message>
              <![CDATA[Transaction serializer has been already set]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.alf.exception.IllegalStateFormattedException: Transaction serializer has been already set
at io.axway.alf.assertion.Assertion.checkState(Assertion.java:26)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.withTransactionSerializer(StoreManagerBuilderImpl.java:55)
at io.axway.iron.core.StoreManagerTest.lambda$providesDuplicates$1(StoreManagerTest.java:31)
at io.axway.iron.core.StoreManagerTest.shouldBuilderNotAcceptDuplicateCalls(StoreManagerTest.java:42)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.alf.exception.IllegalStateFormattedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldBuilderNotAcceptDuplicateCalls -->
        <test-method status="PASS" signature="shouldBuilderNotAcceptDuplicateCalls(java.lang.Runnable)[pri:0, instance:io.axway.iron.core.StoreManagerTest@4566e5bd]" name="shouldBuilderNotAcceptDuplicateCalls" duration-ms="0" started-at="2018-06-11T09:47:34Z" data-provider="duplicates" finished-at="2018-06-11T09:47:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.axway.iron.core.StoreManagerTest$$Lambda$238/1758386724@1f1c7bf6]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.alf.exception.IllegalStateFormattedException">
            <message>
              <![CDATA[Snapshot store has been already set]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.alf.exception.IllegalStateFormattedException: Snapshot store has been already set
at io.axway.alf.assertion.Assertion.checkState(Assertion.java:26)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.withSnapshotStore(StoreManagerBuilderImpl.java:76)
at io.axway.iron.core.StoreManagerTest.lambda$providesDuplicates$2(StoreManagerTest.java:32)
at io.axway.iron.core.StoreManagerTest.shouldBuilderNotAcceptDuplicateCalls(StoreManagerTest.java:42)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.alf.exception.IllegalStateFormattedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldBuilderNotAcceptDuplicateCalls -->
        <test-method status="PASS" signature="shouldBuilderNotAcceptDuplicateCalls(java.lang.Runnable)[pri:0, instance:io.axway.iron.core.StoreManagerTest@4566e5bd]" name="shouldBuilderNotAcceptDuplicateCalls" duration-ms="1" started-at="2018-06-11T09:47:34Z" data-provider="duplicates" finished-at="2018-06-11T09:47:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.axway.iron.core.StoreManagerTest$$Lambda$239/900008524@2b546384]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.alf.exception.IllegalStateFormattedException">
            <message>
              <![CDATA[Transaction store factory has been already set]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.alf.exception.IllegalStateFormattedException: Transaction store factory has been already set
at io.axway.alf.assertion.Assertion.checkState(Assertion.java:26)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.withTransactionStore(StoreManagerBuilderImpl.java:62)
at io.axway.iron.core.StoreManagerTest.lambda$providesDuplicates$3(StoreManagerTest.java:33)
at io.axway.iron.core.StoreManagerTest.shouldBuilderNotAcceptDuplicateCalls(StoreManagerTest.java:42)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.alf.exception.IllegalStateFormattedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldBuilderNotAcceptDuplicateCalls -->
        <test-method status="PASS" signature="shouldBuilderNotAcceptDuplicateCalls(java.lang.Runnable)[pri:0, instance:io.axway.iron.core.StoreManagerTest@4566e5bd]" name="shouldBuilderNotAcceptDuplicateCalls" duration-ms="0" started-at="2018-06-11T09:47:34Z" data-provider="duplicates" finished-at="2018-06-11T09:47:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.axway.iron.core.StoreManagerTest$$Lambda$240/520232556@214b199c]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.alf.exception.IllegalStateFormattedException">
            <message>
              <![CDATA[Command class %s has been already added {"args": {"commandClass": "io.axway.iron.core.model.simple.SimpleCommand"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.alf.exception.IllegalStateFormattedException: Command class %s has been already added {"args": {"commandClass": "io.axway.iron.core.model.simple.SimpleCommand"}}
at io.axway.alf.assertion.Assertion.checkState(Assertion.java:32)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.withCommandClass(StoreManagerBuilderImpl.java:49)
at io.axway.iron.core.StoreManagerTest.lambda$providesDuplicates$4(StoreManagerTest.java:34)
at io.axway.iron.core.StoreManagerTest.shouldBuilderNotAcceptDuplicateCalls(StoreManagerTest.java:42)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.alf.exception.IllegalStateFormattedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldBuilderNotAcceptDuplicateCalls -->
        <test-method status="PASS" signature="shouldBuilderNotAcceptDuplicateCalls(java.lang.Runnable)[pri:0, instance:io.axway.iron.core.StoreManagerTest@4566e5bd]" name="shouldBuilderNotAcceptDuplicateCalls" duration-ms="0" started-at="2018-06-11T09:47:34Z" data-provider="duplicates" finished-at="2018-06-11T09:47:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.axway.iron.core.StoreManagerTest$$Lambda$241/17037394@2893de87]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.alf.exception.IllegalStateFormattedException">
            <message>
              <![CDATA[Entity class has been already added {"args": {"entityClass": "io.axway.iron.core.model.simple.SimpleEntity"}}]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.alf.exception.IllegalStateFormattedException: Entity class has been already added {"args": {"entityClass": "io.axway.iron.core.model.simple.SimpleEntity"}}
at io.axway.alf.assertion.Assertion.checkState(Assertion.java:32)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.withEntityClass(StoreManagerBuilderImpl.java:43)
at io.axway.iron.core.StoreManagerTest.lambda$providesDuplicates$5(StoreManagerTest.java:35)
at io.axway.iron.core.StoreManagerTest.shouldBuilderNotAcceptDuplicateCalls(StoreManagerTest.java:42)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.alf.exception.IllegalStateFormattedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldBuilderNotAcceptDuplicateCalls -->
        <test-method status="PASS" signature="shouldBuilderNotAcceptIncompleteConfiguration(boolean, boolean, boolean, boolean)[pri:0, instance:io.axway.iron.core.StoreManagerTest@4566e5bd]" name="shouldBuilderNotAcceptIncompleteConfiguration" duration-ms="0" started-at="2018-06-11T09:47:34Z" data-provider="configuredElements" finished-at="2018-06-11T09:47:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.alf.exception.IllegalStateFormattedException">
            <message>
              <![CDATA[Snapshot serializer has not been specified]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.alf.exception.IllegalStateFormattedException: Snapshot serializer has not been specified
at io.axway.alf.assertion.Assertion.checkState(Assertion.java:26)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:85)
at io.axway.iron.core.StoreManagerTest.shouldBuilderNotAcceptIncompleteConfiguration(StoreManagerTest.java:80)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.alf.exception.IllegalStateFormattedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldBuilderNotAcceptIncompleteConfiguration -->
        <test-method status="PASS" signature="shouldBuilderNotAcceptIncompleteConfiguration(boolean, boolean, boolean, boolean)[pri:0, instance:io.axway.iron.core.StoreManagerTest@4566e5bd]" name="shouldBuilderNotAcceptIncompleteConfiguration" duration-ms="0" started-at="2018-06-11T09:47:34Z" data-provider="configuredElements" finished-at="2018-06-11T09:47:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.alf.exception.IllegalStateFormattedException">
            <message>
              <![CDATA[Transaction serializer has not been specified]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.alf.exception.IllegalStateFormattedException: Transaction serializer has not been specified
at io.axway.alf.assertion.Assertion.checkState(Assertion.java:26)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:83)
at io.axway.iron.core.StoreManagerTest.shouldBuilderNotAcceptIncompleteConfiguration(StoreManagerTest.java:80)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.alf.exception.IllegalStateFormattedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldBuilderNotAcceptIncompleteConfiguration -->
        <test-method status="PASS" signature="shouldBuilderNotAcceptIncompleteConfiguration(boolean, boolean, boolean, boolean)[pri:0, instance:io.axway.iron.core.StoreManagerTest@4566e5bd]" name="shouldBuilderNotAcceptIncompleteConfiguration" duration-ms="1" started-at="2018-06-11T09:47:34Z" data-provider="configuredElements" finished-at="2018-06-11T09:47:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.alf.exception.IllegalStateFormattedException">
            <message>
              <![CDATA[Snapshot store factory has not been specified]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.alf.exception.IllegalStateFormattedException: Snapshot store factory has not been specified
at io.axway.alf.assertion.Assertion.checkState(Assertion.java:26)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:86)
at io.axway.iron.core.StoreManagerTest.shouldBuilderNotAcceptIncompleteConfiguration(StoreManagerTest.java:80)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.alf.exception.IllegalStateFormattedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldBuilderNotAcceptIncompleteConfiguration -->
        <test-method status="PASS" signature="shouldBuilderNotAcceptIncompleteConfiguration(boolean, boolean, boolean, boolean)[pri:0, instance:io.axway.iron.core.StoreManagerTest@4566e5bd]" name="shouldBuilderNotAcceptIncompleteConfiguration" duration-ms="1" started-at="2018-06-11T09:47:34Z" data-provider="configuredElements" finished-at="2018-06-11T09:47:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <exception class="io.axway.alf.exception.IllegalStateFormattedException">
            <message>
              <![CDATA[Transaction store factory has not been specified]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.axway.alf.exception.IllegalStateFormattedException: Transaction store factory has not been specified
at io.axway.alf.assertion.Assertion.checkState(Assertion.java:26)
at io.axway.iron.core.internal.StoreManagerBuilderImpl.build(StoreManagerBuilderImpl.java:84)
at io.axway.iron.core.StoreManagerTest.shouldBuilderNotAcceptIncompleteConfiguration(StoreManagerTest.java:80)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- io.axway.alf.exception.IllegalStateFormattedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldBuilderNotAcceptIncompleteConfiguration -->
        <test-method status="PASS" signature="shouldNotOpenStoreWithInvalidName(java.lang.String)[pri:0, instance:io.axway.iron.core.StoreManagerTest@4566e5bd]" name="shouldNotOpenStoreWithInvalidName" duration-ms="1002" started-at="2018-06-11T09:47:34Z" data-provider="invalidStoreNames" finished-at="2018-06-11T09:47:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldNotOpenStoreWithInvalidName -->
        <test-method status="PASS" signature="shouldNotOpenStoreWithInvalidName(java.lang.String)[pri:0, instance:io.axway.iron.core.StoreManagerTest@4566e5bd]" name="shouldNotOpenStoreWithInvalidName" duration-ms="1001" started-at="2018-06-11T09:47:35Z" data-provider="invalidStoreNames" finished-at="2018-06-11T09:47:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldNotOpenStoreWithInvalidName -->
        <test-method status="PASS" signature="shouldNotOpenStoreWithInvalidName(java.lang.String)[pri:0, instance:io.axway.iron.core.StoreManagerTest@4566e5bd]" name="shouldNotOpenStoreWithInvalidName" duration-ms="1001" started-at="2018-06-11T09:47:36Z" data-provider="invalidStoreNames" finished-at="2018-06-11T09:47:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[\]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldNotOpenStoreWithInvalidName -->
        <test-method status="PASS" signature="shouldNotOpenStoreWithInvalidName(java.lang.String)[pri:0, instance:io.axway.iron.core.StoreManagerTest@4566e5bd]" name="shouldNotOpenStoreWithInvalidName" duration-ms="1001" started-at="2018-06-11T09:47:37Z" data-provider="invalidStoreNames" finished-at="2018-06-11T09:47:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldNotOpenStoreWithInvalidName -->
        <test-method status="PASS" signature="shouldNotOpenStoreWithInvalidName(java.lang.String)[pri:0, instance:io.axway.iron.core.StoreManagerTest@4566e5bd]" name="shouldNotOpenStoreWithInvalidName" duration-ms="1002" started-at="2018-06-11T09:47:38Z" data-provider="invalidStoreNames" finished-at="2018-06-11T09:47:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldNotOpenStoreWithInvalidName -->
        <test-method status="PASS" signature="shouldOpenStoreWithValidName()[pri:0, instance:io.axway.iron.core.StoreManagerTest@4566e5bd]" name="shouldOpenStoreWithValidName" duration-ms="1002" started-at="2018-06-11T09:47:39Z" finished-at="2018-06-11T09:47:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldOpenStoreWithValidName -->
      </class> <!-- io.axway.iron.core.StoreManagerTest -->
      <class name="io.axway.iron.core.store.id.IdTests">
        <test-method status="PASS" signature="succeedingStoreTests(io.axway.iron.core.store.SucceedingStoreTest)[pri:0, instance:io.axway.iron.core.store.id.IdTests@59494225]" name="succeedingStoreTests" duration-ms="4066" started-at="2018-06-11T09:47:07Z" data-provider="succeedingStoreTests" finished-at="2018-06-11T09:47:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.axway.iron.core.store.id.ShouldAutoGenerateIdTest@5ad851c9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- succeedingStoreTests -->
      </class> <!-- io.axway.iron.core.store.id.IdTests -->
      <class name="io.axway.iron.core.store.EnsureNextIdConsistencyTest">
        <test-method status="PASS" signature="shouldNotOpenStoreWithInconsistentNextId()[pri:0, instance:io.axway.iron.core.store.EnsureNextIdConsistencyTest@6e1567f1]" name="shouldNotOpenStoreWithInconsistentNextId" duration-ms="1031" started-at="2018-06-11T09:47:26Z" finished-at="2018-06-11T09:47:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldNotOpenStoreWithInconsistentNextId -->
      </class> <!-- io.axway.iron.core.store.EnsureNextIdConsistencyTest -->
      <class name="io.axway.iron.core.store.relation.RelationTests">
        <test-method status="PASS" signature="failingStoreTests(io.axway.iron.core.store.FailingStoreTest)[pri:0, instance:io.axway.iron.core.store.relation.RelationTests@72d818d1]" name="failingStoreTests" duration-ms="1723" started-at="2018-06-11T09:47:01Z" data-provider="failingStoreTests" finished-at="2018-06-11T09:47:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.axway.iron.core.store.relation.ShouldRollbackRelationTest@105fece7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failingStoreTests -->
        <test-method status="PASS" signature="succeedingStoreTests(io.axway.iron.core.store.SucceedingStoreTest)[pri:0, instance:io.axway.iron.core.store.relation.RelationTests@72d818d1]" name="succeedingStoreTests" duration-ms="4118" started-at="2018-06-11T09:47:11Z" data-provider="succeedingStoreTests" finished-at="2018-06-11T09:47:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.axway.iron.core.store.relation.ShouldDeleteRelationTailTest@6156496]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- succeedingStoreTests -->
        <test-method status="PASS" signature="succeedingStoreTests(io.axway.iron.core.store.SucceedingStoreTest)[pri:0, instance:io.axway.iron.core.store.relation.RelationTests@72d818d1]" name="succeedingStoreTests" duration-ms="4122" started-at="2018-06-11T09:47:15Z" data-provider="succeedingStoreTests" finished-at="2018-06-11T09:47:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[io.axway.iron.core.store.relation.ShouldUpdateSimpleRelationHeadTest@3c153a1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- succeedingStoreTests -->
      </class> <!-- io.axway.iron.core.store.relation.RelationTests -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
